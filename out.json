[
{
    "branch": "master",
    "index": "0",
    "phase": "pre",
    "playbook": "cc-github.bmwgroup.net/codecraft/zuul-conf-global/playbooks/base-slim/pre.yaml",
    "plays": [
        {
            "play": {
                "duration": {
                    "end": "2024-04-21T00:39:07.300443Z",
                    "start": "2024-04-21T00:39:05.342360Z"
                },
                "id": "ce4df5fb-964c-d7cb-6b39-000000000002",
                "name": "localhost"
            },
            "tasks": [
                {
                    "hosts": {
                        "localhost": {
                            "action": "gather_facts",
                            "ansible_facts": {
                                "ansible_apparmor": {
                                    "status": "disabled"
                                },
                                "ansible_architecture": "x86_64",
                                "ansible_bios_date": "NA",
                                "ansible_bios_vendor": "NA",
                                "ansible_bios_version": "NA",
                                "ansible_board_asset_tag": "NA",
                                "ansible_board_name": "NA",
                                "ansible_board_serial": "NA",
                                "ansible_board_vendor": "NA",
                                "ansible_board_version": "NA",
                                "ansible_chassis_asset_tag": "NA",
                                "ansible_chassis_serial": "NA",
                                "ansible_chassis_vendor": "NA",
                                "ansible_chassis_version": "NA",
                                "ansible_cmdline": {
                                    "BOOT_IMAGE": "/boot/vmlinuz-5.15.0-97-generic",
                                    "console": "ttyS0",
                                    "ro": true,
                                    "root": "LABEL=cloudimg-rootfs"
                                },
                                "ansible_date_time": {
                                    "date": "2024-04-21",
                                    "day": "21",
                                    "epoch": "1713659946",
                                    "epoch_int": "1713659946",
                                    "hour": "00",
                                    "iso8601": "2024-04-21T00:39:06Z",
                                    "iso8601_basic": "20240421T003906260442",
                                    "iso8601_basic_short": "20240421T003906",
                                    "iso8601_micro": "2024-04-21T00:39:06.260442Z",
                                    "minute": "39",
                                    "month": "04",
                                    "second": "06",
                                    "time": "00:39:06",
                                    "tz": "UTC",
                                    "tz_dst": "UTC",
                                    "tz_offset": "+0000",
                                    "weekday": "Sunday",
                                    "weekday_number": "0",
                                    "weeknumber": "16",
                                    "year": "2024"
                                },
                                "ansible_devices": {},
                                "ansible_distribution": "Debian",
                                "ansible_distribution_major_version": "12",
                                "ansible_distribution_release": "bookworm",
                                "ansible_distribution_version": "12",
                                "ansible_dns": {
                                    "nameservers": [
                                        "169.254.20.10"
                                    ],
                                    "options": {
                                        "ndots": "5"
                                    },
                                    "search": [
                                        "ci.svc.cluster.local",
                                        "svc.cluster.local",
                                        "cluster.local",
                                        "bmwgroup.net"
                                    ]
                                },
                                "ansible_domain": "zuul-executor-partition-0-eu-ash-16.ci.svc.cluster.local",
                                "ansible_effective_group_id": 1000,
                                "ansible_effective_user_id": 1000,
                                "ansible_env": {
                                    "ANSIBLE_CONFIG": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/ansible/pre_playbook_0/ansible.cfg",
                                    "DEBIAN_FRONTEND": "noninteractive",
                                    "GPG_KEY": "A035C8C19219BA821ECEA86B64E628F8D684696D",
                                    "HOME": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/work",
                                    "HOSTNAME": "zuul-executor-partition-0-4",
                                    "KUBERNETES_PORT": "tcp://10.135.0.1:443",
                                    "KUBERNETES_PORT_443_TCP": "tcp://10.135.0.1:443",
                                    "KUBERNETES_PORT_443_TCP_ADDR": "10.135.0.1",
                                    "KUBERNETES_PORT_443_TCP_PORT": "443",
                                    "KUBERNETES_PORT_443_TCP_PROTO": "tcp",
                                    "KUBERNETES_SERVICE_HOST": "10.135.0.1",
                                    "KUBERNETES_SERVICE_PORT": "443",
                                    "KUBERNETES_SERVICE_PORT_HTTPS": "443",
                                    "LANG": "C.UTF-8",
                                    "LOGNAME": "zuul",
                                    "MERGE_CONFIG_SCRIPT": "/opt/config-file-utils/merge-config.py",
                                    "NODEPOOL_PORT": "tcp://10.135.28.226:80",
                                    "NODEPOOL_PORT_80_TCP": "tcp://10.135.28.226:80",
                                    "NODEPOOL_PORT_80_TCP_ADDR": "10.135.28.226",
                                    "NODEPOOL_PORT_80_TCP_PORT": "80",
                                    "NODEPOOL_PORT_80_TCP_PROTO": "tcp",
                                    "NODEPOOL_SERVICE_HOST": "10.135.28.226",
                                    "NODEPOOL_SERVICE_PORT": "80",
                                    "NODEPOOL_SERVICE_PORT_NODEPOOL": "80",
                                    "PATH": "/usr/local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                                    "PWD": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_0/cc-github.bmwgroup.net/codecraft/zuul-conf-global/playbooks/base-slim",
                                    "PYTHONPATH": "/var/lib/zuul/ansible/8",
                                    "PYTHON_GET_PIP_SHA256": "dfe9fd5c28dc98b5ac17979a953ea550cec37ae1b47a5116007395bfacff2ab9",
                                    "PYTHON_GET_PIP_URL": "https://github.com/pypa/get-pip/raw/dbf0c85f76fb6e1ab42aa672ffca6f0a675d9ee4/public/get-pip.py",
                                    "PYTHON_PIP_VERSION": "24.0",
                                    "PYTHON_SETUPTOOLS_VERSION": "65.5.1",
                                    "PYTHON_VERSION": "3.11.8",
                                    "SSH_AGENT_PID": "2251534",
                                    "SSH_AUTH_SOCK": "/tmp/ssh-XXXXXXdG6GI6/agent.2251533",
                                    "TMP": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/work/tmp",
                                    "USER": "zuul",
                                    "ZUUL_ANSIBLE_SPLIT_STREAMS": "False",
                                    "ZUUL_JOBDIR": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55",
                                    "ZUUL_JOB_FAILURE_OUTPUT": "[]",
                                    "ZUUL_JOB_LOG_CONFIG": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/ansible/logging.json"
                                },
                                "ansible_fibre_channel_wwn": [],
                                "ansible_fips": false,
                                "ansible_form_factor": "NA",
                                "ansible_fqdn": "zuul-executor-partition-0-4.zuul-executor-partition-0-eu-ash-16.ci.svc.cluster.local",
                                "ansible_hostname": "zuul-executor-partition-0-4",
                                "ansible_hostnqn": "",
                                "ansible_is_chroot": false,
                                "ansible_iscsi_iqn": "",
                                "ansible_kernel": "5.15.0-97-generic",
                                "ansible_kernel_version": "#107-Ubuntu SMP Wed Feb 7 13:26:48 UTC 2024",
                                "ansible_loadavg": {
                                    "15m": 1.82373046875,
                                    "1m": 2.19287109375,
                                    "5m": 2.02685546875
                                },
                                "ansible_local": {},
                                "ansible_lsb": {},
                                "ansible_lvm": "N/A",
                                "ansible_machine": "x86_64",
                                "ansible_memfree_mb": 19210,
                                "ansible_memory_mb": {
                                    "nocache": {
                                        "free": 51658,
                                        "used": 12640
                                    },
                                    "real": {
                                        "free": 19210,
                                        "total": 64298,
                                        "used": 45088
                                    },
                                    "swap": {
                                        "cached": 0,
                                        "free": 0,
                                        "total": 0,
                                        "used": 0
                                    }
                                },
                                "ansible_memtotal_mb": 64298,
                                "ansible_mounts": [
                                    {
                                        "block_available": 34669612,
                                        "block_size": 4096,
                                        "block_total": 40601580,
                                        "block_used": 5931968,
                                        "device": "/dev/vda1",
                                        "fstype": "ext4",
                                        "inode_available": 19998352,
                                        "inode_total": 20643840,
                                        "inode_used": 645488,
                                        "mount": "/etc/resolv.conf",
                                        "options": "ro,nosuid,nodev,relatime,discard,errors=remount-ro,bind",
                                        "size_available": 142006730752,
                                        "size_total": 166304071680,
                                        "uuid": "N/A"
                                    },
                                    {
                                        "block_available": 34669612,
                                        "block_size": 4096,
                                        "block_total": 40601580,
                                        "block_used": 5931968,
                                        "device": "/dev/vda1",
                                        "fstype": "ext4",
                                        "inode_available": 19998352,
                                        "inode_total": 20643840,
                                        "inode_used": 645488,
                                        "mount": "/etc/hosts",
                                        "options": "ro,nosuid,nodev,relatime,discard,errors=remount-ro,bind",
                                        "size_available": 142006730752,
                                        "size_total": 166304071680,
                                        "uuid": "N/A"
                                    },
                                    {
                                        "block_available": 177983365,
                                        "block_size": 4096,
                                        "block_total": 257748006,
                                        "block_used": 79764641,
                                        "device": "/dev/vdb",
                                        "fstype": "ext4",
                                        "inode_available": 60100076,
                                        "inode_total": 65536000,
                                        "inode_used": 5435924,
                                        "mount": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/work",
                                        "options": "rw,nosuid,nodev,relatime,bind",
                                        "size_available": 729019863040,
                                        "size_total": 1055735832576,
                                        "uuid": "N/A"
                                    },
                                    {
                                        "block_available": 177983365,
                                        "block_size": 4096,
                                        "block_total": 257748006,
                                        "block_used": 79764641,
                                        "device": "/dev/vdb",
                                        "fstype": "ext4",
                                        "inode_available": 60100076,
                                        "inode_total": 65536000,
                                        "inode_used": 5435924,
                                        "mount": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/ansible",
                                        "options": "ro,nosuid,nodev,relatime,bind",
                                        "size_available": 729019863040,
                                        "size_total": 1055735832576,
                                        "uuid": "N/A"
                                    },
                                    {
                                        "block_available": 177983365,
                                        "block_size": 4096,
                                        "block_total": 257748006,
                                        "block_used": 79764641,
                                        "device": "/dev/vdb",
                                        "fstype": "ext4",
                                        "inode_available": 60100076,
                                        "inode_total": 65536000,
                                        "inode_used": 5435924,
                                        "mount": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted",
                                        "options": "ro,nosuid,nodev,relatime,bind",
                                        "size_available": 729019863040,
                                        "size_total": 1055735832576,
                                        "uuid": "N/A"
                                    },
                                    {
                                        "block_available": 177983365,
                                        "block_size": 4096,
                                        "block_total": 257748006,
                                        "block_used": 79764641,
                                        "device": "/dev/vdb",
                                        "fstype": "ext4",
                                        "inode_available": 60100076,
                                        "inode_total": 65536000,
                                        "inode_used": 5435924,
                                        "mount": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/untrusted",
                                        "options": "ro,nosuid,nodev,relatime,bind",
                                        "size_available": 729019863040,
                                        "size_total": 1055735832576,
                                        "uuid": "N/A"
                                    },
                                    {
                                        "block_available": 177983365,
                                        "block_size": 4096,
                                        "block_total": 257748006,
                                        "block_used": 79764641,
                                        "device": "/dev/vdb",
                                        "fstype": "ext4",
                                        "inode_available": 60100076,
                                        "inode_total": 65536000,
                                        "inode_used": 5435924,
                                        "mount": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/ansible/pre_playbook_0",
                                        "options": "ro,nosuid,nodev,relatime,bind",
                                        "size_available": 729019863040,
                                        "size_total": 1055735832576,
                                        "uuid": "N/A"
                                    },
                                    {
                                        "block_available": 34669612,
                                        "block_size": 4096,
                                        "block_total": 40601580,
                                        "block_used": 5931968,
                                        "device": "/dev/vda1",
                                        "fstype": "ext4",
                                        "inode_available": 19998352,
                                        "inode_total": 20643840,
                                        "inode_used": 645488,
                                        "mount": "/etc/zuul/variables/variables.yaml",
                                        "options": "ro,nosuid,nodev,relatime,discard,errors=remount-ro,bind",
                                        "size_available": 142006730752,
                                        "size_total": 166304071680,
                                        "uuid": "N/A"
                                    },
                                    {
                                        "block_available": 12044463,
                                        "block_size": 4096,
                                        "block_total": 12048565,
                                        "block_used": 4102,
                                        "device": "/dev/vdc",
                                        "fstype": "ext4",
                                        "inode_available": 3080180,
                                        "inode_total": 3080192,
                                        "inode_used": 12,
                                        "mount": "/var/log/zuul",
                                        "options": "rw,nosuid,nodev,relatime",
                                        "size_available": 49334120448,
                                        "size_total": 49350922240,
                                        "uuid": "N/A"
                                    },
                                    {
                                        "block_available": 177983365,
                                        "block_size": 4096,
                                        "block_total": 257748006,
                                        "block_used": 79764641,
                                        "device": "/dev/vdb",
                                        "fstype": "ext4",
                                        "inode_available": 60100076,
                                        "inode_total": 65536000,
                                        "inode_used": 5435924,
                                        "mount": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/.ansible",
                                        "options": "rw,nosuid,nodev,relatime,bind",
                                        "size_available": 729019863040,
                                        "size_total": 1055735832576,
                                        "uuid": "N/A"
                                    }
                                ],
                                "ansible_nodename": "zuul-executor-partition-0-4",
                                "ansible_os_family": "Debian",
                                "ansible_pkg_mgr": "apt",
                                "ansible_proc_cmdline": {
                                    "BOOT_IMAGE": "/boot/vmlinuz-5.15.0-97-generic",
                                    "console": [
                                        "tty1",
                                        "ttyS0"
                                    ],
                                    "ro": true,
                                    "root": "LABEL=cloudimg-rootfs"
                                },
                                "ansible_processor": [
                                    "0",
                                    "GenuineIntel",
                                    "Intel Xeon Processor (Cascadelake)",
                                    "1",
                                    "GenuineIntel",
                                    "Intel Xeon Processor (Cascadelake)",
                                    "2",
                                    "GenuineIntel",
                                    "Intel Xeon Processor (Cascadelake)",
                                    "3",
                                    "GenuineIntel",
                                    "Intel Xeon Processor (Cascadelake)",
                                    "4",
                                    "GenuineIntel",
                                    "Intel Xeon Processor (Cascadelake)",
                                    "5",
                                    "GenuineIntel",
                                    "Intel Xeon Processor (Cascadelake)",
                                    "6",
                                    "GenuineIntel",
                                    "Intel Xeon Processor (Cascadelake)",
                                    "7",
                                    "GenuineIntel",
                                    "Intel Xeon Processor (Cascadelake)",
                                    "8",
                                    "GenuineIntel",
                                    "Intel Xeon Processor (Cascadelake)",
                                    "9",
                                    "GenuineIntel",
                                    "Intel Xeon Processor (Cascadelake)",
                                    "10",
                                    "GenuineIntel",
                                    "Intel Xeon Processor (Cascadelake)",
                                    "11",
                                    "GenuineIntel",
                                    "Intel Xeon Processor (Cascadelake)",
                                    "12",
                                    "GenuineIntel",
                                    "Intel Xeon Processor (Cascadelake)",
                                    "13",
                                    "GenuineIntel",
                                    "Intel Xeon Processor (Cascadelake)",
                                    "14",
                                    "GenuineIntel",
                                    "Intel Xeon Processor (Cascadelake)",
                                    "15",
                                    "GenuineIntel",
                                    "Intel Xeon Processor (Cascadelake)"
                                ],
                                "ansible_processor_cores": 1,
                                "ansible_processor_count": 16,
                                "ansible_processor_nproc": 16,
                                "ansible_processor_threads_per_core": 1,
                                "ansible_processor_vcpus": 16,
                                "ansible_product_name": "NA",
                                "ansible_product_serial": "NA",
                                "ansible_product_uuid": "NA",
                                "ansible_product_version": "NA",
                                "ansible_python": {
                                    "executable": "/opt/zuul/lib/zuul/ansible/8/bin/python",
                                    "has_sslcontext": true,
                                    "type": "cpython",
                                    "version": {
                                        "major": 3,
                                        "micro": 8,
                                        "minor": 11,
                                        "releaselevel": "final",
                                        "serial": 0
                                    },
                                    "version_info": [
                                        3,
                                        11,
                                        8,
                                        "final",
                                        0
                                    ]
                                },
                                "ansible_python_version": "3.11.8",
                                "ansible_real_group_id": 1000,
                                "ansible_real_user_id": 1000,
                                "ansible_selinux": {
                                    "status": "disabled"
                                },
                                "ansible_selinux_python_present": true,
                                "ansible_service_mgr": "bwrap",
                                "ansible_swapfree_mb": 0,
                                "ansible_swaptotal_mb": 0,
                                "ansible_system": "Linux",
                                "ansible_system_capabilities": "N/A",
                                "ansible_system_capabilities_enforced": "N/A",
                                "ansible_system_vendor": "NA",
                                "ansible_uptime_seconds": 3675478,
                                "ansible_user_dir": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/work",
                                "ansible_user_gecos": "",
                                "ansible_user_gid": 1000,
                                "ansible_user_id": "zuul",
                                "ansible_user_shell": "/usr/sbin/nologin",
                                "ansible_user_uid": 1000,
                                "ansible_userspace_architecture": "x86_64",
                                "ansible_userspace_bits": "64",
                                "ansible_virtualization_role": "host",
                                "ansible_virtualization_tech_guest": [],
                                "ansible_virtualization_tech_host": [
                                    "kvm"
                                ],
                                "ansible_virtualization_type": "kvm",
                                "gather_subset": [
                                    "all"
                                ],
                                "module_setup": true
                            },
                            "changed": false,
                            "deprecations": [],
                            "warnings": []
                        }
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:39:06.605595Z",
                            "start": "2024-04-21T00:39:05.357182Z"
                        },
                        "id": "ce4df5fb-964c-d7cb-6b39-000000000030",
                        "name": "Gathering Facts"
                    }
                },
                {
                    "hosts": {
                        "localhost": {
                            "action": "include_role",
                            "changed": false,
                            "include_args": {
                                "name": "set-zuul-log-path-fact"
                            }
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-d7cb-6b39-000000000005",
                        "name": "emit-job-header",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_2/cc-github.bmwgroup.net/codecraft-oss/zuul-jobs/roles/emit-job-header"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:39:06.655102Z",
                            "start": "2024-04-21T00:39:06.621092Z"
                        },
                        "id": "ce4df5fb-964c-d7cb-6b39-000000000007",
                        "name": "Setup log path fact"
                    }
                },
                {
                    "hosts": {
                        "localhost": {
                            "action": "set_fact",
                            "changed": false,
                            "false_condition": "zuul.change is defined",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-d7cb-6b39-000000000054",
                        "name": "set-zuul-log-path-fact",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_2/cc-github.bmwgroup.net/codecraft-oss/zuul-jobs/roles/set-zuul-log-path-fact"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:39:06.744537Z",
                            "start": "2024-04-21T00:39:06.684932Z"
                        },
                        "id": "ce4df5fb-964c-d7cb-6b39-000000000056",
                        "name": "Set log path for a change"
                    }
                },
                {
                    "hosts": {
                        "localhost": {
                            "action": "set_fact",
                            "changed": false,
                            "false_condition": "zuul.newrev is defined",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-d7cb-6b39-000000000054",
                        "name": "set-zuul-log-path-fact",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_2/cc-github.bmwgroup.net/codecraft-oss/zuul-jobs/roles/set-zuul-log-path-fact"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:39:06.789711Z",
                            "start": "2024-04-21T00:39:06.751785Z"
                        },
                        "id": "ce4df5fb-964c-d7cb-6b39-000000000057",
                        "name": "Set log path for a ref update"
                    }
                },
                {
                    "hosts": {
                        "localhost": {
                            "action": "set_fact",
                            "ansible_facts": {
                                "zuul_log_path": "swf-quality-metrics/cc-github.bmwgroup.net/swh/ddad/master/swf-metrics-check-nautilus-lifecycle/5025843"
                            },
                            "changed": false
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-d7cb-6b39-000000000054",
                        "name": "set-zuul-log-path-fact",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_2/cc-github.bmwgroup.net/codecraft-oss/zuul-jobs/roles/set-zuul-log-path-fact"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:39:06.858530Z",
                            "start": "2024-04-21T00:39:06.795614Z"
                        },
                        "id": "ce4df5fb-964c-d7cb-6b39-000000000058",
                        "name": "Set log path for a periodic job"
                    }
                },
                {
                    "hosts": {
                        "localhost": {
                            "action": "set_fact",
                            "changed": false,
                            "false_condition": "zuul_log_path_shard_build",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-d7cb-6b39-000000000054",
                        "name": "set-zuul-log-path-fact",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_2/cc-github.bmwgroup.net/codecraft-oss/zuul-jobs/roles/set-zuul-log-path-fact"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:39:06.889507Z",
                            "start": "2024-04-21T00:39:06.863227Z"
                        },
                        "id": "ce4df5fb-964c-d7cb-6b39-00000000005a",
                        "name": "Set log path for a change"
                    }
                },
                {
                    "hosts": {
                        "localhost": {
                            "action": "set_fact",
                            "changed": false,
                            "false_condition": "zuul_log_path_shard_build",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-d7cb-6b39-000000000054",
                        "name": "set-zuul-log-path-fact",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_2/cc-github.bmwgroup.net/codecraft-oss/zuul-jobs/roles/set-zuul-log-path-fact"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:39:06.926259Z",
                            "start": "2024-04-21T00:39:06.897870Z"
                        },
                        "id": "ce4df5fb-964c-d7cb-6b39-00000000005b",
                        "name": "Set log path for a ref update"
                    }
                },
                {
                    "hosts": {
                        "localhost": {
                            "action": "set_fact",
                            "changed": false,
                            "false_condition": "zuul_log_path_shard_build",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-d7cb-6b39-000000000054",
                        "name": "set-zuul-log-path-fact",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_2/cc-github.bmwgroup.net/codecraft-oss/zuul-jobs/roles/set-zuul-log-path-fact"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:39:06.964669Z",
                            "start": "2024-04-21T00:39:06.935429Z"
                        },
                        "id": "ce4df5fb-964c-d7cb-6b39-00000000005c",
                        "name": "Set log path for a periodic job"
                    }
                },
                {
                    "hosts": {
                        "localhost": {
                            "action": "debug",
                            "changed": false,
                            "msg": "# Job Information\nAnsible Version: 2.15.10\nJob: swf-metrics-check-nautilus-lifecycle\nPipeline: swf-quality-metrics\nExecutor: zuul-executor-partition-0-4.zuul-executor-partition-0-eu-ash-16.ci.svc.cluster.local\nTriggered by: https://cc-github.bmwgroup.net/swh/ddad\nEvent ID: dd574705cd244e4594291250816f91d3\n"
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-d7cb-6b39-000000000005",
                        "name": "emit-job-header",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_2/cc-github.bmwgroup.net/codecraft-oss/zuul-jobs/roles/emit-job-header"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:39:07.036646Z",
                            "start": "2024-04-21T00:39:06.980997Z"
                        },
                        "id": "ce4df5fb-964c-d7cb-6b39-000000000008",
                        "name": "Print job information"
                    }
                },
                {
                    "hosts": {
                        "localhost": {
                            "action": "debug",
                            "changed": false,
                            "msg": "All items completed",
                            "results": [
                                {
                                    "ansible_loop_var": "zj_item",
                                    "changed": false,
                                    "failed": false,
                                    "msg": "# Node Information\nInventory Hostname: node\nHostname: np0065527721\nUsername: zuul\nDistro: Ubuntu 22.04\nProvider: cc-prod-ash16-codecraft-nodepool-prod-nvme\nLabel: adp-qasc-master-ubuntu2204-16-core\nInterface IP: 10.31.118.224\n",
                                    "zj_item": "node"
                                }
                            ]
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-d7cb-6b39-000000000005",
                        "name": "emit-job-header",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_2/cc-github.bmwgroup.net/codecraft-oss/zuul-jobs/roles/emit-job-header"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:39:07.300443Z",
                            "start": "2024-04-21T00:39:07.044732Z"
                        },
                        "id": "ce4df5fb-964c-d7cb-6b39-000000000009",
                        "name": "Print node information"
                    }
                }
            ]
        },
        {
            "play": {
                "duration": {
                    "end": "2024-04-21T00:44:21.060689Z",
                    "start": "2024-04-21T00:39:07.340403Z"
                },
                "id": "ce4df5fb-964c-d7cb-6b39-00000000000b",
                "name": "all"
            },
            "tasks": [
                {
                    "hosts": {
                        "node": {
                            "action": "zuul_return",
                            "changed": false,
                            "false_condition": "zuul.ansible_version not in cc_supported_ansible_versions",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:39:07.476011Z",
                            "start": "2024-04-21T00:39:07.438693Z"
                        },
                        "id": "ce4df5fb-964c-d7cb-6b39-00000000000d",
                        "name": "Skip retries if we are about to fail the job"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "fail",
                            "changed": false,
                            "false_condition": "zuul.ansible_version not in cc_supported_ansible_versions",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:39:07.545393Z",
                            "start": "2024-04-21T00:39:07.492444Z"
                        },
                        "id": "ce4df5fb-964c-d7cb-6b39-00000000000e",
                        "name": "Fail job if deprecated Ansible version is used"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "set_fact",
                            "ansible_facts": {
                                "enable_apt_mirror": false,
                                "enable_proxy": false,
                                "enable_repo_sync": true,
                                "enable_system_metrics": true
                            },
                            "changed": false
                        }
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:39:07.743130Z",
                            "start": "2024-04-21T00:39:07.603206Z"
                        },
                        "id": "ce4df5fb-964c-d7cb-6b39-000000000010",
                        "name": "Make deprecated variables compatible"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "include_role",
                            "changed": false,
                            "include_args": {
                                "name": "start-zuul-console"
                            }
                        }
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:39:07.822042Z",
                            "start": "2024-04-21T00:39:07.758985Z"
                        },
                        "id": "ce4df5fb-964c-d7cb-6b39-000000000011",
                        "name": ""
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "zuul_console",
                            "changed": false,
                            "invocation": {
                                "module_args": {
                                    "path": "/tmp/console-{log_uuid}.log",
                                    "port": 19885,
                                    "state": "present"
                                }
                            }
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-d7cb-6b39-0000000000d4",
                        "name": "start-zuul-console",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_2/cc-github.bmwgroup.net/codecraft-oss/zuul-jobs/roles/start-zuul-console"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:39:08.546837Z",
                            "start": "2024-04-21T00:39:07.857216Z"
                        },
                        "id": "ce4df5fb-964c-d7cb-6b39-0000000000d6",
                        "name": "Start zuul_console daemon."
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "include_role",
                            "changed": false,
                            "include_args": {
                                "name": "emit-node-exporter-metrics"
                            }
                        }
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:39:08.604407Z",
                            "start": "2024-04-21T00:39:08.568413Z"
                        },
                        "id": "ce4df5fb-964c-d7cb-6b39-000000000012",
                        "name": ""
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "include_tasks",
                            "changed": false,
                            "include": "linux.yaml",
                            "include_args": {}
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-d7cb-6b39-000000000135",
                        "name": "emit-node-exporter-metrics",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_1/cc-github.bmwgroup.net/codecraft/cilib/roles/emit-node-exporter-metrics"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:39:08.672995Z",
                            "start": "2024-04-21T00:39:08.634029Z"
                        },
                        "id": "ce4df5fb-964c-d7cb-6b39-000000000137",
                        "name": ""
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "file",
                            "changed": true,
                            "diff": {
                                "after": {
                                    "mode": "0777",
                                    "path": "/var/lib/node_exporter/textfile_collector",
                                    "state": "directory"
                                },
                                "before": {
                                    "mode": "0755",
                                    "path": "/var/lib/node_exporter/textfile_collector",
                                    "state": "absent"
                                }
                            },
                            "gid": 0,
                            "group": "root",
                            "invocation": {
                                "module_args": {
                                    "_diff_peek": null,
                                    "_original_basename": null,
                                    "access_time": null,
                                    "access_time_format": "%Y%m%d%H%M.%S",
                                    "attributes": null,
                                    "follow": true,
                                    "force": false,
                                    "group": null,
                                    "mode": 511,
                                    "modification_time": null,
                                    "modification_time_format": "%Y%m%d%H%M.%S",
                                    "owner": null,
                                    "path": "/var/lib/node_exporter/textfile_collector",
                                    "recurse": false,
                                    "selevel": null,
                                    "serole": null,
                                    "setype": null,
                                    "seuser": null,
                                    "src": null,
                                    "state": "directory",
                                    "unsafe_writes": false
                                }
                            },
                            "mode": "0777",
                            "owner": "root",
                            "path": "/var/lib/node_exporter/textfile_collector",
                            "size": 4096,
                            "state": "directory",
                            "uid": 0
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-d7cb-6b39-000000000135",
                        "name": "emit-node-exporter-metrics",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_1/cc-github.bmwgroup.net/codecraft/cilib/roles/emit-node-exporter-metrics"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:39:09.337220Z",
                            "start": "2024-04-21T00:39:08.699355Z"
                        },
                        "id": "ce4df5fb-964c-d7cb-6b39-000000000174",
                        "name": "Create directory"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "copy",
                            "changed": true,
                            "checksum": "1cc8ebdc0c626f4fffcfa2dd4ac4396951523e36",
                            "dest": "/var/lib/node_exporter/textfile_collector/zuul.prom",
                            "diff": [],
                            "gid": 1000,
                            "group": "zuul",
                            "invocation": {
                                "module_args": {
                                    "_original_basename": "tmpodjr5ibt",
                                    "attributes": null,
                                    "backup": false,
                                    "checksum": "1cc8ebdc0c626f4fffcfa2dd4ac4396951523e36",
                                    "content": null,
                                    "dest": "/var/lib/node_exporter/textfile_collector/zuul.prom",
                                    "directory_mode": null,
                                    "follow": false,
                                    "force": true,
                                    "group": null,
                                    "local_follow": null,
                                    "mode": null,
                                    "owner": null,
                                    "remote_src": null,
                                    "selevel": null,
                                    "serole": null,
                                    "setype": null,
                                    "seuser": null,
                                    "src": "/home/zuul/.ansible/tmp/ansible-tmp-1713659949.459222-95-92774977363014/source",
                                    "unsafe_writes": false,
                                    "validate": null
                                }
                            },
                            "md5sum": "20bdd9ab0597ba0da147b20c1dc2f402",
                            "mode": "0664",
                            "owner": "zuul",
                            "size": 245,
                            "src": "/home/zuul/.ansible/tmp/ansible-tmp-1713659949.459222-95-92774977363014/source",
                            "state": "file",
                            "uid": 1000
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-d7cb-6b39-000000000135",
                        "name": "emit-node-exporter-metrics",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_1/cc-github.bmwgroup.net/codecraft/cilib/roles/emit-node-exporter-metrics"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:39:10.745330Z",
                            "start": "2024-04-21T00:39:09.349492Z"
                        },
                        "id": "ce4df5fb-964c-d7cb-6b39-000000000175",
                        "name": "Create metrics file"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "include_tasks",
                            "changed": false,
                            "false_condition": "ansible_os_family == \"Windows\"",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-d7cb-6b39-000000000135",
                        "name": "emit-node-exporter-metrics",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_1/cc-github.bmwgroup.net/codecraft/cilib/roles/emit-node-exporter-metrics"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:39:10.797096Z",
                            "start": "2024-04-21T00:39:10.759216Z"
                        },
                        "id": "ce4df5fb-964c-d7cb-6b39-000000000138",
                        "name": ""
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "include_role",
                            "changed": false,
                            "include_args": {
                                "name": "wait-for-cloud-init"
                            }
                        }
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:39:10.861899Z",
                            "start": "2024-04-21T00:39:10.822072Z"
                        },
                        "id": "ce4df5fb-964c-d7cb-6b39-000000000013",
                        "name": ""
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "shell",
                            "changed": true,
                            "cmd": "cloud-init status",
                            "delta": "0:00:00.604791",
                            "end": "2024-04-21 00:39:12.162782",
                            "invocation": {
                                "module_args": {
                                    "_raw_params": "cloud-init status",
                                    "_uses_shell": true,
                                    "argv": null,
                                    "chdir": null,
                                    "creates": null,
                                    "executable": null,
                                    "removes": null,
                                    "stdin": null,
                                    "stdin_add_newline": true,
                                    "strip_empty_ends": true,
                                    "warn": false,
                                    "zuul_ansible_split_streams": false,
                                    "zuul_log_id": "ce4df5fb-964c-d7cb-6b39-0000000001d4-1-node"
                                }
                            },
                            "msg": "",
                            "rc": 0,
                            "start": "2024-04-21 00:39:11.557991",
                            "stderr": "",
                            "stderr_lines": [],
                            "stdout": "status: done",
                            "stdout_lines": [
                                "status: done"
                            ],
                            "zuul_log_id": "ce4df5fb-964c-d7cb-6b39-0000000001d4-1-node"
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-d7cb-6b39-0000000001d2",
                        "name": "wait-for-cloud-init",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_0/cc-github.bmwgroup.net/codecraft/zuul-conf-global/roles/wait-for-cloud-init"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:39:12.481403Z",
                            "start": "2024-04-21T00:39:10.965081Z"
                        },
                        "id": "ce4df5fb-964c-d7cb-6b39-0000000001d4",
                        "name": "Get cloud-init status"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "shell",
                            "changed": false,
                            "false_condition": "ansible_system == \"Linux\" and\nansible_connection != \"kubectl\" and\ncloud_init_status is successful and\ncloud_init_status.stdout != \"status: not run\" and\ncloud_init_status.stdout != \"status: done\"\n",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-d7cb-6b39-0000000001d2",
                        "name": "wait-for-cloud-init",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_0/cc-github.bmwgroup.net/codecraft/zuul-conf-global/roles/wait-for-cloud-init"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:39:13.059039Z",
                            "start": "2024-04-21T00:39:12.546853Z"
                        },
                        "id": "ce4df5fb-964c-d7cb-6b39-0000000001d5",
                        "name": "Wait for cloud-init to finish"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "include_role",
                            "changed": false,
                            "include_args": {
                                "name": "add-build-sshkey-generic"
                            }
                        }
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:39:13.121583Z",
                            "start": "2024-04-21T00:39:13.082040Z"
                        },
                        "id": "ce4df5fb-964c-d7cb-6b39-000000000014",
                        "name": ""
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "stat",
                            "changed": false,
                            "failed_when_result": false,
                            "invocation": {
                                "module_args": {
                                    "checksum_algorithm": "sha1",
                                    "follow": false,
                                    "get_attributes": true,
                                    "get_checksum": true,
                                    "get_md5": false,
                                    "get_mime": true,
                                    "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/work/5025843e7b0949e8ab5d90b1424cab55_id_rsa"
                                }
                            },
                            "stat": {
                                "exists": false
                            }
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-d7cb-6b39-00000000027d",
                        "name": "add-build-sshkey-generic",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_0/cc-github.bmwgroup.net/codecraft/zuul-conf-global/roles/add-build-sshkey-generic"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:39:13.605021Z",
                            "start": "2024-04-21T00:39:13.252776Z"
                        },
                        "id": "ce4df5fb-964c-d7cb-6b39-00000000027f",
                        "name": "Check to see if ssh key was already created for this build"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "include_tasks",
                            "changed": false,
                            "include": "create-key-and-replace.yaml",
                            "include_args": {}
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-d7cb-6b39-00000000027d",
                        "name": "add-build-sshkey-generic",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_0/cc-github.bmwgroup.net/codecraft/zuul-conf-global/roles/add-build-sshkey-generic"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:39:13.657693Z",
                            "start": "2024-04-21T00:39:13.618245Z"
                        },
                        "id": "ce4df5fb-964c-d7cb-6b39-000000000280",
                        "name": "Create a new key in workspace based on build UUID"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "command",
                            "changed": true,
                            "cmd": [
                                "ssh-keygen",
                                "-t",
                                "rsa",
                                "-b",
                                "1024",
                                "-N",
                                "",
                                "-f",
                                "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/work/5025843e7b0949e8ab5d90b1424cab55_id_rsa"
                            ],
                            "delta": "0:00:00.017674",
                            "end": "2024-04-21 00:39:14.023841",
                            "invocation": {
                                "module_args": {
                                    "_raw_params": "ssh-keygen -t rsa -b 1024 -N '' -f /var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/work/5025843e7b0949e8ab5d90b1424cab55_id_rsa",
                                    "_uses_shell": false,
                                    "argv": null,
                                    "chdir": null,
                                    "creates": null,
                                    "executable": null,
                                    "removes": null,
                                    "stdin": null,
                                    "stdin_add_newline": true,
                                    "strip_empty_ends": true,
                                    "warn": false,
                                    "zuul_ansible_split_streams": false,
                                    "zuul_log_id": "ce4df5fb-964c-d7cb-6b39-0000000002e3-0-node"
                                }
                            },
                            "msg": "",
                            "rc": 0,
                            "start": "2024-04-21 00:39:14.006167",
                            "stderr": "",
                            "stderr_lines": [],
                            "stdout": "Generating public/private rsa key pair.\nYour identification has been saved in /var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/work/5025843e7b0949e8ab5d90b1424cab55_id_rsa\nYour public key has been saved in /var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/work/5025843e7b0949e8ab5d90b1424cab55_id_rsa.pub\nThe key fingerprint is:\nSHA256:DAyJGNtKaRagDuRo9qS9bZGgM4wrawUA1K9ZOlrycbI zuul@zuul-executor-partition-0-4\nThe key's randomart image is:\n+---[RSA 1024]----+\n|B*....           |\n|Bo+..o           |\n|*O.o. o          |\n|@o* .o.o         |\n|oB.o=o  S        |\n| ooXo..          |\n|o *.*o           |\n|.+ E.            |\n|o                |\n+----[SHA256]-----+",
                            "stdout_lines": [
                                "Generating public/private rsa key pair.",
                                "Your identification has been saved in /var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/work/5025843e7b0949e8ab5d90b1424cab55_id_rsa",
                                "Your public key has been saved in /var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/work/5025843e7b0949e8ab5d90b1424cab55_id_rsa.pub",
                                "The key fingerprint is:",
                                "SHA256:DAyJGNtKaRagDuRo9qS9bZGgM4wrawUA1K9ZOlrycbI zuul@zuul-executor-partition-0-4",
                                "The key's randomart image is:",
                                "+---[RSA 1024]----+",
                                "|B*....           |",
                                "|Bo+..o           |",
                                "|*O.o. o          |",
                                "|@o* .o.o         |",
                                "|oB.o=o  S        |",
                                "| ooXo..          |",
                                "|o *.*o           |",
                                "|.+ E.            |",
                                "|o                |",
                                "+----[SHA256]-----+"
                            ],
                            "zuul_log_id": "ce4df5fb-964c-d7cb-6b39-0000000002e3-0-node"
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-d7cb-6b39-00000000027d",
                        "name": "add-build-sshkey-generic",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_0/cc-github.bmwgroup.net/codecraft/zuul-conf-global/roles/add-build-sshkey-generic"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:39:14.069040Z",
                            "start": "2024-04-21T00:39:13.680966Z"
                        },
                        "id": "ce4df5fb-964c-d7cb-6b39-0000000002e3",
                        "name": "Create Temp SSH key"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "include_tasks",
                            "changed": false,
                            "include": "remote-linux.yaml",
                            "include_args": {}
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-d7cb-6b39-00000000027d",
                        "name": "add-build-sshkey-generic",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_0/cc-github.bmwgroup.net/codecraft/zuul-conf-global/roles/add-build-sshkey-generic"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:39:14.136847Z",
                            "start": "2024-04-21T00:39:14.083365Z"
                        },
                        "id": "ce4df5fb-964c-d7cb-6b39-0000000002e4",
                        "name": "Remote setup ssh keys (linux)"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "authorized_key",
                            "changed": true,
                            "comment": null,
                            "exclusive": false,
                            "follow": false,
                            "invocation": {
                                "module_args": {
                                    "changed": true,
                                    "comment": null,
                                    "exclusive": false,
                                    "follow": false,
                                    "key": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAAAgQDERBOFpJO0CfYSpUyS0s0gEEqSkCckXwaw0/tOMZmhfAOyT5FjWWoIauJAjRLQBCH4kKntieBfGcQhyMLUFq+hJPPVoIOcExbfisYGQF+I4QusOqEoRQ4g8cZzVTHBQOVbvv4wbre688ZhgZcMiufmduFXjTTK+fpjI5PMx2+CVQ== zuul@zuul-executor-partition-0-4",
                                    "key_options": null,
                                    "keyfile": "/home/zuul/.ssh/authorized_keys",
                                    "manage_dir": true,
                                    "path": null,
                                    "state": "present",
                                    "user": "zuul",
                                    "validate_certs": true
                                }
                            },
                            "key": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAAAgQDERBOFpJO0CfYSpUyS0s0gEEqSkCckXwaw0/tOMZmhfAOyT5FjWWoIauJAjRLQBCH4kKntieBfGcQhyMLUFq+hJPPVoIOcExbfisYGQF+I4QusOqEoRQ4g8cZzVTHBQOVbvv4wbre688ZhgZcMiufmduFXjTTK+fpjI5PMx2+CVQ== zuul@zuul-executor-partition-0-4",
                            "key_options": null,
                            "keyfile": "/home/zuul/.ssh/authorized_keys",
                            "manage_dir": true,
                            "path": null,
                            "state": "present",
                            "user": "zuul",
                            "validate_certs": true
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-d7cb-6b39-00000000027d",
                        "name": "add-build-sshkey-generic",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_0/cc-github.bmwgroup.net/codecraft/zuul-conf-global/roles/add-build-sshkey-generic"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:39:15.222026Z",
                            "start": "2024-04-21T00:39:14.175068Z"
                        },
                        "id": "ce4df5fb-964c-d7cb-6b39-0000000002ff",
                        "name": "Enable access via build key on all nodes"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "file",
                            "changed": false,
                            "diff": {
                                "after": {
                                    "path": "/home/zuul/.ssh"
                                },
                                "before": {
                                    "path": "/home/zuul/.ssh"
                                }
                            },
                            "gid": 1000,
                            "group": "zuul",
                            "invocation": {
                                "module_args": {
                                    "_diff_peek": null,
                                    "_original_basename": null,
                                    "access_time": null,
                                    "access_time_format": "%Y%m%d%H%M.%S",
                                    "attributes": null,
                                    "follow": true,
                                    "force": false,
                                    "group": null,
                                    "mode": 448,
                                    "modification_time": null,
                                    "modification_time_format": "%Y%m%d%H%M.%S",
                                    "owner": null,
                                    "path": "/home/zuul/.ssh",
                                    "recurse": false,
                                    "selevel": null,
                                    "serole": null,
                                    "setype": null,
                                    "seuser": null,
                                    "src": null,
                                    "state": "directory",
                                    "unsafe_writes": false
                                }
                            },
                            "mode": "0700",
                            "owner": "zuul",
                            "path": "/home/zuul/.ssh",
                            "size": 4096,
                            "state": "directory",
                            "uid": 1000
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-d7cb-6b39-00000000027d",
                        "name": "add-build-sshkey-generic",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_0/cc-github.bmwgroup.net/codecraft/zuul-conf-global/roles/add-build-sshkey-generic"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:39:15.605228Z",
                            "start": "2024-04-21T00:39:15.236134Z"
                        },
                        "id": "ce4df5fb-964c-d7cb-6b39-000000000300",
                        "name": "Make sure user has a .ssh"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "copy",
                            "changed": false,
                            "dest": "/home/zuul/.ssh/id_rsa",
                            "invocation": {
                                "dest": "~/.ssh/id_rsa",
                                "force": false,
                                "mode": 384,
                                "module_args": {
                                    "dest": "~/.ssh/id_rsa",
                                    "force": false,
                                    "mode": 384,
                                    "src": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/work/5025843e7b0949e8ab5d90b1424cab55_id_rsa"
                                },
                                "src": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/work/5025843e7b0949e8ab5d90b1424cab55_id_rsa"
                            },
                            "src": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/work/5025843e7b0949e8ab5d90b1424cab55_id_rsa"
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-d7cb-6b39-00000000027d",
                        "name": "add-build-sshkey-generic",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_0/cc-github.bmwgroup.net/codecraft/zuul-conf-global/roles/add-build-sshkey-generic"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:39:16.014269Z",
                            "start": "2024-04-21T00:39:15.612871Z"
                        },
                        "id": "ce4df5fb-964c-d7cb-6b39-000000000301",
                        "name": "Install build private key as SSH key on all nodes"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "copy",
                            "changed": false,
                            "dest": "/home/zuul/.ssh/id_rsa.pub",
                            "invocation": {
                                "dest": "~/.ssh/id_rsa.pub",
                                "force": false,
                                "mode": 420,
                                "module_args": {
                                    "dest": "~/.ssh/id_rsa.pub",
                                    "force": false,
                                    "mode": 420,
                                    "src": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/work/5025843e7b0949e8ab5d90b1424cab55_id_rsa.pub"
                                },
                                "src": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/work/5025843e7b0949e8ab5d90b1424cab55_id_rsa.pub"
                            },
                            "src": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/work/5025843e7b0949e8ab5d90b1424cab55_id_rsa.pub"
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-d7cb-6b39-00000000027d",
                        "name": "add-build-sshkey-generic",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_0/cc-github.bmwgroup.net/codecraft/zuul-conf-global/roles/add-build-sshkey-generic"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:39:16.533209Z",
                            "start": "2024-04-21T00:39:16.026429Z"
                        },
                        "id": "ce4df5fb-964c-d7cb-6b39-000000000302",
                        "name": "Install build public key as SSH key on all nodes"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "include_tasks",
                            "changed": false,
                            "false_condition": "nodepool_slot",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-d7cb-6b39-00000000027d",
                        "name": "add-build-sshkey-generic",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_0/cc-github.bmwgroup.net/codecraft/zuul-conf-global/roles/add-build-sshkey-generic"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:39:16.577040Z",
                            "start": "2024-04-21T00:39:16.547493Z"
                        },
                        "id": "ce4df5fb-964c-d7cb-6b39-0000000002e5",
                        "name": "Remote setup ssh keys (linux) in metastatic nodes"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "include_tasks",
                            "changed": false,
                            "false_condition": "ansible_os_family == \"Windows\"",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-d7cb-6b39-00000000027d",
                        "name": "add-build-sshkey-generic",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_0/cc-github.bmwgroup.net/codecraft/zuul-conf-global/roles/add-build-sshkey-generic"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:39:16.628939Z",
                            "start": "2024-04-21T00:39:16.591331Z"
                        },
                        "id": "ce4df5fb-964c-d7cb-6b39-0000000002e6",
                        "name": "Remote setup ssh keys (windows)"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "command",
                            "changed": true,
                            "cmd": [
                                "ssh-add",
                                "-D"
                            ],
                            "delta": "0:00:00.010773",
                            "end": "2024-04-21 00:39:17.053818",
                            "invocation": {
                                "module_args": {
                                    "_raw_params": "ssh-add -D",
                                    "_uses_shell": false,
                                    "argv": null,
                                    "chdir": null,
                                    "creates": null,
                                    "executable": null,
                                    "removes": null,
                                    "stdin": null,
                                    "stdin_add_newline": true,
                                    "strip_empty_ends": true,
                                    "warn": false,
                                    "zuul_ansible_split_streams": false,
                                    "zuul_log_id": "ce4df5fb-964c-d7cb-6b39-0000000002e7-0-node"
                                }
                            },
                            "msg": "",
                            "rc": 0,
                            "start": "2024-04-21 00:39:17.043045",
                            "stderr": "",
                            "stderr_lines": [],
                            "stdout": "All identities removed.",
                            "stdout_lines": [
                                "All identities removed."
                            ],
                            "zuul_log_id": "ce4df5fb-964c-d7cb-6b39-0000000002e7-0-node"
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-d7cb-6b39-00000000027d",
                        "name": "add-build-sshkey-generic",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_0/cc-github.bmwgroup.net/codecraft/zuul-conf-global/roles/add-build-sshkey-generic"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:39:17.108928Z",
                            "start": "2024-04-21T00:39:16.645386Z"
                        },
                        "id": "ce4df5fb-964c-d7cb-6b39-0000000002e7",
                        "name": "Remove all keys from local agent"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "command",
                            "changed": true,
                            "cmd": [
                                "ssh-add",
                                "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/work/5025843e7b0949e8ab5d90b1424cab55_id_rsa"
                            ],
                            "delta": "0:00:00.009949",
                            "end": "2024-04-21 00:39:17.434470",
                            "invocation": {
                                "module_args": {
                                    "_raw_params": "ssh-add /var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/work/5025843e7b0949e8ab5d90b1424cab55_id_rsa",
                                    "_uses_shell": false,
                                    "argv": null,
                                    "chdir": null,
                                    "creates": null,
                                    "executable": null,
                                    "removes": null,
                                    "stdin": null,
                                    "stdin_add_newline": true,
                                    "strip_empty_ends": true,
                                    "warn": false,
                                    "zuul_ansible_split_streams": false,
                                    "zuul_log_id": "ce4df5fb-964c-d7cb-6b39-0000000002e8-0-node"
                                }
                            },
                            "msg": "",
                            "rc": 0,
                            "start": "2024-04-21 00:39:17.424521",
                            "stderr": "",
                            "stderr_lines": [],
                            "stdout": "Identity added: /var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/work/5025843e7b0949e8ab5d90b1424cab55_id_rsa (zuul@zuul-executor-partition-0-4)",
                            "stdout_lines": [
                                "Identity added: /var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/work/5025843e7b0949e8ab5d90b1424cab55_id_rsa (zuul@zuul-executor-partition-0-4)"
                            ],
                            "zuul_log_id": "ce4df5fb-964c-d7cb-6b39-0000000002e8-0-node"
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-d7cb-6b39-00000000027d",
                        "name": "add-build-sshkey-generic",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_0/cc-github.bmwgroup.net/codecraft/zuul-conf-global/roles/add-build-sshkey-generic"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:39:17.477068Z",
                            "start": "2024-04-21T00:39:17.121919Z"
                        },
                        "id": "ce4df5fb-964c-d7cb-6b39-0000000002e8",
                        "name": "Add back temp key"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "ping",
                            "changed": false,
                            "invocation": {
                                "module_args": {
                                    "data": "pong"
                                }
                            },
                            "ping": "pong"
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-d7cb-6b39-00000000027d",
                        "name": "add-build-sshkey-generic",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_0/cc-github.bmwgroup.net/codecraft/zuul-conf-global/roles/add-build-sshkey-generic"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:39:18.118289Z",
                            "start": "2024-04-21T00:39:17.488936Z"
                        },
                        "id": "ce4df5fb-964c-d7cb-6b39-0000000002e9",
                        "name": "Verify we can still SSH to all nodes (linux)"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "command",
                            "changed": false,
                            "false_condition": "ansible_os_family == \"Windows\"",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-d7cb-6b39-00000000027d",
                        "name": "add-build-sshkey-generic",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_0/cc-github.bmwgroup.net/codecraft/zuul-conf-global/roles/add-build-sshkey-generic"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:39:18.176557Z",
                            "start": "2024-04-21T00:39:18.135756Z"
                        },
                        "id": "ce4df5fb-964c-d7cb-6b39-0000000002ea",
                        "name": "Verify we can still SSH to all nodes (windows)"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "include_role",
                            "changed": false,
                            "include_args": {
                                "name": "emit-image-infos"
                            }
                        }
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:39:18.233091Z",
                            "start": "2024-04-21T00:39:18.196507Z"
                        },
                        "id": "ce4df5fb-964c-d7cb-6b39-000000000015",
                        "name": ""
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "include_tasks",
                            "changed": false,
                            "include": "linux.yaml",
                            "include_args": {}
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-d7cb-6b39-0000000003c2",
                        "name": "emit-image-infos",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_1/cc-github.bmwgroup.net/codecraft/cilib/roles/emit-image-infos"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:39:18.312446Z",
                            "start": "2024-04-21T00:39:18.274386Z"
                        },
                        "id": "ce4df5fb-964c-d7cb-6b39-0000000003c4",
                        "name": ""
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "shell",
                            "changed": true,
                            "cmd": "jq -r '.[] | select(.step==\"image_build\" and .action==\"Image build start\") | \"Node image build from: \"+.time' /etc/image-info.json;\njq -r '.[] | select(.step==\"cache\") | select(.action | contains(\"Download\")) | \"Cache file: \"+.downloadUri+\" (lastModified: \"+.lastModified+\" Size: \"+.size+\" bytes)\"' /etc/image-info.json;\njq -r '.[] | select(.step==\"docker\") | select(.action | contains(\"start\")) | \"Docker image: \"+.image+\" (pulled: \"+.time+\")\"' /etc/image-info.json;\n",
                            "delta": "0:00:00.099631",
                            "end": "2024-04-21 00:39:18.760951",
                            "invocation": {
                                "module_args": {
                                    "_raw_params": "jq -r '.[] | select(.step==\"image_build\" and .action==\"Image build start\") | \"Node image build from: \"+.time' /etc/image-info.json;\njq -r '.[] | select(.step==\"cache\") | select(.action | contains(\"Download\")) | \"Cache file: \"+.downloadUri+\" (lastModified: \"+.lastModified+\" Size: \"+.size+\" bytes)\"' /etc/image-info.json;\njq -r '.[] | select(.step==\"docker\") | select(.action | contains(\"start\")) | \"Docker image: \"+.image+\" (pulled: \"+.time+\")\"' /etc/image-info.json;\n",
                                    "_uses_shell": true,
                                    "argv": null,
                                    "chdir": null,
                                    "creates": null,
                                    "executable": null,
                                    "removes": "/etc/image-info.json",
                                    "stdin": null,
                                    "stdin_add_newline": true,
                                    "strip_empty_ends": true,
                                    "warn": false,
                                    "zuul_ansible_split_streams": false,
                                    "zuul_log_id": "ce4df5fb-964c-d7cb-6b39-000000000437-1-node"
                                }
                            },
                            "msg": "",
                            "rc": 0,
                            "start": "2024-04-21 00:39:18.661320",
                            "stderr": "",
                            "stderr_lines": [],
                            "stdout": "Node image build from: Fri, 19 Apr 2024 00:52:36 +0000\nDocker image: ddad.artifactory.cc.bmwgroup.net/adp-docker/ros-noetic:2022.02.17.06.31 (pulled: Fri, 19 Apr 2024 00:55:25 +0000)",
                            "stdout_lines": [
                                "Node image build from: Fri, 19 Apr 2024 00:52:36 +0000",
                                "Docker image: ddad.artifactory.cc.bmwgroup.net/adp-docker/ros-noetic:2022.02.17.06.31 (pulled: Fri, 19 Apr 2024 00:55:25 +0000)"
                            ],
                            "zuul_log_id": "ce4df5fb-964c-d7cb-6b39-000000000437-1-node"
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-d7cb-6b39-0000000003c2",
                        "name": "emit-image-infos",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_1/cc-github.bmwgroup.net/codecraft/cilib/roles/emit-image-infos"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:39:18.907336Z",
                            "start": "2024-04-21T00:39:18.393877Z"
                        },
                        "id": "ce4df5fb-964c-d7cb-6b39-000000000437",
                        "name": "Print image infos"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "include_tasks",
                            "changed": false,
                            "false_condition": "ansible_os_family == \"Windows\"",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-d7cb-6b39-0000000003c2",
                        "name": "emit-image-infos",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_1/cc-github.bmwgroup.net/codecraft/cilib/roles/emit-image-infos"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:39:18.950459Z",
                            "start": "2024-04-21T00:39:18.921330Z"
                        },
                        "id": "ce4df5fb-964c-d7cb-6b39-0000000003c5",
                        "name": ""
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "include_role",
                            "changed": false,
                            "include_args": {
                                "name": "validate-host"
                            }
                        }
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:39:19.127394Z",
                            "start": "2024-04-21T00:39:18.979160Z"
                        },
                        "id": "ce4df5fb-964c-d7cb-6b39-000000000016",
                        "name": ""
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "set_fact",
                            "ansible_facts": {
                                "zuul_info_dir": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/work/logs/zuul-info"
                            },
                            "changed": false
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-d7cb-6b39-0000000004c7",
                        "name": "validate-host",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_2/cc-github.bmwgroup.net/codecraft-oss/zuul-jobs/roles/validate-host"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:39:19.266904Z",
                            "start": "2024-04-21T00:39:19.188598Z"
                        },
                        "id": "ce4df5fb-964c-d7cb-6b39-0000000004c9",
                        "name": "Define zuul_info_dir fact"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "file",
                            "changed": true,
                            "diff": {
                                "after": {
                                    "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/work/logs/zuul-info",
                                    "state": "directory"
                                },
                                "before": {
                                    "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/work/logs/zuul-info",
                                    "state": "absent"
                                }
                            },
                            "gid": 1000,
                            "group": "zuul",
                            "invocation": {
                                "module_args": {
                                    "_diff_peek": null,
                                    "_original_basename": null,
                                    "access_time": null,
                                    "access_time_format": "%Y%m%d%H%M.%S",
                                    "attributes": null,
                                    "follow": true,
                                    "force": false,
                                    "group": null,
                                    "mode": 493,
                                    "modification_time": null,
                                    "modification_time_format": "%Y%m%d%H%M.%S",
                                    "owner": null,
                                    "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/work/logs/zuul-info",
                                    "recurse": false,
                                    "selevel": null,
                                    "serole": null,
                                    "setype": null,
                                    "seuser": null,
                                    "src": null,
                                    "state": "directory",
                                    "unsafe_writes": false
                                }
                            },
                            "mode": "0755",
                            "owner": "zuul",
                            "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/work/logs/zuul-info",
                            "size": 4096,
                            "state": "directory",
                            "uid": 1000
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-d7cb-6b39-0000000004c7",
                        "name": "validate-host",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_2/cc-github.bmwgroup.net/codecraft-oss/zuul-jobs/roles/validate-host"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:39:19.643231Z",
                            "start": "2024-04-21T00:39:19.280748Z"
                        },
                        "id": "ce4df5fb-964c-d7cb-6b39-0000000004ca",
                        "name": "Ensure Zuul Ansible directory exists"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "setup",
                            "ansible_facts": {
                                "ansible_all_ipv4_addresses": [
                                    "10.31.118.224",
                                    "172.17.0.1"
                                ],
                                "ansible_all_ipv6_addresses": [
                                    "2a03:1e80:a15:572::1:10f3",
                                    "fe80::f816:3eff:fe50:2f8"
                                ],
                                "ansible_apparmor": {
                                    "status": "enabled"
                                },
                                "ansible_architecture": "x86_64",
                                "ansible_bios_date": "04/01/2014",
                                "ansible_bios_vendor": "SeaBIOS",
                                "ansible_bios_version": "1.14.0-1.module+el8.4.0+8855+a9e237a9",
                                "ansible_board_asset_tag": "NA",
                                "ansible_board_name": "NA",
                                "ansible_board_serial": "NA",
                                "ansible_board_vendor": "NA",
                                "ansible_board_version": "NA",
                                "ansible_chassis_asset_tag": "NA",
                                "ansible_chassis_serial": "NA",
                                "ansible_chassis_vendor": "Red Hat",
                                "ansible_chassis_version": "RHEL 7.6.0 PC (i440FX + PIIX, 1996)",
                                "ansible_cmdline": {
                                    "BOOT_IMAGE": "/boot/vmlinuz-5.15.0-105-generic",
                                    "console": "ttyS0",
                                    "ro": true,
                                    "root": "LABEL=cloudimg-rootfs"
                                },
                                "ansible_date_time": {
                                    "date": "2024-04-21",
                                    "day": "21",
                                    "epoch": "1713659960",
                                    "epoch_int": "1713659960",
                                    "hour": "00",
                                    "iso8601": "2024-04-21T00:39:20Z",
                                    "iso8601_basic": "20240421T003920585957",
                                    "iso8601_basic_short": "20240421T003920",
                                    "iso8601_micro": "2024-04-21T00:39:20.585957Z",
                                    "minute": "39",
                                    "month": "04",
                                    "second": "20",
                                    "time": "00:39:20",
                                    "tz": "UTC",
                                    "tz_dst": "UTC",
                                    "tz_offset": "+0000",
                                    "weekday": "Sunday",
                                    "weekday_number": "0",
                                    "weeknumber": "16",
                                    "year": "2024"
                                },
                                "ansible_default_ipv4": {
                                    "address": "10.31.118.224",
                                    "alias": "ens3",
                                    "broadcast": "10.31.119.255",
                                    "gateway": "10.31.112.1",
                                    "interface": "ens3",
                                    "macaddress": "fa:16:3e:50:02:f8",
                                    "mtu": 9000,
                                    "netmask": "255.255.248.0",
                                    "network": "10.31.112.0",
                                    "prefix": "21",
                                    "type": "ether"
                                },
                                "ansible_default_ipv6": {
                                    "address": "2a03:1e80:a15:572::1:10f3",
                                    "gateway": "2a03:1e80:a15:572::1",
                                    "interface": "ens3",
                                    "macaddress": "fa:16:3e:50:02:f8",
                                    "mtu": 9000,
                                    "prefix": "64",
                                    "scope": "global",
                                    "type": "ether"
                                },
                                "ansible_device_links": {
                                    "ids": {
                                        "sr0": [
                                            "ata-QEMU_DVD-ROM_QM00001",
                                            "scsi-0QEMU_QEMU_DVD-ROM_QM00001",
                                            "scsi-1ATA_QEMU_DVD-ROM_QM00001"
                                        ]
                                    },
                                    "labels": {
                                        "sr0": [
                                            "config-2"
                                        ],
                                        "vda1": [
                                            "cloudimg-rootfs"
                                        ]
                                    },
                                    "masters": {},
                                    "uuids": {
                                        "sr0": [
                                            "2024-04-21-00-34-05-00"
                                        ],
                                        "vda1": [
                                            "91471e46-adfe-4b4d-b86e-790444446bff"
                                        ]
                                    }
                                },
                                "ansible_devices": {
                                    "loop0": {
                                        "holders": [],
                                        "host": "",
                                        "links": {
                                            "ids": [],
                                            "labels": [],
                                            "masters": [],
                                            "uuids": []
                                        },
                                        "model": null,
                                        "partitions": {},
                                        "removable": "0",
                                        "rotational": "1",
                                        "sas_address": null,
                                        "sas_device_handle": null,
                                        "scheduler_mode": "none",
                                        "sectors": "126824",
                                        "sectorsize": "512",
                                        "size": "61.93 MB",
                                        "support_discard": "4096",
                                        "vendor": null,
                                        "virtual": 1
                                    },
                                    "loop1": {
                                        "holders": [],
                                        "host": "",
                                        "links": {
                                            "ids": [],
                                            "labels": [],
                                            "masters": [],
                                            "uuids": []
                                        },
                                        "model": null,
                                        "partitions": {},
                                        "removable": "0",
                                        "rotational": "1",
                                        "sas_address": null,
                                        "sas_device_handle": null,
                                        "scheduler_mode": "none",
                                        "sectors": "163736",
                                        "sectorsize": "512",
                                        "size": "79.95 MB",
                                        "support_discard": "4096",
                                        "vendor": null,
                                        "virtual": 1
                                    },
                                    "loop2": {
                                        "holders": [],
                                        "host": "",
                                        "links": {
                                            "ids": [],
                                            "labels": [],
                                            "masters": [],
                                            "uuids": []
                                        },
                                        "model": null,
                                        "partitions": {},
                                        "removable": "0",
                                        "rotational": "1",
                                        "sas_address": null,
                                        "sas_device_handle": null,
                                        "scheduler_mode": "none",
                                        "sectors": "96176",
                                        "sectorsize": "512",
                                        "size": "46.96 MB",
                                        "support_discard": "4096",
                                        "vendor": null,
                                        "virtual": 1
                                    },
                                    "loop3": {
                                        "holders": [],
                                        "host": "",
                                        "links": {
                                            "ids": [],
                                            "labels": [],
                                            "masters": [],
                                            "uuids": []
                                        },
                                        "model": null,
                                        "partitions": {},
                                        "removable": "0",
                                        "rotational": "1",
                                        "sas_address": null,
                                        "sas_device_handle": null,
                                        "scheduler_mode": "none",
                                        "sectors": "0",
                                        "sectorsize": "512",
                                        "size": "0.00 Bytes",
                                        "support_discard": "4096",
                                        "vendor": null,
                                        "virtual": 1
                                    },
                                    "loop4": {
                                        "holders": [],
                                        "host": "",
                                        "links": {
                                            "ids": [],
                                            "labels": [],
                                            "masters": [],
                                            "uuids": []
                                        },
                                        "model": null,
                                        "partitions": {},
                                        "removable": "0",
                                        "rotational": "1",
                                        "sas_address": null,
                                        "sas_device_handle": null,
                                        "scheduler_mode": "none",
                                        "sectors": "0",
                                        "sectorsize": "512",
                                        "size": "0.00 Bytes",
                                        "support_discard": "0",
                                        "vendor": null,
                                        "virtual": 1
                                    },
                                    "loop5": {
                                        "holders": [],
                                        "host": "",
                                        "links": {
                                            "ids": [],
                                            "labels": [],
                                            "masters": [],
                                            "uuids": []
                                        },
                                        "model": null,
                                        "partitions": {},
                                        "removable": "0",
                                        "rotational": "1",
                                        "sas_address": null,
                                        "sas_device_handle": null,
                                        "scheduler_mode": "none",
                                        "sectors": "0",
                                        "sectorsize": "512",
                                        "size": "0.00 Bytes",
                                        "support_discard": "0",
                                        "vendor": null,
                                        "virtual": 1
                                    },
                                    "loop6": {
                                        "holders": [],
                                        "host": "",
                                        "links": {
                                            "ids": [],
                                            "labels": [],
                                            "masters": [],
                                            "uuids": []
                                        },
                                        "model": null,
                                        "partitions": {},
                                        "removable": "0",
                                        "rotational": "1",
                                        "sas_address": null,
                                        "sas_device_handle": null,
                                        "scheduler_mode": "none",
                                        "sectors": "0",
                                        "sectorsize": "512",
                                        "size": "0.00 Bytes",
                                        "support_discard": "0",
                                        "vendor": null,
                                        "virtual": 1
                                    },
                                    "loop7": {
                                        "holders": [],
                                        "host": "",
                                        "links": {
                                            "ids": [],
                                            "labels": [],
                                            "masters": [],
                                            "uuids": []
                                        },
                                        "model": null,
                                        "partitions": {},
                                        "removable": "0",
                                        "rotational": "1",
                                        "sas_address": null,
                                        "sas_device_handle": null,
                                        "scheduler_mode": "none",
                                        "sectors": "0",
                                        "sectorsize": "512",
                                        "size": "0.00 Bytes",
                                        "support_discard": "0",
                                        "vendor": null,
                                        "virtual": 1
                                    },
                                    "sr0": {
                                        "holders": [],
                                        "host": "IDE interface: Intel Corporation 82371SB PIIX3 IDE [Natoma/Triton II]",
                                        "links": {
                                            "ids": [
                                                "ata-QEMU_DVD-ROM_QM00001",
                                                "scsi-0QEMU_QEMU_DVD-ROM_QM00001",
                                                "scsi-1ATA_QEMU_DVD-ROM_QM00001"
                                            ],
                                            "labels": [
                                                "config-2"
                                            ],
                                            "masters": [],
                                            "uuids": [
                                                "2024-04-21-00-34-05-00"
                                            ]
                                        },
                                        "model": "QEMU DVD-ROM",
                                        "partitions": {},
                                        "removable": "1",
                                        "rotational": "1",
                                        "sas_address": null,
                                        "sas_device_handle": null,
                                        "scheduler_mode": "mq-deadline",
                                        "sectors": "940",
                                        "sectorsize": "2048",
                                        "size": "470.00 KB",
                                        "support_discard": "0",
                                        "vendor": "QEMU",
                                        "virtual": 1
                                    },
                                    "vda": {
                                        "holders": [],
                                        "host": "SCSI storage controller: Red Hat, Inc. Virtio block device",
                                        "links": {
                                            "ids": [],
                                            "labels": [],
                                            "masters": [],
                                            "uuids": []
                                        },
                                        "model": null,
                                        "partitions": {
                                            "vda1": {
                                                "holders": [],
                                                "links": {
                                                    "ids": [],
                                                    "labels": [
                                                        "cloudimg-rootfs"
                                                    ],
                                                    "masters": [],
                                                    "uuids": [
                                                        "91471e46-adfe-4b4d-b86e-790444446bff"
                                                    ]
                                                },
                                                "sectors": "671086559",
                                                "sectorsize": 512,
                                                "size": "320.00 GB",
                                                "start": "2048",
                                                "uuid": "91471e46-adfe-4b4d-b86e-790444446bff"
                                            }
                                        },
                                        "removable": "0",
                                        "rotational": "1",
                                        "sas_address": null,
                                        "sas_device_handle": null,
                                        "scheduler_mode": "mq-deadline",
                                        "sectors": "671088640",
                                        "sectorsize": "512",
                                        "size": "320.00 GB",
                                        "support_discard": "0",
                                        "vendor": "0x1af4",
                                        "virtual": 1
                                    }
                                },
                                "ansible_distribution": "Ubuntu",
                                "ansible_distribution_file_parsed": true,
                                "ansible_distribution_file_path": "/etc/os-release",
                                "ansible_distribution_file_variety": "Debian",
                                "ansible_distribution_major_version": "22",
                                "ansible_distribution_release": "jammy",
                                "ansible_distribution_version": "22.04",
                                "ansible_dns": {
                                    "nameservers": [
                                        "127.0.0.53"
                                    ],
                                    "options": {
                                        "edns0": true,
                                        "trust-ad": true
                                    },
                                    "search": [
                                        "."
                                    ]
                                },
                                "ansible_docker0": {
                                    "active": false,
                                    "device": "docker0",
                                    "features": {
                                        "esp_hw_offload": "off [fixed]",
                                        "esp_tx_csum_hw_offload": "off [fixed]",
                                        "fcoe_mtu": "off [fixed]",
                                        "generic_receive_offload": "on",
                                        "generic_segmentation_offload": "on",
                                        "highdma": "on",
                                        "hsr_dup_offload": "off [fixed]",
                                        "hsr_fwd_offload": "off [fixed]",
                                        "hsr_tag_ins_offload": "off [fixed]",
                                        "hsr_tag_rm_offload": "off [fixed]",
                                        "hw_tc_offload": "off [fixed]",
                                        "l2_fwd_offload": "off [fixed]",
                                        "large_receive_offload": "off [fixed]",
                                        "loopback": "off [fixed]",
                                        "macsec_hw_offload": "off [fixed]",
                                        "netns_local": "on [fixed]",
                                        "ntuple_filters": "off [fixed]",
                                        "receive_hashing": "off [fixed]",
                                        "rx_all": "off [fixed]",
                                        "rx_checksumming": "off [fixed]",
                                        "rx_fcs": "off [fixed]",
                                        "rx_gro_hw": "off [fixed]",
                                        "rx_gro_list": "off",
                                        "rx_udp_gro_forwarding": "off",
                                        "rx_udp_tunnel_port_offload": "off [fixed]",
                                        "rx_vlan_filter": "off [fixed]",
                                        "rx_vlan_offload": "off [fixed]",
                                        "rx_vlan_stag_filter": "off [fixed]",
                                        "rx_vlan_stag_hw_parse": "off [fixed]",
                                        "scatter_gather": "on",
                                        "tcp_segmentation_offload": "on",
                                        "tls_hw_record": "off [fixed]",
                                        "tls_hw_rx_offload": "off [fixed]",
                                        "tls_hw_tx_offload": "off [fixed]",
                                        "tx_checksum_fcoe_crc": "off [fixed]",
                                        "tx_checksum_ip_generic": "on",
                                        "tx_checksum_ipv4": "off [fixed]",
                                        "tx_checksum_ipv6": "off [fixed]",
                                        "tx_checksum_sctp": "off [fixed]",
                                        "tx_checksumming": "on",
                                        "tx_esp_segmentation": "on",
                                        "tx_fcoe_segmentation": "on",
                                        "tx_gre_csum_segmentation": "on",
                                        "tx_gre_segmentation": "on",
                                        "tx_gso_list": "on",
                                        "tx_gso_partial": "on",
                                        "tx_gso_robust": "on",
                                        "tx_ipxip4_segmentation": "on",
                                        "tx_ipxip6_segmentation": "on",
                                        "tx_lockless": "on [fixed]",
                                        "tx_nocache_copy": "off",
                                        "tx_scatter_gather": "on",
                                        "tx_scatter_gather_fraglist": "on",
                                        "tx_sctp_segmentation": "on",
                                        "tx_tcp6_segmentation": "on",
                                        "tx_tcp_ecn_segmentation": "on",
                                        "tx_tcp_mangleid_segmentation": "on",
                                        "tx_tcp_segmentation": "on",
                                        "tx_tunnel_remcsum_segmentation": "on",
                                        "tx_udp_segmentation": "on",
                                        "tx_udp_tnl_csum_segmentation": "on",
                                        "tx_udp_tnl_segmentation": "on",
                                        "tx_vlan_offload": "on",
                                        "tx_vlan_stag_hw_insert": "on",
                                        "vlan_challenged": "off [fixed]"
                                    },
                                    "hw_timestamp_filters": [],
                                    "id": "8000.0242e9ff13e5",
                                    "interfaces": [],
                                    "ipv4": {
                                        "address": "172.17.0.1",
                                        "broadcast": "172.17.255.255",
                                        "netmask": "255.255.0.0",
                                        "network": "172.17.0.0",
                                        "prefix": "16"
                                    },
                                    "macaddress": "02:42:e9:ff:13:e5",
                                    "mtu": 1444,
                                    "promisc": false,
                                    "speed": -1,
                                    "stp": false,
                                    "timestamping": [],
                                    "type": "bridge"
                                },
                                "ansible_domain": "",
                                "ansible_effective_group_id": 1000,
                                "ansible_effective_user_id": 1000,
                                "ansible_ens3": {
                                    "active": true,
                                    "device": "ens3",
                                    "features": {
                                        "esp_hw_offload": "off [fixed]",
                                        "esp_tx_csum_hw_offload": "off [fixed]",
                                        "fcoe_mtu": "off [fixed]",
                                        "generic_receive_offload": "on",
                                        "generic_segmentation_offload": "on",
                                        "highdma": "on [fixed]",
                                        "hsr_dup_offload": "off [fixed]",
                                        "hsr_fwd_offload": "off [fixed]",
                                        "hsr_tag_ins_offload": "off [fixed]",
                                        "hsr_tag_rm_offload": "off [fixed]",
                                        "hw_tc_offload": "off [fixed]",
                                        "l2_fwd_offload": "off [fixed]",
                                        "large_receive_offload": "off [fixed]",
                                        "loopback": "off [fixed]",
                                        "macsec_hw_offload": "off [fixed]",
                                        "netns_local": "off [fixed]",
                                        "ntuple_filters": "off [fixed]",
                                        "receive_hashing": "off [fixed]",
                                        "rx_all": "off [fixed]",
                                        "rx_checksumming": "on [fixed]",
                                        "rx_fcs": "off [fixed]",
                                        "rx_gro_hw": "on",
                                        "rx_gro_list": "off",
                                        "rx_udp_gro_forwarding": "off",
                                        "rx_udp_tunnel_port_offload": "off [fixed]",
                                        "rx_vlan_filter": "on [fixed]",
                                        "rx_vlan_offload": "off [fixed]",
                                        "rx_vlan_stag_filter": "off [fixed]",
                                        "rx_vlan_stag_hw_parse": "off [fixed]",
                                        "scatter_gather": "on",
                                        "tcp_segmentation_offload": "on",
                                        "tls_hw_record": "off [fixed]",
                                        "tls_hw_rx_offload": "off [fixed]",
                                        "tls_hw_tx_offload": "off [fixed]",
                                        "tx_checksum_fcoe_crc": "off [fixed]",
                                        "tx_checksum_ip_generic": "on",
                                        "tx_checksum_ipv4": "off [fixed]",
                                        "tx_checksum_ipv6": "off [fixed]",
                                        "tx_checksum_sctp": "off [fixed]",
                                        "tx_checksumming": "on",
                                        "tx_esp_segmentation": "off [fixed]",
                                        "tx_fcoe_segmentation": "off [fixed]",
                                        "tx_gre_csum_segmentation": "off [fixed]",
                                        "tx_gre_segmentation": "off [fixed]",
                                        "tx_gso_list": "off [fixed]",
                                        "tx_gso_partial": "off [fixed]",
                                        "tx_gso_robust": "on [fixed]",
                                        "tx_ipxip4_segmentation": "off [fixed]",
                                        "tx_ipxip6_segmentation": "off [fixed]",
                                        "tx_lockless": "off [fixed]",
                                        "tx_nocache_copy": "off",
                                        "tx_scatter_gather": "on",
                                        "tx_scatter_gather_fraglist": "off [fixed]",
                                        "tx_sctp_segmentation": "off [fixed]",
                                        "tx_tcp6_segmentation": "on",
                                        "tx_tcp_ecn_segmentation": "on",
                                        "tx_tcp_mangleid_segmentation": "off",
                                        "tx_tcp_segmentation": "on",
                                        "tx_tunnel_remcsum_segmentation": "off [fixed]",
                                        "tx_udp_segmentation": "off [fixed]",
                                        "tx_udp_tnl_csum_segmentation": "off [fixed]",
                                        "tx_udp_tnl_segmentation": "off [fixed]",
                                        "tx_vlan_offload": "off [fixed]",
                                        "tx_vlan_stag_hw_insert": "off [fixed]",
                                        "vlan_challenged": "off [fixed]"
                                    },
                                    "hw_timestamp_filters": [],
                                    "ipv4": {
                                        "address": "10.31.118.224",
                                        "broadcast": "10.31.119.255",
                                        "netmask": "255.255.248.0",
                                        "network": "10.31.112.0",
                                        "prefix": "21"
                                    },
                                    "ipv6": [
                                        {
                                            "address": "2a03:1e80:a15:572::1:10f3",
                                            "prefix": "64",
                                            "scope": "global"
                                        },
                                        {
                                            "address": "fe80::f816:3eff:fe50:2f8",
                                            "prefix": "64",
                                            "scope": "link"
                                        }
                                    ],
                                    "macaddress": "fa:16:3e:50:02:f8",
                                    "module": "virtio_net",
                                    "mtu": 9000,
                                    "pciid": "virtio0",
                                    "promisc": false,
                                    "speed": -1,
                                    "timestamping": [],
                                    "type": "ether"
                                },
                                "ansible_env": {
                                    "DBUS_SESSION_BUS_ADDRESS": "unix:path=/run/user/1000/bus",
                                    "HOME": "/home/zuul",
                                    "LANG": "C.UTF-8",
                                    "LOGNAME": "zuul",
                                    "MOTD_SHOWN": "pam",
                                    "PATH": "/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin",
                                    "PWD": "/home/zuul",
                                    "SHELL": "/bin/bash",
                                    "SHLVL": "0",
                                    "SSH_CLIENT": "160.46.113.10 10352 22",
                                    "SSH_CONNECTION": "160.46.113.10 10352 10.31.118.224 22",
                                    "USER": "zuul",
                                    "XDG_RUNTIME_DIR": "/run/user/1000",
                                    "XDG_SESSION_CLASS": "user",
                                    "XDG_SESSION_ID": "2",
                                    "XDG_SESSION_TYPE": "tty",
                                    "_": "/bin/sh"
                                },
                                "ansible_fibre_channel_wwn": [],
                                "ansible_fips": false,
                                "ansible_form_factor": "Other",
                                "ansible_fqdn": "np0065527721",
                                "ansible_hostname": "np0065527721",
                                "ansible_hostnqn": "",
                                "ansible_interfaces": [
                                    "ens3",
                                    "docker0",
                                    "lo"
                                ],
                                "ansible_is_chroot": false,
                                "ansible_iscsi_iqn": "",
                                "ansible_kernel": "5.15.0-105-generic",
                                "ansible_kernel_version": "#115-Ubuntu SMP Mon Apr 15 09:52:04 UTC 2024",
                                "ansible_lo": {
                                    "active": true,
                                    "device": "lo",
                                    "features": {
                                        "esp_hw_offload": "off [fixed]",
                                        "esp_tx_csum_hw_offload": "off [fixed]",
                                        "fcoe_mtu": "off [fixed]",
                                        "generic_receive_offload": "on",
                                        "generic_segmentation_offload": "on",
                                        "highdma": "on [fixed]",
                                        "hsr_dup_offload": "off [fixed]",
                                        "hsr_fwd_offload": "off [fixed]",
                                        "hsr_tag_ins_offload": "off [fixed]",
                                        "hsr_tag_rm_offload": "off [fixed]",
                                        "hw_tc_offload": "off [fixed]",
                                        "l2_fwd_offload": "off [fixed]",
                                        "large_receive_offload": "off [fixed]",
                                        "loopback": "on [fixed]",
                                        "macsec_hw_offload": "off [fixed]",
                                        "netns_local": "on [fixed]",
                                        "ntuple_filters": "off [fixed]",
                                        "receive_hashing": "off [fixed]",
                                        "rx_all": "off [fixed]",
                                        "rx_checksumming": "on [fixed]",
                                        "rx_fcs": "off [fixed]",
                                        "rx_gro_hw": "off [fixed]",
                                        "rx_gro_list": "off",
                                        "rx_udp_gro_forwarding": "off",
                                        "rx_udp_tunnel_port_offload": "off [fixed]",
                                        "rx_vlan_filter": "off [fixed]",
                                        "rx_vlan_offload": "off [fixed]",
                                        "rx_vlan_stag_filter": "off [fixed]",
                                        "rx_vlan_stag_hw_parse": "off [fixed]",
                                        "scatter_gather": "on",
                                        "tcp_segmentation_offload": "on",
                                        "tls_hw_record": "off [fixed]",
                                        "tls_hw_rx_offload": "off [fixed]",
                                        "tls_hw_tx_offload": "off [fixed]",
                                        "tx_checksum_fcoe_crc": "off [fixed]",
                                        "tx_checksum_ip_generic": "on [fixed]",
                                        "tx_checksum_ipv4": "off [fixed]",
                                        "tx_checksum_ipv6": "off [fixed]",
                                        "tx_checksum_sctp": "on [fixed]",
                                        "tx_checksumming": "on",
                                        "tx_esp_segmentation": "off [fixed]",
                                        "tx_fcoe_segmentation": "off [fixed]",
                                        "tx_gre_csum_segmentation": "off [fixed]",
                                        "tx_gre_segmentation": "off [fixed]",
                                        "tx_gso_list": "on",
                                        "tx_gso_partial": "off [fixed]",
                                        "tx_gso_robust": "off [fixed]",
                                        "tx_ipxip4_segmentation": "off [fixed]",
                                        "tx_ipxip6_segmentation": "off [fixed]",
                                        "tx_lockless": "on [fixed]",
                                        "tx_nocache_copy": "off [fixed]",
                                        "tx_scatter_gather": "on [fixed]",
                                        "tx_scatter_gather_fraglist": "on [fixed]",
                                        "tx_sctp_segmentation": "on",
                                        "tx_tcp6_segmentation": "on",
                                        "tx_tcp_ecn_segmentation": "on",
                                        "tx_tcp_mangleid_segmentation": "on",
                                        "tx_tcp_segmentation": "on",
                                        "tx_tunnel_remcsum_segmentation": "off [fixed]",
                                        "tx_udp_segmentation": "on",
                                        "tx_udp_tnl_csum_segmentation": "off [fixed]",
                                        "tx_udp_tnl_segmentation": "off [fixed]",
                                        "tx_vlan_offload": "off [fixed]",
                                        "tx_vlan_stag_hw_insert": "off [fixed]",
                                        "vlan_challenged": "on [fixed]"
                                    },
                                    "hw_timestamp_filters": [],
                                    "ipv4": {
                                        "address": "127.0.0.1",
                                        "broadcast": "",
                                        "netmask": "255.0.0.0",
                                        "network": "127.0.0.0",
                                        "prefix": "8"
                                    },
                                    "ipv6": [
                                        {
                                            "address": "::1",
                                            "prefix": "128",
                                            "scope": "host"
                                        }
                                    ],
                                    "mtu": 65536,
                                    "promisc": false,
                                    "timestamping": [],
                                    "type": "loopback"
                                },
                                "ansible_loadavg": {
                                    "15m": 0.05517578125,
                                    "1m": 0.23583984375,
                                    "5m": 0.1279296875
                                },
                                "ansible_local": {},
                                "ansible_locally_reachable_ips": {
                                    "ipv4": [
                                        "10.31.118.224",
                                        "127.0.0.0/8",
                                        "127.0.0.1",
                                        "172.17.0.1"
                                    ],
                                    "ipv6": [
                                        "::1",
                                        "2a03:1e80:a15:572::1:10f3",
                                        "fe80::f816:3eff:fe50:2f8"
                                    ]
                                },
                                "ansible_lsb": {
                                    "codename": "jammy",
                                    "description": "Ubuntu 22.04.4 LTS",
                                    "id": "Ubuntu",
                                    "major_release": "22",
                                    "release": "22.04"
                                },
                                "ansible_lvm": "N/A",
                                "ansible_machine": "x86_64",
                                "ansible_machine_id": "78706f9a311948caae1eddccc8c46dd8",
                                "ansible_memfree_mb": 63463,
                                "ansible_memory_mb": {
                                    "nocache": {
                                        "free": 63872,
                                        "used": 426
                                    },
                                    "real": {
                                        "free": 63463,
                                        "total": 64298,
                                        "used": 835
                                    },
                                    "swap": {
                                        "cached": 0,
                                        "free": 0,
                                        "total": 0,
                                        "used": 0
                                    }
                                },
                                "ansible_memtotal_mb": 64298,
                                "ansible_mounts": [
                                    {
                                        "block_available": 63305851,
                                        "block_size": 4096,
                                        "block_total": 78608977,
                                        "block_used": 15303126,
                                        "device": "/dev/vda1",
                                        "fstype": "ext4",
                                        "inode_available": 83226737,
                                        "inode_total": 83804160,
                                        "inode_used": 577423,
                                        "mount": "/",
                                        "options": "rw,noatime,nobarrier,commit=3600",
                                        "size_available": 259300765696,
                                        "size_total": 321982369792,
                                        "uuid": "91471e46-adfe-4b4d-b86e-790444446bff"
                                    },
                                    {
                                        "block_available": 0,
                                        "block_size": 131072,
                                        "block_total": 496,
                                        "block_used": 496,
                                        "device": "/dev/loop0",
                                        "fstype": "squashfs",
                                        "inode_available": 0,
                                        "inode_total": 11789,
                                        "inode_used": 11789,
                                        "mount": "/snap/core20/1518",
                                        "options": "ro,nodev,relatime,errors=continue",
                                        "size_available": 0,
                                        "size_total": 65011712,
                                        "uuid": "N/A"
                                    },
                                    {
                                        "block_available": 0,
                                        "block_size": 131072,
                                        "block_total": 640,
                                        "block_used": 640,
                                        "device": "/dev/loop1",
                                        "fstype": "squashfs",
                                        "inode_available": 0,
                                        "inode_total": 816,
                                        "inode_used": 816,
                                        "mount": "/snap/lxd/22923",
                                        "options": "ro,nodev,relatime,errors=continue",
                                        "size_available": 0,
                                        "size_total": 83886080,
                                        "uuid": "N/A"
                                    },
                                    {
                                        "block_available": 0,
                                        "block_size": 131072,
                                        "block_total": 376,
                                        "block_used": 376,
                                        "device": "/dev/loop2",
                                        "fstype": "squashfs",
                                        "inode_available": 0,
                                        "inode_total": 486,
                                        "inode_used": 486,
                                        "mount": "/snap/snapd/16292",
                                        "options": "ro,nodev,relatime,errors=continue",
                                        "size_available": 0,
                                        "size_total": 49283072,
                                        "uuid": "N/A"
                                    }
                                ],
                                "ansible_nodename": "np0065527721",
                                "ansible_os_family": "Debian",
                                "ansible_pkg_mgr": "apt",
                                "ansible_proc_cmdline": {
                                    "BOOT_IMAGE": "/boot/vmlinuz-5.15.0-105-generic",
                                    "console": [
                                        "tty1",
                                        "ttyS0"
                                    ],
                                    "ro": true,
                                    "root": "LABEL=cloudimg-rootfs"
                                },
                                "ansible_processor": [
                                    "0",
                                    "GenuineIntel",
                                    "Intel Xeon Processor (Cascadelake)",
                                    "1",
                                    "GenuineIntel",
                                    "Intel Xeon Processor (Cascadelake)",
                                    "2",
                                    "GenuineIntel",
                                    "Intel Xeon Processor (Cascadelake)",
                                    "3",
                                    "GenuineIntel",
                                    "Intel Xeon Processor (Cascadelake)",
                                    "4",
                                    "GenuineIntel",
                                    "Intel Xeon Processor (Cascadelake)",
                                    "5",
                                    "GenuineIntel",
                                    "Intel Xeon Processor (Cascadelake)",
                                    "6",
                                    "GenuineIntel",
                                    "Intel Xeon Processor (Cascadelake)",
                                    "7",
                                    "GenuineIntel",
                                    "Intel Xeon Processor (Cascadelake)",
                                    "8",
                                    "GenuineIntel",
                                    "Intel Xeon Processor (Cascadelake)",
                                    "9",
                                    "GenuineIntel",
                                    "Intel Xeon Processor (Cascadelake)",
                                    "10",
                                    "GenuineIntel",
                                    "Intel Xeon Processor (Cascadelake)",
                                    "11",
                                    "GenuineIntel",
                                    "Intel Xeon Processor (Cascadelake)",
                                    "12",
                                    "GenuineIntel",
                                    "Intel Xeon Processor (Cascadelake)",
                                    "13",
                                    "GenuineIntel",
                                    "Intel Xeon Processor (Cascadelake)",
                                    "14",
                                    "GenuineIntel",
                                    "Intel Xeon Processor (Cascadelake)",
                                    "15",
                                    "GenuineIntel",
                                    "Intel Xeon Processor (Cascadelake)"
                                ],
                                "ansible_processor_cores": 1,
                                "ansible_processor_count": 16,
                                "ansible_processor_nproc": 16,
                                "ansible_processor_threads_per_core": 1,
                                "ansible_processor_vcpus": 16,
                                "ansible_product_name": "OpenStack Compute",
                                "ansible_product_serial": "NA",
                                "ansible_product_uuid": "NA",
                                "ansible_product_version": "20.6.2-2.20221005185229.6786e96.el8ost",
                                "ansible_python": {
                                    "executable": "/usr/bin/python3",
                                    "has_sslcontext": true,
                                    "type": "cpython",
                                    "version": {
                                        "major": 3,
                                        "micro": 12,
                                        "minor": 10,
                                        "releaselevel": "final",
                                        "serial": 0
                                    },
                                    "version_info": [
                                        3,
                                        10,
                                        12,
                                        "final",
                                        0
                                    ]
                                },
                                "ansible_python_version": "3.10.12",
                                "ansible_real_group_id": 1000,
                                "ansible_real_user_id": 1000,
                                "ansible_selinux": {
                                    "status": "disabled"
                                },
                                "ansible_selinux_python_present": true,
                                "ansible_service_mgr": "systemd",
                                "ansible_ssh_host_key_dsa_public": "AAAAB3NzaC1kc3MAAACBAOoxNtEiGtkXJOJzRACFqbHUN8+F+T2R7XhW1DpLlUo/tFwDD2VC3nrwrfbWdhyd10AVso7XikoNW+4eaR1sy+wfVUK8ud+WpURzMjwDDBjV2TWB4RUnK7ir6wCqP2pfuFqIU6MGUkfNqDaKJP1lwPE+AsUq1QsUknkPVNnq9cd7AAAAFQD4RxnNORg2bGK1ko96XyQD0QUkEQAAAIAFungku9DtntaOx+a5OqY095Pb8Q8JIRQo59d8OPx7jnVVwD22mkWwD9PFJK3fshPIm1dUvhnanYkyZ7rJ0Tvdo4950KfATDfbX/v3GdoSq1fSJ/yFSWw09NtBKLdREYbjIhfbTNIfONdChkVqhJe/e9UaYaoApyNvH+tID6+kqwAAAIA9ZZ2b4qpl0cpOkl41Vpvc2oXFlQsVKtDpYIrMZY4WA5Hq9Oe1+dK3jf7O6yrjHOpLyAieC7kC866DRAsdBxko19kvXATshRjyx/VYE5MvpVWJN6qDTWcEoJ4W+Muu0RbGekc6XC+3cTu/+OUahk0yHkhuTGx5Gl1IPR/+loi7fw==",
                                "ansible_ssh_host_key_dsa_public_keytype": "ssh-dss",
                                "ansible_ssh_host_key_ecdsa_public": "AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBHz44s6jad+KMiEgo0D+zKN1I7v2foD5zT6WoXA9h/2FgS8yLkkfVshjYiiO+N1EIKlmC4AUSrqmYH6wRpLaxew=",
                                "ansible_ssh_host_key_ecdsa_public_keytype": "ecdsa-sha2-nistp256",
                                "ansible_ssh_host_key_ed25519_public": "AAAAC3NzaC1lZDI1NTE5AAAAIBQLAVj3BnOrRc24ITIPtZtx1qc5SktcSMSPxMd0/EBB",
                                "ansible_ssh_host_key_ed25519_public_keytype": "ssh-ed25519",
                                "ansible_ssh_host_key_rsa_public": "AAAAB3NzaC1yc2EAAAADAQABAAABgQC0HaNOsGDptE5nHkpLkC04gluofyH12eTFrMJz72Pi3iELv1VHjMVfiTt8+2LrPDVThjcREZQl/3J/8lqOVTiScDPh4lY1K6Z5hyu2RWTl+1Z+MtDhZp2/MEDT0S8SaPZD6+m8F3TE+f1a3W1U95vd9RwJG1PZo6+Ovckd/VKjdM0iVLiBTo3lbjq47pMfGW/wzIvv7E3IsOBv+PVAHX8z9nBIIXZ5qOVYzza+W2cm2yzRMyU5ZPtUqXwaYjbMw8BdQB+fhcWccwJL3qn14fURGrjCD0GqPqZtgWGTV3x2DrQEE/9t4eRnpz7JOHK5BLKDzMqGpUXhSsEJcAY4ay/5W2UuAsSebPjB6Dp23bcujShpNvP3x/FDSw5BlMA+cWq/zyAOAnkw0uZ+EkRQOyAle1KCTfnY4i/zTl+6F0VJAPU3X8BB2i+c3FuJILP/XkhmXb9GhOkDi4eZEzGSiqG21WtAPlcKfx+3/4h8Ycyt0ULvZSd6oMXPT6Y384jSTWE=",
                                "ansible_ssh_host_key_rsa_public_keytype": "ssh-rsa",
                                "ansible_swapfree_mb": 0,
                                "ansible_swaptotal_mb": 0,
                                "ansible_system": "Linux",
                                "ansible_system_capabilities": [
                                    ""
                                ],
                                "ansible_system_capabilities_enforced": "True",
                                "ansible_system_vendor": "Red Hat",
                                "ansible_uptime_seconds": 302,
                                "ansible_user_dir": "/home/zuul",
                                "ansible_user_gecos": "",
                                "ansible_user_gid": 1000,
                                "ansible_user_id": "zuul",
                                "ansible_user_shell": "/bin/bash",
                                "ansible_user_uid": 1000,
                                "ansible_userspace_architecture": "x86_64",
                                "ansible_userspace_bits": "64",
                                "ansible_virtualization_role": "guest",
                                "ansible_virtualization_tech_guest": [
                                    "openstack"
                                ],
                                "ansible_virtualization_tech_host": [
                                    "kvm"
                                ],
                                "ansible_virtualization_type": "openstack",
                                "gather_subset": [
                                    "all"
                                ],
                                "module_setup": true
                            },
                            "changed": false,
                            "invocation": {
                                "module_args": {
                                    "fact_path": "/etc/ansible/facts.d",
                                    "filter": [],
                                    "gather_subset": [
                                        "all"
                                    ],
                                    "gather_timeout": 10
                                }
                            }
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-d7cb-6b39-0000000004c7",
                        "name": "validate-host",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_2/cc-github.bmwgroup.net/codecraft-oss/zuul-jobs/roles/validate-host"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:39:20.872536Z",
                            "start": "2024-04-21T00:39:19.658417Z"
                        },
                        "id": "ce4df5fb-964c-d7cb-6b39-0000000004cb",
                        "name": "Collect information about the host"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "set_fact",
                            "ansible_facts": {
                                "validate_host_hostname_sanitized": "node"
                            },
                            "changed": false
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-d7cb-6b39-0000000004c7",
                        "name": "validate-host",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_2/cc-github.bmwgroup.net/codecraft-oss/zuul-jobs/roles/validate-host"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:39:20.975549Z",
                            "start": "2024-04-21T00:39:20.886702Z"
                        },
                        "id": "ce4df5fb-964c-d7cb-6b39-0000000004cc",
                        "name": "Sanitize hostname"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "template",
                            "changed": true,
                            "checksum": "5d7aefec9af86b8e583b82dcdf3f1dda8e293fa8",
                            "dest": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/work/logs/zuul-info/host-info.node.yaml",
                            "diff": [],
                            "gid": 1000,
                            "group": "zuul",
                            "invocation": {
                                "module_args": {
                                    "_original_basename": "host-info.j2",
                                    "attributes": null,
                                    "backup": false,
                                    "checksum": "5d7aefec9af86b8e583b82dcdf3f1dda8e293fa8",
                                    "content": null,
                                    "dest": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/work/logs/zuul-info/host-info.node.yaml",
                                    "directory_mode": null,
                                    "follow": false,
                                    "force": true,
                                    "group": null,
                                    "local_follow": null,
                                    "mode": 420,
                                    "owner": null,
                                    "remote_src": null,
                                    "selevel": null,
                                    "serole": null,
                                    "setype": null,
                                    "seuser": null,
                                    "src": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/work/.ansible/tmp/ansible-tmp-1713659961.0180097-306-204513081580500/source",
                                    "unsafe_writes": false,
                                    "validate": null
                                }
                            },
                            "md5sum": "63777f4d6366e9054294c2c65b9b1296",
                            "mode": "0644",
                            "owner": "zuul",
                            "size": 23391,
                            "src": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/work/.ansible/tmp/ansible-tmp-1713659961.0180097-306-204513081580500/source",
                            "state": "file",
                            "uid": 1000
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-d7cb-6b39-0000000004c7",
                        "name": "validate-host",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_2/cc-github.bmwgroup.net/codecraft-oss/zuul-jobs/roles/validate-host"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:39:21.772916Z",
                            "start": "2024-04-21T00:39:20.985966Z"
                        },
                        "id": "ce4df5fb-964c-d7cb-6b39-0000000004cd",
                        "name": "Write out all ansible variables/facts known for each host"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "_zuul_nolog_return": true,
                            "action": "zuul_debug_info",
                            "changed": false,
                            "df_i": "Filesystem       Inodes  IUsed    IFree IUse% Mounted on\ntmpfs           8230202    754  8229448    1% /run\n/dev/vda1      83804160 577423 83226737    1% /\ntmpfs           8230202      1  8230201    1% /dev/shm\ntmpfs           8230202      3  8230199    1% /run/lock\ntmpfs           1646040     25  1646015    1% /run/user/1000\n",
                            "df_m": "Filesystem     1M-blocks  Used Available Use% Mounted on\ntmpfs               6430     3      6428   1% /run\n/dev/vda1         307067 45998    247289  16% /\ntmpfs              32150     0     32150   0% /dev/shm\ntmpfs                  5     0         5   0% /run/lock\ntmpfs               6430     1      6430   1% /run/user/1000\n",
                            "image_manifest_files": [],
                            "invocation": {
                                "module_args": {
                                    "image_manifest": null,
                                    "image_manifest_files": [
                                        "/etc/dib-builddate.txt",
                                        "/etc/image-hostname.txt"
                                    ],
                                    "ipv4_route_required": false,
                                    "ipv6_route_required": false,
                                    "traceroute_host": null
                                }
                            },
                            "network_interfaces": "1: lo: <LOOPBACK,UP,LOWER_UP> mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000\n    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00\n    inet 127.0.0.1/8 scope host lo\n       valid_lft forever preferred_lft forever\n    inet6 ::1/128 scope host \n       valid_lft forever preferred_lft forever\n2: ens3: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 9000 qdisc fq_codel state UP group default qlen 1000\n    link/ether fa:16:3e:50:02:f8 brd ff:ff:ff:ff:ff:ff\n    altname enp0s3\n    inet 10.31.118.224/21 brd 10.31.119.255 scope global ens3\n       valid_lft forever preferred_lft forever\n    inet6 2a03:1e80:a15:572::1:10f3/64 scope global \n       valid_lft forever preferred_lft forever\n    inet6 fe80::f816:3eff:fe50:2f8/64 scope link \n       valid_lft forever preferred_lft forever\n3: docker0: <NO-CARRIER,BROADCAST,MULTICAST,UP> mtu 1444 qdisc noqueue state DOWN group default \n    link/ether 02:42:e9:ff:13:e5 brd ff:ff:ff:ff:ff:ff\n    inet 172.17.0.1/16 brd 172.17.255.255 scope global docker0\n       valid_lft forever preferred_lft forever\n",
                            "network_neighbors": "10.31.112.1 dev ens3 lladdr 00:22:bd:f8:19:ff REACHABLE\nfe80::222:bdff:fef8:19ff dev ens3 lladdr 00:22:bd:f8:19:ff router REACHABLE\n2a03:1e80:a15:572::1 dev ens3 lladdr 00:22:bd:f8:19:ff router REACHABLE\n",
                            "network_routing_v4": "default via 10.31.112.1 dev ens3 proto static \n10.31.112.0/21 dev ens3 proto kernel scope link src 10.31.118.224 \n172.17.0.0/16 dev docker0 proto kernel scope link src 172.17.0.1 linkdown \n",
                            "network_routing_v6": "::1 dev lo proto kernel metric 256 pref medium\n2a03:1e80:a15:572::/64 dev ens3 proto kernel metric 256 pref medium\nfe80::/64 dev ens3 proto kernel metric 256 pref medium\ndefault via 2a03:1e80:a15:572::1 dev ens3 proto static metric 1024 pref medium\n",
                            "traceroute": null,
                            "uname": "Linux np0065527721 5.15.0-105-generic #115-Ubuntu SMP Mon Apr 15 09:52:04 UTC 2024 x86_64 x86_64 x86_64 GNU/Linux\n"
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-d7cb-6b39-0000000004c7",
                        "name": "validate-host",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_2/cc-github.bmwgroup.net/codecraft-oss/zuul-jobs/roles/validate-host"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:39:22.310511Z",
                            "start": "2024-04-21T00:39:21.786103Z"
                        },
                        "id": "ce4df5fb-964c-d7cb-6b39-0000000004cf",
                        "name": "Collect information about zuul worker"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "template",
                            "changed": true,
                            "checksum": "636de12928cc839e42669fd88653fd43a2c75338",
                            "dest": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/work/logs/zuul-info/zuul-info.node.txt",
                            "diff": [],
                            "gid": 1000,
                            "group": "zuul",
                            "invocation": {
                                "module_args": {
                                    "_original_basename": "zuul-info.j2",
                                    "attributes": null,
                                    "backup": false,
                                    "checksum": "636de12928cc839e42669fd88653fd43a2c75338",
                                    "content": null,
                                    "dest": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/work/logs/zuul-info/zuul-info.node.txt",
                                    "directory_mode": null,
                                    "follow": false,
                                    "force": true,
                                    "group": null,
                                    "local_follow": null,
                                    "mode": 420,
                                    "owner": null,
                                    "remote_src": null,
                                    "selevel": null,
                                    "serole": null,
                                    "setype": null,
                                    "seuser": null,
                                    "src": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/work/.ansible/tmp/ansible-tmp-1713659962.373557-347-257854653294987/source",
                                    "unsafe_writes": false,
                                    "validate": null
                                }
                            },
                            "md5sum": "eaaa74792c5efd113d761ac48f7045c7",
                            "mode": "0644",
                            "owner": "zuul",
                            "size": 2795,
                            "src": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/work/.ansible/tmp/ansible-tmp-1713659962.373557-347-257854653294987/source",
                            "state": "file",
                            "uid": 1000
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-d7cb-6b39-0000000004c7",
                        "name": "validate-host",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_2/cc-github.bmwgroup.net/codecraft-oss/zuul-jobs/roles/validate-host"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:39:23.063500Z",
                            "start": "2024-04-21T00:39:22.323315Z"
                        },
                        "id": "ce4df5fb-964c-d7cb-6b39-0000000004d0",
                        "name": "Write out all zuul information for each host"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "win_shell",
                            "changed": false,
                            "false_condition": "ansible_os_family == \"Windows\"",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:39:23.130686Z",
                            "start": "2024-04-21T00:39:23.089853Z"
                        },
                        "id": "ce4df5fb-964c-d7cb-6b39-000000000017",
                        "name": "Optimize powershell"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "include_role",
                            "changed": false,
                            "false_condition": "ansible_os_family in [\"Windows\", \"Darwin\"]",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:39:23.177042Z",
                            "start": "2024-04-21T00:39:23.146999Z"
                        },
                        "id": "ce4df5fb-964c-d7cb-6b39-000000000018",
                        "name": ""
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "include_role",
                            "changed": false,
                            "false_condition": "ansible_os_family == \"Windows\"",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:39:23.224878Z",
                            "start": "2024-04-21T00:39:23.194280Z"
                        },
                        "id": "ce4df5fb-964c-d7cb-6b39-000000000019",
                        "name": ""
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "include_role",
                            "changed": false,
                            "false_condition": "ansible_os_family == \"Windows\"",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:39:23.265977Z",
                            "start": "2024-04-21T00:39:23.237126Z"
                        },
                        "id": "ce4df5fb-964c-d7cb-6b39-00000000001a",
                        "name": ""
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "include_role",
                            "changed": false,
                            "include_args": {
                                "name": "ensure-job-dirs"
                            }
                        }
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:39:23.317603Z",
                            "start": "2024-04-21T00:39:23.280299Z"
                        },
                        "id": "ce4df5fb-964c-d7cb-6b39-00000000001b",
                        "name": ""
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "include_tasks",
                            "changed": false,
                            "include": "linux.yaml",
                            "include_args": {}
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-d7cb-6b39-000000000622",
                        "name": "ensure-job-dirs",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_0/cc-github.bmwgroup.net/codecraft/zuul-conf-global/roles/ensure-job-dirs"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:39:23.403573Z",
                            "start": "2024-04-21T00:39:23.363623Z"
                        },
                        "id": "ce4df5fb-964c-d7cb-6b39-000000000624",
                        "name": ""
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "file",
                            "changed": false,
                            "msg": "All items completed",
                            "results": [
                                {
                                    "ansible_loop_var": "item",
                                    "changed": false,
                                    "failed": false,
                                    "invocation": {
                                        "module_args": {
                                            "_diff_peek": null,
                                            "_original_basename": null,
                                            "access_time": null,
                                            "access_time_format": "%Y%m%d%H%M.%S",
                                            "attributes": null,
                                            "follow": true,
                                            "force": false,
                                            "group": null,
                                            "mode": null,
                                            "modification_time": null,
                                            "modification_time_format": "%Y%m%d%H%M.%S",
                                            "owner": null,
                                            "path": "/home/zuul/logs",
                                            "recurse": false,
                                            "selevel": null,
                                            "serole": null,
                                            "setype": null,
                                            "seuser": null,
                                            "src": null,
                                            "state": "absent",
                                            "unsafe_writes": false
                                        }
                                    },
                                    "item": "/home/zuul/logs",
                                    "path": "/home/zuul/logs",
                                    "state": "absent"
                                }
                            ]
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-d7cb-6b39-000000000622",
                        "name": "ensure-job-dirs",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_0/cc-github.bmwgroup.net/codecraft/zuul-conf-global/roles/ensure-job-dirs"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:39:23.748560Z",
                            "start": "2024-04-21T00:39:23.435001Z"
                        },
                        "id": "ce4df5fb-964c-d7cb-6b39-0000000006d2",
                        "name": "Clean special job directories"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "file",
                            "changed": true,
                            "msg": "All items completed",
                            "results": [
                                {
                                    "ansible_loop_var": "item",
                                    "changed": true,
                                    "diff": {
                                        "after": {
                                            "path": "/home/zuul/logs",
                                            "state": "directory"
                                        },
                                        "before": {
                                            "path": "/home/zuul/logs",
                                            "state": "absent"
                                        }
                                    },
                                    "failed": false,
                                    "gid": 1000,
                                    "group": "zuul",
                                    "invocation": {
                                        "module_args": {
                                            "_diff_peek": null,
                                            "_original_basename": null,
                                            "access_time": null,
                                            "access_time_format": "%Y%m%d%H%M.%S",
                                            "attributes": null,
                                            "follow": true,
                                            "force": false,
                                            "group": null,
                                            "mode": null,
                                            "modification_time": null,
                                            "modification_time_format": "%Y%m%d%H%M.%S",
                                            "owner": null,
                                            "path": "/home/zuul/logs",
                                            "recurse": false,
                                            "selevel": null,
                                            "serole": null,
                                            "setype": null,
                                            "seuser": null,
                                            "src": null,
                                            "state": "directory",
                                            "unsafe_writes": false
                                        }
                                    },
                                    "item": "/home/zuul/logs",
                                    "mode": "0775",
                                    "owner": "zuul",
                                    "path": "/home/zuul/logs",
                                    "size": 4096,
                                    "state": "directory",
                                    "uid": 1000
                                }
                            ]
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-d7cb-6b39-000000000622",
                        "name": "ensure-job-dirs",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_0/cc-github.bmwgroup.net/codecraft/zuul-conf-global/roles/ensure-job-dirs"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:39:24.041857Z",
                            "start": "2024-04-21T00:39:23.761975Z"
                        },
                        "id": "ce4df5fb-964c-d7cb-6b39-0000000006d3",
                        "name": "Ensure special job directories"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "include_tasks",
                            "changed": false,
                            "false_condition": "ansible_os_family == \"Windows\"",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-d7cb-6b39-000000000622",
                        "name": "ensure-job-dirs",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_0/cc-github.bmwgroup.net/codecraft/zuul-conf-global/roles/ensure-job-dirs"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:39:24.083021Z",
                            "start": "2024-04-21T00:39:24.054100Z"
                        },
                        "id": "ce4df5fb-964c-d7cb-6b39-000000000625",
                        "name": ""
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "include_role",
                            "changed": false,
                            "include_args": {
                                "name": "sar-logging-start"
                            }
                        }
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:39:24.144775Z",
                            "start": "2024-04-21T00:39:24.100484Z"
                        },
                        "id": "ce4df5fb-964c-d7cb-6b39-00000000001c",
                        "name": ""
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "file",
                            "changed": true,
                            "diff": {
                                "after": {
                                    "mode": "0755",
                                    "path": "/home/zuul/logs/sar-logs-node",
                                    "state": "directory"
                                },
                                "before": {
                                    "mode": "0775",
                                    "path": "/home/zuul/logs/sar-logs-node",
                                    "state": "absent"
                                }
                            },
                            "gid": 1000,
                            "group": "zuul",
                            "invocation": {
                                "module_args": {
                                    "_diff_peek": null,
                                    "_original_basename": null,
                                    "access_time": null,
                                    "access_time_format": "%Y%m%d%H%M.%S",
                                    "attributes": null,
                                    "follow": true,
                                    "force": false,
                                    "group": null,
                                    "mode": 493,
                                    "modification_time": null,
                                    "modification_time_format": "%Y%m%d%H%M.%S",
                                    "owner": null,
                                    "path": "/home/zuul/logs/sar-logs-node",
                                    "recurse": false,
                                    "selevel": null,
                                    "serole": null,
                                    "setype": null,
                                    "seuser": null,
                                    "src": null,
                                    "state": "directory",
                                    "unsafe_writes": false
                                }
                            },
                            "mode": "0755",
                            "owner": "zuul",
                            "path": "/home/zuul/logs/sar-logs-node",
                            "size": 4096,
                            "state": "directory",
                            "uid": 1000
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-d7cb-6b39-0000000007a5",
                        "name": "sar-logging-start",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_1/cc-github.bmwgroup.net/codecraft/cilib/roles/sar-logging-start"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:39:24.563151Z",
                            "start": "2024-04-21T00:39:24.193474Z"
                        },
                        "id": "ce4df5fb-964c-d7cb-6b39-0000000007ab",
                        "name": "Ensure sar logs dir"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "shell",
                            "changed": true,
                            "cmd": "set -o nounset\nset -o errexit\nset -o pipefail\n\n# the sar \"-A\" will log everything (there is no long version)\nstart-stop-daemon  --start --make-pidfile --pidfile /tmp/sar-pid --background  --exec /usr/bin/sar --  -o /home/zuul/logs/sar-logs-node/sar-data -A 1\n",
                            "delta": "0:00:00.009661",
                            "end": "2024-04-21 00:39:24.914912",
                            "invocation": {
                                "module_args": {
                                    "_raw_params": "set -o nounset\nset -o errexit\nset -o pipefail\n\n# the sar \"-A\" will log everything (there is no long version)\nstart-stop-daemon  --start --make-pidfile --pidfile /tmp/sar-pid --background  --exec /usr/bin/sar --  -o /home/zuul/logs/sar-logs-node/sar-data -A 1\n",
                                    "_uses_shell": true,
                                    "argv": null,
                                    "chdir": null,
                                    "creates": null,
                                    "executable": "/bin/bash",
                                    "removes": null,
                                    "stdin": null,
                                    "stdin_add_newline": true,
                                    "strip_empty_ends": true,
                                    "warn": false,
                                    "zuul_ansible_split_streams": false,
                                    "zuul_log_id": "ce4df5fb-964c-d7cb-6b39-0000000007ac-1-node"
                                }
                            },
                            "msg": "",
                            "rc": 0,
                            "start": "2024-04-21 00:39:24.905251",
                            "stderr": "",
                            "stderr_lines": [],
                            "stdout": "",
                            "stdout_lines": [],
                            "zuul_log_id": "ce4df5fb-964c-d7cb-6b39-0000000007ac-1-node"
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-d7cb-6b39-0000000007a5",
                        "name": "sar-logging-start",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_1/cc-github.bmwgroup.net/codecraft/cilib/roles/sar-logging-start"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:39:25.243037Z",
                            "start": "2024-04-21T00:39:24.623367Z"
                        },
                        "id": "ce4df5fb-964c-d7cb-6b39-0000000007ac",
                        "name": "Start sar logging"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "include_role",
                            "changed": false,
                            "false_condition": "enable_system_metrics and ansible_os_family == \"Windows\"",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:39:25.293644Z",
                            "start": "2024-04-21T00:39:25.266013Z"
                        },
                        "id": "ce4df5fb-964c-d7cb-6b39-00000000001d",
                        "name": ""
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "include_role",
                            "changed": false,
                            "false_condition": "enable_apt_mirror",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:39:25.332927Z",
                            "start": "2024-04-21T00:39:25.305383Z"
                        },
                        "id": "ce4df5fb-964c-d7cb-6b39-00000000001e",
                        "name": ""
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "include_role",
                            "changed": false,
                            "false_condition": "(shared_cache_filesystems | length) > 0",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:39:25.415079Z",
                            "start": "2024-04-21T00:39:25.345231Z"
                        },
                        "id": "ce4df5fb-964c-d7cb-6b39-000000000020",
                        "name": "configure access key and secret for service account"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "include_role",
                            "changed": false,
                            "false_condition": "(shared_cache_filesystems | length) > 0",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:39:25.487105Z",
                            "start": "2024-04-21T00:39:25.428977Z"
                        },
                        "id": "ce4df5fb-964c-d7cb-6b39-000000000021",
                        "name": "aws cli is required to query efs"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "include_role",
                            "changed": false,
                            "false_condition": "(shared_cache_filesystems | length) > 0",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:39:25.551561Z",
                            "start": "2024-04-21T00:39:25.494226Z"
                        },
                        "id": "ce4df5fb-964c-d7cb-6b39-000000000022",
                        "name": "Mount configured file systems"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "include_role",
                            "changed": false,
                            "false_condition": "enable_aws_local_storage | default(False)",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:39:25.609992Z",
                            "start": "2024-04-21T00:39:25.561518Z"
                        },
                        "id": "ce4df5fb-964c-d7cb-6b39-000000000024",
                        "name": ""
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "include_role",
                            "changed": false,
                            "include_args": {
                                "name": "synchronize-repos"
                            }
                        }
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:39:25.667218Z",
                            "start": "2024-04-21T00:39:25.620607Z"
                        },
                        "id": "ce4df5fb-964c-d7cb-6b39-000000000025",
                        "name": ""
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "include_tasks",
                            "changed": false,
                            "include": "linux.yaml",
                            "include_args": {}
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-d7cb-6b39-00000000089b",
                        "name": "synchronize-repos",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_0/cc-github.bmwgroup.net/codecraft/zuul-conf-global/roles/synchronize-repos"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:39:25.735263Z",
                            "start": "2024-04-21T00:39:25.694155Z"
                        },
                        "id": "ce4df5fb-964c-d7cb-6b39-00000000089d",
                        "name": ""
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "command",
                            "changed": false,
                            "false_condition": "clean_workspace",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-d7cb-6b39-00000000089b",
                        "name": "synchronize-repos",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_0/cc-github.bmwgroup.net/codecraft/zuul-conf-global/roles/synchronize-repos"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:39:26.309803Z",
                            "start": "2024-04-21T00:39:25.797017Z"
                        },
                        "id": "ce4df5fb-964c-d7cb-6b39-0000000008be",
                        "name": "Delete the source directory"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "file",
                            "changed": false,
                            "false_condition": "clean_workspace",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-d7cb-6b39-00000000089b",
                        "name": "synchronize-repos",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_0/cc-github.bmwgroup.net/codecraft/zuul-conf-global/roles/synchronize-repos"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:39:26.363268Z",
                            "start": "2024-04-21T00:39:26.324215Z"
                        },
                        "id": "ce4df5fb-964c-d7cb-6b39-0000000008bf",
                        "name": "Recreate the source directory"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "set_fact",
                            "ansible_facts": {
                                "cached_repos_root": "/var/cache/git"
                            },
                            "changed": false
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-d7cb-6b39-00000000089b",
                        "name": "synchronize-repos",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_0/cc-github.bmwgroup.net/codecraft/zuul-conf-global/roles/synchronize-repos"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:39:26.444611Z",
                            "start": "2024-04-21T00:39:26.374102Z"
                        },
                        "id": "ce4df5fb-964c-d7cb-6b39-0000000008c0",
                        "name": "Enforce default cached_repos_root path if not set in job var"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "include_role",
                            "changed": false,
                            "include_args": {
                                "name": "prepare-workspace-git"
                            }
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-d7cb-6b39-00000000089b",
                        "name": "synchronize-repos",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_0/cc-github.bmwgroup.net/codecraft/zuul-conf-global/roles/synchronize-repos"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:39:26.496008Z",
                            "start": "2024-04-21T00:39:26.457069Z"
                        },
                        "id": "ce4df5fb-964c-d7cb-6b39-0000000008c1",
                        "name": "Synchronize src repos to workspace directory."
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "set_fact",
                            "changed": false,
                            "msg": "All items completed",
                            "results": [
                                {
                                    "ansible_facts": {
                                        "_zuul_projects": {
                                            "cc-github.bmwgroup.net/swh/adp": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/adp",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "8d83dea1d58bef901e97793e1c34ad57986fada1",
                                                "name": "swh/adp",
                                                "required": true,
                                                "short_name": "adp",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/adp"
                                            }
                                        }
                                    },
                                    "ansible_loop_var": "zj_project",
                                    "changed": false,
                                    "failed": false,
                                    "zj_project": {
                                        "key": "cc-github.bmwgroup.net/swh/adp",
                                        "value": {
                                            "canonical_hostname": "cc-github.bmwgroup.net",
                                            "canonical_name": "cc-github.bmwgroup.net/swh/adp",
                                            "checkout": "master",
                                            "checkout_description": "zuul branch",
                                            "commit": "8d83dea1d58bef901e97793e1c34ad57986fada1",
                                            "name": "swh/adp",
                                            "required": true,
                                            "short_name": "adp",
                                            "src_dir": "src/cc-github.bmwgroup.net/swh/adp"
                                        }
                                    }
                                },
                                {
                                    "ansible_facts": {
                                        "_zuul_projects": {
                                            "cc-github.bmwgroup.net/swh/adp": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/adp",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "8d83dea1d58bef901e97793e1c34ad57986fada1",
                                                "name": "swh/adp",
                                                "required": true,
                                                "short_name": "adp",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/adp"
                                            },
                                            "cc-github.bmwgroup.net/swh/cvc": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/cvc",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "dbf0e56926a6baad91df5b15b84746c66de73a47",
                                                "name": "swh/cvc",
                                                "required": true,
                                                "short_name": "cvc",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/cvc"
                                            }
                                        }
                                    },
                                    "ansible_loop_var": "zj_project",
                                    "changed": false,
                                    "failed": false,
                                    "zj_project": {
                                        "key": "cc-github.bmwgroup.net/swh/cvc",
                                        "value": {
                                            "canonical_hostname": "cc-github.bmwgroup.net",
                                            "canonical_name": "cc-github.bmwgroup.net/swh/cvc",
                                            "checkout": "master",
                                            "checkout_description": "zuul branch",
                                            "commit": "dbf0e56926a6baad91df5b15b84746c66de73a47",
                                            "name": "swh/cvc",
                                            "required": true,
                                            "short_name": "cvc",
                                            "src_dir": "src/cc-github.bmwgroup.net/swh/cvc"
                                        }
                                    }
                                },
                                {
                                    "ansible_facts": {
                                        "_zuul_projects": {
                                            "cc-github.bmwgroup.net/swh/adp": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/adp",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "8d83dea1d58bef901e97793e1c34ad57986fada1",
                                                "name": "swh/adp",
                                                "required": true,
                                                "short_name": "adp",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/adp"
                                            },
                                            "cc-github.bmwgroup.net/swh/cvc": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/cvc",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "dbf0e56926a6baad91df5b15b84746c66de73a47",
                                                "name": "swh/cvc",
                                                "required": true,
                                                "short_name": "cvc",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/cvc"
                                            },
                                            "cc-github.bmwgroup.net/swh/ddad": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/ddad",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "32fe27876b12e612823c5f9cfd63b2cc1eaa68c1",
                                                "name": "swh/ddad",
                                                "required": true,
                                                "short_name": "ddad",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/ddad"
                                            }
                                        }
                                    },
                                    "ansible_loop_var": "zj_project",
                                    "changed": false,
                                    "failed": false,
                                    "zj_project": {
                                        "key": "cc-github.bmwgroup.net/swh/ddad",
                                        "value": {
                                            "canonical_hostname": "cc-github.bmwgroup.net",
                                            "canonical_name": "cc-github.bmwgroup.net/swh/ddad",
                                            "checkout": "master",
                                            "checkout_description": "zuul branch",
                                            "commit": "32fe27876b12e612823c5f9cfd63b2cc1eaa68c1",
                                            "name": "swh/ddad",
                                            "required": true,
                                            "short_name": "ddad",
                                            "src_dir": "src/cc-github.bmwgroup.net/swh/ddad"
                                        }
                                    }
                                },
                                {
                                    "ansible_facts": {
                                        "_zuul_projects": {
                                            "cc-github.bmwgroup.net/swh/adp": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/adp",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "8d83dea1d58bef901e97793e1c34ad57986fada1",
                                                "name": "swh/adp",
                                                "required": true,
                                                "short_name": "adp",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/adp"
                                            },
                                            "cc-github.bmwgroup.net/swh/cvc": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/cvc",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "dbf0e56926a6baad91df5b15b84746c66de73a47",
                                                "name": "swh/cvc",
                                                "required": true,
                                                "short_name": "cvc",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/cvc"
                                            },
                                            "cc-github.bmwgroup.net/swh/ddad": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/ddad",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "32fe27876b12e612823c5f9cfd63b2cc1eaa68c1",
                                                "name": "swh/ddad",
                                                "required": true,
                                                "short_name": "ddad",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/ddad"
                                            },
                                            "cc-github.bmwgroup.net/swh/ddad-domains-fasinfo": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/ddad-domains-fasinfo",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "a5b41fd76a124026ff81320e27d5caa5a772f235",
                                                "name": "swh/ddad-domains-fasinfo",
                                                "required": true,
                                                "short_name": "ddad-domains-fasinfo",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/ddad-domains-fasinfo"
                                            }
                                        }
                                    },
                                    "ansible_loop_var": "zj_project",
                                    "changed": false,
                                    "failed": false,
                                    "zj_project": {
                                        "key": "cc-github.bmwgroup.net/swh/ddad-domains-fasinfo",
                                        "value": {
                                            "canonical_hostname": "cc-github.bmwgroup.net",
                                            "canonical_name": "cc-github.bmwgroup.net/swh/ddad-domains-fasinfo",
                                            "checkout": "master",
                                            "checkout_description": "zuul branch",
                                            "commit": "a5b41fd76a124026ff81320e27d5caa5a772f235",
                                            "name": "swh/ddad-domains-fasinfo",
                                            "required": true,
                                            "short_name": "ddad-domains-fasinfo",
                                            "src_dir": "src/cc-github.bmwgroup.net/swh/ddad-domains-fasinfo"
                                        }
                                    }
                                },
                                {
                                    "ansible_facts": {
                                        "_zuul_projects": {
                                            "cc-github.bmwgroup.net/swh/adp": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/adp",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "8d83dea1d58bef901e97793e1c34ad57986fada1",
                                                "name": "swh/adp",
                                                "required": true,
                                                "short_name": "adp",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/adp"
                                            },
                                            "cc-github.bmwgroup.net/swh/cvc": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/cvc",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "dbf0e56926a6baad91df5b15b84746c66de73a47",
                                                "name": "swh/cvc",
                                                "required": true,
                                                "short_name": "cvc",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/cvc"
                                            },
                                            "cc-github.bmwgroup.net/swh/ddad": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/ddad",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "32fe27876b12e612823c5f9cfd63b2cc1eaa68c1",
                                                "name": "swh/ddad",
                                                "required": true,
                                                "short_name": "ddad",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/ddad"
                                            },
                                            "cc-github.bmwgroup.net/swh/ddad-domains-fasinfo": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/ddad-domains-fasinfo",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "a5b41fd76a124026ff81320e27d5caa5a772f235",
                                                "name": "swh/ddad-domains-fasinfo",
                                                "required": true,
                                                "short_name": "ddad-domains-fasinfo",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/ddad-domains-fasinfo"
                                            },
                                            "cc-github.bmwgroup.net/swh/ddad-domains-generic": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/ddad-domains-generic",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "872e7456cf3b5838f30c47753e8187b8c62b636a",
                                                "name": "swh/ddad-domains-generic",
                                                "required": true,
                                                "short_name": "ddad-domains-generic",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/ddad-domains-generic"
                                            }
                                        }
                                    },
                                    "ansible_loop_var": "zj_project",
                                    "changed": false,
                                    "failed": false,
                                    "zj_project": {
                                        "key": "cc-github.bmwgroup.net/swh/ddad-domains-generic",
                                        "value": {
                                            "canonical_hostname": "cc-github.bmwgroup.net",
                                            "canonical_name": "cc-github.bmwgroup.net/swh/ddad-domains-generic",
                                            "checkout": "master",
                                            "checkout_description": "zuul branch",
                                            "commit": "872e7456cf3b5838f30c47753e8187b8c62b636a",
                                            "name": "swh/ddad-domains-generic",
                                            "required": true,
                                            "short_name": "ddad-domains-generic",
                                            "src_dir": "src/cc-github.bmwgroup.net/swh/ddad-domains-generic"
                                        }
                                    }
                                },
                                {
                                    "ansible_facts": {
                                        "_zuul_projects": {
                                            "cc-github.bmwgroup.net/swh/adp": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/adp",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "8d83dea1d58bef901e97793e1c34ad57986fada1",
                                                "name": "swh/adp",
                                                "required": true,
                                                "short_name": "adp",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/adp"
                                            },
                                            "cc-github.bmwgroup.net/swh/cvc": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/cvc",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "dbf0e56926a6baad91df5b15b84746c66de73a47",
                                                "name": "swh/cvc",
                                                "required": true,
                                                "short_name": "cvc",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/cvc"
                                            },
                                            "cc-github.bmwgroup.net/swh/ddad": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/ddad",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "32fe27876b12e612823c5f9cfd63b2cc1eaa68c1",
                                                "name": "swh/ddad",
                                                "required": true,
                                                "short_name": "ddad",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/ddad"
                                            },
                                            "cc-github.bmwgroup.net/swh/ddad-domains-fasinfo": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/ddad-domains-fasinfo",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "a5b41fd76a124026ff81320e27d5caa5a772f235",
                                                "name": "swh/ddad-domains-fasinfo",
                                                "required": true,
                                                "short_name": "ddad-domains-fasinfo",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/ddad-domains-fasinfo"
                                            },
                                            "cc-github.bmwgroup.net/swh/ddad-domains-generic": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/ddad-domains-generic",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "872e7456cf3b5838f30c47753e8187b8c62b636a",
                                                "name": "swh/ddad-domains-generic",
                                                "required": true,
                                                "short_name": "ddad-domains-generic",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/ddad-domains-generic"
                                            },
                                            "cc-github.bmwgroup.net/swh/ddad-ecu-ipnext": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/ddad-ecu-ipnext",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "4e0fd5384e92431311a139b52f3b191523237f3f",
                                                "name": "swh/ddad-ecu-ipnext",
                                                "required": true,
                                                "short_name": "ddad-ecu-ipnext",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/ddad-ecu-ipnext"
                                            }
                                        }
                                    },
                                    "ansible_loop_var": "zj_project",
                                    "changed": false,
                                    "failed": false,
                                    "zj_project": {
                                        "key": "cc-github.bmwgroup.net/swh/ddad-ecu-ipnext",
                                        "value": {
                                            "canonical_hostname": "cc-github.bmwgroup.net",
                                            "canonical_name": "cc-github.bmwgroup.net/swh/ddad-ecu-ipnext",
                                            "checkout": "master",
                                            "checkout_description": "zuul branch",
                                            "commit": "4e0fd5384e92431311a139b52f3b191523237f3f",
                                            "name": "swh/ddad-ecu-ipnext",
                                            "required": true,
                                            "short_name": "ddad-ecu-ipnext",
                                            "src_dir": "src/cc-github.bmwgroup.net/swh/ddad-ecu-ipnext"
                                        }
                                    }
                                },
                                {
                                    "ansible_facts": {
                                        "_zuul_projects": {
                                            "cc-github.bmwgroup.net/swh/adp": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/adp",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "8d83dea1d58bef901e97793e1c34ad57986fada1",
                                                "name": "swh/adp",
                                                "required": true,
                                                "short_name": "adp",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/adp"
                                            },
                                            "cc-github.bmwgroup.net/swh/cvc": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/cvc",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "dbf0e56926a6baad91df5b15b84746c66de73a47",
                                                "name": "swh/cvc",
                                                "required": true,
                                                "short_name": "cvc",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/cvc"
                                            },
                                            "cc-github.bmwgroup.net/swh/ddad": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/ddad",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "32fe27876b12e612823c5f9cfd63b2cc1eaa68c1",
                                                "name": "swh/ddad",
                                                "required": true,
                                                "short_name": "ddad",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/ddad"
                                            },
                                            "cc-github.bmwgroup.net/swh/ddad-domains-fasinfo": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/ddad-domains-fasinfo",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "a5b41fd76a124026ff81320e27d5caa5a772f235",
                                                "name": "swh/ddad-domains-fasinfo",
                                                "required": true,
                                                "short_name": "ddad-domains-fasinfo",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/ddad-domains-fasinfo"
                                            },
                                            "cc-github.bmwgroup.net/swh/ddad-domains-generic": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/ddad-domains-generic",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "872e7456cf3b5838f30c47753e8187b8c62b636a",
                                                "name": "swh/ddad-domains-generic",
                                                "required": true,
                                                "short_name": "ddad-domains-generic",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/ddad-domains-generic"
                                            },
                                            "cc-github.bmwgroup.net/swh/ddad-ecu-ipnext": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/ddad-ecu-ipnext",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "4e0fd5384e92431311a139b52f3b191523237f3f",
                                                "name": "swh/ddad-ecu-ipnext",
                                                "required": true,
                                                "short_name": "ddad-ecu-ipnext",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/ddad-ecu-ipnext"
                                            },
                                            "cc-github.bmwgroup.net/swh/ddad_ci_config": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/ddad_ci_config",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "a2ea1242739a7a16dba7d7781925949e31cfc29f",
                                                "name": "swh/ddad_ci_config",
                                                "required": true,
                                                "short_name": "ddad_ci_config",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/ddad_ci_config"
                                            }
                                        }
                                    },
                                    "ansible_loop_var": "zj_project",
                                    "changed": false,
                                    "failed": false,
                                    "zj_project": {
                                        "key": "cc-github.bmwgroup.net/swh/ddad_ci_config",
                                        "value": {
                                            "canonical_hostname": "cc-github.bmwgroup.net",
                                            "canonical_name": "cc-github.bmwgroup.net/swh/ddad_ci_config",
                                            "checkout": "master",
                                            "checkout_description": "zuul branch",
                                            "commit": "a2ea1242739a7a16dba7d7781925949e31cfc29f",
                                            "name": "swh/ddad_ci_config",
                                            "required": true,
                                            "short_name": "ddad_ci_config",
                                            "src_dir": "src/cc-github.bmwgroup.net/swh/ddad_ci_config"
                                        }
                                    }
                                },
                                {
                                    "ansible_facts": {
                                        "_zuul_projects": {
                                            "cc-github.bmwgroup.net/swh/adp": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/adp",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "8d83dea1d58bef901e97793e1c34ad57986fada1",
                                                "name": "swh/adp",
                                                "required": true,
                                                "short_name": "adp",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/adp"
                                            },
                                            "cc-github.bmwgroup.net/swh/cvc": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/cvc",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "dbf0e56926a6baad91df5b15b84746c66de73a47",
                                                "name": "swh/cvc",
                                                "required": true,
                                                "short_name": "cvc",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/cvc"
                                            },
                                            "cc-github.bmwgroup.net/swh/ddad": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/ddad",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "32fe27876b12e612823c5f9cfd63b2cc1eaa68c1",
                                                "name": "swh/ddad",
                                                "required": true,
                                                "short_name": "ddad",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/ddad"
                                            },
                                            "cc-github.bmwgroup.net/swh/ddad-domains-fasinfo": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/ddad-domains-fasinfo",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "a5b41fd76a124026ff81320e27d5caa5a772f235",
                                                "name": "swh/ddad-domains-fasinfo",
                                                "required": true,
                                                "short_name": "ddad-domains-fasinfo",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/ddad-domains-fasinfo"
                                            },
                                            "cc-github.bmwgroup.net/swh/ddad-domains-generic": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/ddad-domains-generic",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "872e7456cf3b5838f30c47753e8187b8c62b636a",
                                                "name": "swh/ddad-domains-generic",
                                                "required": true,
                                                "short_name": "ddad-domains-generic",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/ddad-domains-generic"
                                            },
                                            "cc-github.bmwgroup.net/swh/ddad-ecu-ipnext": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/ddad-ecu-ipnext",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "4e0fd5384e92431311a139b52f3b191523237f3f",
                                                "name": "swh/ddad-ecu-ipnext",
                                                "required": true,
                                                "short_name": "ddad-ecu-ipnext",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/ddad-ecu-ipnext"
                                            },
                                            "cc-github.bmwgroup.net/swh/ddad_ci_config": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/ddad_ci_config",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "a2ea1242739a7a16dba7d7781925949e31cfc29f",
                                                "name": "swh/ddad_ci_config",
                                                "required": true,
                                                "short_name": "ddad_ci_config",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/ddad_ci_config"
                                            },
                                            "cc-github.bmwgroup.net/swh/ddad_platform": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/ddad_platform",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "0fc13c778f15b8def496ce821b67df115746cfb6",
                                                "name": "swh/ddad_platform",
                                                "required": true,
                                                "short_name": "ddad_platform",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/ddad_platform"
                                            }
                                        }
                                    },
                                    "ansible_loop_var": "zj_project",
                                    "changed": false,
                                    "failed": false,
                                    "zj_project": {
                                        "key": "cc-github.bmwgroup.net/swh/ddad_platform",
                                        "value": {
                                            "canonical_hostname": "cc-github.bmwgroup.net",
                                            "canonical_name": "cc-github.bmwgroup.net/swh/ddad_platform",
                                            "checkout": "master",
                                            "checkout_description": "zuul branch",
                                            "commit": "0fc13c778f15b8def496ce821b67df115746cfb6",
                                            "name": "swh/ddad_platform",
                                            "required": true,
                                            "short_name": "ddad_platform",
                                            "src_dir": "src/cc-github.bmwgroup.net/swh/ddad_platform"
                                        }
                                    }
                                },
                                {
                                    "ansible_facts": {
                                        "_zuul_projects": {
                                            "cc-github.bmwgroup.net/swh/adp": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/adp",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "8d83dea1d58bef901e97793e1c34ad57986fada1",
                                                "name": "swh/adp",
                                                "required": true,
                                                "short_name": "adp",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/adp"
                                            },
                                            "cc-github.bmwgroup.net/swh/cvc": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/cvc",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "dbf0e56926a6baad91df5b15b84746c66de73a47",
                                                "name": "swh/cvc",
                                                "required": true,
                                                "short_name": "cvc",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/cvc"
                                            },
                                            "cc-github.bmwgroup.net/swh/ddad": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/ddad",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "32fe27876b12e612823c5f9cfd63b2cc1eaa68c1",
                                                "name": "swh/ddad",
                                                "required": true,
                                                "short_name": "ddad",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/ddad"
                                            },
                                            "cc-github.bmwgroup.net/swh/ddad-domains-fasinfo": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/ddad-domains-fasinfo",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "a5b41fd76a124026ff81320e27d5caa5a772f235",
                                                "name": "swh/ddad-domains-fasinfo",
                                                "required": true,
                                                "short_name": "ddad-domains-fasinfo",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/ddad-domains-fasinfo"
                                            },
                                            "cc-github.bmwgroup.net/swh/ddad-domains-generic": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/ddad-domains-generic",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "872e7456cf3b5838f30c47753e8187b8c62b636a",
                                                "name": "swh/ddad-domains-generic",
                                                "required": true,
                                                "short_name": "ddad-domains-generic",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/ddad-domains-generic"
                                            },
                                            "cc-github.bmwgroup.net/swh/ddad-ecu-ipnext": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/ddad-ecu-ipnext",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "4e0fd5384e92431311a139b52f3b191523237f3f",
                                                "name": "swh/ddad-ecu-ipnext",
                                                "required": true,
                                                "short_name": "ddad-ecu-ipnext",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/ddad-ecu-ipnext"
                                            },
                                            "cc-github.bmwgroup.net/swh/ddad_ci_config": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/ddad_ci_config",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "a2ea1242739a7a16dba7d7781925949e31cfc29f",
                                                "name": "swh/ddad_ci_config",
                                                "required": true,
                                                "short_name": "ddad_ci_config",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/ddad_ci_config"
                                            },
                                            "cc-github.bmwgroup.net/swh/ddad_platform": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/ddad_platform",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "0fc13c778f15b8def496ce821b67df115746cfb6",
                                                "name": "swh/ddad_platform",
                                                "required": true,
                                                "short_name": "ddad_platform",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/ddad_platform"
                                            },
                                            "cc-github.bmwgroup.net/swh/domain-tools": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/domain-tools",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "22e48aea74d3e1a9d405529652492a0cfd84611a",
                                                "name": "swh/domain-tools",
                                                "required": true,
                                                "short_name": "domain-tools",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/domain-tools"
                                            }
                                        }
                                    },
                                    "ansible_loop_var": "zj_project",
                                    "changed": false,
                                    "failed": false,
                                    "zj_project": {
                                        "key": "cc-github.bmwgroup.net/swh/domain-tools",
                                        "value": {
                                            "canonical_hostname": "cc-github.bmwgroup.net",
                                            "canonical_name": "cc-github.bmwgroup.net/swh/domain-tools",
                                            "checkout": "master",
                                            "checkout_description": "zuul branch",
                                            "commit": "22e48aea74d3e1a9d405529652492a0cfd84611a",
                                            "name": "swh/domain-tools",
                                            "required": true,
                                            "short_name": "domain-tools",
                                            "src_dir": "src/cc-github.bmwgroup.net/swh/domain-tools"
                                        }
                                    }
                                },
                                {
                                    "ansible_facts": {
                                        "_zuul_projects": {
                                            "cc-github.bmwgroup.net/swh/adp": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/adp",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "8d83dea1d58bef901e97793e1c34ad57986fada1",
                                                "name": "swh/adp",
                                                "required": true,
                                                "short_name": "adp",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/adp"
                                            },
                                            "cc-github.bmwgroup.net/swh/cvc": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/cvc",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "dbf0e56926a6baad91df5b15b84746c66de73a47",
                                                "name": "swh/cvc",
                                                "required": true,
                                                "short_name": "cvc",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/cvc"
                                            },
                                            "cc-github.bmwgroup.net/swh/ddad": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/ddad",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "32fe27876b12e612823c5f9cfd63b2cc1eaa68c1",
                                                "name": "swh/ddad",
                                                "required": true,
                                                "short_name": "ddad",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/ddad"
                                            },
                                            "cc-github.bmwgroup.net/swh/ddad-domains-fasinfo": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/ddad-domains-fasinfo",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "a5b41fd76a124026ff81320e27d5caa5a772f235",
                                                "name": "swh/ddad-domains-fasinfo",
                                                "required": true,
                                                "short_name": "ddad-domains-fasinfo",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/ddad-domains-fasinfo"
                                            },
                                            "cc-github.bmwgroup.net/swh/ddad-domains-generic": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/ddad-domains-generic",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "872e7456cf3b5838f30c47753e8187b8c62b636a",
                                                "name": "swh/ddad-domains-generic",
                                                "required": true,
                                                "short_name": "ddad-domains-generic",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/ddad-domains-generic"
                                            },
                                            "cc-github.bmwgroup.net/swh/ddad-ecu-ipnext": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/ddad-ecu-ipnext",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "4e0fd5384e92431311a139b52f3b191523237f3f",
                                                "name": "swh/ddad-ecu-ipnext",
                                                "required": true,
                                                "short_name": "ddad-ecu-ipnext",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/ddad-ecu-ipnext"
                                            },
                                            "cc-github.bmwgroup.net/swh/ddad_ci_config": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/ddad_ci_config",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "a2ea1242739a7a16dba7d7781925949e31cfc29f",
                                                "name": "swh/ddad_ci_config",
                                                "required": true,
                                                "short_name": "ddad_ci_config",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/ddad_ci_config"
                                            },
                                            "cc-github.bmwgroup.net/swh/ddad_platform": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/ddad_platform",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "0fc13c778f15b8def496ce821b67df115746cfb6",
                                                "name": "swh/ddad_platform",
                                                "required": true,
                                                "short_name": "ddad_platform",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/ddad_platform"
                                            },
                                            "cc-github.bmwgroup.net/swh/domain-tools": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/domain-tools",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "22e48aea74d3e1a9d405529652492a0cfd84611a",
                                                "name": "swh/domain-tools",
                                                "required": true,
                                                "short_name": "domain-tools",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/domain-tools"
                                            },
                                            "cc-github.bmwgroup.net/swh/ecu_xpad_sc_mpad": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/ecu_xpad_sc_mpad",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "9f275d5b9f924de72632bda96690327fccdd5ff5",
                                                "name": "swh/ecu_xpad_sc_mpad",
                                                "required": true,
                                                "short_name": "ecu_xpad_sc_mpad",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/ecu_xpad_sc_mpad"
                                            }
                                        }
                                    },
                                    "ansible_loop_var": "zj_project",
                                    "changed": false,
                                    "failed": false,
                                    "zj_project": {
                                        "key": "cc-github.bmwgroup.net/swh/ecu_xpad_sc_mpad",
                                        "value": {
                                            "canonical_hostname": "cc-github.bmwgroup.net",
                                            "canonical_name": "cc-github.bmwgroup.net/swh/ecu_xpad_sc_mpad",
                                            "checkout": "master",
                                            "checkout_description": "zuul branch",
                                            "commit": "9f275d5b9f924de72632bda96690327fccdd5ff5",
                                            "name": "swh/ecu_xpad_sc_mpad",
                                            "required": true,
                                            "short_name": "ecu_xpad_sc_mpad",
                                            "src_dir": "src/cc-github.bmwgroup.net/swh/ecu_xpad_sc_mpad"
                                        }
                                    }
                                },
                                {
                                    "ansible_facts": {
                                        "_zuul_projects": {
                                            "cc-github.bmwgroup.net/swh/adp": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/adp",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "8d83dea1d58bef901e97793e1c34ad57986fada1",
                                                "name": "swh/adp",
                                                "required": true,
                                                "short_name": "adp",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/adp"
                                            },
                                            "cc-github.bmwgroup.net/swh/cvc": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/cvc",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "dbf0e56926a6baad91df5b15b84746c66de73a47",
                                                "name": "swh/cvc",
                                                "required": true,
                                                "short_name": "cvc",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/cvc"
                                            },
                                            "cc-github.bmwgroup.net/swh/ddad": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/ddad",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "32fe27876b12e612823c5f9cfd63b2cc1eaa68c1",
                                                "name": "swh/ddad",
                                                "required": true,
                                                "short_name": "ddad",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/ddad"
                                            },
                                            "cc-github.bmwgroup.net/swh/ddad-domains-fasinfo": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/ddad-domains-fasinfo",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "a5b41fd76a124026ff81320e27d5caa5a772f235",
                                                "name": "swh/ddad-domains-fasinfo",
                                                "required": true,
                                                "short_name": "ddad-domains-fasinfo",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/ddad-domains-fasinfo"
                                            },
                                            "cc-github.bmwgroup.net/swh/ddad-domains-generic": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/ddad-domains-generic",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "872e7456cf3b5838f30c47753e8187b8c62b636a",
                                                "name": "swh/ddad-domains-generic",
                                                "required": true,
                                                "short_name": "ddad-domains-generic",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/ddad-domains-generic"
                                            },
                                            "cc-github.bmwgroup.net/swh/ddad-ecu-ipnext": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/ddad-ecu-ipnext",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "4e0fd5384e92431311a139b52f3b191523237f3f",
                                                "name": "swh/ddad-ecu-ipnext",
                                                "required": true,
                                                "short_name": "ddad-ecu-ipnext",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/ddad-ecu-ipnext"
                                            },
                                            "cc-github.bmwgroup.net/swh/ddad_ci_config": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/ddad_ci_config",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "a2ea1242739a7a16dba7d7781925949e31cfc29f",
                                                "name": "swh/ddad_ci_config",
                                                "required": true,
                                                "short_name": "ddad_ci_config",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/ddad_ci_config"
                                            },
                                            "cc-github.bmwgroup.net/swh/ddad_platform": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/ddad_platform",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "0fc13c778f15b8def496ce821b67df115746cfb6",
                                                "name": "swh/ddad_platform",
                                                "required": true,
                                                "short_name": "ddad_platform",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/ddad_platform"
                                            },
                                            "cc-github.bmwgroup.net/swh/domain-tools": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/domain-tools",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "22e48aea74d3e1a9d405529652492a0cfd84611a",
                                                "name": "swh/domain-tools",
                                                "required": true,
                                                "short_name": "domain-tools",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/domain-tools"
                                            },
                                            "cc-github.bmwgroup.net/swh/ecu_xpad_sc_mpad": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/ecu_xpad_sc_mpad",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "9f275d5b9f924de72632bda96690327fccdd5ff5",
                                                "name": "swh/ecu_xpad_sc_mpad",
                                                "required": true,
                                                "short_name": "ecu_xpad_sc_mpad",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/ecu_xpad_sc_mpad"
                                            },
                                            "cc-github.bmwgroup.net/swh/foresight": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/foresight",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "0961a62bed7ee412bf80fe5a9b879e5586964358",
                                                "name": "swh/foresight",
                                                "required": true,
                                                "short_name": "foresight",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/foresight"
                                            }
                                        }
                                    },
                                    "ansible_loop_var": "zj_project",
                                    "changed": false,
                                    "failed": false,
                                    "zj_project": {
                                        "key": "cc-github.bmwgroup.net/swh/foresight",
                                        "value": {
                                            "canonical_hostname": "cc-github.bmwgroup.net",
                                            "canonical_name": "cc-github.bmwgroup.net/swh/foresight",
                                            "checkout": "master",
                                            "checkout_description": "zuul branch",
                                            "commit": "0961a62bed7ee412bf80fe5a9b879e5586964358",
                                            "name": "swh/foresight",
                                            "required": true,
                                            "short_name": "foresight",
                                            "src_dir": "src/cc-github.bmwgroup.net/swh/foresight"
                                        }
                                    }
                                },
                                {
                                    "ansible_facts": {
                                        "_zuul_projects": {
                                            "cc-github.bmwgroup.net/swh/adp": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/adp",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "8d83dea1d58bef901e97793e1c34ad57986fada1",
                                                "name": "swh/adp",
                                                "required": true,
                                                "short_name": "adp",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/adp"
                                            },
                                            "cc-github.bmwgroup.net/swh/cvc": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/cvc",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "dbf0e56926a6baad91df5b15b84746c66de73a47",
                                                "name": "swh/cvc",
                                                "required": true,
                                                "short_name": "cvc",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/cvc"
                                            },
                                            "cc-github.bmwgroup.net/swh/ddad": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/ddad",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "32fe27876b12e612823c5f9cfd63b2cc1eaa68c1",
                                                "name": "swh/ddad",
                                                "required": true,
                                                "short_name": "ddad",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/ddad"
                                            },
                                            "cc-github.bmwgroup.net/swh/ddad-domains-fasinfo": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/ddad-domains-fasinfo",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "a5b41fd76a124026ff81320e27d5caa5a772f235",
                                                "name": "swh/ddad-domains-fasinfo",
                                                "required": true,
                                                "short_name": "ddad-domains-fasinfo",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/ddad-domains-fasinfo"
                                            },
                                            "cc-github.bmwgroup.net/swh/ddad-domains-generic": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/ddad-domains-generic",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "872e7456cf3b5838f30c47753e8187b8c62b636a",
                                                "name": "swh/ddad-domains-generic",
                                                "required": true,
                                                "short_name": "ddad-domains-generic",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/ddad-domains-generic"
                                            },
                                            "cc-github.bmwgroup.net/swh/ddad-ecu-ipnext": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/ddad-ecu-ipnext",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "4e0fd5384e92431311a139b52f3b191523237f3f",
                                                "name": "swh/ddad-ecu-ipnext",
                                                "required": true,
                                                "short_name": "ddad-ecu-ipnext",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/ddad-ecu-ipnext"
                                            },
                                            "cc-github.bmwgroup.net/swh/ddad_ci_config": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/ddad_ci_config",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "a2ea1242739a7a16dba7d7781925949e31cfc29f",
                                                "name": "swh/ddad_ci_config",
                                                "required": true,
                                                "short_name": "ddad_ci_config",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/ddad_ci_config"
                                            },
                                            "cc-github.bmwgroup.net/swh/ddad_platform": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/ddad_platform",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "0fc13c778f15b8def496ce821b67df115746cfb6",
                                                "name": "swh/ddad_platform",
                                                "required": true,
                                                "short_name": "ddad_platform",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/ddad_platform"
                                            },
                                            "cc-github.bmwgroup.net/swh/domain-tools": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/domain-tools",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "22e48aea74d3e1a9d405529652492a0cfd84611a",
                                                "name": "swh/domain-tools",
                                                "required": true,
                                                "short_name": "domain-tools",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/domain-tools"
                                            },
                                            "cc-github.bmwgroup.net/swh/ecu_xpad_sc_mpad": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/ecu_xpad_sc_mpad",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "9f275d5b9f924de72632bda96690327fccdd5ff5",
                                                "name": "swh/ecu_xpad_sc_mpad",
                                                "required": true,
                                                "short_name": "ecu_xpad_sc_mpad",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/ecu_xpad_sc_mpad"
                                            },
                                            "cc-github.bmwgroup.net/swh/foresight": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/foresight",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "0961a62bed7ee412bf80fe5a9b879e5586964358",
                                                "name": "swh/foresight",
                                                "required": true,
                                                "short_name": "foresight",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/foresight"
                                            },
                                            "cc-github.bmwgroup.net/swh/franky_ib": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/franky_ib",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "7a74d491251435e7b011e7010d11fbc9224b355c",
                                                "name": "swh/franky_ib",
                                                "required": true,
                                                "short_name": "franky_ib",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/franky_ib"
                                            }
                                        }
                                    },
                                    "ansible_loop_var": "zj_project",
                                    "changed": false,
                                    "failed": false,
                                    "zj_project": {
                                        "key": "cc-github.bmwgroup.net/swh/franky_ib",
                                        "value": {
                                            "canonical_hostname": "cc-github.bmwgroup.net",
                                            "canonical_name": "cc-github.bmwgroup.net/swh/franky_ib",
                                            "checkout": "master",
                                            "checkout_description": "zuul branch",
                                            "commit": "7a74d491251435e7b011e7010d11fbc9224b355c",
                                            "name": "swh/franky_ib",
                                            "required": true,
                                            "short_name": "franky_ib",
                                            "src_dir": "src/cc-github.bmwgroup.net/swh/franky_ib"
                                        }
                                    }
                                },
                                {
                                    "ansible_facts": {
                                        "_zuul_projects": {
                                            "cc-github.bmwgroup.net/swh/adp": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/adp",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "8d83dea1d58bef901e97793e1c34ad57986fada1",
                                                "name": "swh/adp",
                                                "required": true,
                                                "short_name": "adp",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/adp"
                                            },
                                            "cc-github.bmwgroup.net/swh/cvc": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/cvc",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "dbf0e56926a6baad91df5b15b84746c66de73a47",
                                                "name": "swh/cvc",
                                                "required": true,
                                                "short_name": "cvc",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/cvc"
                                            },
                                            "cc-github.bmwgroup.net/swh/ddad": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/ddad",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "32fe27876b12e612823c5f9cfd63b2cc1eaa68c1",
                                                "name": "swh/ddad",
                                                "required": true,
                                                "short_name": "ddad",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/ddad"
                                            },
                                            "cc-github.bmwgroup.net/swh/ddad-domains-fasinfo": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/ddad-domains-fasinfo",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "a5b41fd76a124026ff81320e27d5caa5a772f235",
                                                "name": "swh/ddad-domains-fasinfo",
                                                "required": true,
                                                "short_name": "ddad-domains-fasinfo",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/ddad-domains-fasinfo"
                                            },
                                            "cc-github.bmwgroup.net/swh/ddad-domains-generic": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/ddad-domains-generic",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "872e7456cf3b5838f30c47753e8187b8c62b636a",
                                                "name": "swh/ddad-domains-generic",
                                                "required": true,
                                                "short_name": "ddad-domains-generic",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/ddad-domains-generic"
                                            },
                                            "cc-github.bmwgroup.net/swh/ddad-ecu-ipnext": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/ddad-ecu-ipnext",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "4e0fd5384e92431311a139b52f3b191523237f3f",
                                                "name": "swh/ddad-ecu-ipnext",
                                                "required": true,
                                                "short_name": "ddad-ecu-ipnext",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/ddad-ecu-ipnext"
                                            },
                                            "cc-github.bmwgroup.net/swh/ddad_ci_config": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/ddad_ci_config",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "a2ea1242739a7a16dba7d7781925949e31cfc29f",
                                                "name": "swh/ddad_ci_config",
                                                "required": true,
                                                "short_name": "ddad_ci_config",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/ddad_ci_config"
                                            },
                                            "cc-github.bmwgroup.net/swh/ddad_platform": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/ddad_platform",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "0fc13c778f15b8def496ce821b67df115746cfb6",
                                                "name": "swh/ddad_platform",
                                                "required": true,
                                                "short_name": "ddad_platform",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/ddad_platform"
                                            },
                                            "cc-github.bmwgroup.net/swh/domain-tools": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/domain-tools",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "22e48aea74d3e1a9d405529652492a0cfd84611a",
                                                "name": "swh/domain-tools",
                                                "required": true,
                                                "short_name": "domain-tools",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/domain-tools"
                                            },
                                            "cc-github.bmwgroup.net/swh/ecu_xpad_sc_mpad": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/ecu_xpad_sc_mpad",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "9f275d5b9f924de72632bda96690327fccdd5ff5",
                                                "name": "swh/ecu_xpad_sc_mpad",
                                                "required": true,
                                                "short_name": "ecu_xpad_sc_mpad",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/ecu_xpad_sc_mpad"
                                            },
                                            "cc-github.bmwgroup.net/swh/foresight": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/foresight",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "0961a62bed7ee412bf80fe5a9b879e5586964358",
                                                "name": "swh/foresight",
                                                "required": true,
                                                "short_name": "foresight",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/foresight"
                                            },
                                            "cc-github.bmwgroup.net/swh/franky_ib": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/franky_ib",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "7a74d491251435e7b011e7010d11fbc9224b355c",
                                                "name": "swh/franky_ib",
                                                "required": true,
                                                "short_name": "franky_ib",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/franky_ib"
                                            },
                                            "cc-github.bmwgroup.net/swh/gnss_common": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/gnss_common",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "7aeb42bd9976938f99a41c088c70fe8af14ee8fc",
                                                "name": "swh/gnss_common",
                                                "required": true,
                                                "short_name": "gnss_common",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/gnss_common"
                                            }
                                        }
                                    },
                                    "ansible_loop_var": "zj_project",
                                    "changed": false,
                                    "failed": false,
                                    "zj_project": {
                                        "key": "cc-github.bmwgroup.net/swh/gnss_common",
                                        "value": {
                                            "canonical_hostname": "cc-github.bmwgroup.net",
                                            "canonical_name": "cc-github.bmwgroup.net/swh/gnss_common",
                                            "checkout": "master",
                                            "checkout_description": "zuul branch",
                                            "commit": "7aeb42bd9976938f99a41c088c70fe8af14ee8fc",
                                            "name": "swh/gnss_common",
                                            "required": true,
                                            "short_name": "gnss_common",
                                            "src_dir": "src/cc-github.bmwgroup.net/swh/gnss_common"
                                        }
                                    }
                                },
                                {
                                    "ansible_facts": {
                                        "_zuul_projects": {
                                            "cc-github.bmwgroup.net/swh/adp": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/adp",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "8d83dea1d58bef901e97793e1c34ad57986fada1",
                                                "name": "swh/adp",
                                                "required": true,
                                                "short_name": "adp",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/adp"
                                            },
                                            "cc-github.bmwgroup.net/swh/cvc": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/cvc",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "dbf0e56926a6baad91df5b15b84746c66de73a47",
                                                "name": "swh/cvc",
                                                "required": true,
                                                "short_name": "cvc",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/cvc"
                                            },
                                            "cc-github.bmwgroup.net/swh/ddad": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/ddad",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "32fe27876b12e612823c5f9cfd63b2cc1eaa68c1",
                                                "name": "swh/ddad",
                                                "required": true,
                                                "short_name": "ddad",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/ddad"
                                            },
                                            "cc-github.bmwgroup.net/swh/ddad-domains-fasinfo": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/ddad-domains-fasinfo",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "a5b41fd76a124026ff81320e27d5caa5a772f235",
                                                "name": "swh/ddad-domains-fasinfo",
                                                "required": true,
                                                "short_name": "ddad-domains-fasinfo",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/ddad-domains-fasinfo"
                                            },
                                            "cc-github.bmwgroup.net/swh/ddad-domains-generic": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/ddad-domains-generic",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "872e7456cf3b5838f30c47753e8187b8c62b636a",
                                                "name": "swh/ddad-domains-generic",
                                                "required": true,
                                                "short_name": "ddad-domains-generic",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/ddad-domains-generic"
                                            },
                                            "cc-github.bmwgroup.net/swh/ddad-ecu-ipnext": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/ddad-ecu-ipnext",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "4e0fd5384e92431311a139b52f3b191523237f3f",
                                                "name": "swh/ddad-ecu-ipnext",
                                                "required": true,
                                                "short_name": "ddad-ecu-ipnext",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/ddad-ecu-ipnext"
                                            },
                                            "cc-github.bmwgroup.net/swh/ddad_ci_config": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/ddad_ci_config",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "a2ea1242739a7a16dba7d7781925949e31cfc29f",
                                                "name": "swh/ddad_ci_config",
                                                "required": true,
                                                "short_name": "ddad_ci_config",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/ddad_ci_config"
                                            },
                                            "cc-github.bmwgroup.net/swh/ddad_platform": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/ddad_platform",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "0fc13c778f15b8def496ce821b67df115746cfb6",
                                                "name": "swh/ddad_platform",
                                                "required": true,
                                                "short_name": "ddad_platform",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/ddad_platform"
                                            },
                                            "cc-github.bmwgroup.net/swh/domain-tools": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/domain-tools",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "22e48aea74d3e1a9d405529652492a0cfd84611a",
                                                "name": "swh/domain-tools",
                                                "required": true,
                                                "short_name": "domain-tools",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/domain-tools"
                                            },
                                            "cc-github.bmwgroup.net/swh/ecu_xpad_sc_mpad": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/ecu_xpad_sc_mpad",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "9f275d5b9f924de72632bda96690327fccdd5ff5",
                                                "name": "swh/ecu_xpad_sc_mpad",
                                                "required": true,
                                                "short_name": "ecu_xpad_sc_mpad",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/ecu_xpad_sc_mpad"
                                            },
                                            "cc-github.bmwgroup.net/swh/foresight": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/foresight",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "0961a62bed7ee412bf80fe5a9b879e5586964358",
                                                "name": "swh/foresight",
                                                "required": true,
                                                "short_name": "foresight",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/foresight"
                                            },
                                            "cc-github.bmwgroup.net/swh/franky_ib": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/franky_ib",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "7a74d491251435e7b011e7010d11fbc9224b355c",
                                                "name": "swh/franky_ib",
                                                "required": true,
                                                "short_name": "franky_ib",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/franky_ib"
                                            },
                                            "cc-github.bmwgroup.net/swh/gnss_common": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/gnss_common",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "7aeb42bd9976938f99a41c088c70fe8af14ee8fc",
                                                "name": "swh/gnss_common",
                                                "required": true,
                                                "short_name": "gnss_common",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/gnss_common"
                                            },
                                            "cc-github.bmwgroup.net/swh/ib-vip": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/ib-vip",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "77d3abe6f172efef2f93e6c3a61af0f3ee7d7967",
                                                "name": "swh/ib-vip",
                                                "required": true,
                                                "short_name": "ib-vip",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/ib-vip"
                                            }
                                        }
                                    },
                                    "ansible_loop_var": "zj_project",
                                    "changed": false,
                                    "failed": false,
                                    "zj_project": {
                                        "key": "cc-github.bmwgroup.net/swh/ib-vip",
                                        "value": {
                                            "canonical_hostname": "cc-github.bmwgroup.net",
                                            "canonical_name": "cc-github.bmwgroup.net/swh/ib-vip",
                                            "checkout": "master",
                                            "checkout_description": "zuul branch",
                                            "commit": "77d3abe6f172efef2f93e6c3a61af0f3ee7d7967",
                                            "name": "swh/ib-vip",
                                            "required": true,
                                            "short_name": "ib-vip",
                                            "src_dir": "src/cc-github.bmwgroup.net/swh/ib-vip"
                                        }
                                    }
                                },
                                {
                                    "ansible_facts": {
                                        "_zuul_projects": {
                                            "cc-github.bmwgroup.net/swh/adp": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/adp",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "8d83dea1d58bef901e97793e1c34ad57986fada1",
                                                "name": "swh/adp",
                                                "required": true,
                                                "short_name": "adp",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/adp"
                                            },
                                            "cc-github.bmwgroup.net/swh/cvc": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/cvc",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "dbf0e56926a6baad91df5b15b84746c66de73a47",
                                                "name": "swh/cvc",
                                                "required": true,
                                                "short_name": "cvc",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/cvc"
                                            },
                                            "cc-github.bmwgroup.net/swh/ddad": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/ddad",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "32fe27876b12e612823c5f9cfd63b2cc1eaa68c1",
                                                "name": "swh/ddad",
                                                "required": true,
                                                "short_name": "ddad",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/ddad"
                                            },
                                            "cc-github.bmwgroup.net/swh/ddad-domains-fasinfo": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/ddad-domains-fasinfo",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "a5b41fd76a124026ff81320e27d5caa5a772f235",
                                                "name": "swh/ddad-domains-fasinfo",
                                                "required": true,
                                                "short_name": "ddad-domains-fasinfo",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/ddad-domains-fasinfo"
                                            },
                                            "cc-github.bmwgroup.net/swh/ddad-domains-generic": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/ddad-domains-generic",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "872e7456cf3b5838f30c47753e8187b8c62b636a",
                                                "name": "swh/ddad-domains-generic",
                                                "required": true,
                                                "short_name": "ddad-domains-generic",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/ddad-domains-generic"
                                            },
                                            "cc-github.bmwgroup.net/swh/ddad-ecu-ipnext": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/ddad-ecu-ipnext",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "4e0fd5384e92431311a139b52f3b191523237f3f",
                                                "name": "swh/ddad-ecu-ipnext",
                                                "required": true,
                                                "short_name": "ddad-ecu-ipnext",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/ddad-ecu-ipnext"
                                            },
                                            "cc-github.bmwgroup.net/swh/ddad_ci_config": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/ddad_ci_config",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "a2ea1242739a7a16dba7d7781925949e31cfc29f",
                                                "name": "swh/ddad_ci_config",
                                                "required": true,
                                                "short_name": "ddad_ci_config",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/ddad_ci_config"
                                            },
                                            "cc-github.bmwgroup.net/swh/ddad_platform": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/ddad_platform",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "0fc13c778f15b8def496ce821b67df115746cfb6",
                                                "name": "swh/ddad_platform",
                                                "required": true,
                                                "short_name": "ddad_platform",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/ddad_platform"
                                            },
                                            "cc-github.bmwgroup.net/swh/domain-tools": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/domain-tools",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "22e48aea74d3e1a9d405529652492a0cfd84611a",
                                                "name": "swh/domain-tools",
                                                "required": true,
                                                "short_name": "domain-tools",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/domain-tools"
                                            },
                                            "cc-github.bmwgroup.net/swh/ecu_xpad_sc_mpad": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/ecu_xpad_sc_mpad",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "9f275d5b9f924de72632bda96690327fccdd5ff5",
                                                "name": "swh/ecu_xpad_sc_mpad",
                                                "required": true,
                                                "short_name": "ecu_xpad_sc_mpad",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/ecu_xpad_sc_mpad"
                                            },
                                            "cc-github.bmwgroup.net/swh/foresight": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/foresight",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "0961a62bed7ee412bf80fe5a9b879e5586964358",
                                                "name": "swh/foresight",
                                                "required": true,
                                                "short_name": "foresight",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/foresight"
                                            },
                                            "cc-github.bmwgroup.net/swh/franky_ib": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/franky_ib",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "7a74d491251435e7b011e7010d11fbc9224b355c",
                                                "name": "swh/franky_ib",
                                                "required": true,
                                                "short_name": "franky_ib",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/franky_ib"
                                            },
                                            "cc-github.bmwgroup.net/swh/gnss_common": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/gnss_common",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "7aeb42bd9976938f99a41c088c70fe8af14ee8fc",
                                                "name": "swh/gnss_common",
                                                "required": true,
                                                "short_name": "gnss_common",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/gnss_common"
                                            },
                                            "cc-github.bmwgroup.net/swh/ib-vip": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/ib-vip",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "77d3abe6f172efef2f93e6c3a61af0f3ee7d7967",
                                                "name": "swh/ib-vip",
                                                "required": true,
                                                "short_name": "ib-vip",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/ib-vip"
                                            },
                                            "cc-github.bmwgroup.net/swh/ltf-dlt": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/ltf-dlt",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "68fa15c725670a73c3c7f3566a99f38cd3a87ae5",
                                                "name": "swh/ltf-dlt",
                                                "required": true,
                                                "short_name": "ltf-dlt",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/ltf-dlt"
                                            }
                                        }
                                    },
                                    "ansible_loop_var": "zj_project",
                                    "changed": false,
                                    "failed": false,
                                    "zj_project": {
                                        "key": "cc-github.bmwgroup.net/swh/ltf-dlt",
                                        "value": {
                                            "canonical_hostname": "cc-github.bmwgroup.net",
                                            "canonical_name": "cc-github.bmwgroup.net/swh/ltf-dlt",
                                            "checkout": "master",
                                            "checkout_description": "zuul branch",
                                            "commit": "68fa15c725670a73c3c7f3566a99f38cd3a87ae5",
                                            "name": "swh/ltf-dlt",
                                            "required": true,
                                            "short_name": "ltf-dlt",
                                            "src_dir": "src/cc-github.bmwgroup.net/swh/ltf-dlt"
                                        }
                                    }
                                },
                                {
                                    "ansible_facts": {
                                        "_zuul_projects": {
                                            "cc-github.bmwgroup.net/swh/adp": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/adp",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "8d83dea1d58bef901e97793e1c34ad57986fada1",
                                                "name": "swh/adp",
                                                "required": true,
                                                "short_name": "adp",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/adp"
                                            },
                                            "cc-github.bmwgroup.net/swh/cvc": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/cvc",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "dbf0e56926a6baad91df5b15b84746c66de73a47",
                                                "name": "swh/cvc",
                                                "required": true,
                                                "short_name": "cvc",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/cvc"
                                            },
                                            "cc-github.bmwgroup.net/swh/ddad": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/ddad",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "32fe27876b12e612823c5f9cfd63b2cc1eaa68c1",
                                                "name": "swh/ddad",
                                                "required": true,
                                                "short_name": "ddad",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/ddad"
                                            },
                                            "cc-github.bmwgroup.net/swh/ddad-domains-fasinfo": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/ddad-domains-fasinfo",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "a5b41fd76a124026ff81320e27d5caa5a772f235",
                                                "name": "swh/ddad-domains-fasinfo",
                                                "required": true,
                                                "short_name": "ddad-domains-fasinfo",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/ddad-domains-fasinfo"
                                            },
                                            "cc-github.bmwgroup.net/swh/ddad-domains-generic": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/ddad-domains-generic",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "872e7456cf3b5838f30c47753e8187b8c62b636a",
                                                "name": "swh/ddad-domains-generic",
                                                "required": true,
                                                "short_name": "ddad-domains-generic",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/ddad-domains-generic"
                                            },
                                            "cc-github.bmwgroup.net/swh/ddad-ecu-ipnext": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/ddad-ecu-ipnext",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "4e0fd5384e92431311a139b52f3b191523237f3f",
                                                "name": "swh/ddad-ecu-ipnext",
                                                "required": true,
                                                "short_name": "ddad-ecu-ipnext",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/ddad-ecu-ipnext"
                                            },
                                            "cc-github.bmwgroup.net/swh/ddad_ci_config": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/ddad_ci_config",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "a2ea1242739a7a16dba7d7781925949e31cfc29f",
                                                "name": "swh/ddad_ci_config",
                                                "required": true,
                                                "short_name": "ddad_ci_config",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/ddad_ci_config"
                                            },
                                            "cc-github.bmwgroup.net/swh/ddad_platform": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/ddad_platform",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "0fc13c778f15b8def496ce821b67df115746cfb6",
                                                "name": "swh/ddad_platform",
                                                "required": true,
                                                "short_name": "ddad_platform",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/ddad_platform"
                                            },
                                            "cc-github.bmwgroup.net/swh/domain-tools": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/domain-tools",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "22e48aea74d3e1a9d405529652492a0cfd84611a",
                                                "name": "swh/domain-tools",
                                                "required": true,
                                                "short_name": "domain-tools",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/domain-tools"
                                            },
                                            "cc-github.bmwgroup.net/swh/ecu_xpad_sc_mpad": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/ecu_xpad_sc_mpad",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "9f275d5b9f924de72632bda96690327fccdd5ff5",
                                                "name": "swh/ecu_xpad_sc_mpad",
                                                "required": true,
                                                "short_name": "ecu_xpad_sc_mpad",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/ecu_xpad_sc_mpad"
                                            },
                                            "cc-github.bmwgroup.net/swh/foresight": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/foresight",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "0961a62bed7ee412bf80fe5a9b879e5586964358",
                                                "name": "swh/foresight",
                                                "required": true,
                                                "short_name": "foresight",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/foresight"
                                            },
                                            "cc-github.bmwgroup.net/swh/franky_ib": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/franky_ib",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "7a74d491251435e7b011e7010d11fbc9224b355c",
                                                "name": "swh/franky_ib",
                                                "required": true,
                                                "short_name": "franky_ib",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/franky_ib"
                                            },
                                            "cc-github.bmwgroup.net/swh/gnss_common": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/gnss_common",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "7aeb42bd9976938f99a41c088c70fe8af14ee8fc",
                                                "name": "swh/gnss_common",
                                                "required": true,
                                                "short_name": "gnss_common",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/gnss_common"
                                            },
                                            "cc-github.bmwgroup.net/swh/ib-vip": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/ib-vip",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "77d3abe6f172efef2f93e6c3a61af0f3ee7d7967",
                                                "name": "swh/ib-vip",
                                                "required": true,
                                                "short_name": "ib-vip",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/ib-vip"
                                            },
                                            "cc-github.bmwgroup.net/swh/ltf-dlt": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/ltf-dlt",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "68fa15c725670a73c3c7f3566a99f38cd3a87ae5",
                                                "name": "swh/ltf-dlt",
                                                "required": true,
                                                "short_name": "ltf-dlt",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/ltf-dlt"
                                            },
                                            "cc-github.bmwgroup.net/swh/orion": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/orion",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "72eb2c62dc7bccf336d71917365610e01f7b7512",
                                                "name": "swh/orion",
                                                "required": true,
                                                "short_name": "orion",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/orion"
                                            }
                                        }
                                    },
                                    "ansible_loop_var": "zj_project",
                                    "changed": false,
                                    "failed": false,
                                    "zj_project": {
                                        "key": "cc-github.bmwgroup.net/swh/orion",
                                        "value": {
                                            "canonical_hostname": "cc-github.bmwgroup.net",
                                            "canonical_name": "cc-github.bmwgroup.net/swh/orion",
                                            "checkout": "master",
                                            "checkout_description": "zuul branch",
                                            "commit": "72eb2c62dc7bccf336d71917365610e01f7b7512",
                                            "name": "swh/orion",
                                            "required": true,
                                            "short_name": "orion",
                                            "src_dir": "src/cc-github.bmwgroup.net/swh/orion"
                                        }
                                    }
                                },
                                {
                                    "ansible_facts": {
                                        "_zuul_projects": {
                                            "cc-github.bmwgroup.net/swh/adp": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/adp",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "8d83dea1d58bef901e97793e1c34ad57986fada1",
                                                "name": "swh/adp",
                                                "required": true,
                                                "short_name": "adp",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/adp"
                                            },
                                            "cc-github.bmwgroup.net/swh/cvc": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/cvc",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "dbf0e56926a6baad91df5b15b84746c66de73a47",
                                                "name": "swh/cvc",
                                                "required": true,
                                                "short_name": "cvc",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/cvc"
                                            },
                                            "cc-github.bmwgroup.net/swh/ddad": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/ddad",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "32fe27876b12e612823c5f9cfd63b2cc1eaa68c1",
                                                "name": "swh/ddad",
                                                "required": true,
                                                "short_name": "ddad",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/ddad"
                                            },
                                            "cc-github.bmwgroup.net/swh/ddad-domains-fasinfo": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/ddad-domains-fasinfo",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "a5b41fd76a124026ff81320e27d5caa5a772f235",
                                                "name": "swh/ddad-domains-fasinfo",
                                                "required": true,
                                                "short_name": "ddad-domains-fasinfo",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/ddad-domains-fasinfo"
                                            },
                                            "cc-github.bmwgroup.net/swh/ddad-domains-generic": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/ddad-domains-generic",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "872e7456cf3b5838f30c47753e8187b8c62b636a",
                                                "name": "swh/ddad-domains-generic",
                                                "required": true,
                                                "short_name": "ddad-domains-generic",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/ddad-domains-generic"
                                            },
                                            "cc-github.bmwgroup.net/swh/ddad-ecu-ipnext": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/ddad-ecu-ipnext",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "4e0fd5384e92431311a139b52f3b191523237f3f",
                                                "name": "swh/ddad-ecu-ipnext",
                                                "required": true,
                                                "short_name": "ddad-ecu-ipnext",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/ddad-ecu-ipnext"
                                            },
                                            "cc-github.bmwgroup.net/swh/ddad_ci_config": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/ddad_ci_config",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "a2ea1242739a7a16dba7d7781925949e31cfc29f",
                                                "name": "swh/ddad_ci_config",
                                                "required": true,
                                                "short_name": "ddad_ci_config",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/ddad_ci_config"
                                            },
                                            "cc-github.bmwgroup.net/swh/ddad_platform": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/ddad_platform",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "0fc13c778f15b8def496ce821b67df115746cfb6",
                                                "name": "swh/ddad_platform",
                                                "required": true,
                                                "short_name": "ddad_platform",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/ddad_platform"
                                            },
                                            "cc-github.bmwgroup.net/swh/domain-tools": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/domain-tools",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "22e48aea74d3e1a9d405529652492a0cfd84611a",
                                                "name": "swh/domain-tools",
                                                "required": true,
                                                "short_name": "domain-tools",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/domain-tools"
                                            },
                                            "cc-github.bmwgroup.net/swh/ecu_xpad_sc_mpad": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/ecu_xpad_sc_mpad",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "9f275d5b9f924de72632bda96690327fccdd5ff5",
                                                "name": "swh/ecu_xpad_sc_mpad",
                                                "required": true,
                                                "short_name": "ecu_xpad_sc_mpad",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/ecu_xpad_sc_mpad"
                                            },
                                            "cc-github.bmwgroup.net/swh/foresight": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/foresight",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "0961a62bed7ee412bf80fe5a9b879e5586964358",
                                                "name": "swh/foresight",
                                                "required": true,
                                                "short_name": "foresight",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/foresight"
                                            },
                                            "cc-github.bmwgroup.net/swh/franky_ib": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/franky_ib",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "7a74d491251435e7b011e7010d11fbc9224b355c",
                                                "name": "swh/franky_ib",
                                                "required": true,
                                                "short_name": "franky_ib",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/franky_ib"
                                            },
                                            "cc-github.bmwgroup.net/swh/gnss_common": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/gnss_common",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "7aeb42bd9976938f99a41c088c70fe8af14ee8fc",
                                                "name": "swh/gnss_common",
                                                "required": true,
                                                "short_name": "gnss_common",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/gnss_common"
                                            },
                                            "cc-github.bmwgroup.net/swh/ib-vip": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/ib-vip",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "77d3abe6f172efef2f93e6c3a61af0f3ee7d7967",
                                                "name": "swh/ib-vip",
                                                "required": true,
                                                "short_name": "ib-vip",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/ib-vip"
                                            },
                                            "cc-github.bmwgroup.net/swh/ltf-dlt": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/ltf-dlt",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "68fa15c725670a73c3c7f3566a99f38cd3a87ae5",
                                                "name": "swh/ltf-dlt",
                                                "required": true,
                                                "short_name": "ltf-dlt",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/ltf-dlt"
                                            },
                                            "cc-github.bmwgroup.net/swh/orion": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/orion",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "72eb2c62dc7bccf336d71917365610e01f7b7512",
                                                "name": "swh/orion",
                                                "required": true,
                                                "short_name": "orion",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/orion"
                                            },
                                            "cc-github.bmwgroup.net/swh/orion_aeb_temp": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/orion_aeb_temp",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "b473c7ab8c70f69511aeff1374d70aef88f33d4a",
                                                "name": "swh/orion_aeb_temp",
                                                "required": true,
                                                "short_name": "orion_aeb_temp",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/orion_aeb_temp"
                                            }
                                        }
                                    },
                                    "ansible_loop_var": "zj_project",
                                    "changed": false,
                                    "failed": false,
                                    "zj_project": {
                                        "key": "cc-github.bmwgroup.net/swh/orion_aeb_temp",
                                        "value": {
                                            "canonical_hostname": "cc-github.bmwgroup.net",
                                            "canonical_name": "cc-github.bmwgroup.net/swh/orion_aeb_temp",
                                            "checkout": "master",
                                            "checkout_description": "zuul branch",
                                            "commit": "b473c7ab8c70f69511aeff1374d70aef88f33d4a",
                                            "name": "swh/orion_aeb_temp",
                                            "required": true,
                                            "short_name": "orion_aeb_temp",
                                            "src_dir": "src/cc-github.bmwgroup.net/swh/orion_aeb_temp"
                                        }
                                    }
                                },
                                {
                                    "ansible_facts": {
                                        "_zuul_projects": {
                                            "cc-github.bmwgroup.net/swh/adp": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/adp",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "8d83dea1d58bef901e97793e1c34ad57986fada1",
                                                "name": "swh/adp",
                                                "required": true,
                                                "short_name": "adp",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/adp"
                                            },
                                            "cc-github.bmwgroup.net/swh/cvc": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/cvc",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "dbf0e56926a6baad91df5b15b84746c66de73a47",
                                                "name": "swh/cvc",
                                                "required": true,
                                                "short_name": "cvc",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/cvc"
                                            },
                                            "cc-github.bmwgroup.net/swh/ddad": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/ddad",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "32fe27876b12e612823c5f9cfd63b2cc1eaa68c1",
                                                "name": "swh/ddad",
                                                "required": true,
                                                "short_name": "ddad",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/ddad"
                                            },
                                            "cc-github.bmwgroup.net/swh/ddad-domains-fasinfo": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/ddad-domains-fasinfo",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "a5b41fd76a124026ff81320e27d5caa5a772f235",
                                                "name": "swh/ddad-domains-fasinfo",
                                                "required": true,
                                                "short_name": "ddad-domains-fasinfo",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/ddad-domains-fasinfo"
                                            },
                                            "cc-github.bmwgroup.net/swh/ddad-domains-generic": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/ddad-domains-generic",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "872e7456cf3b5838f30c47753e8187b8c62b636a",
                                                "name": "swh/ddad-domains-generic",
                                                "required": true,
                                                "short_name": "ddad-domains-generic",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/ddad-domains-generic"
                                            },
                                            "cc-github.bmwgroup.net/swh/ddad-ecu-ipnext": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/ddad-ecu-ipnext",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "4e0fd5384e92431311a139b52f3b191523237f3f",
                                                "name": "swh/ddad-ecu-ipnext",
                                                "required": true,
                                                "short_name": "ddad-ecu-ipnext",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/ddad-ecu-ipnext"
                                            },
                                            "cc-github.bmwgroup.net/swh/ddad_ci_config": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/ddad_ci_config",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "a2ea1242739a7a16dba7d7781925949e31cfc29f",
                                                "name": "swh/ddad_ci_config",
                                                "required": true,
                                                "short_name": "ddad_ci_config",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/ddad_ci_config"
                                            },
                                            "cc-github.bmwgroup.net/swh/ddad_platform": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/ddad_platform",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "0fc13c778f15b8def496ce821b67df115746cfb6",
                                                "name": "swh/ddad_platform",
                                                "required": true,
                                                "short_name": "ddad_platform",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/ddad_platform"
                                            },
                                            "cc-github.bmwgroup.net/swh/domain-tools": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/domain-tools",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "22e48aea74d3e1a9d405529652492a0cfd84611a",
                                                "name": "swh/domain-tools",
                                                "required": true,
                                                "short_name": "domain-tools",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/domain-tools"
                                            },
                                            "cc-github.bmwgroup.net/swh/ecu_xpad_sc_mpad": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/ecu_xpad_sc_mpad",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "9f275d5b9f924de72632bda96690327fccdd5ff5",
                                                "name": "swh/ecu_xpad_sc_mpad",
                                                "required": true,
                                                "short_name": "ecu_xpad_sc_mpad",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/ecu_xpad_sc_mpad"
                                            },
                                            "cc-github.bmwgroup.net/swh/foresight": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/foresight",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "0961a62bed7ee412bf80fe5a9b879e5586964358",
                                                "name": "swh/foresight",
                                                "required": true,
                                                "short_name": "foresight",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/foresight"
                                            },
                                            "cc-github.bmwgroup.net/swh/franky_ib": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/franky_ib",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "7a74d491251435e7b011e7010d11fbc9224b355c",
                                                "name": "swh/franky_ib",
                                                "required": true,
                                                "short_name": "franky_ib",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/franky_ib"
                                            },
                                            "cc-github.bmwgroup.net/swh/gnss_common": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/gnss_common",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "7aeb42bd9976938f99a41c088c70fe8af14ee8fc",
                                                "name": "swh/gnss_common",
                                                "required": true,
                                                "short_name": "gnss_common",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/gnss_common"
                                            },
                                            "cc-github.bmwgroup.net/swh/ib-vip": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/ib-vip",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "77d3abe6f172efef2f93e6c3a61af0f3ee7d7967",
                                                "name": "swh/ib-vip",
                                                "required": true,
                                                "short_name": "ib-vip",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/ib-vip"
                                            },
                                            "cc-github.bmwgroup.net/swh/ltf-dlt": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/ltf-dlt",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "68fa15c725670a73c3c7f3566a99f38cd3a87ae5",
                                                "name": "swh/ltf-dlt",
                                                "required": true,
                                                "short_name": "ltf-dlt",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/ltf-dlt"
                                            },
                                            "cc-github.bmwgroup.net/swh/orion": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/orion",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "72eb2c62dc7bccf336d71917365610e01f7b7512",
                                                "name": "swh/orion",
                                                "required": true,
                                                "short_name": "orion",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/orion"
                                            },
                                            "cc-github.bmwgroup.net/swh/orion_aeb_temp": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/orion_aeb_temp",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "b473c7ab8c70f69511aeff1374d70aef88f33d4a",
                                                "name": "swh/orion_aeb_temp",
                                                "required": true,
                                                "short_name": "orion_aeb_temp",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/orion_aeb_temp"
                                            },
                                            "cc-github.bmwgroup.net/swh/system_description": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/system_description",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "42dc122349acc14be41c1ebee15c7edff680fb79",
                                                "name": "swh/system_description",
                                                "required": true,
                                                "short_name": "system_description",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/system_description"
                                            }
                                        }
                                    },
                                    "ansible_loop_var": "zj_project",
                                    "changed": false,
                                    "failed": false,
                                    "zj_project": {
                                        "key": "cc-github.bmwgroup.net/swh/system_description",
                                        "value": {
                                            "canonical_hostname": "cc-github.bmwgroup.net",
                                            "canonical_name": "cc-github.bmwgroup.net/swh/system_description",
                                            "checkout": "master",
                                            "checkout_description": "zuul branch",
                                            "commit": "42dc122349acc14be41c1ebee15c7edff680fb79",
                                            "name": "swh/system_description",
                                            "required": true,
                                            "short_name": "system_description",
                                            "src_dir": "src/cc-github.bmwgroup.net/swh/system_description"
                                        }
                                    }
                                },
                                {
                                    "ansible_facts": {
                                        "_zuul_projects": {
                                            "cc-github.bmwgroup.net/swh/adp": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/adp",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "8d83dea1d58bef901e97793e1c34ad57986fada1",
                                                "name": "swh/adp",
                                                "required": true,
                                                "short_name": "adp",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/adp"
                                            },
                                            "cc-github.bmwgroup.net/swh/cvc": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/cvc",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "dbf0e56926a6baad91df5b15b84746c66de73a47",
                                                "name": "swh/cvc",
                                                "required": true,
                                                "short_name": "cvc",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/cvc"
                                            },
                                            "cc-github.bmwgroup.net/swh/ddad": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/ddad",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "32fe27876b12e612823c5f9cfd63b2cc1eaa68c1",
                                                "name": "swh/ddad",
                                                "required": true,
                                                "short_name": "ddad",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/ddad"
                                            },
                                            "cc-github.bmwgroup.net/swh/ddad-domains-fasinfo": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/ddad-domains-fasinfo",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "a5b41fd76a124026ff81320e27d5caa5a772f235",
                                                "name": "swh/ddad-domains-fasinfo",
                                                "required": true,
                                                "short_name": "ddad-domains-fasinfo",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/ddad-domains-fasinfo"
                                            },
                                            "cc-github.bmwgroup.net/swh/ddad-domains-generic": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/ddad-domains-generic",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "872e7456cf3b5838f30c47753e8187b8c62b636a",
                                                "name": "swh/ddad-domains-generic",
                                                "required": true,
                                                "short_name": "ddad-domains-generic",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/ddad-domains-generic"
                                            },
                                            "cc-github.bmwgroup.net/swh/ddad-ecu-ipnext": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/ddad-ecu-ipnext",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "4e0fd5384e92431311a139b52f3b191523237f3f",
                                                "name": "swh/ddad-ecu-ipnext",
                                                "required": true,
                                                "short_name": "ddad-ecu-ipnext",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/ddad-ecu-ipnext"
                                            },
                                            "cc-github.bmwgroup.net/swh/ddad_ci_config": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/ddad_ci_config",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "a2ea1242739a7a16dba7d7781925949e31cfc29f",
                                                "name": "swh/ddad_ci_config",
                                                "required": true,
                                                "short_name": "ddad_ci_config",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/ddad_ci_config"
                                            },
                                            "cc-github.bmwgroup.net/swh/ddad_platform": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/ddad_platform",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "0fc13c778f15b8def496ce821b67df115746cfb6",
                                                "name": "swh/ddad_platform",
                                                "required": true,
                                                "short_name": "ddad_platform",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/ddad_platform"
                                            },
                                            "cc-github.bmwgroup.net/swh/domain-tools": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/domain-tools",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "22e48aea74d3e1a9d405529652492a0cfd84611a",
                                                "name": "swh/domain-tools",
                                                "required": true,
                                                "short_name": "domain-tools",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/domain-tools"
                                            },
                                            "cc-github.bmwgroup.net/swh/ecu_xpad_sc_mpad": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/ecu_xpad_sc_mpad",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "9f275d5b9f924de72632bda96690327fccdd5ff5",
                                                "name": "swh/ecu_xpad_sc_mpad",
                                                "required": true,
                                                "short_name": "ecu_xpad_sc_mpad",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/ecu_xpad_sc_mpad"
                                            },
                                            "cc-github.bmwgroup.net/swh/foresight": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/foresight",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "0961a62bed7ee412bf80fe5a9b879e5586964358",
                                                "name": "swh/foresight",
                                                "required": true,
                                                "short_name": "foresight",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/foresight"
                                            },
                                            "cc-github.bmwgroup.net/swh/franky_ib": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/franky_ib",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "7a74d491251435e7b011e7010d11fbc9224b355c",
                                                "name": "swh/franky_ib",
                                                "required": true,
                                                "short_name": "franky_ib",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/franky_ib"
                                            },
                                            "cc-github.bmwgroup.net/swh/gnss_common": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/gnss_common",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "7aeb42bd9976938f99a41c088c70fe8af14ee8fc",
                                                "name": "swh/gnss_common",
                                                "required": true,
                                                "short_name": "gnss_common",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/gnss_common"
                                            },
                                            "cc-github.bmwgroup.net/swh/ib-vip": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/ib-vip",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "77d3abe6f172efef2f93e6c3a61af0f3ee7d7967",
                                                "name": "swh/ib-vip",
                                                "required": true,
                                                "short_name": "ib-vip",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/ib-vip"
                                            },
                                            "cc-github.bmwgroup.net/swh/ltf-dlt": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/ltf-dlt",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "68fa15c725670a73c3c7f3566a99f38cd3a87ae5",
                                                "name": "swh/ltf-dlt",
                                                "required": true,
                                                "short_name": "ltf-dlt",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/ltf-dlt"
                                            },
                                            "cc-github.bmwgroup.net/swh/orion": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/orion",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "72eb2c62dc7bccf336d71917365610e01f7b7512",
                                                "name": "swh/orion",
                                                "required": true,
                                                "short_name": "orion",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/orion"
                                            },
                                            "cc-github.bmwgroup.net/swh/orion_aeb_temp": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/orion_aeb_temp",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "b473c7ab8c70f69511aeff1374d70aef88f33d4a",
                                                "name": "swh/orion_aeb_temp",
                                                "required": true,
                                                "short_name": "orion_aeb_temp",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/orion_aeb_temp"
                                            },
                                            "cc-github.bmwgroup.net/swh/system_description": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/system_description",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "42dc122349acc14be41c1ebee15c7edff680fb79",
                                                "name": "swh/system_description",
                                                "required": true,
                                                "short_name": "system_description",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/system_description"
                                            },
                                            "cc-github.bmwgroup.net/swh/ufm": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/ufm",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "24d683807041b01ac000b8a6212ec6ad50e3b5e2",
                                                "name": "swh/ufm",
                                                "required": true,
                                                "short_name": "ufm",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/ufm"
                                            }
                                        }
                                    },
                                    "ansible_loop_var": "zj_project",
                                    "changed": false,
                                    "failed": false,
                                    "zj_project": {
                                        "key": "cc-github.bmwgroup.net/swh/ufm",
                                        "value": {
                                            "canonical_hostname": "cc-github.bmwgroup.net",
                                            "canonical_name": "cc-github.bmwgroup.net/swh/ufm",
                                            "checkout": "master",
                                            "checkout_description": "zuul branch",
                                            "commit": "24d683807041b01ac000b8a6212ec6ad50e3b5e2",
                                            "name": "swh/ufm",
                                            "required": true,
                                            "short_name": "ufm",
                                            "src_dir": "src/cc-github.bmwgroup.net/swh/ufm"
                                        }
                                    }
                                },
                                {
                                    "ansible_facts": {
                                        "_zuul_projects": {
                                            "cc-github.bmwgroup.net/swh/adp": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/adp",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "8d83dea1d58bef901e97793e1c34ad57986fada1",
                                                "name": "swh/adp",
                                                "required": true,
                                                "short_name": "adp",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/adp"
                                            },
                                            "cc-github.bmwgroup.net/swh/cvc": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/cvc",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "dbf0e56926a6baad91df5b15b84746c66de73a47",
                                                "name": "swh/cvc",
                                                "required": true,
                                                "short_name": "cvc",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/cvc"
                                            },
                                            "cc-github.bmwgroup.net/swh/ddad": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/ddad",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "32fe27876b12e612823c5f9cfd63b2cc1eaa68c1",
                                                "name": "swh/ddad",
                                                "required": true,
                                                "short_name": "ddad",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/ddad"
                                            },
                                            "cc-github.bmwgroup.net/swh/ddad-domains-fasinfo": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/ddad-domains-fasinfo",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "a5b41fd76a124026ff81320e27d5caa5a772f235",
                                                "name": "swh/ddad-domains-fasinfo",
                                                "required": true,
                                                "short_name": "ddad-domains-fasinfo",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/ddad-domains-fasinfo"
                                            },
                                            "cc-github.bmwgroup.net/swh/ddad-domains-generic": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/ddad-domains-generic",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "872e7456cf3b5838f30c47753e8187b8c62b636a",
                                                "name": "swh/ddad-domains-generic",
                                                "required": true,
                                                "short_name": "ddad-domains-generic",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/ddad-domains-generic"
                                            },
                                            "cc-github.bmwgroup.net/swh/ddad-ecu-ipnext": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/ddad-ecu-ipnext",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "4e0fd5384e92431311a139b52f3b191523237f3f",
                                                "name": "swh/ddad-ecu-ipnext",
                                                "required": true,
                                                "short_name": "ddad-ecu-ipnext",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/ddad-ecu-ipnext"
                                            },
                                            "cc-github.bmwgroup.net/swh/ddad_ci_config": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/ddad_ci_config",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "a2ea1242739a7a16dba7d7781925949e31cfc29f",
                                                "name": "swh/ddad_ci_config",
                                                "required": true,
                                                "short_name": "ddad_ci_config",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/ddad_ci_config"
                                            },
                                            "cc-github.bmwgroup.net/swh/ddad_platform": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/ddad_platform",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "0fc13c778f15b8def496ce821b67df115746cfb6",
                                                "name": "swh/ddad_platform",
                                                "required": true,
                                                "short_name": "ddad_platform",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/ddad_platform"
                                            },
                                            "cc-github.bmwgroup.net/swh/domain-tools": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/domain-tools",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "22e48aea74d3e1a9d405529652492a0cfd84611a",
                                                "name": "swh/domain-tools",
                                                "required": true,
                                                "short_name": "domain-tools",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/domain-tools"
                                            },
                                            "cc-github.bmwgroup.net/swh/ecu_xpad_sc_mpad": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/ecu_xpad_sc_mpad",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "9f275d5b9f924de72632bda96690327fccdd5ff5",
                                                "name": "swh/ecu_xpad_sc_mpad",
                                                "required": true,
                                                "short_name": "ecu_xpad_sc_mpad",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/ecu_xpad_sc_mpad"
                                            },
                                            "cc-github.bmwgroup.net/swh/foresight": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/foresight",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "0961a62bed7ee412bf80fe5a9b879e5586964358",
                                                "name": "swh/foresight",
                                                "required": true,
                                                "short_name": "foresight",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/foresight"
                                            },
                                            "cc-github.bmwgroup.net/swh/franky_ib": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/franky_ib",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "7a74d491251435e7b011e7010d11fbc9224b355c",
                                                "name": "swh/franky_ib",
                                                "required": true,
                                                "short_name": "franky_ib",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/franky_ib"
                                            },
                                            "cc-github.bmwgroup.net/swh/gnss_common": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/gnss_common",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "7aeb42bd9976938f99a41c088c70fe8af14ee8fc",
                                                "name": "swh/gnss_common",
                                                "required": true,
                                                "short_name": "gnss_common",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/gnss_common"
                                            },
                                            "cc-github.bmwgroup.net/swh/ib-vip": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/ib-vip",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "77d3abe6f172efef2f93e6c3a61af0f3ee7d7967",
                                                "name": "swh/ib-vip",
                                                "required": true,
                                                "short_name": "ib-vip",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/ib-vip"
                                            },
                                            "cc-github.bmwgroup.net/swh/ltf-dlt": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/ltf-dlt",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "68fa15c725670a73c3c7f3566a99f38cd3a87ae5",
                                                "name": "swh/ltf-dlt",
                                                "required": true,
                                                "short_name": "ltf-dlt",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/ltf-dlt"
                                            },
                                            "cc-github.bmwgroup.net/swh/orion": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/orion",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "72eb2c62dc7bccf336d71917365610e01f7b7512",
                                                "name": "swh/orion",
                                                "required": true,
                                                "short_name": "orion",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/orion"
                                            },
                                            "cc-github.bmwgroup.net/swh/orion_aeb_temp": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/orion_aeb_temp",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "b473c7ab8c70f69511aeff1374d70aef88f33d4a",
                                                "name": "swh/orion_aeb_temp",
                                                "required": true,
                                                "short_name": "orion_aeb_temp",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/orion_aeb_temp"
                                            },
                                            "cc-github.bmwgroup.net/swh/system_description": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/system_description",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "42dc122349acc14be41c1ebee15c7edff680fb79",
                                                "name": "swh/system_description",
                                                "required": true,
                                                "short_name": "system_description",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/system_description"
                                            },
                                            "cc-github.bmwgroup.net/swh/ufm": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/ufm",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "24d683807041b01ac000b8a6212ec6ad50e3b5e2",
                                                "name": "swh/ufm",
                                                "required": true,
                                                "short_name": "ufm",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/ufm"
                                            },
                                            "cc-github.bmwgroup.net/swh/xpad-ara": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/xpad-ara",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "591c4c708640423656b97148b3d5767a987d4818",
                                                "name": "swh/xpad-ara",
                                                "required": true,
                                                "short_name": "xpad-ara",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/xpad-ara"
                                            }
                                        }
                                    },
                                    "ansible_loop_var": "zj_project",
                                    "changed": false,
                                    "failed": false,
                                    "zj_project": {
                                        "key": "cc-github.bmwgroup.net/swh/xpad-ara",
                                        "value": {
                                            "canonical_hostname": "cc-github.bmwgroup.net",
                                            "canonical_name": "cc-github.bmwgroup.net/swh/xpad-ara",
                                            "checkout": "master",
                                            "checkout_description": "zuul branch",
                                            "commit": "591c4c708640423656b97148b3d5767a987d4818",
                                            "name": "swh/xpad-ara",
                                            "required": true,
                                            "short_name": "xpad-ara",
                                            "src_dir": "src/cc-github.bmwgroup.net/swh/xpad-ara"
                                        }
                                    }
                                },
                                {
                                    "ansible_facts": {
                                        "_zuul_projects": {
                                            "cc-github.bmwgroup.net/swh/adp": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/adp",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "8d83dea1d58bef901e97793e1c34ad57986fada1",
                                                "name": "swh/adp",
                                                "required": true,
                                                "short_name": "adp",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/adp"
                                            },
                                            "cc-github.bmwgroup.net/swh/cvc": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/cvc",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "dbf0e56926a6baad91df5b15b84746c66de73a47",
                                                "name": "swh/cvc",
                                                "required": true,
                                                "short_name": "cvc",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/cvc"
                                            },
                                            "cc-github.bmwgroup.net/swh/ddad": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/ddad",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "32fe27876b12e612823c5f9cfd63b2cc1eaa68c1",
                                                "name": "swh/ddad",
                                                "required": true,
                                                "short_name": "ddad",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/ddad"
                                            },
                                            "cc-github.bmwgroup.net/swh/ddad-domains-fasinfo": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/ddad-domains-fasinfo",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "a5b41fd76a124026ff81320e27d5caa5a772f235",
                                                "name": "swh/ddad-domains-fasinfo",
                                                "required": true,
                                                "short_name": "ddad-domains-fasinfo",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/ddad-domains-fasinfo"
                                            },
                                            "cc-github.bmwgroup.net/swh/ddad-domains-generic": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/ddad-domains-generic",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "872e7456cf3b5838f30c47753e8187b8c62b636a",
                                                "name": "swh/ddad-domains-generic",
                                                "required": true,
                                                "short_name": "ddad-domains-generic",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/ddad-domains-generic"
                                            },
                                            "cc-github.bmwgroup.net/swh/ddad-ecu-ipnext": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/ddad-ecu-ipnext",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "4e0fd5384e92431311a139b52f3b191523237f3f",
                                                "name": "swh/ddad-ecu-ipnext",
                                                "required": true,
                                                "short_name": "ddad-ecu-ipnext",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/ddad-ecu-ipnext"
                                            },
                                            "cc-github.bmwgroup.net/swh/ddad_ci_config": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/ddad_ci_config",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "a2ea1242739a7a16dba7d7781925949e31cfc29f",
                                                "name": "swh/ddad_ci_config",
                                                "required": true,
                                                "short_name": "ddad_ci_config",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/ddad_ci_config"
                                            },
                                            "cc-github.bmwgroup.net/swh/ddad_platform": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/ddad_platform",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "0fc13c778f15b8def496ce821b67df115746cfb6",
                                                "name": "swh/ddad_platform",
                                                "required": true,
                                                "short_name": "ddad_platform",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/ddad_platform"
                                            },
                                            "cc-github.bmwgroup.net/swh/domain-tools": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/domain-tools",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "22e48aea74d3e1a9d405529652492a0cfd84611a",
                                                "name": "swh/domain-tools",
                                                "required": true,
                                                "short_name": "domain-tools",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/domain-tools"
                                            },
                                            "cc-github.bmwgroup.net/swh/ecu_xpad_sc_mpad": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/ecu_xpad_sc_mpad",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "9f275d5b9f924de72632bda96690327fccdd5ff5",
                                                "name": "swh/ecu_xpad_sc_mpad",
                                                "required": true,
                                                "short_name": "ecu_xpad_sc_mpad",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/ecu_xpad_sc_mpad"
                                            },
                                            "cc-github.bmwgroup.net/swh/foresight": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/foresight",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "0961a62bed7ee412bf80fe5a9b879e5586964358",
                                                "name": "swh/foresight",
                                                "required": true,
                                                "short_name": "foresight",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/foresight"
                                            },
                                            "cc-github.bmwgroup.net/swh/franky_ib": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/franky_ib",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "7a74d491251435e7b011e7010d11fbc9224b355c",
                                                "name": "swh/franky_ib",
                                                "required": true,
                                                "short_name": "franky_ib",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/franky_ib"
                                            },
                                            "cc-github.bmwgroup.net/swh/gnss_common": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/gnss_common",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "7aeb42bd9976938f99a41c088c70fe8af14ee8fc",
                                                "name": "swh/gnss_common",
                                                "required": true,
                                                "short_name": "gnss_common",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/gnss_common"
                                            },
                                            "cc-github.bmwgroup.net/swh/ib-vip": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/ib-vip",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "77d3abe6f172efef2f93e6c3a61af0f3ee7d7967",
                                                "name": "swh/ib-vip",
                                                "required": true,
                                                "short_name": "ib-vip",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/ib-vip"
                                            },
                                            "cc-github.bmwgroup.net/swh/ltf-dlt": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/ltf-dlt",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "68fa15c725670a73c3c7f3566a99f38cd3a87ae5",
                                                "name": "swh/ltf-dlt",
                                                "required": true,
                                                "short_name": "ltf-dlt",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/ltf-dlt"
                                            },
                                            "cc-github.bmwgroup.net/swh/orion": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/orion",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "72eb2c62dc7bccf336d71917365610e01f7b7512",
                                                "name": "swh/orion",
                                                "required": true,
                                                "short_name": "orion",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/orion"
                                            },
                                            "cc-github.bmwgroup.net/swh/orion_aeb_temp": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/orion_aeb_temp",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "b473c7ab8c70f69511aeff1374d70aef88f33d4a",
                                                "name": "swh/orion_aeb_temp",
                                                "required": true,
                                                "short_name": "orion_aeb_temp",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/orion_aeb_temp"
                                            },
                                            "cc-github.bmwgroup.net/swh/system_description": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/system_description",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "42dc122349acc14be41c1ebee15c7edff680fb79",
                                                "name": "swh/system_description",
                                                "required": true,
                                                "short_name": "system_description",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/system_description"
                                            },
                                            "cc-github.bmwgroup.net/swh/ufm": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/ufm",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "24d683807041b01ac000b8a6212ec6ad50e3b5e2",
                                                "name": "swh/ufm",
                                                "required": true,
                                                "short_name": "ufm",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/ufm"
                                            },
                                            "cc-github.bmwgroup.net/swh/xpad-ara": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/xpad-ara",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "591c4c708640423656b97148b3d5767a987d4818",
                                                "name": "swh/xpad-ara",
                                                "required": true,
                                                "short_name": "xpad-ara",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/xpad-ara"
                                            },
                                            "cc-github.bmwgroup.net/swh/xpad-shared": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/xpad-shared",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "5fe3ea2c8e16591c6c11a5398c0fd866652ef652",
                                                "name": "swh/xpad-shared",
                                                "required": true,
                                                "short_name": "xpad-shared",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/xpad-shared"
                                            }
                                        }
                                    },
                                    "ansible_loop_var": "zj_project",
                                    "changed": false,
                                    "failed": false,
                                    "zj_project": {
                                        "key": "cc-github.bmwgroup.net/swh/xpad-shared",
                                        "value": {
                                            "canonical_hostname": "cc-github.bmwgroup.net",
                                            "canonical_name": "cc-github.bmwgroup.net/swh/xpad-shared",
                                            "checkout": "master",
                                            "checkout_description": "zuul branch",
                                            "commit": "5fe3ea2c8e16591c6c11a5398c0fd866652ef652",
                                            "name": "swh/xpad-shared",
                                            "required": true,
                                            "short_name": "xpad-shared",
                                            "src_dir": "src/cc-github.bmwgroup.net/swh/xpad-shared"
                                        }
                                    }
                                },
                                {
                                    "ansible_facts": {
                                        "_zuul_projects": {
                                            "cc-github.bmwgroup.net/swh/adp": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/adp",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "8d83dea1d58bef901e97793e1c34ad57986fada1",
                                                "name": "swh/adp",
                                                "required": true,
                                                "short_name": "adp",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/adp"
                                            },
                                            "cc-github.bmwgroup.net/swh/cvc": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/cvc",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "dbf0e56926a6baad91df5b15b84746c66de73a47",
                                                "name": "swh/cvc",
                                                "required": true,
                                                "short_name": "cvc",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/cvc"
                                            },
                                            "cc-github.bmwgroup.net/swh/ddad": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/ddad",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "32fe27876b12e612823c5f9cfd63b2cc1eaa68c1",
                                                "name": "swh/ddad",
                                                "required": true,
                                                "short_name": "ddad",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/ddad"
                                            },
                                            "cc-github.bmwgroup.net/swh/ddad-domains-fasinfo": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/ddad-domains-fasinfo",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "a5b41fd76a124026ff81320e27d5caa5a772f235",
                                                "name": "swh/ddad-domains-fasinfo",
                                                "required": true,
                                                "short_name": "ddad-domains-fasinfo",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/ddad-domains-fasinfo"
                                            },
                                            "cc-github.bmwgroup.net/swh/ddad-domains-generic": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/ddad-domains-generic",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "872e7456cf3b5838f30c47753e8187b8c62b636a",
                                                "name": "swh/ddad-domains-generic",
                                                "required": true,
                                                "short_name": "ddad-domains-generic",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/ddad-domains-generic"
                                            },
                                            "cc-github.bmwgroup.net/swh/ddad-ecu-ipnext": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/ddad-ecu-ipnext",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "4e0fd5384e92431311a139b52f3b191523237f3f",
                                                "name": "swh/ddad-ecu-ipnext",
                                                "required": true,
                                                "short_name": "ddad-ecu-ipnext",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/ddad-ecu-ipnext"
                                            },
                                            "cc-github.bmwgroup.net/swh/ddad_ci_config": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/ddad_ci_config",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "a2ea1242739a7a16dba7d7781925949e31cfc29f",
                                                "name": "swh/ddad_ci_config",
                                                "required": true,
                                                "short_name": "ddad_ci_config",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/ddad_ci_config"
                                            },
                                            "cc-github.bmwgroup.net/swh/ddad_platform": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/ddad_platform",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "0fc13c778f15b8def496ce821b67df115746cfb6",
                                                "name": "swh/ddad_platform",
                                                "required": true,
                                                "short_name": "ddad_platform",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/ddad_platform"
                                            },
                                            "cc-github.bmwgroup.net/swh/domain-tools": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/domain-tools",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "22e48aea74d3e1a9d405529652492a0cfd84611a",
                                                "name": "swh/domain-tools",
                                                "required": true,
                                                "short_name": "domain-tools",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/domain-tools"
                                            },
                                            "cc-github.bmwgroup.net/swh/ecu_xpad_sc_mpad": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/ecu_xpad_sc_mpad",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "9f275d5b9f924de72632bda96690327fccdd5ff5",
                                                "name": "swh/ecu_xpad_sc_mpad",
                                                "required": true,
                                                "short_name": "ecu_xpad_sc_mpad",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/ecu_xpad_sc_mpad"
                                            },
                                            "cc-github.bmwgroup.net/swh/foresight": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/foresight",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "0961a62bed7ee412bf80fe5a9b879e5586964358",
                                                "name": "swh/foresight",
                                                "required": true,
                                                "short_name": "foresight",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/foresight"
                                            },
                                            "cc-github.bmwgroup.net/swh/franky_ib": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/franky_ib",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "7a74d491251435e7b011e7010d11fbc9224b355c",
                                                "name": "swh/franky_ib",
                                                "required": true,
                                                "short_name": "franky_ib",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/franky_ib"
                                            },
                                            "cc-github.bmwgroup.net/swh/gnss_common": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/gnss_common",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "7aeb42bd9976938f99a41c088c70fe8af14ee8fc",
                                                "name": "swh/gnss_common",
                                                "required": true,
                                                "short_name": "gnss_common",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/gnss_common"
                                            },
                                            "cc-github.bmwgroup.net/swh/ib-vip": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/ib-vip",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "77d3abe6f172efef2f93e6c3a61af0f3ee7d7967",
                                                "name": "swh/ib-vip",
                                                "required": true,
                                                "short_name": "ib-vip",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/ib-vip"
                                            },
                                            "cc-github.bmwgroup.net/swh/ltf-dlt": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/ltf-dlt",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "68fa15c725670a73c3c7f3566a99f38cd3a87ae5",
                                                "name": "swh/ltf-dlt",
                                                "required": true,
                                                "short_name": "ltf-dlt",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/ltf-dlt"
                                            },
                                            "cc-github.bmwgroup.net/swh/orion": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/orion",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "72eb2c62dc7bccf336d71917365610e01f7b7512",
                                                "name": "swh/orion",
                                                "required": true,
                                                "short_name": "orion",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/orion"
                                            },
                                            "cc-github.bmwgroup.net/swh/orion_aeb_temp": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/orion_aeb_temp",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "b473c7ab8c70f69511aeff1374d70aef88f33d4a",
                                                "name": "swh/orion_aeb_temp",
                                                "required": true,
                                                "short_name": "orion_aeb_temp",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/orion_aeb_temp"
                                            },
                                            "cc-github.bmwgroup.net/swh/system_description": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/system_description",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "42dc122349acc14be41c1ebee15c7edff680fb79",
                                                "name": "swh/system_description",
                                                "required": true,
                                                "short_name": "system_description",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/system_description"
                                            },
                                            "cc-github.bmwgroup.net/swh/ufm": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/ufm",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "24d683807041b01ac000b8a6212ec6ad50e3b5e2",
                                                "name": "swh/ufm",
                                                "required": true,
                                                "short_name": "ufm",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/ufm"
                                            },
                                            "cc-github.bmwgroup.net/swh/xpad-ara": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/xpad-ara",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "591c4c708640423656b97148b3d5767a987d4818",
                                                "name": "swh/xpad-ara",
                                                "required": true,
                                                "short_name": "xpad-ara",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/xpad-ara"
                                            },
                                            "cc-github.bmwgroup.net/swh/xpad-shared": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/xpad-shared",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "5fe3ea2c8e16591c6c11a5398c0fd866652ef652",
                                                "name": "swh/xpad-shared",
                                                "required": true,
                                                "short_name": "xpad-shared",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/xpad-shared"
                                            },
                                            "cc-github.bmwgroup.net/swh/xpad_xpc": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/xpad_xpc",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "9ce2131edf06568e92545d2f5d1464924b016780",
                                                "name": "swh/xpad_xpc",
                                                "required": true,
                                                "short_name": "xpad_xpc",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/xpad_xpc"
                                            }
                                        }
                                    },
                                    "ansible_loop_var": "zj_project",
                                    "changed": false,
                                    "failed": false,
                                    "zj_project": {
                                        "key": "cc-github.bmwgroup.net/swh/xpad_xpc",
                                        "value": {
                                            "canonical_hostname": "cc-github.bmwgroup.net",
                                            "canonical_name": "cc-github.bmwgroup.net/swh/xpad_xpc",
                                            "checkout": "master",
                                            "checkout_description": "zuul branch",
                                            "commit": "9ce2131edf06568e92545d2f5d1464924b016780",
                                            "name": "swh/xpad_xpc",
                                            "required": true,
                                            "short_name": "xpad_xpc",
                                            "src_dir": "src/cc-github.bmwgroup.net/swh/xpad_xpc"
                                        }
                                    }
                                },
                                {
                                    "ansible_facts": {
                                        "_zuul_projects": {
                                            "cc-github.bmwgroup.net/swh/adp": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/adp",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "8d83dea1d58bef901e97793e1c34ad57986fada1",
                                                "name": "swh/adp",
                                                "required": true,
                                                "short_name": "adp",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/adp"
                                            },
                                            "cc-github.bmwgroup.net/swh/cvc": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/cvc",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "dbf0e56926a6baad91df5b15b84746c66de73a47",
                                                "name": "swh/cvc",
                                                "required": true,
                                                "short_name": "cvc",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/cvc"
                                            },
                                            "cc-github.bmwgroup.net/swh/ddad": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/ddad",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "32fe27876b12e612823c5f9cfd63b2cc1eaa68c1",
                                                "name": "swh/ddad",
                                                "required": true,
                                                "short_name": "ddad",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/ddad"
                                            },
                                            "cc-github.bmwgroup.net/swh/ddad-domains-fasinfo": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/ddad-domains-fasinfo",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "a5b41fd76a124026ff81320e27d5caa5a772f235",
                                                "name": "swh/ddad-domains-fasinfo",
                                                "required": true,
                                                "short_name": "ddad-domains-fasinfo",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/ddad-domains-fasinfo"
                                            },
                                            "cc-github.bmwgroup.net/swh/ddad-domains-generic": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/ddad-domains-generic",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "872e7456cf3b5838f30c47753e8187b8c62b636a",
                                                "name": "swh/ddad-domains-generic",
                                                "required": true,
                                                "short_name": "ddad-domains-generic",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/ddad-domains-generic"
                                            },
                                            "cc-github.bmwgroup.net/swh/ddad-ecu-ipnext": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/ddad-ecu-ipnext",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "4e0fd5384e92431311a139b52f3b191523237f3f",
                                                "name": "swh/ddad-ecu-ipnext",
                                                "required": true,
                                                "short_name": "ddad-ecu-ipnext",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/ddad-ecu-ipnext"
                                            },
                                            "cc-github.bmwgroup.net/swh/ddad_ci_config": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/ddad_ci_config",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "a2ea1242739a7a16dba7d7781925949e31cfc29f",
                                                "name": "swh/ddad_ci_config",
                                                "required": true,
                                                "short_name": "ddad_ci_config",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/ddad_ci_config"
                                            },
                                            "cc-github.bmwgroup.net/swh/ddad_platform": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/ddad_platform",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "0fc13c778f15b8def496ce821b67df115746cfb6",
                                                "name": "swh/ddad_platform",
                                                "required": true,
                                                "short_name": "ddad_platform",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/ddad_platform"
                                            },
                                            "cc-github.bmwgroup.net/swh/domain-tools": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/domain-tools",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "22e48aea74d3e1a9d405529652492a0cfd84611a",
                                                "name": "swh/domain-tools",
                                                "required": true,
                                                "short_name": "domain-tools",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/domain-tools"
                                            },
                                            "cc-github.bmwgroup.net/swh/ecu_xpad_sc_mpad": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/ecu_xpad_sc_mpad",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "9f275d5b9f924de72632bda96690327fccdd5ff5",
                                                "name": "swh/ecu_xpad_sc_mpad",
                                                "required": true,
                                                "short_name": "ecu_xpad_sc_mpad",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/ecu_xpad_sc_mpad"
                                            },
                                            "cc-github.bmwgroup.net/swh/foresight": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/foresight",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "0961a62bed7ee412bf80fe5a9b879e5586964358",
                                                "name": "swh/foresight",
                                                "required": true,
                                                "short_name": "foresight",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/foresight"
                                            },
                                            "cc-github.bmwgroup.net/swh/franky_ib": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/franky_ib",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "7a74d491251435e7b011e7010d11fbc9224b355c",
                                                "name": "swh/franky_ib",
                                                "required": true,
                                                "short_name": "franky_ib",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/franky_ib"
                                            },
                                            "cc-github.bmwgroup.net/swh/gnss_common": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/gnss_common",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "7aeb42bd9976938f99a41c088c70fe8af14ee8fc",
                                                "name": "swh/gnss_common",
                                                "required": true,
                                                "short_name": "gnss_common",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/gnss_common"
                                            },
                                            "cc-github.bmwgroup.net/swh/ib-vip": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/ib-vip",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "77d3abe6f172efef2f93e6c3a61af0f3ee7d7967",
                                                "name": "swh/ib-vip",
                                                "required": true,
                                                "short_name": "ib-vip",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/ib-vip"
                                            },
                                            "cc-github.bmwgroup.net/swh/ltf-dlt": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/ltf-dlt",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "68fa15c725670a73c3c7f3566a99f38cd3a87ae5",
                                                "name": "swh/ltf-dlt",
                                                "required": true,
                                                "short_name": "ltf-dlt",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/ltf-dlt"
                                            },
                                            "cc-github.bmwgroup.net/swh/orion": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/orion",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "72eb2c62dc7bccf336d71917365610e01f7b7512",
                                                "name": "swh/orion",
                                                "required": true,
                                                "short_name": "orion",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/orion"
                                            },
                                            "cc-github.bmwgroup.net/swh/orion_aeb_temp": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/orion_aeb_temp",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "b473c7ab8c70f69511aeff1374d70aef88f33d4a",
                                                "name": "swh/orion_aeb_temp",
                                                "required": true,
                                                "short_name": "orion_aeb_temp",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/orion_aeb_temp"
                                            },
                                            "cc-github.bmwgroup.net/swh/system_description": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/system_description",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "42dc122349acc14be41c1ebee15c7edff680fb79",
                                                "name": "swh/system_description",
                                                "required": true,
                                                "short_name": "system_description",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/system_description"
                                            },
                                            "cc-github.bmwgroup.net/swh/ufm": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/ufm",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "24d683807041b01ac000b8a6212ec6ad50e3b5e2",
                                                "name": "swh/ufm",
                                                "required": true,
                                                "short_name": "ufm",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/ufm"
                                            },
                                            "cc-github.bmwgroup.net/swh/xpad-ara": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/xpad-ara",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "591c4c708640423656b97148b3d5767a987d4818",
                                                "name": "swh/xpad-ara",
                                                "required": true,
                                                "short_name": "xpad-ara",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/xpad-ara"
                                            },
                                            "cc-github.bmwgroup.net/swh/xpad-shared": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/xpad-shared",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "5fe3ea2c8e16591c6c11a5398c0fd866652ef652",
                                                "name": "swh/xpad-shared",
                                                "required": true,
                                                "short_name": "xpad-shared",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/xpad-shared"
                                            },
                                            "cc-github.bmwgroup.net/swh/xpad_xpc": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/xpad_xpc",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "9ce2131edf06568e92545d2f5d1464924b016780",
                                                "name": "swh/xpad_xpc",
                                                "required": true,
                                                "short_name": "xpad_xpc",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/xpad_xpc"
                                            },
                                            "cc-github.bmwgroup.net/swh/zuul-trusted-ddad": {
                                                "canonical_hostname": "cc-github.bmwgroup.net",
                                                "canonical_name": "cc-github.bmwgroup.net/swh/zuul-trusted-ddad",
                                                "checkout": "master",
                                                "checkout_description": "zuul branch",
                                                "commit": "a22500345c4283b6add4f2a3c354c663a904d9d0",
                                                "name": "swh/zuul-trusted-ddad",
                                                "required": true,
                                                "short_name": "zuul-trusted-ddad",
                                                "src_dir": "src/cc-github.bmwgroup.net/swh/zuul-trusted-ddad"
                                            }
                                        }
                                    },
                                    "ansible_loop_var": "zj_project",
                                    "changed": false,
                                    "failed": false,
                                    "zj_project": {
                                        "key": "cc-github.bmwgroup.net/swh/zuul-trusted-ddad",
                                        "value": {
                                            "canonical_hostname": "cc-github.bmwgroup.net",
                                            "canonical_name": "cc-github.bmwgroup.net/swh/zuul-trusted-ddad",
                                            "checkout": "master",
                                            "checkout_description": "zuul branch",
                                            "commit": "a22500345c4283b6add4f2a3c354c663a904d9d0",
                                            "name": "swh/zuul-trusted-ddad",
                                            "required": true,
                                            "short_name": "zuul-trusted-ddad",
                                            "src_dir": "src/cc-github.bmwgroup.net/swh/zuul-trusted-ddad"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-d7cb-6b39-0000000008fb",
                        "name": "prepare-workspace-git",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_2/cc-github.bmwgroup.net/codecraft-oss/zuul-jobs/roles/prepare-workspace-git"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:39:27.365234Z",
                            "start": "2024-04-21T00:39:26.662451Z"
                        },
                        "id": "ce4df5fb-964c-d7cb-6b39-0000000008fd",
                        "name": "Filter zuul projects if sync-only-required-projects flag is set"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "set_fact",
                            "changed": false,
                            "false_condition": "not prepare_workspace_sync_required_projects_only",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-d7cb-6b39-0000000008fb",
                        "name": "prepare-workspace-git",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_2/cc-github.bmwgroup.net/codecraft-oss/zuul-jobs/roles/prepare-workspace-git"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:39:27.415093Z",
                            "start": "2024-04-21T00:39:27.386002Z"
                        },
                        "id": "ce4df5fb-964c-d7cb-6b39-0000000008ff",
                        "name": "Don't filter zuul projects if flag is false"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "shell",
                            "changed": true,
                            "msg": "All items completed",
                            "results": [
                                {
                                    "ansible_loop_var": "zj_project",
                                    "changed": true,
                                    "cmd": "set -ex\nif [ -d \"/var/cache/git/cc-github.bmwgroup.net/swh/adp\" ] ; then\n    # We do a bare clone here first so that we skip creating a working\n    # copy that will be overwritten later anyway.\n    git clone --bare /var/cache/git/cc-github.bmwgroup.net/swh/adp /home/zuul/src/cc-github.bmwgroup.net/swh/adp/.git\nelse\n    git init /home/zuul/src/cc-github.bmwgroup.net/swh/adp\nfi\ncd /home/zuul/src/cc-github.bmwgroup.net/swh/adp\ngit config --local --bool core.bare false\ngit remote -v | grep origin && git remote rm origin || true\ngit remote add origin file:///dev/null\n",
                                    "delta": "0:00:19.558105",
                                    "end": "2024-04-21 00:39:47.255893",
                                    "failed": false,
                                    "invocation": {
                                        "module_args": {
                                            "_raw_params": "set -ex\nif [ -d \"/var/cache/git/cc-github.bmwgroup.net/swh/adp\" ] ; then\n    # We do a bare clone here first so that we skip creating a working\n    # copy that will be overwritten later anyway.\n    git clone --bare /var/cache/git/cc-github.bmwgroup.net/swh/adp /home/zuul/src/cc-github.bmwgroup.net/swh/adp/.git\nelse\n    git init /home/zuul/src/cc-github.bmwgroup.net/swh/adp\nfi\ncd /home/zuul/src/cc-github.bmwgroup.net/swh/adp\ngit config --local --bool core.bare false\ngit remote -v | grep origin && git remote rm origin || true\ngit remote add origin file:///dev/null\n",
                                            "_uses_shell": true,
                                            "argv": null,
                                            "chdir": null,
                                            "creates": "/home/zuul/src/cc-github.bmwgroup.net/swh/adp",
                                            "executable": null,
                                            "removes": null,
                                            "stdin": null,
                                            "stdin_add_newline": true,
                                            "strip_empty_ends": true,
                                            "warn": false,
                                            "zuul_ansible_split_streams": false,
                                            "zuul_log_id": "in-loop-ignore"
                                        }
                                    },
                                    "msg": "",
                                    "rc": 0,
                                    "start": "2024-04-21 00:39:27.697788",
                                    "stderr": "",
                                    "stderr_lines": [],
                                    "stdout": "+ [ -d /var/cache/git/cc-github.bmwgroup.net/swh/adp ]\n+ git clone --bare /var/cache/git/cc-github.bmwgroup.net/swh/adp /home/zuul/src/cc-github.bmwgroup.net/swh/adp/.git\nCloning into bare repository '/home/zuul/src/cc-github.bmwgroup.net/swh/adp/.git'...\ndone.\n+ cd /home/zuul/src/cc-github.bmwgroup.net/swh/adp\n+ git config --local --bool core.bare false\n+ git remote -v\n+ grep origin\norigin\t/var/cache/git/cc-github.bmwgroup.net/swh/adp (fetch)\norigin\t/var/cache/git/cc-github.bmwgroup.net/swh/adp (push)\n+ git remote rm origin\n+ git remote add origin file:///dev/null",
                                    "stdout_lines": [
                                        "+ [ -d /var/cache/git/cc-github.bmwgroup.net/swh/adp ]",
                                        "+ git clone --bare /var/cache/git/cc-github.bmwgroup.net/swh/adp /home/zuul/src/cc-github.bmwgroup.net/swh/adp/.git",
                                        "Cloning into bare repository '/home/zuul/src/cc-github.bmwgroup.net/swh/adp/.git'...",
                                        "done.",
                                        "+ cd /home/zuul/src/cc-github.bmwgroup.net/swh/adp",
                                        "+ git config --local --bool core.bare false",
                                        "+ git remote -v",
                                        "+ grep origin",
                                        "origin\t/var/cache/git/cc-github.bmwgroup.net/swh/adp (fetch)",
                                        "origin\t/var/cache/git/cc-github.bmwgroup.net/swh/adp (push)",
                                        "+ git remote rm origin",
                                        "+ git remote add origin file:///dev/null"
                                    ],
                                    "zj_project": {
                                        "canonical_hostname": "cc-github.bmwgroup.net",
                                        "canonical_name": "cc-github.bmwgroup.net/swh/adp",
                                        "checkout": "master",
                                        "checkout_description": "zuul branch",
                                        "commit": "8d83dea1d58bef901e97793e1c34ad57986fada1",
                                        "name": "swh/adp",
                                        "required": true,
                                        "short_name": "adp",
                                        "src_dir": "src/cc-github.bmwgroup.net/swh/adp"
                                    },
                                    "zuul_log_id": "in-loop-ignore"
                                },
                                {
                                    "ansible_loop_var": "zj_project",
                                    "changed": true,
                                    "cmd": "set -ex\nif [ -d \"/var/cache/git/cc-github.bmwgroup.net/swh/cvc\" ] ; then\n    # We do a bare clone here first so that we skip creating a working\n    # copy that will be overwritten later anyway.\n    git clone --bare /var/cache/git/cc-github.bmwgroup.net/swh/cvc /home/zuul/src/cc-github.bmwgroup.net/swh/cvc/.git\nelse\n    git init /home/zuul/src/cc-github.bmwgroup.net/swh/cvc\nfi\ncd /home/zuul/src/cc-github.bmwgroup.net/swh/cvc\ngit config --local --bool core.bare false\ngit remote -v | grep origin && git remote rm origin || true\ngit remote add origin file:///dev/null\n",
                                    "delta": "0:00:00.390906",
                                    "end": "2024-04-21 00:39:47.881904",
                                    "failed": false,
                                    "invocation": {
                                        "module_args": {
                                            "_raw_params": "set -ex\nif [ -d \"/var/cache/git/cc-github.bmwgroup.net/swh/cvc\" ] ; then\n    # We do a bare clone here first so that we skip creating a working\n    # copy that will be overwritten later anyway.\n    git clone --bare /var/cache/git/cc-github.bmwgroup.net/swh/cvc /home/zuul/src/cc-github.bmwgroup.net/swh/cvc/.git\nelse\n    git init /home/zuul/src/cc-github.bmwgroup.net/swh/cvc\nfi\ncd /home/zuul/src/cc-github.bmwgroup.net/swh/cvc\ngit config --local --bool core.bare false\ngit remote -v | grep origin && git remote rm origin || true\ngit remote add origin file:///dev/null\n",
                                            "_uses_shell": true,
                                            "argv": null,
                                            "chdir": null,
                                            "creates": "/home/zuul/src/cc-github.bmwgroup.net/swh/cvc",
                                            "executable": null,
                                            "removes": null,
                                            "stdin": null,
                                            "stdin_add_newline": true,
                                            "strip_empty_ends": true,
                                            "warn": false,
                                            "zuul_ansible_split_streams": false,
                                            "zuul_log_id": "in-loop-ignore"
                                        }
                                    },
                                    "msg": "",
                                    "rc": 0,
                                    "start": "2024-04-21 00:39:47.490998",
                                    "stderr": "",
                                    "stderr_lines": [],
                                    "stdout": "+ [ -d /var/cache/git/cc-github.bmwgroup.net/swh/cvc ]\n+ git clone --bare /var/cache/git/cc-github.bmwgroup.net/swh/cvc /home/zuul/src/cc-github.bmwgroup.net/swh/cvc/.git\nCloning into bare repository '/home/zuul/src/cc-github.bmwgroup.net/swh/cvc/.git'...\ndone.\n+ cd /home/zuul/src/cc-github.bmwgroup.net/swh/cvc\n+ git config --local --bool core.bare false\n+ git remote -v\n+ grep origin\norigin\t/var/cache/git/cc-github.bmwgroup.net/swh/cvc (fetch)\norigin\t/var/cache/git/cc-github.bmwgroup.net/swh/cvc (push)\n+ git remote rm origin\n+ git remote add origin file:///dev/null",
                                    "stdout_lines": [
                                        "+ [ -d /var/cache/git/cc-github.bmwgroup.net/swh/cvc ]",
                                        "+ git clone --bare /var/cache/git/cc-github.bmwgroup.net/swh/cvc /home/zuul/src/cc-github.bmwgroup.net/swh/cvc/.git",
                                        "Cloning into bare repository '/home/zuul/src/cc-github.bmwgroup.net/swh/cvc/.git'...",
                                        "done.",
                                        "+ cd /home/zuul/src/cc-github.bmwgroup.net/swh/cvc",
                                        "+ git config --local --bool core.bare false",
                                        "+ git remote -v",
                                        "+ grep origin",
                                        "origin\t/var/cache/git/cc-github.bmwgroup.net/swh/cvc (fetch)",
                                        "origin\t/var/cache/git/cc-github.bmwgroup.net/swh/cvc (push)",
                                        "+ git remote rm origin",
                                        "+ git remote add origin file:///dev/null"
                                    ],
                                    "zj_project": {
                                        "canonical_hostname": "cc-github.bmwgroup.net",
                                        "canonical_name": "cc-github.bmwgroup.net/swh/cvc",
                                        "checkout": "master",
                                        "checkout_description": "zuul branch",
                                        "commit": "dbf0e56926a6baad91df5b15b84746c66de73a47",
                                        "name": "swh/cvc",
                                        "required": true,
                                        "short_name": "cvc",
                                        "src_dir": "src/cc-github.bmwgroup.net/swh/cvc"
                                    },
                                    "zuul_log_id": "in-loop-ignore"
                                },
                                {
                                    "ansible_loop_var": "zj_project",
                                    "changed": true,
                                    "cmd": "set -ex\nif [ -d \"/var/cache/git/cc-github.bmwgroup.net/swh/ddad\" ] ; then\n    # We do a bare clone here first so that we skip creating a working\n    # copy that will be overwritten later anyway.\n    git clone --bare /var/cache/git/cc-github.bmwgroup.net/swh/ddad /home/zuul/src/cc-github.bmwgroup.net/swh/ddad/.git\nelse\n    git init /home/zuul/src/cc-github.bmwgroup.net/swh/ddad\nfi\ncd /home/zuul/src/cc-github.bmwgroup.net/swh/ddad\ngit config --local --bool core.bare false\ngit remote -v | grep origin && git remote rm origin || true\ngit remote add origin file:///dev/null\n",
                                    "delta": "0:00:01.688493",
                                    "end": "2024-04-21 00:39:49.876744",
                                    "failed": false,
                                    "invocation": {
                                        "module_args": {
                                            "_raw_params": "set -ex\nif [ -d \"/var/cache/git/cc-github.bmwgroup.net/swh/ddad\" ] ; then\n    # We do a bare clone here first so that we skip creating a working\n    # copy that will be overwritten later anyway.\n    git clone --bare /var/cache/git/cc-github.bmwgroup.net/swh/ddad /home/zuul/src/cc-github.bmwgroup.net/swh/ddad/.git\nelse\n    git init /home/zuul/src/cc-github.bmwgroup.net/swh/ddad\nfi\ncd /home/zuul/src/cc-github.bmwgroup.net/swh/ddad\ngit config --local --bool core.bare false\ngit remote -v | grep origin && git remote rm origin || true\ngit remote add origin file:///dev/null\n",
                                            "_uses_shell": true,
                                            "argv": null,
                                            "chdir": null,
                                            "creates": "/home/zuul/src/cc-github.bmwgroup.net/swh/ddad",
                                            "executable": null,
                                            "removes": null,
                                            "stdin": null,
                                            "stdin_add_newline": true,
                                            "strip_empty_ends": true,
                                            "warn": false,
                                            "zuul_ansible_split_streams": false,
                                            "zuul_log_id": "in-loop-ignore"
                                        }
                                    },
                                    "msg": "",
                                    "rc": 0,
                                    "start": "2024-04-21 00:39:48.188251",
                                    "stderr": "",
                                    "stderr_lines": [],
                                    "stdout": "+ [ -d /var/cache/git/cc-github.bmwgroup.net/swh/ddad ]\n+ git clone --bare /var/cache/git/cc-github.bmwgroup.net/swh/ddad /home/zuul/src/cc-github.bmwgroup.net/swh/ddad/.git\nCloning into bare repository '/home/zuul/src/cc-github.bmwgroup.net/swh/ddad/.git'...\ndone.\n+ cd /home/zuul/src/cc-github.bmwgroup.net/swh/ddad\n+ git config --local --bool core.bare false\n+ + git remote -v\ngrep origin\norigin\t/var/cache/git/cc-github.bmwgroup.net/swh/ddad (fetch)\norigin\t/var/cache/git/cc-github.bmwgroup.net/swh/ddad (push)\n+ git remote rm origin\n+ git remote add origin file:///dev/null",
                                    "stdout_lines": [
                                        "+ [ -d /var/cache/git/cc-github.bmwgroup.net/swh/ddad ]",
                                        "+ git clone --bare /var/cache/git/cc-github.bmwgroup.net/swh/ddad /home/zuul/src/cc-github.bmwgroup.net/swh/ddad/.git",
                                        "Cloning into bare repository '/home/zuul/src/cc-github.bmwgroup.net/swh/ddad/.git'...",
                                        "done.",
                                        "+ cd /home/zuul/src/cc-github.bmwgroup.net/swh/ddad",
                                        "+ git config --local --bool core.bare false",
                                        "+ + git remote -v",
                                        "grep origin",
                                        "origin\t/var/cache/git/cc-github.bmwgroup.net/swh/ddad (fetch)",
                                        "origin\t/var/cache/git/cc-github.bmwgroup.net/swh/ddad (push)",
                                        "+ git remote rm origin",
                                        "+ git remote add origin file:///dev/null"
                                    ],
                                    "zj_project": {
                                        "canonical_hostname": "cc-github.bmwgroup.net",
                                        "canonical_name": "cc-github.bmwgroup.net/swh/ddad",
                                        "checkout": "master",
                                        "checkout_description": "zuul branch",
                                        "commit": "32fe27876b12e612823c5f9cfd63b2cc1eaa68c1",
                                        "name": "swh/ddad",
                                        "required": true,
                                        "short_name": "ddad",
                                        "src_dir": "src/cc-github.bmwgroup.net/swh/ddad"
                                    },
                                    "zuul_log_id": "in-loop-ignore"
                                },
                                {
                                    "ansible_loop_var": "zj_project",
                                    "changed": true,
                                    "cmd": "set -ex\nif [ -d \"/var/cache/git/cc-github.bmwgroup.net/swh/ddad-domains-fasinfo\" ] ; then\n    # We do a bare clone here first so that we skip creating a working\n    # copy that will be overwritten later anyway.\n    git clone --bare /var/cache/git/cc-github.bmwgroup.net/swh/ddad-domains-fasinfo /home/zuul/src/cc-github.bmwgroup.net/swh/ddad-domains-fasinfo/.git\nelse\n    git init /home/zuul/src/cc-github.bmwgroup.net/swh/ddad-domains-fasinfo\nfi\ncd /home/zuul/src/cc-github.bmwgroup.net/swh/ddad-domains-fasinfo\ngit config --local --bool core.bare false\ngit remote -v | grep origin && git remote rm origin || true\ngit remote add origin file:///dev/null\n",
                                    "delta": "0:00:00.862476",
                                    "end": "2024-04-21 00:39:51.164670",
                                    "failed": false,
                                    "invocation": {
                                        "module_args": {
                                            "_raw_params": "set -ex\nif [ -d \"/var/cache/git/cc-github.bmwgroup.net/swh/ddad-domains-fasinfo\" ] ; then\n    # We do a bare clone here first so that we skip creating a working\n    # copy that will be overwritten later anyway.\n    git clone --bare /var/cache/git/cc-github.bmwgroup.net/swh/ddad-domains-fasinfo /home/zuul/src/cc-github.bmwgroup.net/swh/ddad-domains-fasinfo/.git\nelse\n    git init /home/zuul/src/cc-github.bmwgroup.net/swh/ddad-domains-fasinfo\nfi\ncd /home/zuul/src/cc-github.bmwgroup.net/swh/ddad-domains-fasinfo\ngit config --local --bool core.bare false\ngit remote -v | grep origin && git remote rm origin || true\ngit remote add origin file:///dev/null\n",
                                            "_uses_shell": true,
                                            "argv": null,
                                            "chdir": null,
                                            "creates": "/home/zuul/src/cc-github.bmwgroup.net/swh/ddad-domains-fasinfo",
                                            "executable": null,
                                            "removes": null,
                                            "stdin": null,
                                            "stdin_add_newline": true,
                                            "strip_empty_ends": true,
                                            "warn": false,
                                            "zuul_ansible_split_streams": false,
                                            "zuul_log_id": "in-loop-ignore"
                                        }
                                    },
                                    "msg": "",
                                    "rc": 0,
                                    "start": "2024-04-21 00:39:50.302194",
                                    "stderr": "",
                                    "stderr_lines": [],
                                    "stdout": "+ [ -d /var/cache/git/cc-github.bmwgroup.net/swh/ddad-domains-fasinfo ]\n+ git clone --bare /var/cache/git/cc-github.bmwgroup.net/swh/ddad-domains-fasinfo /home/zuul/src/cc-github.bmwgroup.net/swh/ddad-domains-fasinfo/.git\nCloning into bare repository '/home/zuul/src/cc-github.bmwgroup.net/swh/ddad-domains-fasinfo/.git'...\ndone.\n+ cd /home/zuul/src/cc-github.bmwgroup.net/swh/ddad-domains-fasinfo\n+ git config --local --bool core.bare false\n+ git remote -v\n+ grep origin\norigin\t/var/cache/git/cc-github.bmwgroup.net/swh/ddad-domains-fasinfo (fetch)\norigin\t/var/cache/git/cc-github.bmwgroup.net/swh/ddad-domains-fasinfo (push)\n+ git remote rm origin\n+ git remote add origin file:///dev/null",
                                    "stdout_lines": [
                                        "+ [ -d /var/cache/git/cc-github.bmwgroup.net/swh/ddad-domains-fasinfo ]",
                                        "+ git clone --bare /var/cache/git/cc-github.bmwgroup.net/swh/ddad-domains-fasinfo /home/zuul/src/cc-github.bmwgroup.net/swh/ddad-domains-fasinfo/.git",
                                        "Cloning into bare repository '/home/zuul/src/cc-github.bmwgroup.net/swh/ddad-domains-fasinfo/.git'...",
                                        "done.",
                                        "+ cd /home/zuul/src/cc-github.bmwgroup.net/swh/ddad-domains-fasinfo",
                                        "+ git config --local --bool core.bare false",
                                        "+ git remote -v",
                                        "+ grep origin",
                                        "origin\t/var/cache/git/cc-github.bmwgroup.net/swh/ddad-domains-fasinfo (fetch)",
                                        "origin\t/var/cache/git/cc-github.bmwgroup.net/swh/ddad-domains-fasinfo (push)",
                                        "+ git remote rm origin",
                                        "+ git remote add origin file:///dev/null"
                                    ],
                                    "zj_project": {
                                        "canonical_hostname": "cc-github.bmwgroup.net",
                                        "canonical_name": "cc-github.bmwgroup.net/swh/ddad-domains-fasinfo",
                                        "checkout": "master",
                                        "checkout_description": "zuul branch",
                                        "commit": "a5b41fd76a124026ff81320e27d5caa5a772f235",
                                        "name": "swh/ddad-domains-fasinfo",
                                        "required": true,
                                        "short_name": "ddad-domains-fasinfo",
                                        "src_dir": "src/cc-github.bmwgroup.net/swh/ddad-domains-fasinfo"
                                    },
                                    "zuul_log_id": "in-loop-ignore"
                                },
                                {
                                    "ansible_loop_var": "zj_project",
                                    "changed": true,
                                    "cmd": "set -ex\nif [ -d \"/var/cache/git/cc-github.bmwgroup.net/swh/ddad-domains-generic\" ] ; then\n    # We do a bare clone here first so that we skip creating a working\n    # copy that will be overwritten later anyway.\n    git clone --bare /var/cache/git/cc-github.bmwgroup.net/swh/ddad-domains-generic /home/zuul/src/cc-github.bmwgroup.net/swh/ddad-domains-generic/.git\nelse\n    git init /home/zuul/src/cc-github.bmwgroup.net/swh/ddad-domains-generic\nfi\ncd /home/zuul/src/cc-github.bmwgroup.net/swh/ddad-domains-generic\ngit config --local --bool core.bare false\ngit remote -v | grep origin && git remote rm origin || true\ngit remote add origin file:///dev/null\n",
                                    "delta": "0:00:00.199395",
                                    "end": "2024-04-21 00:39:51.671034",
                                    "failed": false,
                                    "invocation": {
                                        "module_args": {
                                            "_raw_params": "set -ex\nif [ -d \"/var/cache/git/cc-github.bmwgroup.net/swh/ddad-domains-generic\" ] ; then\n    # We do a bare clone here first so that we skip creating a working\n    # copy that will be overwritten later anyway.\n    git clone --bare /var/cache/git/cc-github.bmwgroup.net/swh/ddad-domains-generic /home/zuul/src/cc-github.bmwgroup.net/swh/ddad-domains-generic/.git\nelse\n    git init /home/zuul/src/cc-github.bmwgroup.net/swh/ddad-domains-generic\nfi\ncd /home/zuul/src/cc-github.bmwgroup.net/swh/ddad-domains-generic\ngit config --local --bool core.bare false\ngit remote -v | grep origin && git remote rm origin || true\ngit remote add origin file:///dev/null\n",
                                            "_uses_shell": true,
                                            "argv": null,
                                            "chdir": null,
                                            "creates": "/home/zuul/src/cc-github.bmwgroup.net/swh/ddad-domains-generic",
                                            "executable": null,
                                            "removes": null,
                                            "stdin": null,
                                            "stdin_add_newline": true,
                                            "strip_empty_ends": true,
                                            "warn": false,
                                            "zuul_ansible_split_streams": false,
                                            "zuul_log_id": "in-loop-ignore"
                                        }
                                    },
                                    "msg": "",
                                    "rc": 0,
                                    "start": "2024-04-21 00:39:51.471639",
                                    "stderr": "",
                                    "stderr_lines": [],
                                    "stdout": "+ [ -d /var/cache/git/cc-github.bmwgroup.net/swh/ddad-domains-generic ]\n+ git clone --bare /var/cache/git/cc-github.bmwgroup.net/swh/ddad-domains-generic /home/zuul/src/cc-github.bmwgroup.net/swh/ddad-domains-generic/.git\nCloning into bare repository '/home/zuul/src/cc-github.bmwgroup.net/swh/ddad-domains-generic/.git'...\ndone.\n+ cd /home/zuul/src/cc-github.bmwgroup.net/swh/ddad-domains-generic\n+ git config --local --bool core.bare false\n+ git remote -v\n+ grep origin\norigin\t/var/cache/git/cc-github.bmwgroup.net/swh/ddad-domains-generic (fetch)\norigin\t/var/cache/git/cc-github.bmwgroup.net/swh/ddad-domains-generic (push)\n+ git remote rm origin\n+ git remote add origin file:///dev/null",
                                    "stdout_lines": [
                                        "+ [ -d /var/cache/git/cc-github.bmwgroup.net/swh/ddad-domains-generic ]",
                                        "+ git clone --bare /var/cache/git/cc-github.bmwgroup.net/swh/ddad-domains-generic /home/zuul/src/cc-github.bmwgroup.net/swh/ddad-domains-generic/.git",
                                        "Cloning into bare repository '/home/zuul/src/cc-github.bmwgroup.net/swh/ddad-domains-generic/.git'...",
                                        "done.",
                                        "+ cd /home/zuul/src/cc-github.bmwgroup.net/swh/ddad-domains-generic",
                                        "+ git config --local --bool core.bare false",
                                        "+ git remote -v",
                                        "+ grep origin",
                                        "origin\t/var/cache/git/cc-github.bmwgroup.net/swh/ddad-domains-generic (fetch)",
                                        "origin\t/var/cache/git/cc-github.bmwgroup.net/swh/ddad-domains-generic (push)",
                                        "+ git remote rm origin",
                                        "+ git remote add origin file:///dev/null"
                                    ],
                                    "zj_project": {
                                        "canonical_hostname": "cc-github.bmwgroup.net",
                                        "canonical_name": "cc-github.bmwgroup.net/swh/ddad-domains-generic",
                                        "checkout": "master",
                                        "checkout_description": "zuul branch",
                                        "commit": "872e7456cf3b5838f30c47753e8187b8c62b636a",
                                        "name": "swh/ddad-domains-generic",
                                        "required": true,
                                        "short_name": "ddad-domains-generic",
                                        "src_dir": "src/cc-github.bmwgroup.net/swh/ddad-domains-generic"
                                    },
                                    "zuul_log_id": "in-loop-ignore"
                                },
                                {
                                    "ansible_loop_var": "zj_project",
                                    "changed": true,
                                    "cmd": "set -ex\nif [ -d \"/var/cache/git/cc-github.bmwgroup.net/swh/ddad-ecu-ipnext\" ] ; then\n    # We do a bare clone here first so that we skip creating a working\n    # copy that will be overwritten later anyway.\n    git clone --bare /var/cache/git/cc-github.bmwgroup.net/swh/ddad-ecu-ipnext /home/zuul/src/cc-github.bmwgroup.net/swh/ddad-ecu-ipnext/.git\nelse\n    git init /home/zuul/src/cc-github.bmwgroup.net/swh/ddad-ecu-ipnext\nfi\ncd /home/zuul/src/cc-github.bmwgroup.net/swh/ddad-ecu-ipnext\ngit config --local --bool core.bare false\ngit remote -v | grep origin && git remote rm origin || true\ngit remote add origin file:///dev/null\n",
                                    "delta": "0:00:01.189911",
                                    "end": "2024-04-21 00:39:53.172451",
                                    "failed": false,
                                    "invocation": {
                                        "module_args": {
                                            "_raw_params": "set -ex\nif [ -d \"/var/cache/git/cc-github.bmwgroup.net/swh/ddad-ecu-ipnext\" ] ; then\n    # We do a bare clone here first so that we skip creating a working\n    # copy that will be overwritten later anyway.\n    git clone --bare /var/cache/git/cc-github.bmwgroup.net/swh/ddad-ecu-ipnext /home/zuul/src/cc-github.bmwgroup.net/swh/ddad-ecu-ipnext/.git\nelse\n    git init /home/zuul/src/cc-github.bmwgroup.net/swh/ddad-ecu-ipnext\nfi\ncd /home/zuul/src/cc-github.bmwgroup.net/swh/ddad-ecu-ipnext\ngit config --local --bool core.bare false\ngit remote -v | grep origin && git remote rm origin || true\ngit remote add origin file:///dev/null\n",
                                            "_uses_shell": true,
                                            "argv": null,
                                            "chdir": null,
                                            "creates": "/home/zuul/src/cc-github.bmwgroup.net/swh/ddad-ecu-ipnext",
                                            "executable": null,
                                            "removes": null,
                                            "stdin": null,
                                            "stdin_add_newline": true,
                                            "strip_empty_ends": true,
                                            "warn": false,
                                            "zuul_ansible_split_streams": false,
                                            "zuul_log_id": "in-loop-ignore"
                                        }
                                    },
                                    "msg": "",
                                    "rc": 0,
                                    "start": "2024-04-21 00:39:51.982540",
                                    "stderr": "",
                                    "stderr_lines": [],
                                    "stdout": "+ [ -d /var/cache/git/cc-github.bmwgroup.net/swh/ddad-ecu-ipnext ]\n+ git clone --bare /var/cache/git/cc-github.bmwgroup.net/swh/ddad-ecu-ipnext /home/zuul/src/cc-github.bmwgroup.net/swh/ddad-ecu-ipnext/.git\nCloning into bare repository '/home/zuul/src/cc-github.bmwgroup.net/swh/ddad-ecu-ipnext/.git'...\ndone.\n+ cd /home/zuul/src/cc-github.bmwgroup.net/swh/ddad-ecu-ipnext\n+ git config --local --bool core.bare false\n+ git remote -v\n+ grep origin\norigin\t/var/cache/git/cc-github.bmwgroup.net/swh/ddad-ecu-ipnext (fetch)\norigin\t/var/cache/git/cc-github.bmwgroup.net/swh/ddad-ecu-ipnext (push)\n+ git remote rm origin\n+ git remote add origin file:///dev/null",
                                    "stdout_lines": [
                                        "+ [ -d /var/cache/git/cc-github.bmwgroup.net/swh/ddad-ecu-ipnext ]",
                                        "+ git clone --bare /var/cache/git/cc-github.bmwgroup.net/swh/ddad-ecu-ipnext /home/zuul/src/cc-github.bmwgroup.net/swh/ddad-ecu-ipnext/.git",
                                        "Cloning into bare repository '/home/zuul/src/cc-github.bmwgroup.net/swh/ddad-ecu-ipnext/.git'...",
                                        "done.",
                                        "+ cd /home/zuul/src/cc-github.bmwgroup.net/swh/ddad-ecu-ipnext",
                                        "+ git config --local --bool core.bare false",
                                        "+ git remote -v",
                                        "+ grep origin",
                                        "origin\t/var/cache/git/cc-github.bmwgroup.net/swh/ddad-ecu-ipnext (fetch)",
                                        "origin\t/var/cache/git/cc-github.bmwgroup.net/swh/ddad-ecu-ipnext (push)",
                                        "+ git remote rm origin",
                                        "+ git remote add origin file:///dev/null"
                                    ],
                                    "zj_project": {
                                        "canonical_hostname": "cc-github.bmwgroup.net",
                                        "canonical_name": "cc-github.bmwgroup.net/swh/ddad-ecu-ipnext",
                                        "checkout": "master",
                                        "checkout_description": "zuul branch",
                                        "commit": "4e0fd5384e92431311a139b52f3b191523237f3f",
                                        "name": "swh/ddad-ecu-ipnext",
                                        "required": true,
                                        "short_name": "ddad-ecu-ipnext",
                                        "src_dir": "src/cc-github.bmwgroup.net/swh/ddad-ecu-ipnext"
                                    },
                                    "zuul_log_id": "in-loop-ignore"
                                },
                                {
                                    "ansible_loop_var": "zj_project",
                                    "changed": true,
                                    "cmd": "set -ex\nif [ -d \"/var/cache/git/cc-github.bmwgroup.net/swh/ddad_ci_config\" ] ; then\n    # We do a bare clone here first so that we skip creating a working\n    # copy that will be overwritten later anyway.\n    git clone --bare /var/cache/git/cc-github.bmwgroup.net/swh/ddad_ci_config /home/zuul/src/cc-github.bmwgroup.net/swh/ddad_ci_config/.git\nelse\n    git init /home/zuul/src/cc-github.bmwgroup.net/swh/ddad_ci_config\nfi\ncd /home/zuul/src/cc-github.bmwgroup.net/swh/ddad_ci_config\ngit config --local --bool core.bare false\ngit remote -v | grep origin && git remote rm origin || true\ngit remote add origin file:///dev/null\n",
                                    "delta": "0:00:01.126665",
                                    "end": "2024-04-21 00:39:54.600923",
                                    "failed": false,
                                    "invocation": {
                                        "module_args": {
                                            "_raw_params": "set -ex\nif [ -d \"/var/cache/git/cc-github.bmwgroup.net/swh/ddad_ci_config\" ] ; then\n    # We do a bare clone here first so that we skip creating a working\n    # copy that will be overwritten later anyway.\n    git clone --bare /var/cache/git/cc-github.bmwgroup.net/swh/ddad_ci_config /home/zuul/src/cc-github.bmwgroup.net/swh/ddad_ci_config/.git\nelse\n    git init /home/zuul/src/cc-github.bmwgroup.net/swh/ddad_ci_config\nfi\ncd /home/zuul/src/cc-github.bmwgroup.net/swh/ddad_ci_config\ngit config --local --bool core.bare false\ngit remote -v | grep origin && git remote rm origin || true\ngit remote add origin file:///dev/null\n",
                                            "_uses_shell": true,
                                            "argv": null,
                                            "chdir": null,
                                            "creates": "/home/zuul/src/cc-github.bmwgroup.net/swh/ddad_ci_config",
                                            "executable": null,
                                            "removes": null,
                                            "stdin": null,
                                            "stdin_add_newline": true,
                                            "strip_empty_ends": true,
                                            "warn": false,
                                            "zuul_ansible_split_streams": false,
                                            "zuul_log_id": "in-loop-ignore"
                                        }
                                    },
                                    "msg": "",
                                    "rc": 0,
                                    "start": "2024-04-21 00:39:53.474258",
                                    "stderr": "",
                                    "stderr_lines": [],
                                    "stdout": "+ [ -d /var/cache/git/cc-github.bmwgroup.net/swh/ddad_ci_config ]\n+ git clone --bare /var/cache/git/cc-github.bmwgroup.net/swh/ddad_ci_config /home/zuul/src/cc-github.bmwgroup.net/swh/ddad_ci_config/.git\nCloning into bare repository '/home/zuul/src/cc-github.bmwgroup.net/swh/ddad_ci_config/.git'...\ndone.\n+ cd /home/zuul/src/cc-github.bmwgroup.net/swh/ddad_ci_config\n+ git config --local --bool core.bare false\n+ git remote -v\n+ grep origin\norigin\t/var/cache/git/cc-github.bmwgroup.net/swh/ddad_ci_config (fetch)\norigin\t/var/cache/git/cc-github.bmwgroup.net/swh/ddad_ci_config (push)\n+ git remote rm origin\n+ git remote add origin file:///dev/null",
                                    "stdout_lines": [
                                        "+ [ -d /var/cache/git/cc-github.bmwgroup.net/swh/ddad_ci_config ]",
                                        "+ git clone --bare /var/cache/git/cc-github.bmwgroup.net/swh/ddad_ci_config /home/zuul/src/cc-github.bmwgroup.net/swh/ddad_ci_config/.git",
                                        "Cloning into bare repository '/home/zuul/src/cc-github.bmwgroup.net/swh/ddad_ci_config/.git'...",
                                        "done.",
                                        "+ cd /home/zuul/src/cc-github.bmwgroup.net/swh/ddad_ci_config",
                                        "+ git config --local --bool core.bare false",
                                        "+ git remote -v",
                                        "+ grep origin",
                                        "origin\t/var/cache/git/cc-github.bmwgroup.net/swh/ddad_ci_config (fetch)",
                                        "origin\t/var/cache/git/cc-github.bmwgroup.net/swh/ddad_ci_config (push)",
                                        "+ git remote rm origin",
                                        "+ git remote add origin file:///dev/null"
                                    ],
                                    "zj_project": {
                                        "canonical_hostname": "cc-github.bmwgroup.net",
                                        "canonical_name": "cc-github.bmwgroup.net/swh/ddad_ci_config",
                                        "checkout": "master",
                                        "checkout_description": "zuul branch",
                                        "commit": "a2ea1242739a7a16dba7d7781925949e31cfc29f",
                                        "name": "swh/ddad_ci_config",
                                        "required": true,
                                        "short_name": "ddad_ci_config",
                                        "src_dir": "src/cc-github.bmwgroup.net/swh/ddad_ci_config"
                                    },
                                    "zuul_log_id": "in-loop-ignore"
                                },
                                {
                                    "ansible_loop_var": "zj_project",
                                    "changed": true,
                                    "cmd": "set -ex\nif [ -d \"/var/cache/git/cc-github.bmwgroup.net/swh/ddad_platform\" ] ; then\n    # We do a bare clone here first so that we skip creating a working\n    # copy that will be overwritten later anyway.\n    git clone --bare /var/cache/git/cc-github.bmwgroup.net/swh/ddad_platform /home/zuul/src/cc-github.bmwgroup.net/swh/ddad_platform/.git\nelse\n    git init /home/zuul/src/cc-github.bmwgroup.net/swh/ddad_platform\nfi\ncd /home/zuul/src/cc-github.bmwgroup.net/swh/ddad_platform\ngit config --local --bool core.bare false\ngit remote -v | grep origin && git remote rm origin || true\ngit remote add origin file:///dev/null\n",
                                    "delta": "0:00:04.903850",
                                    "end": "2024-04-21 00:39:59.784348",
                                    "failed": false,
                                    "invocation": {
                                        "module_args": {
                                            "_raw_params": "set -ex\nif [ -d \"/var/cache/git/cc-github.bmwgroup.net/swh/ddad_platform\" ] ; then\n    # We do a bare clone here first so that we skip creating a working\n    # copy that will be overwritten later anyway.\n    git clone --bare /var/cache/git/cc-github.bmwgroup.net/swh/ddad_platform /home/zuul/src/cc-github.bmwgroup.net/swh/ddad_platform/.git\nelse\n    git init /home/zuul/src/cc-github.bmwgroup.net/swh/ddad_platform\nfi\ncd /home/zuul/src/cc-github.bmwgroup.net/swh/ddad_platform\ngit config --local --bool core.bare false\ngit remote -v | grep origin && git remote rm origin || true\ngit remote add origin file:///dev/null\n",
                                            "_uses_shell": true,
                                            "argv": null,
                                            "chdir": null,
                                            "creates": "/home/zuul/src/cc-github.bmwgroup.net/swh/ddad_platform",
                                            "executable": null,
                                            "removes": null,
                                            "stdin": null,
                                            "stdin_add_newline": true,
                                            "strip_empty_ends": true,
                                            "warn": false,
                                            "zuul_ansible_split_streams": false,
                                            "zuul_log_id": "in-loop-ignore"
                                        }
                                    },
                                    "msg": "",
                                    "rc": 0,
                                    "start": "2024-04-21 00:39:54.880498",
                                    "stderr": "",
                                    "stderr_lines": [],
                                    "stdout": "+ [ -d /var/cache/git/cc-github.bmwgroup.net/swh/ddad_platform ]\n+ git clone --bare /var/cache/git/cc-github.bmwgroup.net/swh/ddad_platform /home/zuul/src/cc-github.bmwgroup.net/swh/ddad_platform/.git\nCloning into bare repository '/home/zuul/src/cc-github.bmwgroup.net/swh/ddad_platform/.git'...\ndone.\n+ cd /home/zuul/src/cc-github.bmwgroup.net/swh/ddad_platform\n+ git config --local --bool core.bare false\n+ git remote -v\n+ grep origin\norigin\t/var/cache/git/cc-github.bmwgroup.net/swh/ddad_platform (fetch)\norigin\t/var/cache/git/cc-github.bmwgroup.net/swh/ddad_platform (push)\n+ git remote rm origin\n+ git remote add origin file:///dev/null",
                                    "stdout_lines": [
                                        "+ [ -d /var/cache/git/cc-github.bmwgroup.net/swh/ddad_platform ]",
                                        "+ git clone --bare /var/cache/git/cc-github.bmwgroup.net/swh/ddad_platform /home/zuul/src/cc-github.bmwgroup.net/swh/ddad_platform/.git",
                                        "Cloning into bare repository '/home/zuul/src/cc-github.bmwgroup.net/swh/ddad_platform/.git'...",
                                        "done.",
                                        "+ cd /home/zuul/src/cc-github.bmwgroup.net/swh/ddad_platform",
                                        "+ git config --local --bool core.bare false",
                                        "+ git remote -v",
                                        "+ grep origin",
                                        "origin\t/var/cache/git/cc-github.bmwgroup.net/swh/ddad_platform (fetch)",
                                        "origin\t/var/cache/git/cc-github.bmwgroup.net/swh/ddad_platform (push)",
                                        "+ git remote rm origin",
                                        "+ git remote add origin file:///dev/null"
                                    ],
                                    "zj_project": {
                                        "canonical_hostname": "cc-github.bmwgroup.net",
                                        "canonical_name": "cc-github.bmwgroup.net/swh/ddad_platform",
                                        "checkout": "master",
                                        "checkout_description": "zuul branch",
                                        "commit": "0fc13c778f15b8def496ce821b67df115746cfb6",
                                        "name": "swh/ddad_platform",
                                        "required": true,
                                        "short_name": "ddad_platform",
                                        "src_dir": "src/cc-github.bmwgroup.net/swh/ddad_platform"
                                    },
                                    "zuul_log_id": "in-loop-ignore"
                                },
                                {
                                    "ansible_loop_var": "zj_project",
                                    "changed": true,
                                    "cmd": "set -ex\nif [ -d \"/var/cache/git/cc-github.bmwgroup.net/swh/domain-tools\" ] ; then\n    # We do a bare clone here first so that we skip creating a working\n    # copy that will be overwritten later anyway.\n    git clone --bare /var/cache/git/cc-github.bmwgroup.net/swh/domain-tools /home/zuul/src/cc-github.bmwgroup.net/swh/domain-tools/.git\nelse\n    git init /home/zuul/src/cc-github.bmwgroup.net/swh/domain-tools\nfi\ncd /home/zuul/src/cc-github.bmwgroup.net/swh/domain-tools\ngit config --local --bool core.bare false\ngit remote -v | grep origin && git remote rm origin || true\ngit remote add origin file:///dev/null\n",
                                    "delta": "0:00:01.179174",
                                    "end": "2024-04-21 00:40:01.216010",
                                    "failed": false,
                                    "invocation": {
                                        "module_args": {
                                            "_raw_params": "set -ex\nif [ -d \"/var/cache/git/cc-github.bmwgroup.net/swh/domain-tools\" ] ; then\n    # We do a bare clone here first so that we skip creating a working\n    # copy that will be overwritten later anyway.\n    git clone --bare /var/cache/git/cc-github.bmwgroup.net/swh/domain-tools /home/zuul/src/cc-github.bmwgroup.net/swh/domain-tools/.git\nelse\n    git init /home/zuul/src/cc-github.bmwgroup.net/swh/domain-tools\nfi\ncd /home/zuul/src/cc-github.bmwgroup.net/swh/domain-tools\ngit config --local --bool core.bare false\ngit remote -v | grep origin && git remote rm origin || true\ngit remote add origin file:///dev/null\n",
                                            "_uses_shell": true,
                                            "argv": null,
                                            "chdir": null,
                                            "creates": "/home/zuul/src/cc-github.bmwgroup.net/swh/domain-tools",
                                            "executable": null,
                                            "removes": null,
                                            "stdin": null,
                                            "stdin_add_newline": true,
                                            "strip_empty_ends": true,
                                            "warn": false,
                                            "zuul_ansible_split_streams": false,
                                            "zuul_log_id": "in-loop-ignore"
                                        }
                                    },
                                    "msg": "",
                                    "rc": 0,
                                    "start": "2024-04-21 00:40:00.036836",
                                    "stderr": "",
                                    "stderr_lines": [],
                                    "stdout": "+ [ -d /var/cache/git/cc-github.bmwgroup.net/swh/domain-tools ]\n+ git clone --bare /var/cache/git/cc-github.bmwgroup.net/swh/domain-tools /home/zuul/src/cc-github.bmwgroup.net/swh/domain-tools/.git\nCloning into bare repository '/home/zuul/src/cc-github.bmwgroup.net/swh/domain-tools/.git'...\ndone.\n+ cd /home/zuul/src/cc-github.bmwgroup.net/swh/domain-tools\n+ git config --local --bool core.bare false\n+ git remote -v\n+ grep origin\norigin\t/var/cache/git/cc-github.bmwgroup.net/swh/domain-tools (fetch)\norigin\t/var/cache/git/cc-github.bmwgroup.net/swh/domain-tools (push)\n+ git remote rm origin\n+ git remote add origin file:///dev/null",
                                    "stdout_lines": [
                                        "+ [ -d /var/cache/git/cc-github.bmwgroup.net/swh/domain-tools ]",
                                        "+ git clone --bare /var/cache/git/cc-github.bmwgroup.net/swh/domain-tools /home/zuul/src/cc-github.bmwgroup.net/swh/domain-tools/.git",
                                        "Cloning into bare repository '/home/zuul/src/cc-github.bmwgroup.net/swh/domain-tools/.git'...",
                                        "done.",
                                        "+ cd /home/zuul/src/cc-github.bmwgroup.net/swh/domain-tools",
                                        "+ git config --local --bool core.bare false",
                                        "+ git remote -v",
                                        "+ grep origin",
                                        "origin\t/var/cache/git/cc-github.bmwgroup.net/swh/domain-tools (fetch)",
                                        "origin\t/var/cache/git/cc-github.bmwgroup.net/swh/domain-tools (push)",
                                        "+ git remote rm origin",
                                        "+ git remote add origin file:///dev/null"
                                    ],
                                    "zj_project": {
                                        "canonical_hostname": "cc-github.bmwgroup.net",
                                        "canonical_name": "cc-github.bmwgroup.net/swh/domain-tools",
                                        "checkout": "master",
                                        "checkout_description": "zuul branch",
                                        "commit": "22e48aea74d3e1a9d405529652492a0cfd84611a",
                                        "name": "swh/domain-tools",
                                        "required": true,
                                        "short_name": "domain-tools",
                                        "src_dir": "src/cc-github.bmwgroup.net/swh/domain-tools"
                                    },
                                    "zuul_log_id": "in-loop-ignore"
                                },
                                {
                                    "ansible_loop_var": "zj_project",
                                    "changed": true,
                                    "cmd": "set -ex\nif [ -d \"/var/cache/git/cc-github.bmwgroup.net/swh/ecu_xpad_sc_mpad\" ] ; then\n    # We do a bare clone here first so that we skip creating a working\n    # copy that will be overwritten later anyway.\n    git clone --bare /var/cache/git/cc-github.bmwgroup.net/swh/ecu_xpad_sc_mpad /home/zuul/src/cc-github.bmwgroup.net/swh/ecu_xpad_sc_mpad/.git\nelse\n    git init /home/zuul/src/cc-github.bmwgroup.net/swh/ecu_xpad_sc_mpad\nfi\ncd /home/zuul/src/cc-github.bmwgroup.net/swh/ecu_xpad_sc_mpad\ngit config --local --bool core.bare false\ngit remote -v | grep origin && git remote rm origin || true\ngit remote add origin file:///dev/null\n",
                                    "delta": "0:00:12.394950",
                                    "end": "2024-04-21 00:40:13.878242",
                                    "failed": false,
                                    "invocation": {
                                        "module_args": {
                                            "_raw_params": "set -ex\nif [ -d \"/var/cache/git/cc-github.bmwgroup.net/swh/ecu_xpad_sc_mpad\" ] ; then\n    # We do a bare clone here first so that we skip creating a working\n    # copy that will be overwritten later anyway.\n    git clone --bare /var/cache/git/cc-github.bmwgroup.net/swh/ecu_xpad_sc_mpad /home/zuul/src/cc-github.bmwgroup.net/swh/ecu_xpad_sc_mpad/.git\nelse\n    git init /home/zuul/src/cc-github.bmwgroup.net/swh/ecu_xpad_sc_mpad\nfi\ncd /home/zuul/src/cc-github.bmwgroup.net/swh/ecu_xpad_sc_mpad\ngit config --local --bool core.bare false\ngit remote -v | grep origin && git remote rm origin || true\ngit remote add origin file:///dev/null\n",
                                            "_uses_shell": true,
                                            "argv": null,
                                            "chdir": null,
                                            "creates": "/home/zuul/src/cc-github.bmwgroup.net/swh/ecu_xpad_sc_mpad",
                                            "executable": null,
                                            "removes": null,
                                            "stdin": null,
                                            "stdin_add_newline": true,
                                            "strip_empty_ends": true,
                                            "warn": false,
                                            "zuul_ansible_split_streams": false,
                                            "zuul_log_id": "in-loop-ignore"
                                        }
                                    },
                                    "msg": "",
                                    "rc": 0,
                                    "start": "2024-04-21 00:40:01.483292",
                                    "stderr": "",
                                    "stderr_lines": [],
                                    "stdout": "+ [ -d /var/cache/git/cc-github.bmwgroup.net/swh/ecu_xpad_sc_mpad ]\n+ git clone --bare /var/cache/git/cc-github.bmwgroup.net/swh/ecu_xpad_sc_mpad /home/zuul/src/cc-github.bmwgroup.net/swh/ecu_xpad_sc_mpad/.git\nCloning into bare repository '/home/zuul/src/cc-github.bmwgroup.net/swh/ecu_xpad_sc_mpad/.git'...\ndone.\n+ cd /home/zuul/src/cc-github.bmwgroup.net/swh/ecu_xpad_sc_mpad\n+ git config --local --bool core.bare false\n+ git remote -v\n+ grep origin\norigin\t/var/cache/git/cc-github.bmwgroup.net/swh/ecu_xpad_sc_mpad (fetch)\norigin\t/var/cache/git/cc-github.bmwgroup.net/swh/ecu_xpad_sc_mpad (push)\n+ git remote rm origin\n+ git remote add origin file:///dev/null",
                                    "stdout_lines": [
                                        "+ [ -d /var/cache/git/cc-github.bmwgroup.net/swh/ecu_xpad_sc_mpad ]",
                                        "+ git clone --bare /var/cache/git/cc-github.bmwgroup.net/swh/ecu_xpad_sc_mpad /home/zuul/src/cc-github.bmwgroup.net/swh/ecu_xpad_sc_mpad/.git",
                                        "Cloning into bare repository '/home/zuul/src/cc-github.bmwgroup.net/swh/ecu_xpad_sc_mpad/.git'...",
                                        "done.",
                                        "+ cd /home/zuul/src/cc-github.bmwgroup.net/swh/ecu_xpad_sc_mpad",
                                        "+ git config --local --bool core.bare false",
                                        "+ git remote -v",
                                        "+ grep origin",
                                        "origin\t/var/cache/git/cc-github.bmwgroup.net/swh/ecu_xpad_sc_mpad (fetch)",
                                        "origin\t/var/cache/git/cc-github.bmwgroup.net/swh/ecu_xpad_sc_mpad (push)",
                                        "+ git remote rm origin",
                                        "+ git remote add origin file:///dev/null"
                                    ],
                                    "zj_project": {
                                        "canonical_hostname": "cc-github.bmwgroup.net",
                                        "canonical_name": "cc-github.bmwgroup.net/swh/ecu_xpad_sc_mpad",
                                        "checkout": "master",
                                        "checkout_description": "zuul branch",
                                        "commit": "9f275d5b9f924de72632bda96690327fccdd5ff5",
                                        "name": "swh/ecu_xpad_sc_mpad",
                                        "required": true,
                                        "short_name": "ecu_xpad_sc_mpad",
                                        "src_dir": "src/cc-github.bmwgroup.net/swh/ecu_xpad_sc_mpad"
                                    },
                                    "zuul_log_id": "in-loop-ignore"
                                },
                                {
                                    "ansible_loop_var": "zj_project",
                                    "changed": true,
                                    "cmd": "set -ex\nif [ -d \"/var/cache/git/cc-github.bmwgroup.net/swh/foresight\" ] ; then\n    # We do a bare clone here first so that we skip creating a working\n    # copy that will be overwritten later anyway.\n    git clone --bare /var/cache/git/cc-github.bmwgroup.net/swh/foresight /home/zuul/src/cc-github.bmwgroup.net/swh/foresight/.git\nelse\n    git init /home/zuul/src/cc-github.bmwgroup.net/swh/foresight\nfi\ncd /home/zuul/src/cc-github.bmwgroup.net/swh/foresight\ngit config --local --bool core.bare false\ngit remote -v | grep origin && git remote rm origin || true\ngit remote add origin file:///dev/null\n",
                                    "delta": "0:00:01.726752",
                                    "end": "2024-04-21 00:40:15.841413",
                                    "failed": false,
                                    "invocation": {
                                        "module_args": {
                                            "_raw_params": "set -ex\nif [ -d \"/var/cache/git/cc-github.bmwgroup.net/swh/foresight\" ] ; then\n    # We do a bare clone here first so that we skip creating a working\n    # copy that will be overwritten later anyway.\n    git clone --bare /var/cache/git/cc-github.bmwgroup.net/swh/foresight /home/zuul/src/cc-github.bmwgroup.net/swh/foresight/.git\nelse\n    git init /home/zuul/src/cc-github.bmwgroup.net/swh/foresight\nfi\ncd /home/zuul/src/cc-github.bmwgroup.net/swh/foresight\ngit config --local --bool core.bare false\ngit remote -v | grep origin && git remote rm origin || true\ngit remote add origin file:///dev/null\n",
                                            "_uses_shell": true,
                                            "argv": null,
                                            "chdir": null,
                                            "creates": "/home/zuul/src/cc-github.bmwgroup.net/swh/foresight",
                                            "executable": null,
                                            "removes": null,
                                            "stdin": null,
                                            "stdin_add_newline": true,
                                            "strip_empty_ends": true,
                                            "warn": false,
                                            "zuul_ansible_split_streams": false,
                                            "zuul_log_id": "in-loop-ignore"
                                        }
                                    },
                                    "msg": "",
                                    "rc": 0,
                                    "start": "2024-04-21 00:40:14.114661",
                                    "stderr": "",
                                    "stderr_lines": [],
                                    "stdout": "+ [ -d /var/cache/git/cc-github.bmwgroup.net/swh/foresight ]\n+ git clone --bare /var/cache/git/cc-github.bmwgroup.net/swh/foresight /home/zuul/src/cc-github.bmwgroup.net/swh/foresight/.git\nCloning into bare repository '/home/zuul/src/cc-github.bmwgroup.net/swh/foresight/.git'...\ndone.\n+ cd /home/zuul/src/cc-github.bmwgroup.net/swh/foresight\n+ git config --local --bool core.bare false\n+ git remote -v\n+ grep origin\norigin\t/var/cache/git/cc-github.bmwgroup.net/swh/foresight (fetch)\norigin\t/var/cache/git/cc-github.bmwgroup.net/swh/foresight (push)\n+ git remote rm origin\n+ git remote add origin file:///dev/null",
                                    "stdout_lines": [
                                        "+ [ -d /var/cache/git/cc-github.bmwgroup.net/swh/foresight ]",
                                        "+ git clone --bare /var/cache/git/cc-github.bmwgroup.net/swh/foresight /home/zuul/src/cc-github.bmwgroup.net/swh/foresight/.git",
                                        "Cloning into bare repository '/home/zuul/src/cc-github.bmwgroup.net/swh/foresight/.git'...",
                                        "done.",
                                        "+ cd /home/zuul/src/cc-github.bmwgroup.net/swh/foresight",
                                        "+ git config --local --bool core.bare false",
                                        "+ git remote -v",
                                        "+ grep origin",
                                        "origin\t/var/cache/git/cc-github.bmwgroup.net/swh/foresight (fetch)",
                                        "origin\t/var/cache/git/cc-github.bmwgroup.net/swh/foresight (push)",
                                        "+ git remote rm origin",
                                        "+ git remote add origin file:///dev/null"
                                    ],
                                    "zj_project": {
                                        "canonical_hostname": "cc-github.bmwgroup.net",
                                        "canonical_name": "cc-github.bmwgroup.net/swh/foresight",
                                        "checkout": "master",
                                        "checkout_description": "zuul branch",
                                        "commit": "0961a62bed7ee412bf80fe5a9b879e5586964358",
                                        "name": "swh/foresight",
                                        "required": true,
                                        "short_name": "foresight",
                                        "src_dir": "src/cc-github.bmwgroup.net/swh/foresight"
                                    },
                                    "zuul_log_id": "in-loop-ignore"
                                },
                                {
                                    "ansible_loop_var": "zj_project",
                                    "changed": true,
                                    "cmd": "set -ex\nif [ -d \"/var/cache/git/cc-github.bmwgroup.net/swh/franky_ib\" ] ; then\n    # We do a bare clone here first so that we skip creating a working\n    # copy that will be overwritten later anyway.\n    git clone --bare /var/cache/git/cc-github.bmwgroup.net/swh/franky_ib /home/zuul/src/cc-github.bmwgroup.net/swh/franky_ib/.git\nelse\n    git init /home/zuul/src/cc-github.bmwgroup.net/swh/franky_ib\nfi\ncd /home/zuul/src/cc-github.bmwgroup.net/swh/franky_ib\ngit config --local --bool core.bare false\ngit remote -v | grep origin && git remote rm origin || true\ngit remote add origin file:///dev/null\n",
                                    "delta": "0:00:00.171509",
                                    "end": "2024-04-21 00:40:16.286399",
                                    "failed": false,
                                    "invocation": {
                                        "module_args": {
                                            "_raw_params": "set -ex\nif [ -d \"/var/cache/git/cc-github.bmwgroup.net/swh/franky_ib\" ] ; then\n    # We do a bare clone here first so that we skip creating a working\n    # copy that will be overwritten later anyway.\n    git clone --bare /var/cache/git/cc-github.bmwgroup.net/swh/franky_ib /home/zuul/src/cc-github.bmwgroup.net/swh/franky_ib/.git\nelse\n    git init /home/zuul/src/cc-github.bmwgroup.net/swh/franky_ib\nfi\ncd /home/zuul/src/cc-github.bmwgroup.net/swh/franky_ib\ngit config --local --bool core.bare false\ngit remote -v | grep origin && git remote rm origin || true\ngit remote add origin file:///dev/null\n",
                                            "_uses_shell": true,
                                            "argv": null,
                                            "chdir": null,
                                            "creates": "/home/zuul/src/cc-github.bmwgroup.net/swh/franky_ib",
                                            "executable": null,
                                            "removes": null,
                                            "stdin": null,
                                            "stdin_add_newline": true,
                                            "strip_empty_ends": true,
                                            "warn": false,
                                            "zuul_ansible_split_streams": false,
                                            "zuul_log_id": "in-loop-ignore"
                                        }
                                    },
                                    "msg": "",
                                    "rc": 0,
                                    "start": "2024-04-21 00:40:16.114890",
                                    "stderr": "",
                                    "stderr_lines": [],
                                    "stdout": "+ [ -d /var/cache/git/cc-github.bmwgroup.net/swh/franky_ib ]\n+ git clone --bare /var/cache/git/cc-github.bmwgroup.net/swh/franky_ib /home/zuul/src/cc-github.bmwgroup.net/swh/franky_ib/.git\nCloning into bare repository '/home/zuul/src/cc-github.bmwgroup.net/swh/franky_ib/.git'...\ndone.\n+ cd /home/zuul/src/cc-github.bmwgroup.net/swh/franky_ib\n+ git config --local --bool core.bare false\n+ git remote -v\n+ grep origin\norigin\t/var/cache/git/cc-github.bmwgroup.net/swh/franky_ib (fetch)\norigin\t/var/cache/git/cc-github.bmwgroup.net/swh/franky_ib (push)\n+ git remote rm origin\n+ git remote add origin file:///dev/null",
                                    "stdout_lines": [
                                        "+ [ -d /var/cache/git/cc-github.bmwgroup.net/swh/franky_ib ]",
                                        "+ git clone --bare /var/cache/git/cc-github.bmwgroup.net/swh/franky_ib /home/zuul/src/cc-github.bmwgroup.net/swh/franky_ib/.git",
                                        "Cloning into bare repository '/home/zuul/src/cc-github.bmwgroup.net/swh/franky_ib/.git'...",
                                        "done.",
                                        "+ cd /home/zuul/src/cc-github.bmwgroup.net/swh/franky_ib",
                                        "+ git config --local --bool core.bare false",
                                        "+ git remote -v",
                                        "+ grep origin",
                                        "origin\t/var/cache/git/cc-github.bmwgroup.net/swh/franky_ib (fetch)",
                                        "origin\t/var/cache/git/cc-github.bmwgroup.net/swh/franky_ib (push)",
                                        "+ git remote rm origin",
                                        "+ git remote add origin file:///dev/null"
                                    ],
                                    "zj_project": {
                                        "canonical_hostname": "cc-github.bmwgroup.net",
                                        "canonical_name": "cc-github.bmwgroup.net/swh/franky_ib",
                                        "checkout": "master",
                                        "checkout_description": "zuul branch",
                                        "commit": "7a74d491251435e7b011e7010d11fbc9224b355c",
                                        "name": "swh/franky_ib",
                                        "required": true,
                                        "short_name": "franky_ib",
                                        "src_dir": "src/cc-github.bmwgroup.net/swh/franky_ib"
                                    },
                                    "zuul_log_id": "in-loop-ignore"
                                },
                                {
                                    "ansible_loop_var": "zj_project",
                                    "changed": true,
                                    "cmd": "set -ex\nif [ -d \"/var/cache/git/cc-github.bmwgroup.net/swh/gnss_common\" ] ; then\n    # We do a bare clone here first so that we skip creating a working\n    # copy that will be overwritten later anyway.\n    git clone --bare /var/cache/git/cc-github.bmwgroup.net/swh/gnss_common /home/zuul/src/cc-github.bmwgroup.net/swh/gnss_common/.git\nelse\n    git init /home/zuul/src/cc-github.bmwgroup.net/swh/gnss_common\nfi\ncd /home/zuul/src/cc-github.bmwgroup.net/swh/gnss_common\ngit config --local --bool core.bare false\ngit remote -v | grep origin && git remote rm origin || true\ngit remote add origin file:///dev/null\n",
                                    "delta": "0:00:00.544498",
                                    "end": "2024-04-21 00:40:17.049104",
                                    "failed": false,
                                    "invocation": {
                                        "module_args": {
                                            "_raw_params": "set -ex\nif [ -d \"/var/cache/git/cc-github.bmwgroup.net/swh/gnss_common\" ] ; then\n    # We do a bare clone here first so that we skip creating a working\n    # copy that will be overwritten later anyway.\n    git clone --bare /var/cache/git/cc-github.bmwgroup.net/swh/gnss_common /home/zuul/src/cc-github.bmwgroup.net/swh/gnss_common/.git\nelse\n    git init /home/zuul/src/cc-github.bmwgroup.net/swh/gnss_common\nfi\ncd /home/zuul/src/cc-github.bmwgroup.net/swh/gnss_common\ngit config --local --bool core.bare false\ngit remote -v | grep origin && git remote rm origin || true\ngit remote add origin file:///dev/null\n",
                                            "_uses_shell": true,
                                            "argv": null,
                                            "chdir": null,
                                            "creates": "/home/zuul/src/cc-github.bmwgroup.net/swh/gnss_common",
                                            "executable": null,
                                            "removes": null,
                                            "stdin": null,
                                            "stdin_add_newline": true,
                                            "strip_empty_ends": true,
                                            "warn": false,
                                            "zuul_ansible_split_streams": false,
                                            "zuul_log_id": "in-loop-ignore"
                                        }
                                    },
                                    "msg": "",
                                    "rc": 0,
                                    "start": "2024-04-21 00:40:16.504606",
                                    "stderr": "",
                                    "stderr_lines": [],
                                    "stdout": "+ [ -d /var/cache/git/cc-github.bmwgroup.net/swh/gnss_common ]\n+ git clone --bare /var/cache/git/cc-github.bmwgroup.net/swh/gnss_common /home/zuul/src/cc-github.bmwgroup.net/swh/gnss_common/.git\nCloning into bare repository '/home/zuul/src/cc-github.bmwgroup.net/swh/gnss_common/.git'...\ndone.\n+ cd /home/zuul/src/cc-github.bmwgroup.net/swh/gnss_common\n+ git config --local --bool core.bare false\n+ git remote -v\n+ grep origin\norigin\t/var/cache/git/cc-github.bmwgroup.net/swh/gnss_common (fetch)\norigin\t/var/cache/git/cc-github.bmwgroup.net/swh/gnss_common (push)\n+ git remote rm origin\n+ git remote add origin file:///dev/null",
                                    "stdout_lines": [
                                        "+ [ -d /var/cache/git/cc-github.bmwgroup.net/swh/gnss_common ]",
                                        "+ git clone --bare /var/cache/git/cc-github.bmwgroup.net/swh/gnss_common /home/zuul/src/cc-github.bmwgroup.net/swh/gnss_common/.git",
                                        "Cloning into bare repository '/home/zuul/src/cc-github.bmwgroup.net/swh/gnss_common/.git'...",
                                        "done.",
                                        "+ cd /home/zuul/src/cc-github.bmwgroup.net/swh/gnss_common",
                                        "+ git config --local --bool core.bare false",
                                        "+ git remote -v",
                                        "+ grep origin",
                                        "origin\t/var/cache/git/cc-github.bmwgroup.net/swh/gnss_common (fetch)",
                                        "origin\t/var/cache/git/cc-github.bmwgroup.net/swh/gnss_common (push)",
                                        "+ git remote rm origin",
                                        "+ git remote add origin file:///dev/null"
                                    ],
                                    "zj_project": {
                                        "canonical_hostname": "cc-github.bmwgroup.net",
                                        "canonical_name": "cc-github.bmwgroup.net/swh/gnss_common",
                                        "checkout": "master",
                                        "checkout_description": "zuul branch",
                                        "commit": "7aeb42bd9976938f99a41c088c70fe8af14ee8fc",
                                        "name": "swh/gnss_common",
                                        "required": true,
                                        "short_name": "gnss_common",
                                        "src_dir": "src/cc-github.bmwgroup.net/swh/gnss_common"
                                    },
                                    "zuul_log_id": "in-loop-ignore"
                                },
                                {
                                    "ansible_loop_var": "zj_project",
                                    "changed": true,
                                    "cmd": "set -ex\nif [ -d \"/var/cache/git/cc-github.bmwgroup.net/swh/ib-vip\" ] ; then\n    # We do a bare clone here first so that we skip creating a working\n    # copy that will be overwritten later anyway.\n    git clone --bare /var/cache/git/cc-github.bmwgroup.net/swh/ib-vip /home/zuul/src/cc-github.bmwgroup.net/swh/ib-vip/.git\nelse\n    git init /home/zuul/src/cc-github.bmwgroup.net/swh/ib-vip\nfi\ncd /home/zuul/src/cc-github.bmwgroup.net/swh/ib-vip\ngit config --local --bool core.bare false\ngit remote -v | grep origin && git remote rm origin || true\ngit remote add origin file:///dev/null\n",
                                    "delta": "0:00:05.848712",
                                    "end": "2024-04-21 00:40:23.222582",
                                    "failed": false,
                                    "invocation": {
                                        "module_args": {
                                            "_raw_params": "set -ex\nif [ -d \"/var/cache/git/cc-github.bmwgroup.net/swh/ib-vip\" ] ; then\n    # We do a bare clone here first so that we skip creating a working\n    # copy that will be overwritten later anyway.\n    git clone --bare /var/cache/git/cc-github.bmwgroup.net/swh/ib-vip /home/zuul/src/cc-github.bmwgroup.net/swh/ib-vip/.git\nelse\n    git init /home/zuul/src/cc-github.bmwgroup.net/swh/ib-vip\nfi\ncd /home/zuul/src/cc-github.bmwgroup.net/swh/ib-vip\ngit config --local --bool core.bare false\ngit remote -v | grep origin && git remote rm origin || true\ngit remote add origin file:///dev/null\n",
                                            "_uses_shell": true,
                                            "argv": null,
                                            "chdir": null,
                                            "creates": "/home/zuul/src/cc-github.bmwgroup.net/swh/ib-vip",
                                            "executable": null,
                                            "removes": null,
                                            "stdin": null,
                                            "stdin_add_newline": true,
                                            "strip_empty_ends": true,
                                            "warn": false,
                                            "zuul_ansible_split_streams": false,
                                            "zuul_log_id": "in-loop-ignore"
                                        }
                                    },
                                    "msg": "",
                                    "rc": 0,
                                    "start": "2024-04-21 00:40:17.373870",
                                    "stderr": "",
                                    "stderr_lines": [],
                                    "stdout": "+ [ -d /var/cache/git/cc-github.bmwgroup.net/swh/ib-vip ]\n+ git clone --bare /var/cache/git/cc-github.bmwgroup.net/swh/ib-vip /home/zuul/src/cc-github.bmwgroup.net/swh/ib-vip/.git\nCloning into bare repository '/home/zuul/src/cc-github.bmwgroup.net/swh/ib-vip/.git'...\ndone.\n+ cd /home/zuul/src/cc-github.bmwgroup.net/swh/ib-vip\n+ git config --local --bool core.bare false\n+ git remote -v\n+ grep origin\norigin\t/var/cache/git/cc-github.bmwgroup.net/swh/ib-vip (fetch)\norigin\t/var/cache/git/cc-github.bmwgroup.net/swh/ib-vip (push)\n+ git remote rm origin\n+ git remote add origin file:///dev/null",
                                    "stdout_lines": [
                                        "+ [ -d /var/cache/git/cc-github.bmwgroup.net/swh/ib-vip ]",
                                        "+ git clone --bare /var/cache/git/cc-github.bmwgroup.net/swh/ib-vip /home/zuul/src/cc-github.bmwgroup.net/swh/ib-vip/.git",
                                        "Cloning into bare repository '/home/zuul/src/cc-github.bmwgroup.net/swh/ib-vip/.git'...",
                                        "done.",
                                        "+ cd /home/zuul/src/cc-github.bmwgroup.net/swh/ib-vip",
                                        "+ git config --local --bool core.bare false",
                                        "+ git remote -v",
                                        "+ grep origin",
                                        "origin\t/var/cache/git/cc-github.bmwgroup.net/swh/ib-vip (fetch)",
                                        "origin\t/var/cache/git/cc-github.bmwgroup.net/swh/ib-vip (push)",
                                        "+ git remote rm origin",
                                        "+ git remote add origin file:///dev/null"
                                    ],
                                    "zj_project": {
                                        "canonical_hostname": "cc-github.bmwgroup.net",
                                        "canonical_name": "cc-github.bmwgroup.net/swh/ib-vip",
                                        "checkout": "master",
                                        "checkout_description": "zuul branch",
                                        "commit": "77d3abe6f172efef2f93e6c3a61af0f3ee7d7967",
                                        "name": "swh/ib-vip",
                                        "required": true,
                                        "short_name": "ib-vip",
                                        "src_dir": "src/cc-github.bmwgroup.net/swh/ib-vip"
                                    },
                                    "zuul_log_id": "in-loop-ignore"
                                },
                                {
                                    "ansible_loop_var": "zj_project",
                                    "changed": true,
                                    "cmd": "set -ex\nif [ -d \"/var/cache/git/cc-github.bmwgroup.net/swh/ltf-dlt\" ] ; then\n    # We do a bare clone here first so that we skip creating a working\n    # copy that will be overwritten later anyway.\n    git clone --bare /var/cache/git/cc-github.bmwgroup.net/swh/ltf-dlt /home/zuul/src/cc-github.bmwgroup.net/swh/ltf-dlt/.git\nelse\n    git init /home/zuul/src/cc-github.bmwgroup.net/swh/ltf-dlt\nfi\ncd /home/zuul/src/cc-github.bmwgroup.net/swh/ltf-dlt\ngit config --local --bool core.bare false\ngit remote -v | grep origin && git remote rm origin || true\ngit remote add origin file:///dev/null\n",
                                    "delta": "0:00:00.111420",
                                    "end": "2024-04-21 00:40:23.549544",
                                    "failed": false,
                                    "invocation": {
                                        "module_args": {
                                            "_raw_params": "set -ex\nif [ -d \"/var/cache/git/cc-github.bmwgroup.net/swh/ltf-dlt\" ] ; then\n    # We do a bare clone here first so that we skip creating a working\n    # copy that will be overwritten later anyway.\n    git clone --bare /var/cache/git/cc-github.bmwgroup.net/swh/ltf-dlt /home/zuul/src/cc-github.bmwgroup.net/swh/ltf-dlt/.git\nelse\n    git init /home/zuul/src/cc-github.bmwgroup.net/swh/ltf-dlt\nfi\ncd /home/zuul/src/cc-github.bmwgroup.net/swh/ltf-dlt\ngit config --local --bool core.bare false\ngit remote -v | grep origin && git remote rm origin || true\ngit remote add origin file:///dev/null\n",
                                            "_uses_shell": true,
                                            "argv": null,
                                            "chdir": null,
                                            "creates": "/home/zuul/src/cc-github.bmwgroup.net/swh/ltf-dlt",
                                            "executable": null,
                                            "removes": null,
                                            "stdin": null,
                                            "stdin_add_newline": true,
                                            "strip_empty_ends": true,
                                            "warn": false,
                                            "zuul_ansible_split_streams": false,
                                            "zuul_log_id": "in-loop-ignore"
                                        }
                                    },
                                    "msg": "",
                                    "rc": 0,
                                    "start": "2024-04-21 00:40:23.438124",
                                    "stderr": "",
                                    "stderr_lines": [],
                                    "stdout": "+ [ -d /var/cache/git/cc-github.bmwgroup.net/swh/ltf-dlt ]\n+ git clone --bare /var/cache/git/cc-github.bmwgroup.net/swh/ltf-dlt /home/zuul/src/cc-github.bmwgroup.net/swh/ltf-dlt/.git\nCloning into bare repository '/home/zuul/src/cc-github.bmwgroup.net/swh/ltf-dlt/.git'...\ndone.\n+ cd /home/zuul/src/cc-github.bmwgroup.net/swh/ltf-dlt\n+ git config --local --bool core.bare false\n+ git remote -v\n+ grep origin\norigin\t/var/cache/git/cc-github.bmwgroup.net/swh/ltf-dlt (fetch)\norigin\t/var/cache/git/cc-github.bmwgroup.net/swh/ltf-dlt (push)\n+ git remote rm origin\n+ git remote add origin file:///dev/null",
                                    "stdout_lines": [
                                        "+ [ -d /var/cache/git/cc-github.bmwgroup.net/swh/ltf-dlt ]",
                                        "+ git clone --bare /var/cache/git/cc-github.bmwgroup.net/swh/ltf-dlt /home/zuul/src/cc-github.bmwgroup.net/swh/ltf-dlt/.git",
                                        "Cloning into bare repository '/home/zuul/src/cc-github.bmwgroup.net/swh/ltf-dlt/.git'...",
                                        "done.",
                                        "+ cd /home/zuul/src/cc-github.bmwgroup.net/swh/ltf-dlt",
                                        "+ git config --local --bool core.bare false",
                                        "+ git remote -v",
                                        "+ grep origin",
                                        "origin\t/var/cache/git/cc-github.bmwgroup.net/swh/ltf-dlt (fetch)",
                                        "origin\t/var/cache/git/cc-github.bmwgroup.net/swh/ltf-dlt (push)",
                                        "+ git remote rm origin",
                                        "+ git remote add origin file:///dev/null"
                                    ],
                                    "zj_project": {
                                        "canonical_hostname": "cc-github.bmwgroup.net",
                                        "canonical_name": "cc-github.bmwgroup.net/swh/ltf-dlt",
                                        "checkout": "master",
                                        "checkout_description": "zuul branch",
                                        "commit": "68fa15c725670a73c3c7f3566a99f38cd3a87ae5",
                                        "name": "swh/ltf-dlt",
                                        "required": true,
                                        "short_name": "ltf-dlt",
                                        "src_dir": "src/cc-github.bmwgroup.net/swh/ltf-dlt"
                                    },
                                    "zuul_log_id": "in-loop-ignore"
                                },
                                {
                                    "ansible_loop_var": "zj_project",
                                    "changed": true,
                                    "cmd": "set -ex\nif [ -d \"/var/cache/git/cc-github.bmwgroup.net/swh/orion\" ] ; then\n    # We do a bare clone here first so that we skip creating a working\n    # copy that will be overwritten later anyway.\n    git clone --bare /var/cache/git/cc-github.bmwgroup.net/swh/orion /home/zuul/src/cc-github.bmwgroup.net/swh/orion/.git\nelse\n    git init /home/zuul/src/cc-github.bmwgroup.net/swh/orion\nfi\ncd /home/zuul/src/cc-github.bmwgroup.net/swh/orion\ngit config --local --bool core.bare false\ngit remote -v | grep origin && git remote rm origin || true\ngit remote add origin file:///dev/null\n",
                                    "delta": "0:00:00.470172",
                                    "end": "2024-04-21 00:40:24.249171",
                                    "failed": false,
                                    "invocation": {
                                        "module_args": {
                                            "_raw_params": "set -ex\nif [ -d \"/var/cache/git/cc-github.bmwgroup.net/swh/orion\" ] ; then\n    # We do a bare clone here first so that we skip creating a working\n    # copy that will be overwritten later anyway.\n    git clone --bare /var/cache/git/cc-github.bmwgroup.net/swh/orion /home/zuul/src/cc-github.bmwgroup.net/swh/orion/.git\nelse\n    git init /home/zuul/src/cc-github.bmwgroup.net/swh/orion\nfi\ncd /home/zuul/src/cc-github.bmwgroup.net/swh/orion\ngit config --local --bool core.bare false\ngit remote -v | grep origin && git remote rm origin || true\ngit remote add origin file:///dev/null\n",
                                            "_uses_shell": true,
                                            "argv": null,
                                            "chdir": null,
                                            "creates": "/home/zuul/src/cc-github.bmwgroup.net/swh/orion",
                                            "executable": null,
                                            "removes": null,
                                            "stdin": null,
                                            "stdin_add_newline": true,
                                            "strip_empty_ends": true,
                                            "warn": false,
                                            "zuul_ansible_split_streams": false,
                                            "zuul_log_id": "in-loop-ignore"
                                        }
                                    },
                                    "msg": "",
                                    "rc": 0,
                                    "start": "2024-04-21 00:40:23.778999",
                                    "stderr": "",
                                    "stderr_lines": [],
                                    "stdout": "+ [ -d /var/cache/git/cc-github.bmwgroup.net/swh/orion ]\n+ git clone --bare /var/cache/git/cc-github.bmwgroup.net/swh/orion /home/zuul/src/cc-github.bmwgroup.net/swh/orion/.git\nCloning into bare repository '/home/zuul/src/cc-github.bmwgroup.net/swh/orion/.git'...\ndone.\n+ cd /home/zuul/src/cc-github.bmwgroup.net/swh/orion\n+ git config --local --bool core.bare false\n+ git remote -v\n+ grep origin\norigin\t/var/cache/git/cc-github.bmwgroup.net/swh/orion (fetch)\norigin\t/var/cache/git/cc-github.bmwgroup.net/swh/orion (push)\n+ git remote rm origin\n+ git remote add origin file:///dev/null",
                                    "stdout_lines": [
                                        "+ [ -d /var/cache/git/cc-github.bmwgroup.net/swh/orion ]",
                                        "+ git clone --bare /var/cache/git/cc-github.bmwgroup.net/swh/orion /home/zuul/src/cc-github.bmwgroup.net/swh/orion/.git",
                                        "Cloning into bare repository '/home/zuul/src/cc-github.bmwgroup.net/swh/orion/.git'...",
                                        "done.",
                                        "+ cd /home/zuul/src/cc-github.bmwgroup.net/swh/orion",
                                        "+ git config --local --bool core.bare false",
                                        "+ git remote -v",
                                        "+ grep origin",
                                        "origin\t/var/cache/git/cc-github.bmwgroup.net/swh/orion (fetch)",
                                        "origin\t/var/cache/git/cc-github.bmwgroup.net/swh/orion (push)",
                                        "+ git remote rm origin",
                                        "+ git remote add origin file:///dev/null"
                                    ],
                                    "zj_project": {
                                        "canonical_hostname": "cc-github.bmwgroup.net",
                                        "canonical_name": "cc-github.bmwgroup.net/swh/orion",
                                        "checkout": "master",
                                        "checkout_description": "zuul branch",
                                        "commit": "72eb2c62dc7bccf336d71917365610e01f7b7512",
                                        "name": "swh/orion",
                                        "required": true,
                                        "short_name": "orion",
                                        "src_dir": "src/cc-github.bmwgroup.net/swh/orion"
                                    },
                                    "zuul_log_id": "in-loop-ignore"
                                },
                                {
                                    "ansible_loop_var": "zj_project",
                                    "changed": true,
                                    "cmd": "set -ex\nif [ -d \"/var/cache/git/cc-github.bmwgroup.net/swh/orion_aeb_temp\" ] ; then\n    # We do a bare clone here first so that we skip creating a working\n    # copy that will be overwritten later anyway.\n    git clone --bare /var/cache/git/cc-github.bmwgroup.net/swh/orion_aeb_temp /home/zuul/src/cc-github.bmwgroup.net/swh/orion_aeb_temp/.git\nelse\n    git init /home/zuul/src/cc-github.bmwgroup.net/swh/orion_aeb_temp\nfi\ncd /home/zuul/src/cc-github.bmwgroup.net/swh/orion_aeb_temp\ngit config --local --bool core.bare false\ngit remote -v | grep origin && git remote rm origin || true\ngit remote add origin file:///dev/null\n",
                                    "delta": "0:00:00.105234",
                                    "end": "2024-04-21 00:40:24.634449",
                                    "failed": false,
                                    "invocation": {
                                        "module_args": {
                                            "_raw_params": "set -ex\nif [ -d \"/var/cache/git/cc-github.bmwgroup.net/swh/orion_aeb_temp\" ] ; then\n    # We do a bare clone here first so that we skip creating a working\n    # copy that will be overwritten later anyway.\n    git clone --bare /var/cache/git/cc-github.bmwgroup.net/swh/orion_aeb_temp /home/zuul/src/cc-github.bmwgroup.net/swh/orion_aeb_temp/.git\nelse\n    git init /home/zuul/src/cc-github.bmwgroup.net/swh/orion_aeb_temp\nfi\ncd /home/zuul/src/cc-github.bmwgroup.net/swh/orion_aeb_temp\ngit config --local --bool core.bare false\ngit remote -v | grep origin && git remote rm origin || true\ngit remote add origin file:///dev/null\n",
                                            "_uses_shell": true,
                                            "argv": null,
                                            "chdir": null,
                                            "creates": "/home/zuul/src/cc-github.bmwgroup.net/swh/orion_aeb_temp",
                                            "executable": null,
                                            "removes": null,
                                            "stdin": null,
                                            "stdin_add_newline": true,
                                            "strip_empty_ends": true,
                                            "warn": false,
                                            "zuul_ansible_split_streams": false,
                                            "zuul_log_id": "in-loop-ignore"
                                        }
                                    },
                                    "msg": "",
                                    "rc": 0,
                                    "start": "2024-04-21 00:40:24.529215",
                                    "stderr": "",
                                    "stderr_lines": [],
                                    "stdout": "+ [ -d /var/cache/git/cc-github.bmwgroup.net/swh/orion_aeb_temp ]\n+ git clone --bare /var/cache/git/cc-github.bmwgroup.net/swh/orion_aeb_temp /home/zuul/src/cc-github.bmwgroup.net/swh/orion_aeb_temp/.git\nCloning into bare repository '/home/zuul/src/cc-github.bmwgroup.net/swh/orion_aeb_temp/.git'...\ndone.\n+ cd /home/zuul/src/cc-github.bmwgroup.net/swh/orion_aeb_temp\n+ git config --local --bool core.bare false\n+ git remote -v\n+ grep origin\norigin\t/var/cache/git/cc-github.bmwgroup.net/swh/orion_aeb_temp (fetch)\norigin\t/var/cache/git/cc-github.bmwgroup.net/swh/orion_aeb_temp (push)\n+ git remote rm origin\n+ git remote add origin file:///dev/null",
                                    "stdout_lines": [
                                        "+ [ -d /var/cache/git/cc-github.bmwgroup.net/swh/orion_aeb_temp ]",
                                        "+ git clone --bare /var/cache/git/cc-github.bmwgroup.net/swh/orion_aeb_temp /home/zuul/src/cc-github.bmwgroup.net/swh/orion_aeb_temp/.git",
                                        "Cloning into bare repository '/home/zuul/src/cc-github.bmwgroup.net/swh/orion_aeb_temp/.git'...",
                                        "done.",
                                        "+ cd /home/zuul/src/cc-github.bmwgroup.net/swh/orion_aeb_temp",
                                        "+ git config --local --bool core.bare false",
                                        "+ git remote -v",
                                        "+ grep origin",
                                        "origin\t/var/cache/git/cc-github.bmwgroup.net/swh/orion_aeb_temp (fetch)",
                                        "origin\t/var/cache/git/cc-github.bmwgroup.net/swh/orion_aeb_temp (push)",
                                        "+ git remote rm origin",
                                        "+ git remote add origin file:///dev/null"
                                    ],
                                    "zj_project": {
                                        "canonical_hostname": "cc-github.bmwgroup.net",
                                        "canonical_name": "cc-github.bmwgroup.net/swh/orion_aeb_temp",
                                        "checkout": "master",
                                        "checkout_description": "zuul branch",
                                        "commit": "b473c7ab8c70f69511aeff1374d70aef88f33d4a",
                                        "name": "swh/orion_aeb_temp",
                                        "required": true,
                                        "short_name": "orion_aeb_temp",
                                        "src_dir": "src/cc-github.bmwgroup.net/swh/orion_aeb_temp"
                                    },
                                    "zuul_log_id": "in-loop-ignore"
                                },
                                {
                                    "ansible_loop_var": "zj_project",
                                    "changed": true,
                                    "cmd": "set -ex\nif [ -d \"/var/cache/git/cc-github.bmwgroup.net/swh/system_description\" ] ; then\n    # We do a bare clone here first so that we skip creating a working\n    # copy that will be overwritten later anyway.\n    git clone --bare /var/cache/git/cc-github.bmwgroup.net/swh/system_description /home/zuul/src/cc-github.bmwgroup.net/swh/system_description/.git\nelse\n    git init /home/zuul/src/cc-github.bmwgroup.net/swh/system_description\nfi\ncd /home/zuul/src/cc-github.bmwgroup.net/swh/system_description\ngit config --local --bool core.bare false\ngit remote -v | grep origin && git remote rm origin || true\ngit remote add origin file:///dev/null\n",
                                    "delta": "0:00:00.380385",
                                    "end": "2024-04-21 00:40:25.274371",
                                    "failed": false,
                                    "invocation": {
                                        "module_args": {
                                            "_raw_params": "set -ex\nif [ -d \"/var/cache/git/cc-github.bmwgroup.net/swh/system_description\" ] ; then\n    # We do a bare clone here first so that we skip creating a working\n    # copy that will be overwritten later anyway.\n    git clone --bare /var/cache/git/cc-github.bmwgroup.net/swh/system_description /home/zuul/src/cc-github.bmwgroup.net/swh/system_description/.git\nelse\n    git init /home/zuul/src/cc-github.bmwgroup.net/swh/system_description\nfi\ncd /home/zuul/src/cc-github.bmwgroup.net/swh/system_description\ngit config --local --bool core.bare false\ngit remote -v | grep origin && git remote rm origin || true\ngit remote add origin file:///dev/null\n",
                                            "_uses_shell": true,
                                            "argv": null,
                                            "chdir": null,
                                            "creates": "/home/zuul/src/cc-github.bmwgroup.net/swh/system_description",
                                            "executable": null,
                                            "removes": null,
                                            "stdin": null,
                                            "stdin_add_newline": true,
                                            "strip_empty_ends": true,
                                            "warn": false,
                                            "zuul_ansible_split_streams": false,
                                            "zuul_log_id": "in-loop-ignore"
                                        }
                                    },
                                    "msg": "",
                                    "rc": 0,
                                    "start": "2024-04-21 00:40:24.893986",
                                    "stderr": "",
                                    "stderr_lines": [],
                                    "stdout": "+ [ -d /var/cache/git/cc-github.bmwgroup.net/swh/system_description ]\n+ git clone --bare /var/cache/git/cc-github.bmwgroup.net/swh/system_description /home/zuul/src/cc-github.bmwgroup.net/swh/system_description/.git\nCloning into bare repository '/home/zuul/src/cc-github.bmwgroup.net/swh/system_description/.git'...\ndone.\n+ cd /home/zuul/src/cc-github.bmwgroup.net/swh/system_description\n+ git config --local --bool core.bare false\n+ git remote -v\n+ grep origin\norigin\t/var/cache/git/cc-github.bmwgroup.net/swh/system_description (fetch)\norigin\t/var/cache/git/cc-github.bmwgroup.net/swh/system_description (push)\n+ git remote rm origin\n+ git remote add origin file:///dev/null",
                                    "stdout_lines": [
                                        "+ [ -d /var/cache/git/cc-github.bmwgroup.net/swh/system_description ]",
                                        "+ git clone --bare /var/cache/git/cc-github.bmwgroup.net/swh/system_description /home/zuul/src/cc-github.bmwgroup.net/swh/system_description/.git",
                                        "Cloning into bare repository '/home/zuul/src/cc-github.bmwgroup.net/swh/system_description/.git'...",
                                        "done.",
                                        "+ cd /home/zuul/src/cc-github.bmwgroup.net/swh/system_description",
                                        "+ git config --local --bool core.bare false",
                                        "+ git remote -v",
                                        "+ grep origin",
                                        "origin\t/var/cache/git/cc-github.bmwgroup.net/swh/system_description (fetch)",
                                        "origin\t/var/cache/git/cc-github.bmwgroup.net/swh/system_description (push)",
                                        "+ git remote rm origin",
                                        "+ git remote add origin file:///dev/null"
                                    ],
                                    "zj_project": {
                                        "canonical_hostname": "cc-github.bmwgroup.net",
                                        "canonical_name": "cc-github.bmwgroup.net/swh/system_description",
                                        "checkout": "master",
                                        "checkout_description": "zuul branch",
                                        "commit": "42dc122349acc14be41c1ebee15c7edff680fb79",
                                        "name": "swh/system_description",
                                        "required": true,
                                        "short_name": "system_description",
                                        "src_dir": "src/cc-github.bmwgroup.net/swh/system_description"
                                    },
                                    "zuul_log_id": "in-loop-ignore"
                                },
                                {
                                    "ansible_loop_var": "zj_project",
                                    "changed": true,
                                    "cmd": "set -ex\nif [ -d \"/var/cache/git/cc-github.bmwgroup.net/swh/ufm\" ] ; then\n    # We do a bare clone here first so that we skip creating a working\n    # copy that will be overwritten later anyway.\n    git clone --bare /var/cache/git/cc-github.bmwgroup.net/swh/ufm /home/zuul/src/cc-github.bmwgroup.net/swh/ufm/.git\nelse\n    git init /home/zuul/src/cc-github.bmwgroup.net/swh/ufm\nfi\ncd /home/zuul/src/cc-github.bmwgroup.net/swh/ufm\ngit config --local --bool core.bare false\ngit remote -v | grep origin && git remote rm origin || true\ngit remote add origin file:///dev/null\n",
                                    "delta": "0:00:01.503444",
                                    "end": "2024-04-21 00:40:26.985912",
                                    "failed": false,
                                    "invocation": {
                                        "module_args": {
                                            "_raw_params": "set -ex\nif [ -d \"/var/cache/git/cc-github.bmwgroup.net/swh/ufm\" ] ; then\n    # We do a bare clone here first so that we skip creating a working\n    # copy that will be overwritten later anyway.\n    git clone --bare /var/cache/git/cc-github.bmwgroup.net/swh/ufm /home/zuul/src/cc-github.bmwgroup.net/swh/ufm/.git\nelse\n    git init /home/zuul/src/cc-github.bmwgroup.net/swh/ufm\nfi\ncd /home/zuul/src/cc-github.bmwgroup.net/swh/ufm\ngit config --local --bool core.bare false\ngit remote -v | grep origin && git remote rm origin || true\ngit remote add origin file:///dev/null\n",
                                            "_uses_shell": true,
                                            "argv": null,
                                            "chdir": null,
                                            "creates": "/home/zuul/src/cc-github.bmwgroup.net/swh/ufm",
                                            "executable": null,
                                            "removes": null,
                                            "stdin": null,
                                            "stdin_add_newline": true,
                                            "strip_empty_ends": true,
                                            "warn": false,
                                            "zuul_ansible_split_streams": false,
                                            "zuul_log_id": "in-loop-ignore"
                                        }
                                    },
                                    "msg": "",
                                    "rc": 0,
                                    "start": "2024-04-21 00:40:25.482468",
                                    "stderr": "",
                                    "stderr_lines": [],
                                    "stdout": "+ [ -d /var/cache/git/cc-github.bmwgroup.net/swh/ufm ]\n+ git clone --bare /var/cache/git/cc-github.bmwgroup.net/swh/ufm /home/zuul/src/cc-github.bmwgroup.net/swh/ufm/.git\nCloning into bare repository '/home/zuul/src/cc-github.bmwgroup.net/swh/ufm/.git'...\ndone.\n+ cd /home/zuul/src/cc-github.bmwgroup.net/swh/ufm\n+ git config --local --bool core.bare false\n+ git remote -v\n+ grep origin\norigin\t/var/cache/git/cc-github.bmwgroup.net/swh/ufm (fetch)\norigin\t/var/cache/git/cc-github.bmwgroup.net/swh/ufm (push)\n+ git remote rm origin\n+ git remote add origin file:///dev/null",
                                    "stdout_lines": [
                                        "+ [ -d /var/cache/git/cc-github.bmwgroup.net/swh/ufm ]",
                                        "+ git clone --bare /var/cache/git/cc-github.bmwgroup.net/swh/ufm /home/zuul/src/cc-github.bmwgroup.net/swh/ufm/.git",
                                        "Cloning into bare repository '/home/zuul/src/cc-github.bmwgroup.net/swh/ufm/.git'...",
                                        "done.",
                                        "+ cd /home/zuul/src/cc-github.bmwgroup.net/swh/ufm",
                                        "+ git config --local --bool core.bare false",
                                        "+ git remote -v",
                                        "+ grep origin",
                                        "origin\t/var/cache/git/cc-github.bmwgroup.net/swh/ufm (fetch)",
                                        "origin\t/var/cache/git/cc-github.bmwgroup.net/swh/ufm (push)",
                                        "+ git remote rm origin",
                                        "+ git remote add origin file:///dev/null"
                                    ],
                                    "zj_project": {
                                        "canonical_hostname": "cc-github.bmwgroup.net",
                                        "canonical_name": "cc-github.bmwgroup.net/swh/ufm",
                                        "checkout": "master",
                                        "checkout_description": "zuul branch",
                                        "commit": "24d683807041b01ac000b8a6212ec6ad50e3b5e2",
                                        "name": "swh/ufm",
                                        "required": true,
                                        "short_name": "ufm",
                                        "src_dir": "src/cc-github.bmwgroup.net/swh/ufm"
                                    },
                                    "zuul_log_id": "in-loop-ignore"
                                },
                                {
                                    "ansible_loop_var": "zj_project",
                                    "changed": true,
                                    "cmd": "set -ex\nif [ -d \"/var/cache/git/cc-github.bmwgroup.net/swh/xpad-ara\" ] ; then\n    # We do a bare clone here first so that we skip creating a working\n    # copy that will be overwritten later anyway.\n    git clone --bare /var/cache/git/cc-github.bmwgroup.net/swh/xpad-ara /home/zuul/src/cc-github.bmwgroup.net/swh/xpad-ara/.git\nelse\n    git init /home/zuul/src/cc-github.bmwgroup.net/swh/xpad-ara\nfi\ncd /home/zuul/src/cc-github.bmwgroup.net/swh/xpad-ara\ngit config --local --bool core.bare false\ngit remote -v | grep origin && git remote rm origin || true\ngit remote add origin file:///dev/null\n",
                                    "delta": "0:00:01.101929",
                                    "end": "2024-04-21 00:40:28.532215",
                                    "failed": false,
                                    "invocation": {
                                        "module_args": {
                                            "_raw_params": "set -ex\nif [ -d \"/var/cache/git/cc-github.bmwgroup.net/swh/xpad-ara\" ] ; then\n    # We do a bare clone here first so that we skip creating a working\n    # copy that will be overwritten later anyway.\n    git clone --bare /var/cache/git/cc-github.bmwgroup.net/swh/xpad-ara /home/zuul/src/cc-github.bmwgroup.net/swh/xpad-ara/.git\nelse\n    git init /home/zuul/src/cc-github.bmwgroup.net/swh/xpad-ara\nfi\ncd /home/zuul/src/cc-github.bmwgroup.net/swh/xpad-ara\ngit config --local --bool core.bare false\ngit remote -v | grep origin && git remote rm origin || true\ngit remote add origin file:///dev/null\n",
                                            "_uses_shell": true,
                                            "argv": null,
                                            "chdir": null,
                                            "creates": "/home/zuul/src/cc-github.bmwgroup.net/swh/xpad-ara",
                                            "executable": null,
                                            "removes": null,
                                            "stdin": null,
                                            "stdin_add_newline": true,
                                            "strip_empty_ends": true,
                                            "warn": false,
                                            "zuul_ansible_split_streams": false,
                                            "zuul_log_id": "in-loop-ignore"
                                        }
                                    },
                                    "msg": "",
                                    "rc": 0,
                                    "start": "2024-04-21 00:40:27.430286",
                                    "stderr": "",
                                    "stderr_lines": [],
                                    "stdout": "+ [ -d /var/cache/git/cc-github.bmwgroup.net/swh/xpad-ara ]\n+ git clone --bare /var/cache/git/cc-github.bmwgroup.net/swh/xpad-ara /home/zuul/src/cc-github.bmwgroup.net/swh/xpad-ara/.git\nCloning into bare repository '/home/zuul/src/cc-github.bmwgroup.net/swh/xpad-ara/.git'...\ndone.\n+ cd /home/zuul/src/cc-github.bmwgroup.net/swh/xpad-ara\n+ git config --local --bool core.bare false\n+ git remote -v\n+ grep origin\norigin\t/var/cache/git/cc-github.bmwgroup.net/swh/xpad-ara (fetch)\norigin\t/var/cache/git/cc-github.bmwgroup.net/swh/xpad-ara (push)\n+ git remote rm origin\n+ git remote add origin file:///dev/null",
                                    "stdout_lines": [
                                        "+ [ -d /var/cache/git/cc-github.bmwgroup.net/swh/xpad-ara ]",
                                        "+ git clone --bare /var/cache/git/cc-github.bmwgroup.net/swh/xpad-ara /home/zuul/src/cc-github.bmwgroup.net/swh/xpad-ara/.git",
                                        "Cloning into bare repository '/home/zuul/src/cc-github.bmwgroup.net/swh/xpad-ara/.git'...",
                                        "done.",
                                        "+ cd /home/zuul/src/cc-github.bmwgroup.net/swh/xpad-ara",
                                        "+ git config --local --bool core.bare false",
                                        "+ git remote -v",
                                        "+ grep origin",
                                        "origin\t/var/cache/git/cc-github.bmwgroup.net/swh/xpad-ara (fetch)",
                                        "origin\t/var/cache/git/cc-github.bmwgroup.net/swh/xpad-ara (push)",
                                        "+ git remote rm origin",
                                        "+ git remote add origin file:///dev/null"
                                    ],
                                    "zj_project": {
                                        "canonical_hostname": "cc-github.bmwgroup.net",
                                        "canonical_name": "cc-github.bmwgroup.net/swh/xpad-ara",
                                        "checkout": "master",
                                        "checkout_description": "zuul branch",
                                        "commit": "591c4c708640423656b97148b3d5767a987d4818",
                                        "name": "swh/xpad-ara",
                                        "required": true,
                                        "short_name": "xpad-ara",
                                        "src_dir": "src/cc-github.bmwgroup.net/swh/xpad-ara"
                                    },
                                    "zuul_log_id": "in-loop-ignore"
                                },
                                {
                                    "ansible_loop_var": "zj_project",
                                    "changed": true,
                                    "cmd": "set -ex\nif [ -d \"/var/cache/git/cc-github.bmwgroup.net/swh/xpad-shared\" ] ; then\n    # We do a bare clone here first so that we skip creating a working\n    # copy that will be overwritten later anyway.\n    git clone --bare /var/cache/git/cc-github.bmwgroup.net/swh/xpad-shared /home/zuul/src/cc-github.bmwgroup.net/swh/xpad-shared/.git\nelse\n    git init /home/zuul/src/cc-github.bmwgroup.net/swh/xpad-shared\nfi\ncd /home/zuul/src/cc-github.bmwgroup.net/swh/xpad-shared\ngit config --local --bool core.bare false\ngit remote -v | grep origin && git remote rm origin || true\ngit remote add origin file:///dev/null\n",
                                    "delta": "0:00:01.034056",
                                    "end": "2024-04-21 00:40:30.049590",
                                    "failed": false,
                                    "invocation": {
                                        "module_args": {
                                            "_raw_params": "set -ex\nif [ -d \"/var/cache/git/cc-github.bmwgroup.net/swh/xpad-shared\" ] ; then\n    # We do a bare clone here first so that we skip creating a working\n    # copy that will be overwritten later anyway.\n    git clone --bare /var/cache/git/cc-github.bmwgroup.net/swh/xpad-shared /home/zuul/src/cc-github.bmwgroup.net/swh/xpad-shared/.git\nelse\n    git init /home/zuul/src/cc-github.bmwgroup.net/swh/xpad-shared\nfi\ncd /home/zuul/src/cc-github.bmwgroup.net/swh/xpad-shared\ngit config --local --bool core.bare false\ngit remote -v | grep origin && git remote rm origin || true\ngit remote add origin file:///dev/null\n",
                                            "_uses_shell": true,
                                            "argv": null,
                                            "chdir": null,
                                            "creates": "/home/zuul/src/cc-github.bmwgroup.net/swh/xpad-shared",
                                            "executable": null,
                                            "removes": null,
                                            "stdin": null,
                                            "stdin_add_newline": true,
                                            "strip_empty_ends": true,
                                            "warn": false,
                                            "zuul_ansible_split_streams": false,
                                            "zuul_log_id": "in-loop-ignore"
                                        }
                                    },
                                    "msg": "",
                                    "rc": 0,
                                    "start": "2024-04-21 00:40:29.015534",
                                    "stderr": "",
                                    "stderr_lines": [],
                                    "stdout": "+ [ -d /var/cache/git/cc-github.bmwgroup.net/swh/xpad-shared ]\n+ git clone --bare /var/cache/git/cc-github.bmwgroup.net/swh/xpad-shared /home/zuul/src/cc-github.bmwgroup.net/swh/xpad-shared/.git\nCloning into bare repository '/home/zuul/src/cc-github.bmwgroup.net/swh/xpad-shared/.git'...\ndone.\n+ cd /home/zuul/src/cc-github.bmwgroup.net/swh/xpad-shared\n+ git config --local --bool core.bare false\n+ git remote -v\n+ grep origin\norigin\t/var/cache/git/cc-github.bmwgroup.net/swh/xpad-shared (fetch)\norigin\t/var/cache/git/cc-github.bmwgroup.net/swh/xpad-shared (push)\n+ git remote rm origin\n+ git remote add origin file:///dev/null",
                                    "stdout_lines": [
                                        "+ [ -d /var/cache/git/cc-github.bmwgroup.net/swh/xpad-shared ]",
                                        "+ git clone --bare /var/cache/git/cc-github.bmwgroup.net/swh/xpad-shared /home/zuul/src/cc-github.bmwgroup.net/swh/xpad-shared/.git",
                                        "Cloning into bare repository '/home/zuul/src/cc-github.bmwgroup.net/swh/xpad-shared/.git'...",
                                        "done.",
                                        "+ cd /home/zuul/src/cc-github.bmwgroup.net/swh/xpad-shared",
                                        "+ git config --local --bool core.bare false",
                                        "+ git remote -v",
                                        "+ grep origin",
                                        "origin\t/var/cache/git/cc-github.bmwgroup.net/swh/xpad-shared (fetch)",
                                        "origin\t/var/cache/git/cc-github.bmwgroup.net/swh/xpad-shared (push)",
                                        "+ git remote rm origin",
                                        "+ git remote add origin file:///dev/null"
                                    ],
                                    "zj_project": {
                                        "canonical_hostname": "cc-github.bmwgroup.net",
                                        "canonical_name": "cc-github.bmwgroup.net/swh/xpad-shared",
                                        "checkout": "master",
                                        "checkout_description": "zuul branch",
                                        "commit": "5fe3ea2c8e16591c6c11a5398c0fd866652ef652",
                                        "name": "swh/xpad-shared",
                                        "required": true,
                                        "short_name": "xpad-shared",
                                        "src_dir": "src/cc-github.bmwgroup.net/swh/xpad-shared"
                                    },
                                    "zuul_log_id": "in-loop-ignore"
                                },
                                {
                                    "ansible_loop_var": "zj_project",
                                    "changed": true,
                                    "cmd": "set -ex\nif [ -d \"/var/cache/git/cc-github.bmwgroup.net/swh/xpad_xpc\" ] ; then\n    # We do a bare clone here first so that we skip creating a working\n    # copy that will be overwritten later anyway.\n    git clone --bare /var/cache/git/cc-github.bmwgroup.net/swh/xpad_xpc /home/zuul/src/cc-github.bmwgroup.net/swh/xpad_xpc/.git\nelse\n    git init /home/zuul/src/cc-github.bmwgroup.net/swh/xpad_xpc\nfi\ncd /home/zuul/src/cc-github.bmwgroup.net/swh/xpad_xpc\ngit config --local --bool core.bare false\ngit remote -v | grep origin && git remote rm origin || true\ngit remote add origin file:///dev/null\n",
                                    "delta": "0:00:00.068530",
                                    "end": "2024-04-21 00:40:30.399485",
                                    "failed": false,
                                    "invocation": {
                                        "module_args": {
                                            "_raw_params": "set -ex\nif [ -d \"/var/cache/git/cc-github.bmwgroup.net/swh/xpad_xpc\" ] ; then\n    # We do a bare clone here first so that we skip creating a working\n    # copy that will be overwritten later anyway.\n    git clone --bare /var/cache/git/cc-github.bmwgroup.net/swh/xpad_xpc /home/zuul/src/cc-github.bmwgroup.net/swh/xpad_xpc/.git\nelse\n    git init /home/zuul/src/cc-github.bmwgroup.net/swh/xpad_xpc\nfi\ncd /home/zuul/src/cc-github.bmwgroup.net/swh/xpad_xpc\ngit config --local --bool core.bare false\ngit remote -v | grep origin && git remote rm origin || true\ngit remote add origin file:///dev/null\n",
                                            "_uses_shell": true,
                                            "argv": null,
                                            "chdir": null,
                                            "creates": "/home/zuul/src/cc-github.bmwgroup.net/swh/xpad_xpc",
                                            "executable": null,
                                            "removes": null,
                                            "stdin": null,
                                            "stdin_add_newline": true,
                                            "strip_empty_ends": true,
                                            "warn": false,
                                            "zuul_ansible_split_streams": false,
                                            "zuul_log_id": "in-loop-ignore"
                                        }
                                    },
                                    "msg": "",
                                    "rc": 0,
                                    "start": "2024-04-21 00:40:30.330955",
                                    "stderr": "",
                                    "stderr_lines": [],
                                    "stdout": "+ [ -d /var/cache/git/cc-github.bmwgroup.net/swh/xpad_xpc ]\n+ git clone --bare /var/cache/git/cc-github.bmwgroup.net/swh/xpad_xpc /home/zuul/src/cc-github.bmwgroup.net/swh/xpad_xpc/.git\nCloning into bare repository '/home/zuul/src/cc-github.bmwgroup.net/swh/xpad_xpc/.git'...\ndone.\n+ cd /home/zuul/src/cc-github.bmwgroup.net/swh/xpad_xpc\n+ git config --local --bool core.bare false\n+ git remote -v\n+ grep origin\norigin\t/var/cache/git/cc-github.bmwgroup.net/swh/xpad_xpc (fetch)\norigin\t/var/cache/git/cc-github.bmwgroup.net/swh/xpad_xpc (push)\n+ git remote rm origin\n+ git remote add origin file:///dev/null",
                                    "stdout_lines": [
                                        "+ [ -d /var/cache/git/cc-github.bmwgroup.net/swh/xpad_xpc ]",
                                        "+ git clone --bare /var/cache/git/cc-github.bmwgroup.net/swh/xpad_xpc /home/zuul/src/cc-github.bmwgroup.net/swh/xpad_xpc/.git",
                                        "Cloning into bare repository '/home/zuul/src/cc-github.bmwgroup.net/swh/xpad_xpc/.git'...",
                                        "done.",
                                        "+ cd /home/zuul/src/cc-github.bmwgroup.net/swh/xpad_xpc",
                                        "+ git config --local --bool core.bare false",
                                        "+ git remote -v",
                                        "+ grep origin",
                                        "origin\t/var/cache/git/cc-github.bmwgroup.net/swh/xpad_xpc (fetch)",
                                        "origin\t/var/cache/git/cc-github.bmwgroup.net/swh/xpad_xpc (push)",
                                        "+ git remote rm origin",
                                        "+ git remote add origin file:///dev/null"
                                    ],
                                    "zj_project": {
                                        "canonical_hostname": "cc-github.bmwgroup.net",
                                        "canonical_name": "cc-github.bmwgroup.net/swh/xpad_xpc",
                                        "checkout": "master",
                                        "checkout_description": "zuul branch",
                                        "commit": "9ce2131edf06568e92545d2f5d1464924b016780",
                                        "name": "swh/xpad_xpc",
                                        "required": true,
                                        "short_name": "xpad_xpc",
                                        "src_dir": "src/cc-github.bmwgroup.net/swh/xpad_xpc"
                                    },
                                    "zuul_log_id": "in-loop-ignore"
                                },
                                {
                                    "ansible_loop_var": "zj_project",
                                    "changed": true,
                                    "cmd": "set -ex\nif [ -d \"/var/cache/git/cc-github.bmwgroup.net/swh/zuul-trusted-ddad\" ] ; then\n    # We do a bare clone here first so that we skip creating a working\n    # copy that will be overwritten later anyway.\n    git clone --bare /var/cache/git/cc-github.bmwgroup.net/swh/zuul-trusted-ddad /home/zuul/src/cc-github.bmwgroup.net/swh/zuul-trusted-ddad/.git\nelse\n    git init /home/zuul/src/cc-github.bmwgroup.net/swh/zuul-trusted-ddad\nfi\ncd /home/zuul/src/cc-github.bmwgroup.net/swh/zuul-trusted-ddad\ngit config --local --bool core.bare false\ngit remote -v | grep origin && git remote rm origin || true\ngit remote add origin file:///dev/null\n",
                                    "delta": "0:00:00.131102",
                                    "end": "2024-04-21 00:40:30.823966",
                                    "failed": false,
                                    "invocation": {
                                        "module_args": {
                                            "_raw_params": "set -ex\nif [ -d \"/var/cache/git/cc-github.bmwgroup.net/swh/zuul-trusted-ddad\" ] ; then\n    # We do a bare clone here first so that we skip creating a working\n    # copy that will be overwritten later anyway.\n    git clone --bare /var/cache/git/cc-github.bmwgroup.net/swh/zuul-trusted-ddad /home/zuul/src/cc-github.bmwgroup.net/swh/zuul-trusted-ddad/.git\nelse\n    git init /home/zuul/src/cc-github.bmwgroup.net/swh/zuul-trusted-ddad\nfi\ncd /home/zuul/src/cc-github.bmwgroup.net/swh/zuul-trusted-ddad\ngit config --local --bool core.bare false\ngit remote -v | grep origin && git remote rm origin || true\ngit remote add origin file:///dev/null\n",
                                            "_uses_shell": true,
                                            "argv": null,
                                            "chdir": null,
                                            "creates": "/home/zuul/src/cc-github.bmwgroup.net/swh/zuul-trusted-ddad",
                                            "executable": null,
                                            "removes": null,
                                            "stdin": null,
                                            "stdin_add_newline": true,
                                            "strip_empty_ends": true,
                                            "warn": false,
                                            "zuul_ansible_split_streams": false,
                                            "zuul_log_id": "in-loop-ignore"
                                        }
                                    },
                                    "msg": "",
                                    "rc": 0,
                                    "start": "2024-04-21 00:40:30.692864",
                                    "stderr": "",
                                    "stderr_lines": [],
                                    "stdout": "+ [ -d /var/cache/git/cc-github.bmwgroup.net/swh/zuul-trusted-ddad ]\n+ git clone --bare /var/cache/git/cc-github.bmwgroup.net/swh/zuul-trusted-ddad /home/zuul/src/cc-github.bmwgroup.net/swh/zuul-trusted-ddad/.git\nCloning into bare repository '/home/zuul/src/cc-github.bmwgroup.net/swh/zuul-trusted-ddad/.git'...\ndone.\n+ cd /home/zuul/src/cc-github.bmwgroup.net/swh/zuul-trusted-ddad\n+ git config --local --bool core.bare false\n+ git remote -v\n+ grep origin\norigin\t/var/cache/git/cc-github.bmwgroup.net/swh/zuul-trusted-ddad (fetch)\norigin\t/var/cache/git/cc-github.bmwgroup.net/swh/zuul-trusted-ddad (push)\n+ git remote rm origin\n+ git remote add origin file:///dev/null",
                                    "stdout_lines": [
                                        "+ [ -d /var/cache/git/cc-github.bmwgroup.net/swh/zuul-trusted-ddad ]",
                                        "+ git clone --bare /var/cache/git/cc-github.bmwgroup.net/swh/zuul-trusted-ddad /home/zuul/src/cc-github.bmwgroup.net/swh/zuul-trusted-ddad/.git",
                                        "Cloning into bare repository '/home/zuul/src/cc-github.bmwgroup.net/swh/zuul-trusted-ddad/.git'...",
                                        "done.",
                                        "+ cd /home/zuul/src/cc-github.bmwgroup.net/swh/zuul-trusted-ddad",
                                        "+ git config --local --bool core.bare false",
                                        "+ git remote -v",
                                        "+ grep origin",
                                        "origin\t/var/cache/git/cc-github.bmwgroup.net/swh/zuul-trusted-ddad (fetch)",
                                        "origin\t/var/cache/git/cc-github.bmwgroup.net/swh/zuul-trusted-ddad (push)",
                                        "+ git remote rm origin",
                                        "+ git remote add origin file:///dev/null"
                                    ],
                                    "zj_project": {
                                        "canonical_hostname": "cc-github.bmwgroup.net",
                                        "canonical_name": "cc-github.bmwgroup.net/swh/zuul-trusted-ddad",
                                        "checkout": "master",
                                        "checkout_description": "zuul branch",
                                        "commit": "a22500345c4283b6add4f2a3c354c663a904d9d0",
                                        "name": "swh/zuul-trusted-ddad",
                                        "required": true,
                                        "short_name": "zuul-trusted-ddad",
                                        "src_dir": "src/cc-github.bmwgroup.net/swh/zuul-trusted-ddad"
                                    },
                                    "zuul_log_id": "in-loop-ignore"
                                }
                            ]
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-d7cb-6b39-0000000008fb",
                        "name": "prepare-workspace-git",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_2/cc-github.bmwgroup.net/codecraft-oss/zuul-jobs/roles/prepare-workspace-git"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:40:30.897629Z",
                            "start": "2024-04-21T00:39:27.431327Z"
                        },
                        "id": "ce4df5fb-964c-d7cb-6b39-000000000900",
                        "name": "Set initial repo states in workspace"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "git_config",
                            "changed": true,
                            "msg": "All items completed",
                            "results": [
                                {
                                    "ansible_loop_var": "zj_project",
                                    "changed": true,
                                    "diff": {
                                        "after": "ignore\n",
                                        "after_header": "/usr/bin/git config --includes --local receive.denyCurrentBranch",
                                        "before": "\n",
                                        "before_header": "/usr/bin/git config --includes --local receive.denyCurrentBranch"
                                    },
                                    "failed": false,
                                    "invocation": {
                                        "module_args": {
                                            "file": null,
                                            "list_all": false,
                                            "name": "receive.denyCurrentBranch",
                                            "repo": "/home/zuul/src/cc-github.bmwgroup.net/swh/adp",
                                            "scope": "local",
                                            "state": "present",
                                            "value": "ignore"
                                        }
                                    },
                                    "msg": "setting changed",
                                    "zj_project": {
                                        "key": "cc-github.bmwgroup.net/swh/adp",
                                        "value": {
                                            "canonical_hostname": "cc-github.bmwgroup.net",
                                            "canonical_name": "cc-github.bmwgroup.net/swh/adp",
                                            "checkout": "master",
                                            "checkout_description": "zuul branch",
                                            "commit": "8d83dea1d58bef901e97793e1c34ad57986fada1",
                                            "name": "swh/adp",
                                            "required": true,
                                            "short_name": "adp",
                                            "src_dir": "src/cc-github.bmwgroup.net/swh/adp"
                                        }
                                    }
                                },
                                {
                                    "ansible_loop_var": "zj_project",
                                    "changed": true,
                                    "diff": {
                                        "after": "ignore\n",
                                        "after_header": "/usr/bin/git config --includes --local receive.denyCurrentBranch",
                                        "before": "\n",
                                        "before_header": "/usr/bin/git config --includes --local receive.denyCurrentBranch"
                                    },
                                    "failed": false,
                                    "invocation": {
                                        "module_args": {
                                            "file": null,
                                            "list_all": false,
                                            "name": "receive.denyCurrentBranch",
                                            "repo": "/home/zuul/src/cc-github.bmwgroup.net/swh/cvc",
                                            "scope": "local",
                                            "state": "present",
                                            "value": "ignore"
                                        }
                                    },
                                    "msg": "setting changed",
                                    "zj_project": {
                                        "key": "cc-github.bmwgroup.net/swh/cvc",
                                        "value": {
                                            "canonical_hostname": "cc-github.bmwgroup.net",
                                            "canonical_name": "cc-github.bmwgroup.net/swh/cvc",
                                            "checkout": "master",
                                            "checkout_description": "zuul branch",
                                            "commit": "dbf0e56926a6baad91df5b15b84746c66de73a47",
                                            "name": "swh/cvc",
                                            "required": true,
                                            "short_name": "cvc",
                                            "src_dir": "src/cc-github.bmwgroup.net/swh/cvc"
                                        }
                                    }
                                },
                                {
                                    "ansible_loop_var": "zj_project",
                                    "changed": true,
                                    "diff": {
                                        "after": "ignore\n",
                                        "after_header": "/usr/bin/git config --includes --local receive.denyCurrentBranch",
                                        "before": "\n",
                                        "before_header": "/usr/bin/git config --includes --local receive.denyCurrentBranch"
                                    },
                                    "failed": false,
                                    "invocation": {
                                        "module_args": {
                                            "file": null,
                                            "list_all": false,
                                            "name": "receive.denyCurrentBranch",
                                            "repo": "/home/zuul/src/cc-github.bmwgroup.net/swh/ddad",
                                            "scope": "local",
                                            "state": "present",
                                            "value": "ignore"
                                        }
                                    },
                                    "msg": "setting changed",
                                    "zj_project": {
                                        "key": "cc-github.bmwgroup.net/swh/ddad",
                                        "value": {
                                            "canonical_hostname": "cc-github.bmwgroup.net",
                                            "canonical_name": "cc-github.bmwgroup.net/swh/ddad",
                                            "checkout": "master",
                                            "checkout_description": "zuul branch",
                                            "commit": "32fe27876b12e612823c5f9cfd63b2cc1eaa68c1",
                                            "name": "swh/ddad",
                                            "required": true,
                                            "short_name": "ddad",
                                            "src_dir": "src/cc-github.bmwgroup.net/swh/ddad"
                                        }
                                    }
                                },
                                {
                                    "ansible_loop_var": "zj_project",
                                    "changed": true,
                                    "diff": {
                                        "after": "ignore\n",
                                        "after_header": "/usr/bin/git config --includes --local receive.denyCurrentBranch",
                                        "before": "\n",
                                        "before_header": "/usr/bin/git config --includes --local receive.denyCurrentBranch"
                                    },
                                    "failed": false,
                                    "invocation": {
                                        "module_args": {
                                            "file": null,
                                            "list_all": false,
                                            "name": "receive.denyCurrentBranch",
                                            "repo": "/home/zuul/src/cc-github.bmwgroup.net/swh/ddad-domains-fasinfo",
                                            "scope": "local",
                                            "state": "present",
                                            "value": "ignore"
                                        }
                                    },
                                    "msg": "setting changed",
                                    "zj_project": {
                                        "key": "cc-github.bmwgroup.net/swh/ddad-domains-fasinfo",
                                        "value": {
                                            "canonical_hostname": "cc-github.bmwgroup.net",
                                            "canonical_name": "cc-github.bmwgroup.net/swh/ddad-domains-fasinfo",
                                            "checkout": "master",
                                            "checkout_description": "zuul branch",
                                            "commit": "a5b41fd76a124026ff81320e27d5caa5a772f235",
                                            "name": "swh/ddad-domains-fasinfo",
                                            "required": true,
                                            "short_name": "ddad-domains-fasinfo",
                                            "src_dir": "src/cc-github.bmwgroup.net/swh/ddad-domains-fasinfo"
                                        }
                                    }
                                },
                                {
                                    "ansible_loop_var": "zj_project",
                                    "changed": true,
                                    "diff": {
                                        "after": "ignore\n",
                                        "after_header": "/usr/bin/git config --includes --local receive.denyCurrentBranch",
                                        "before": "\n",
                                        "before_header": "/usr/bin/git config --includes --local receive.denyCurrentBranch"
                                    },
                                    "failed": false,
                                    "invocation": {
                                        "module_args": {
                                            "file": null,
                                            "list_all": false,
                                            "name": "receive.denyCurrentBranch",
                                            "repo": "/home/zuul/src/cc-github.bmwgroup.net/swh/ddad-domains-generic",
                                            "scope": "local",
                                            "state": "present",
                                            "value": "ignore"
                                        }
                                    },
                                    "msg": "setting changed",
                                    "zj_project": {
                                        "key": "cc-github.bmwgroup.net/swh/ddad-domains-generic",
                                        "value": {
                                            "canonical_hostname": "cc-github.bmwgroup.net",
                                            "canonical_name": "cc-github.bmwgroup.net/swh/ddad-domains-generic",
                                            "checkout": "master",
                                            "checkout_description": "zuul branch",
                                            "commit": "872e7456cf3b5838f30c47753e8187b8c62b636a",
                                            "name": "swh/ddad-domains-generic",
                                            "required": true,
                                            "short_name": "ddad-domains-generic",
                                            "src_dir": "src/cc-github.bmwgroup.net/swh/ddad-domains-generic"
                                        }
                                    }
                                },
                                {
                                    "ansible_loop_var": "zj_project",
                                    "changed": true,
                                    "diff": {
                                        "after": "ignore\n",
                                        "after_header": "/usr/bin/git config --includes --local receive.denyCurrentBranch",
                                        "before": "\n",
                                        "before_header": "/usr/bin/git config --includes --local receive.denyCurrentBranch"
                                    },
                                    "failed": false,
                                    "invocation": {
                                        "module_args": {
                                            "file": null,
                                            "list_all": false,
                                            "name": "receive.denyCurrentBranch",
                                            "repo": "/home/zuul/src/cc-github.bmwgroup.net/swh/ddad-ecu-ipnext",
                                            "scope": "local",
                                            "state": "present",
                                            "value": "ignore"
                                        }
                                    },
                                    "msg": "setting changed",
                                    "zj_project": {
                                        "key": "cc-github.bmwgroup.net/swh/ddad-ecu-ipnext",
                                        "value": {
                                            "canonical_hostname": "cc-github.bmwgroup.net",
                                            "canonical_name": "cc-github.bmwgroup.net/swh/ddad-ecu-ipnext",
                                            "checkout": "master",
                                            "checkout_description": "zuul branch",
                                            "commit": "4e0fd5384e92431311a139b52f3b191523237f3f",
                                            "name": "swh/ddad-ecu-ipnext",
                                            "required": true,
                                            "short_name": "ddad-ecu-ipnext",
                                            "src_dir": "src/cc-github.bmwgroup.net/swh/ddad-ecu-ipnext"
                                        }
                                    }
                                },
                                {
                                    "ansible_loop_var": "zj_project",
                                    "changed": true,
                                    "diff": {
                                        "after": "ignore\n",
                                        "after_header": "/usr/bin/git config --includes --local receive.denyCurrentBranch",
                                        "before": "\n",
                                        "before_header": "/usr/bin/git config --includes --local receive.denyCurrentBranch"
                                    },
                                    "failed": false,
                                    "invocation": {
                                        "module_args": {
                                            "file": null,
                                            "list_all": false,
                                            "name": "receive.denyCurrentBranch",
                                            "repo": "/home/zuul/src/cc-github.bmwgroup.net/swh/ddad_ci_config",
                                            "scope": "local",
                                            "state": "present",
                                            "value": "ignore"
                                        }
                                    },
                                    "msg": "setting changed",
                                    "zj_project": {
                                        "key": "cc-github.bmwgroup.net/swh/ddad_ci_config",
                                        "value": {
                                            "canonical_hostname": "cc-github.bmwgroup.net",
                                            "canonical_name": "cc-github.bmwgroup.net/swh/ddad_ci_config",
                                            "checkout": "master",
                                            "checkout_description": "zuul branch",
                                            "commit": "a2ea1242739a7a16dba7d7781925949e31cfc29f",
                                            "name": "swh/ddad_ci_config",
                                            "required": true,
                                            "short_name": "ddad_ci_config",
                                            "src_dir": "src/cc-github.bmwgroup.net/swh/ddad_ci_config"
                                        }
                                    }
                                },
                                {
                                    "ansible_loop_var": "zj_project",
                                    "changed": true,
                                    "diff": {
                                        "after": "ignore\n",
                                        "after_header": "/usr/bin/git config --includes --local receive.denyCurrentBranch",
                                        "before": "\n",
                                        "before_header": "/usr/bin/git config --includes --local receive.denyCurrentBranch"
                                    },
                                    "failed": false,
                                    "invocation": {
                                        "module_args": {
                                            "file": null,
                                            "list_all": false,
                                            "name": "receive.denyCurrentBranch",
                                            "repo": "/home/zuul/src/cc-github.bmwgroup.net/swh/ddad_platform",
                                            "scope": "local",
                                            "state": "present",
                                            "value": "ignore"
                                        }
                                    },
                                    "msg": "setting changed",
                                    "zj_project": {
                                        "key": "cc-github.bmwgroup.net/swh/ddad_platform",
                                        "value": {
                                            "canonical_hostname": "cc-github.bmwgroup.net",
                                            "canonical_name": "cc-github.bmwgroup.net/swh/ddad_platform",
                                            "checkout": "master",
                                            "checkout_description": "zuul branch",
                                            "commit": "0fc13c778f15b8def496ce821b67df115746cfb6",
                                            "name": "swh/ddad_platform",
                                            "required": true,
                                            "short_name": "ddad_platform",
                                            "src_dir": "src/cc-github.bmwgroup.net/swh/ddad_platform"
                                        }
                                    }
                                },
                                {
                                    "ansible_loop_var": "zj_project",
                                    "changed": true,
                                    "diff": {
                                        "after": "ignore\n",
                                        "after_header": "/usr/bin/git config --includes --local receive.denyCurrentBranch",
                                        "before": "\n",
                                        "before_header": "/usr/bin/git config --includes --local receive.denyCurrentBranch"
                                    },
                                    "failed": false,
                                    "invocation": {
                                        "module_args": {
                                            "file": null,
                                            "list_all": false,
                                            "name": "receive.denyCurrentBranch",
                                            "repo": "/home/zuul/src/cc-github.bmwgroup.net/swh/domain-tools",
                                            "scope": "local",
                                            "state": "present",
                                            "value": "ignore"
                                        }
                                    },
                                    "msg": "setting changed",
                                    "zj_project": {
                                        "key": "cc-github.bmwgroup.net/swh/domain-tools",
                                        "value": {
                                            "canonical_hostname": "cc-github.bmwgroup.net",
                                            "canonical_name": "cc-github.bmwgroup.net/swh/domain-tools",
                                            "checkout": "master",
                                            "checkout_description": "zuul branch",
                                            "commit": "22e48aea74d3e1a9d405529652492a0cfd84611a",
                                            "name": "swh/domain-tools",
                                            "required": true,
                                            "short_name": "domain-tools",
                                            "src_dir": "src/cc-github.bmwgroup.net/swh/domain-tools"
                                        }
                                    }
                                },
                                {
                                    "ansible_loop_var": "zj_project",
                                    "changed": true,
                                    "diff": {
                                        "after": "ignore\n",
                                        "after_header": "/usr/bin/git config --includes --local receive.denyCurrentBranch",
                                        "before": "\n",
                                        "before_header": "/usr/bin/git config --includes --local receive.denyCurrentBranch"
                                    },
                                    "failed": false,
                                    "invocation": {
                                        "module_args": {
                                            "file": null,
                                            "list_all": false,
                                            "name": "receive.denyCurrentBranch",
                                            "repo": "/home/zuul/src/cc-github.bmwgroup.net/swh/ecu_xpad_sc_mpad",
                                            "scope": "local",
                                            "state": "present",
                                            "value": "ignore"
                                        }
                                    },
                                    "msg": "setting changed",
                                    "zj_project": {
                                        "key": "cc-github.bmwgroup.net/swh/ecu_xpad_sc_mpad",
                                        "value": {
                                            "canonical_hostname": "cc-github.bmwgroup.net",
                                            "canonical_name": "cc-github.bmwgroup.net/swh/ecu_xpad_sc_mpad",
                                            "checkout": "master",
                                            "checkout_description": "zuul branch",
                                            "commit": "9f275d5b9f924de72632bda96690327fccdd5ff5",
                                            "name": "swh/ecu_xpad_sc_mpad",
                                            "required": true,
                                            "short_name": "ecu_xpad_sc_mpad",
                                            "src_dir": "src/cc-github.bmwgroup.net/swh/ecu_xpad_sc_mpad"
                                        }
                                    }
                                },
                                {
                                    "ansible_loop_var": "zj_project",
                                    "changed": true,
                                    "diff": {
                                        "after": "ignore\n",
                                        "after_header": "/usr/bin/git config --includes --local receive.denyCurrentBranch",
                                        "before": "\n",
                                        "before_header": "/usr/bin/git config --includes --local receive.denyCurrentBranch"
                                    },
                                    "failed": false,
                                    "invocation": {
                                        "module_args": {
                                            "file": null,
                                            "list_all": false,
                                            "name": "receive.denyCurrentBranch",
                                            "repo": "/home/zuul/src/cc-github.bmwgroup.net/swh/foresight",
                                            "scope": "local",
                                            "state": "present",
                                            "value": "ignore"
                                        }
                                    },
                                    "msg": "setting changed",
                                    "zj_project": {
                                        "key": "cc-github.bmwgroup.net/swh/foresight",
                                        "value": {
                                            "canonical_hostname": "cc-github.bmwgroup.net",
                                            "canonical_name": "cc-github.bmwgroup.net/swh/foresight",
                                            "checkout": "master",
                                            "checkout_description": "zuul branch",
                                            "commit": "0961a62bed7ee412bf80fe5a9b879e5586964358",
                                            "name": "swh/foresight",
                                            "required": true,
                                            "short_name": "foresight",
                                            "src_dir": "src/cc-github.bmwgroup.net/swh/foresight"
                                        }
                                    }
                                },
                                {
                                    "ansible_loop_var": "zj_project",
                                    "changed": true,
                                    "diff": {
                                        "after": "ignore\n",
                                        "after_header": "/usr/bin/git config --includes --local receive.denyCurrentBranch",
                                        "before": "\n",
                                        "before_header": "/usr/bin/git config --includes --local receive.denyCurrentBranch"
                                    },
                                    "failed": false,
                                    "invocation": {
                                        "module_args": {
                                            "file": null,
                                            "list_all": false,
                                            "name": "receive.denyCurrentBranch",
                                            "repo": "/home/zuul/src/cc-github.bmwgroup.net/swh/franky_ib",
                                            "scope": "local",
                                            "state": "present",
                                            "value": "ignore"
                                        }
                                    },
                                    "msg": "setting changed",
                                    "zj_project": {
                                        "key": "cc-github.bmwgroup.net/swh/franky_ib",
                                        "value": {
                                            "canonical_hostname": "cc-github.bmwgroup.net",
                                            "canonical_name": "cc-github.bmwgroup.net/swh/franky_ib",
                                            "checkout": "master",
                                            "checkout_description": "zuul branch",
                                            "commit": "7a74d491251435e7b011e7010d11fbc9224b355c",
                                            "name": "swh/franky_ib",
                                            "required": true,
                                            "short_name": "franky_ib",
                                            "src_dir": "src/cc-github.bmwgroup.net/swh/franky_ib"
                                        }
                                    }
                                },
                                {
                                    "ansible_loop_var": "zj_project",
                                    "changed": true,
                                    "diff": {
                                        "after": "ignore\n",
                                        "after_header": "/usr/bin/git config --includes --local receive.denyCurrentBranch",
                                        "before": "\n",
                                        "before_header": "/usr/bin/git config --includes --local receive.denyCurrentBranch"
                                    },
                                    "failed": false,
                                    "invocation": {
                                        "module_args": {
                                            "file": null,
                                            "list_all": false,
                                            "name": "receive.denyCurrentBranch",
                                            "repo": "/home/zuul/src/cc-github.bmwgroup.net/swh/gnss_common",
                                            "scope": "local",
                                            "state": "present",
                                            "value": "ignore"
                                        }
                                    },
                                    "msg": "setting changed",
                                    "zj_project": {
                                        "key": "cc-github.bmwgroup.net/swh/gnss_common",
                                        "value": {
                                            "canonical_hostname": "cc-github.bmwgroup.net",
                                            "canonical_name": "cc-github.bmwgroup.net/swh/gnss_common",
                                            "checkout": "master",
                                            "checkout_description": "zuul branch",
                                            "commit": "7aeb42bd9976938f99a41c088c70fe8af14ee8fc",
                                            "name": "swh/gnss_common",
                                            "required": true,
                                            "short_name": "gnss_common",
                                            "src_dir": "src/cc-github.bmwgroup.net/swh/gnss_common"
                                        }
                                    }
                                },
                                {
                                    "ansible_loop_var": "zj_project",
                                    "changed": true,
                                    "diff": {
                                        "after": "ignore\n",
                                        "after_header": "/usr/bin/git config --includes --local receive.denyCurrentBranch",
                                        "before": "\n",
                                        "before_header": "/usr/bin/git config --includes --local receive.denyCurrentBranch"
                                    },
                                    "failed": false,
                                    "invocation": {
                                        "module_args": {
                                            "file": null,
                                            "list_all": false,
                                            "name": "receive.denyCurrentBranch",
                                            "repo": "/home/zuul/src/cc-github.bmwgroup.net/swh/ib-vip",
                                            "scope": "local",
                                            "state": "present",
                                            "value": "ignore"
                                        }
                                    },
                                    "msg": "setting changed",
                                    "zj_project": {
                                        "key": "cc-github.bmwgroup.net/swh/ib-vip",
                                        "value": {
                                            "canonical_hostname": "cc-github.bmwgroup.net",
                                            "canonical_name": "cc-github.bmwgroup.net/swh/ib-vip",
                                            "checkout": "master",
                                            "checkout_description": "zuul branch",
                                            "commit": "77d3abe6f172efef2f93e6c3a61af0f3ee7d7967",
                                            "name": "swh/ib-vip",
                                            "required": true,
                                            "short_name": "ib-vip",
                                            "src_dir": "src/cc-github.bmwgroup.net/swh/ib-vip"
                                        }
                                    }
                                },
                                {
                                    "ansible_loop_var": "zj_project",
                                    "changed": true,
                                    "diff": {
                                        "after": "ignore\n",
                                        "after_header": "/usr/bin/git config --includes --local receive.denyCurrentBranch",
                                        "before": "\n",
                                        "before_header": "/usr/bin/git config --includes --local receive.denyCurrentBranch"
                                    },
                                    "failed": false,
                                    "invocation": {
                                        "module_args": {
                                            "file": null,
                                            "list_all": false,
                                            "name": "receive.denyCurrentBranch",
                                            "repo": "/home/zuul/src/cc-github.bmwgroup.net/swh/ltf-dlt",
                                            "scope": "local",
                                            "state": "present",
                                            "value": "ignore"
                                        }
                                    },
                                    "msg": "setting changed",
                                    "zj_project": {
                                        "key": "cc-github.bmwgroup.net/swh/ltf-dlt",
                                        "value": {
                                            "canonical_hostname": "cc-github.bmwgroup.net",
                                            "canonical_name": "cc-github.bmwgroup.net/swh/ltf-dlt",
                                            "checkout": "master",
                                            "checkout_description": "zuul branch",
                                            "commit": "68fa15c725670a73c3c7f3566a99f38cd3a87ae5",
                                            "name": "swh/ltf-dlt",
                                            "required": true,
                                            "short_name": "ltf-dlt",
                                            "src_dir": "src/cc-github.bmwgroup.net/swh/ltf-dlt"
                                        }
                                    }
                                },
                                {
                                    "ansible_loop_var": "zj_project",
                                    "changed": true,
                                    "diff": {
                                        "after": "ignore\n",
                                        "after_header": "/usr/bin/git config --includes --local receive.denyCurrentBranch",
                                        "before": "\n",
                                        "before_header": "/usr/bin/git config --includes --local receive.denyCurrentBranch"
                                    },
                                    "failed": false,
                                    "invocation": {
                                        "module_args": {
                                            "file": null,
                                            "list_all": false,
                                            "name": "receive.denyCurrentBranch",
                                            "repo": "/home/zuul/src/cc-github.bmwgroup.net/swh/orion",
                                            "scope": "local",
                                            "state": "present",
                                            "value": "ignore"
                                        }
                                    },
                                    "msg": "setting changed",
                                    "zj_project": {
                                        "key": "cc-github.bmwgroup.net/swh/orion",
                                        "value": {
                                            "canonical_hostname": "cc-github.bmwgroup.net",
                                            "canonical_name": "cc-github.bmwgroup.net/swh/orion",
                                            "checkout": "master",
                                            "checkout_description": "zuul branch",
                                            "commit": "72eb2c62dc7bccf336d71917365610e01f7b7512",
                                            "name": "swh/orion",
                                            "required": true,
                                            "short_name": "orion",
                                            "src_dir": "src/cc-github.bmwgroup.net/swh/orion"
                                        }
                                    }
                                },
                                {
                                    "ansible_loop_var": "zj_project",
                                    "changed": true,
                                    "diff": {
                                        "after": "ignore\n",
                                        "after_header": "/usr/bin/git config --includes --local receive.denyCurrentBranch",
                                        "before": "\n",
                                        "before_header": "/usr/bin/git config --includes --local receive.denyCurrentBranch"
                                    },
                                    "failed": false,
                                    "invocation": {
                                        "module_args": {
                                            "file": null,
                                            "list_all": false,
                                            "name": "receive.denyCurrentBranch",
                                            "repo": "/home/zuul/src/cc-github.bmwgroup.net/swh/orion_aeb_temp",
                                            "scope": "local",
                                            "state": "present",
                                            "value": "ignore"
                                        }
                                    },
                                    "msg": "setting changed",
                                    "zj_project": {
                                        "key": "cc-github.bmwgroup.net/swh/orion_aeb_temp",
                                        "value": {
                                            "canonical_hostname": "cc-github.bmwgroup.net",
                                            "canonical_name": "cc-github.bmwgroup.net/swh/orion_aeb_temp",
                                            "checkout": "master",
                                            "checkout_description": "zuul branch",
                                            "commit": "b473c7ab8c70f69511aeff1374d70aef88f33d4a",
                                            "name": "swh/orion_aeb_temp",
                                            "required": true,
                                            "short_name": "orion_aeb_temp",
                                            "src_dir": "src/cc-github.bmwgroup.net/swh/orion_aeb_temp"
                                        }
                                    }
                                },
                                {
                                    "ansible_loop_var": "zj_project",
                                    "changed": true,
                                    "diff": {
                                        "after": "ignore\n",
                                        "after_header": "/usr/bin/git config --includes --local receive.denyCurrentBranch",
                                        "before": "\n",
                                        "before_header": "/usr/bin/git config --includes --local receive.denyCurrentBranch"
                                    },
                                    "failed": false,
                                    "invocation": {
                                        "module_args": {
                                            "file": null,
                                            "list_all": false,
                                            "name": "receive.denyCurrentBranch",
                                            "repo": "/home/zuul/src/cc-github.bmwgroup.net/swh/system_description",
                                            "scope": "local",
                                            "state": "present",
                                            "value": "ignore"
                                        }
                                    },
                                    "msg": "setting changed",
                                    "zj_project": {
                                        "key": "cc-github.bmwgroup.net/swh/system_description",
                                        "value": {
                                            "canonical_hostname": "cc-github.bmwgroup.net",
                                            "canonical_name": "cc-github.bmwgroup.net/swh/system_description",
                                            "checkout": "master",
                                            "checkout_description": "zuul branch",
                                            "commit": "42dc122349acc14be41c1ebee15c7edff680fb79",
                                            "name": "swh/system_description",
                                            "required": true,
                                            "short_name": "system_description",
                                            "src_dir": "src/cc-github.bmwgroup.net/swh/system_description"
                                        }
                                    }
                                },
                                {
                                    "ansible_loop_var": "zj_project",
                                    "changed": true,
                                    "diff": {
                                        "after": "ignore\n",
                                        "after_header": "/usr/bin/git config --includes --local receive.denyCurrentBranch",
                                        "before": "\n",
                                        "before_header": "/usr/bin/git config --includes --local receive.denyCurrentBranch"
                                    },
                                    "failed": false,
                                    "invocation": {
                                        "module_args": {
                                            "file": null,
                                            "list_all": false,
                                            "name": "receive.denyCurrentBranch",
                                            "repo": "/home/zuul/src/cc-github.bmwgroup.net/swh/ufm",
                                            "scope": "local",
                                            "state": "present",
                                            "value": "ignore"
                                        }
                                    },
                                    "msg": "setting changed",
                                    "zj_project": {
                                        "key": "cc-github.bmwgroup.net/swh/ufm",
                                        "value": {
                                            "canonical_hostname": "cc-github.bmwgroup.net",
                                            "canonical_name": "cc-github.bmwgroup.net/swh/ufm",
                                            "checkout": "master",
                                            "checkout_description": "zuul branch",
                                            "commit": "24d683807041b01ac000b8a6212ec6ad50e3b5e2",
                                            "name": "swh/ufm",
                                            "required": true,
                                            "short_name": "ufm",
                                            "src_dir": "src/cc-github.bmwgroup.net/swh/ufm"
                                        }
                                    }
                                },
                                {
                                    "ansible_loop_var": "zj_project",
                                    "changed": true,
                                    "diff": {
                                        "after": "ignore\n",
                                        "after_header": "/usr/bin/git config --includes --local receive.denyCurrentBranch",
                                        "before": "\n",
                                        "before_header": "/usr/bin/git config --includes --local receive.denyCurrentBranch"
                                    },
                                    "failed": false,
                                    "invocation": {
                                        "module_args": {
                                            "file": null,
                                            "list_all": false,
                                            "name": "receive.denyCurrentBranch",
                                            "repo": "/home/zuul/src/cc-github.bmwgroup.net/swh/xpad-ara",
                                            "scope": "local",
                                            "state": "present",
                                            "value": "ignore"
                                        }
                                    },
                                    "msg": "setting changed",
                                    "zj_project": {
                                        "key": "cc-github.bmwgroup.net/swh/xpad-ara",
                                        "value": {
                                            "canonical_hostname": "cc-github.bmwgroup.net",
                                            "canonical_name": "cc-github.bmwgroup.net/swh/xpad-ara",
                                            "checkout": "master",
                                            "checkout_description": "zuul branch",
                                            "commit": "591c4c708640423656b97148b3d5767a987d4818",
                                            "name": "swh/xpad-ara",
                                            "required": true,
                                            "short_name": "xpad-ara",
                                            "src_dir": "src/cc-github.bmwgroup.net/swh/xpad-ara"
                                        }
                                    }
                                },
                                {
                                    "ansible_loop_var": "zj_project",
                                    "changed": true,
                                    "diff": {
                                        "after": "ignore\n",
                                        "after_header": "/usr/bin/git config --includes --local receive.denyCurrentBranch",
                                        "before": "\n",
                                        "before_header": "/usr/bin/git config --includes --local receive.denyCurrentBranch"
                                    },
                                    "failed": false,
                                    "invocation": {
                                        "module_args": {
                                            "file": null,
                                            "list_all": false,
                                            "name": "receive.denyCurrentBranch",
                                            "repo": "/home/zuul/src/cc-github.bmwgroup.net/swh/xpad-shared",
                                            "scope": "local",
                                            "state": "present",
                                            "value": "ignore"
                                        }
                                    },
                                    "msg": "setting changed",
                                    "zj_project": {
                                        "key": "cc-github.bmwgroup.net/swh/xpad-shared",
                                        "value": {
                                            "canonical_hostname": "cc-github.bmwgroup.net",
                                            "canonical_name": "cc-github.bmwgroup.net/swh/xpad-shared",
                                            "checkout": "master",
                                            "checkout_description": "zuul branch",
                                            "commit": "5fe3ea2c8e16591c6c11a5398c0fd866652ef652",
                                            "name": "swh/xpad-shared",
                                            "required": true,
                                            "short_name": "xpad-shared",
                                            "src_dir": "src/cc-github.bmwgroup.net/swh/xpad-shared"
                                        }
                                    }
                                },
                                {
                                    "ansible_loop_var": "zj_project",
                                    "changed": true,
                                    "diff": {
                                        "after": "ignore\n",
                                        "after_header": "/usr/bin/git config --includes --local receive.denyCurrentBranch",
                                        "before": "\n",
                                        "before_header": "/usr/bin/git config --includes --local receive.denyCurrentBranch"
                                    },
                                    "failed": false,
                                    "invocation": {
                                        "module_args": {
                                            "file": null,
                                            "list_all": false,
                                            "name": "receive.denyCurrentBranch",
                                            "repo": "/home/zuul/src/cc-github.bmwgroup.net/swh/xpad_xpc",
                                            "scope": "local",
                                            "state": "present",
                                            "value": "ignore"
                                        }
                                    },
                                    "msg": "setting changed",
                                    "zj_project": {
                                        "key": "cc-github.bmwgroup.net/swh/xpad_xpc",
                                        "value": {
                                            "canonical_hostname": "cc-github.bmwgroup.net",
                                            "canonical_name": "cc-github.bmwgroup.net/swh/xpad_xpc",
                                            "checkout": "master",
                                            "checkout_description": "zuul branch",
                                            "commit": "9ce2131edf06568e92545d2f5d1464924b016780",
                                            "name": "swh/xpad_xpc",
                                            "required": true,
                                            "short_name": "xpad_xpc",
                                            "src_dir": "src/cc-github.bmwgroup.net/swh/xpad_xpc"
                                        }
                                    }
                                },
                                {
                                    "ansible_loop_var": "zj_project",
                                    "changed": true,
                                    "diff": {
                                        "after": "ignore\n",
                                        "after_header": "/usr/bin/git config --includes --local receive.denyCurrentBranch",
                                        "before": "\n",
                                        "before_header": "/usr/bin/git config --includes --local receive.denyCurrentBranch"
                                    },
                                    "failed": false,
                                    "invocation": {
                                        "module_args": {
                                            "file": null,
                                            "list_all": false,
                                            "name": "receive.denyCurrentBranch",
                                            "repo": "/home/zuul/src/cc-github.bmwgroup.net/swh/zuul-trusted-ddad",
                                            "scope": "local",
                                            "state": "present",
                                            "value": "ignore"
                                        }
                                    },
                                    "msg": "setting changed",
                                    "zj_project": {
                                        "key": "cc-github.bmwgroup.net/swh/zuul-trusted-ddad",
                                        "value": {
                                            "canonical_hostname": "cc-github.bmwgroup.net",
                                            "canonical_name": "cc-github.bmwgroup.net/swh/zuul-trusted-ddad",
                                            "checkout": "master",
                                            "checkout_description": "zuul branch",
                                            "commit": "a22500345c4283b6add4f2a3c354c663a904d9d0",
                                            "name": "swh/zuul-trusted-ddad",
                                            "required": true,
                                            "short_name": "zuul-trusted-ddad",
                                            "src_dir": "src/cc-github.bmwgroup.net/swh/zuul-trusted-ddad"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-d7cb-6b39-0000000008fb",
                        "name": "prepare-workspace-git",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_2/cc-github.bmwgroup.net/codecraft-oss/zuul-jobs/roles/prepare-workspace-git"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:40:38.061517Z",
                            "start": "2024-04-21T00:40:30.913710Z"
                        },
                        "id": "ce4df5fb-964c-d7cb-6b39-000000000902",
                        "name": "Allow pushing to non-bare repo"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "git_config",
                            "changed": true,
                            "msg": "All items completed",
                            "results": [
                                {
                                    "ansible_loop_var": "item",
                                    "changed": true,
                                    "diff": {
                                        "after": "ignore\n",
                                        "after_header": "/usr/bin/git config --includes --local receive.denyDeleteCurrent",
                                        "before": "\n",
                                        "before_header": "/usr/bin/git config --includes --local receive.denyDeleteCurrent"
                                    },
                                    "failed": false,
                                    "invocation": {
                                        "module_args": {
                                            "file": null,
                                            "list_all": false,
                                            "name": "receive.denyDeleteCurrent",
                                            "repo": "/home/zuul/src/cc-github.bmwgroup.net/swh/adp",
                                            "scope": "local",
                                            "state": "present",
                                            "value": "ignore"
                                        }
                                    },
                                    "item": {
                                        "key": "cc-github.bmwgroup.net/swh/adp",
                                        "value": {
                                            "canonical_hostname": "cc-github.bmwgroup.net",
                                            "canonical_name": "cc-github.bmwgroup.net/swh/adp",
                                            "checkout": "master",
                                            "checkout_description": "zuul branch",
                                            "commit": "8d83dea1d58bef901e97793e1c34ad57986fada1",
                                            "name": "swh/adp",
                                            "required": true,
                                            "short_name": "adp",
                                            "src_dir": "src/cc-github.bmwgroup.net/swh/adp"
                                        }
                                    },
                                    "msg": "setting changed"
                                },
                                {
                                    "ansible_loop_var": "item",
                                    "changed": true,
                                    "diff": {
                                        "after": "ignore\n",
                                        "after_header": "/usr/bin/git config --includes --local receive.denyDeleteCurrent",
                                        "before": "\n",
                                        "before_header": "/usr/bin/git config --includes --local receive.denyDeleteCurrent"
                                    },
                                    "failed": false,
                                    "invocation": {
                                        "module_args": {
                                            "file": null,
                                            "list_all": false,
                                            "name": "receive.denyDeleteCurrent",
                                            "repo": "/home/zuul/src/cc-github.bmwgroup.net/swh/cvc",
                                            "scope": "local",
                                            "state": "present",
                                            "value": "ignore"
                                        }
                                    },
                                    "item": {
                                        "key": "cc-github.bmwgroup.net/swh/cvc",
                                        "value": {
                                            "canonical_hostname": "cc-github.bmwgroup.net",
                                            "canonical_name": "cc-github.bmwgroup.net/swh/cvc",
                                            "checkout": "master",
                                            "checkout_description": "zuul branch",
                                            "commit": "dbf0e56926a6baad91df5b15b84746c66de73a47",
                                            "name": "swh/cvc",
                                            "required": true,
                                            "short_name": "cvc",
                                            "src_dir": "src/cc-github.bmwgroup.net/swh/cvc"
                                        }
                                    },
                                    "msg": "setting changed"
                                },
                                {
                                    "ansible_loop_var": "item",
                                    "changed": true,
                                    "diff": {
                                        "after": "ignore\n",
                                        "after_header": "/usr/bin/git config --includes --local receive.denyDeleteCurrent",
                                        "before": "\n",
                                        "before_header": "/usr/bin/git config --includes --local receive.denyDeleteCurrent"
                                    },
                                    "failed": false,
                                    "invocation": {
                                        "module_args": {
                                            "file": null,
                                            "list_all": false,
                                            "name": "receive.denyDeleteCurrent",
                                            "repo": "/home/zuul/src/cc-github.bmwgroup.net/swh/ddad",
                                            "scope": "local",
                                            "state": "present",
                                            "value": "ignore"
                                        }
                                    },
                                    "item": {
                                        "key": "cc-github.bmwgroup.net/swh/ddad",
                                        "value": {
                                            "canonical_hostname": "cc-github.bmwgroup.net",
                                            "canonical_name": "cc-github.bmwgroup.net/swh/ddad",
                                            "checkout": "master",
                                            "checkout_description": "zuul branch",
                                            "commit": "32fe27876b12e612823c5f9cfd63b2cc1eaa68c1",
                                            "name": "swh/ddad",
                                            "required": true,
                                            "short_name": "ddad",
                                            "src_dir": "src/cc-github.bmwgroup.net/swh/ddad"
                                        }
                                    },
                                    "msg": "setting changed"
                                },
                                {
                                    "ansible_loop_var": "item",
                                    "changed": true,
                                    "diff": {
                                        "after": "ignore\n",
                                        "after_header": "/usr/bin/git config --includes --local receive.denyDeleteCurrent",
                                        "before": "\n",
                                        "before_header": "/usr/bin/git config --includes --local receive.denyDeleteCurrent"
                                    },
                                    "failed": false,
                                    "invocation": {
                                        "module_args": {
                                            "file": null,
                                            "list_all": false,
                                            "name": "receive.denyDeleteCurrent",
                                            "repo": "/home/zuul/src/cc-github.bmwgroup.net/swh/ddad-domains-fasinfo",
                                            "scope": "local",
                                            "state": "present",
                                            "value": "ignore"
                                        }
                                    },
                                    "item": {
                                        "key": "cc-github.bmwgroup.net/swh/ddad-domains-fasinfo",
                                        "value": {
                                            "canonical_hostname": "cc-github.bmwgroup.net",
                                            "canonical_name": "cc-github.bmwgroup.net/swh/ddad-domains-fasinfo",
                                            "checkout": "master",
                                            "checkout_description": "zuul branch",
                                            "commit": "a5b41fd76a124026ff81320e27d5caa5a772f235",
                                            "name": "swh/ddad-domains-fasinfo",
                                            "required": true,
                                            "short_name": "ddad-domains-fasinfo",
                                            "src_dir": "src/cc-github.bmwgroup.net/swh/ddad-domains-fasinfo"
                                        }
                                    },
                                    "msg": "setting changed"
                                },
                                {
                                    "ansible_loop_var": "item",
                                    "changed": true,
                                    "diff": {
                                        "after": "ignore\n",
                                        "after_header": "/usr/bin/git config --includes --local receive.denyDeleteCurrent",
                                        "before": "\n",
                                        "before_header": "/usr/bin/git config --includes --local receive.denyDeleteCurrent"
                                    },
                                    "failed": false,
                                    "invocation": {
                                        "module_args": {
                                            "file": null,
                                            "list_all": false,
                                            "name": "receive.denyDeleteCurrent",
                                            "repo": "/home/zuul/src/cc-github.bmwgroup.net/swh/ddad-domains-generic",
                                            "scope": "local",
                                            "state": "present",
                                            "value": "ignore"
                                        }
                                    },
                                    "item": {
                                        "key": "cc-github.bmwgroup.net/swh/ddad-domains-generic",
                                        "value": {
                                            "canonical_hostname": "cc-github.bmwgroup.net",
                                            "canonical_name": "cc-github.bmwgroup.net/swh/ddad-domains-generic",
                                            "checkout": "master",
                                            "checkout_description": "zuul branch",
                                            "commit": "872e7456cf3b5838f30c47753e8187b8c62b636a",
                                            "name": "swh/ddad-domains-generic",
                                            "required": true,
                                            "short_name": "ddad-domains-generic",
                                            "src_dir": "src/cc-github.bmwgroup.net/swh/ddad-domains-generic"
                                        }
                                    },
                                    "msg": "setting changed"
                                },
                                {
                                    "ansible_loop_var": "item",
                                    "changed": true,
                                    "diff": {
                                        "after": "ignore\n",
                                        "after_header": "/usr/bin/git config --includes --local receive.denyDeleteCurrent",
                                        "before": "\n",
                                        "before_header": "/usr/bin/git config --includes --local receive.denyDeleteCurrent"
                                    },
                                    "failed": false,
                                    "invocation": {
                                        "module_args": {
                                            "file": null,
                                            "list_all": false,
                                            "name": "receive.denyDeleteCurrent",
                                            "repo": "/home/zuul/src/cc-github.bmwgroup.net/swh/ddad-ecu-ipnext",
                                            "scope": "local",
                                            "state": "present",
                                            "value": "ignore"
                                        }
                                    },
                                    "item": {
                                        "key": "cc-github.bmwgroup.net/swh/ddad-ecu-ipnext",
                                        "value": {
                                            "canonical_hostname": "cc-github.bmwgroup.net",
                                            "canonical_name": "cc-github.bmwgroup.net/swh/ddad-ecu-ipnext",
                                            "checkout": "master",
                                            "checkout_description": "zuul branch",
                                            "commit": "4e0fd5384e92431311a139b52f3b191523237f3f",
                                            "name": "swh/ddad-ecu-ipnext",
                                            "required": true,
                                            "short_name": "ddad-ecu-ipnext",
                                            "src_dir": "src/cc-github.bmwgroup.net/swh/ddad-ecu-ipnext"
                                        }
                                    },
                                    "msg": "setting changed"
                                },
                                {
                                    "ansible_loop_var": "item",
                                    "changed": true,
                                    "diff": {
                                        "after": "ignore\n",
                                        "after_header": "/usr/bin/git config --includes --local receive.denyDeleteCurrent",
                                        "before": "\n",
                                        "before_header": "/usr/bin/git config --includes --local receive.denyDeleteCurrent"
                                    },
                                    "failed": false,
                                    "invocation": {
                                        "module_args": {
                                            "file": null,
                                            "list_all": false,
                                            "name": "receive.denyDeleteCurrent",
                                            "repo": "/home/zuul/src/cc-github.bmwgroup.net/swh/ddad_ci_config",
                                            "scope": "local",
                                            "state": "present",
                                            "value": "ignore"
                                        }
                                    },
                                    "item": {
                                        "key": "cc-github.bmwgroup.net/swh/ddad_ci_config",
                                        "value": {
                                            "canonical_hostname": "cc-github.bmwgroup.net",
                                            "canonical_name": "cc-github.bmwgroup.net/swh/ddad_ci_config",
                                            "checkout": "master",
                                            "checkout_description": "zuul branch",
                                            "commit": "a2ea1242739a7a16dba7d7781925949e31cfc29f",
                                            "name": "swh/ddad_ci_config",
                                            "required": true,
                                            "short_name": "ddad_ci_config",
                                            "src_dir": "src/cc-github.bmwgroup.net/swh/ddad_ci_config"
                                        }
                                    },
                                    "msg": "setting changed"
                                },
                                {
                                    "ansible_loop_var": "item",
                                    "changed": true,
                                    "diff": {
                                        "after": "ignore\n",
                                        "after_header": "/usr/bin/git config --includes --local receive.denyDeleteCurrent",
                                        "before": "\n",
                                        "before_header": "/usr/bin/git config --includes --local receive.denyDeleteCurrent"
                                    },
                                    "failed": false,
                                    "invocation": {
                                        "module_args": {
                                            "file": null,
                                            "list_all": false,
                                            "name": "receive.denyDeleteCurrent",
                                            "repo": "/home/zuul/src/cc-github.bmwgroup.net/swh/ddad_platform",
                                            "scope": "local",
                                            "state": "present",
                                            "value": "ignore"
                                        }
                                    },
                                    "item": {
                                        "key": "cc-github.bmwgroup.net/swh/ddad_platform",
                                        "value": {
                                            "canonical_hostname": "cc-github.bmwgroup.net",
                                            "canonical_name": "cc-github.bmwgroup.net/swh/ddad_platform",
                                            "checkout": "master",
                                            "checkout_description": "zuul branch",
                                            "commit": "0fc13c778f15b8def496ce821b67df115746cfb6",
                                            "name": "swh/ddad_platform",
                                            "required": true,
                                            "short_name": "ddad_platform",
                                            "src_dir": "src/cc-github.bmwgroup.net/swh/ddad_platform"
                                        }
                                    },
                                    "msg": "setting changed"
                                },
                                {
                                    "ansible_loop_var": "item",
                                    "changed": true,
                                    "diff": {
                                        "after": "ignore\n",
                                        "after_header": "/usr/bin/git config --includes --local receive.denyDeleteCurrent",
                                        "before": "\n",
                                        "before_header": "/usr/bin/git config --includes --local receive.denyDeleteCurrent"
                                    },
                                    "failed": false,
                                    "invocation": {
                                        "module_args": {
                                            "file": null,
                                            "list_all": false,
                                            "name": "receive.denyDeleteCurrent",
                                            "repo": "/home/zuul/src/cc-github.bmwgroup.net/swh/domain-tools",
                                            "scope": "local",
                                            "state": "present",
                                            "value": "ignore"
                                        }
                                    },
                                    "item": {
                                        "key": "cc-github.bmwgroup.net/swh/domain-tools",
                                        "value": {
                                            "canonical_hostname": "cc-github.bmwgroup.net",
                                            "canonical_name": "cc-github.bmwgroup.net/swh/domain-tools",
                                            "checkout": "master",
                                            "checkout_description": "zuul branch",
                                            "commit": "22e48aea74d3e1a9d405529652492a0cfd84611a",
                                            "name": "swh/domain-tools",
                                            "required": true,
                                            "short_name": "domain-tools",
                                            "src_dir": "src/cc-github.bmwgroup.net/swh/domain-tools"
                                        }
                                    },
                                    "msg": "setting changed"
                                },
                                {
                                    "ansible_loop_var": "item",
                                    "changed": true,
                                    "diff": {
                                        "after": "ignore\n",
                                        "after_header": "/usr/bin/git config --includes --local receive.denyDeleteCurrent",
                                        "before": "\n",
                                        "before_header": "/usr/bin/git config --includes --local receive.denyDeleteCurrent"
                                    },
                                    "failed": false,
                                    "invocation": {
                                        "module_args": {
                                            "file": null,
                                            "list_all": false,
                                            "name": "receive.denyDeleteCurrent",
                                            "repo": "/home/zuul/src/cc-github.bmwgroup.net/swh/ecu_xpad_sc_mpad",
                                            "scope": "local",
                                            "state": "present",
                                            "value": "ignore"
                                        }
                                    },
                                    "item": {
                                        "key": "cc-github.bmwgroup.net/swh/ecu_xpad_sc_mpad",
                                        "value": {
                                            "canonical_hostname": "cc-github.bmwgroup.net",
                                            "canonical_name": "cc-github.bmwgroup.net/swh/ecu_xpad_sc_mpad",
                                            "checkout": "master",
                                            "checkout_description": "zuul branch",
                                            "commit": "9f275d5b9f924de72632bda96690327fccdd5ff5",
                                            "name": "swh/ecu_xpad_sc_mpad",
                                            "required": true,
                                            "short_name": "ecu_xpad_sc_mpad",
                                            "src_dir": "src/cc-github.bmwgroup.net/swh/ecu_xpad_sc_mpad"
                                        }
                                    },
                                    "msg": "setting changed"
                                },
                                {
                                    "ansible_loop_var": "item",
                                    "changed": true,
                                    "diff": {
                                        "after": "ignore\n",
                                        "after_header": "/usr/bin/git config --includes --local receive.denyDeleteCurrent",
                                        "before": "\n",
                                        "before_header": "/usr/bin/git config --includes --local receive.denyDeleteCurrent"
                                    },
                                    "failed": false,
                                    "invocation": {
                                        "module_args": {
                                            "file": null,
                                            "list_all": false,
                                            "name": "receive.denyDeleteCurrent",
                                            "repo": "/home/zuul/src/cc-github.bmwgroup.net/swh/foresight",
                                            "scope": "local",
                                            "state": "present",
                                            "value": "ignore"
                                        }
                                    },
                                    "item": {
                                        "key": "cc-github.bmwgroup.net/swh/foresight",
                                        "value": {
                                            "canonical_hostname": "cc-github.bmwgroup.net",
                                            "canonical_name": "cc-github.bmwgroup.net/swh/foresight",
                                            "checkout": "master",
                                            "checkout_description": "zuul branch",
                                            "commit": "0961a62bed7ee412bf80fe5a9b879e5586964358",
                                            "name": "swh/foresight",
                                            "required": true,
                                            "short_name": "foresight",
                                            "src_dir": "src/cc-github.bmwgroup.net/swh/foresight"
                                        }
                                    },
                                    "msg": "setting changed"
                                },
                                {
                                    "ansible_loop_var": "item",
                                    "changed": true,
                                    "diff": {
                                        "after": "ignore\n",
                                        "after_header": "/usr/bin/git config --includes --local receive.denyDeleteCurrent",
                                        "before": "\n",
                                        "before_header": "/usr/bin/git config --includes --local receive.denyDeleteCurrent"
                                    },
                                    "failed": false,
                                    "invocation": {
                                        "module_args": {
                                            "file": null,
                                            "list_all": false,
                                            "name": "receive.denyDeleteCurrent",
                                            "repo": "/home/zuul/src/cc-github.bmwgroup.net/swh/franky_ib",
                                            "scope": "local",
                                            "state": "present",
                                            "value": "ignore"
                                        }
                                    },
                                    "item": {
                                        "key": "cc-github.bmwgroup.net/swh/franky_ib",
                                        "value": {
                                            "canonical_hostname": "cc-github.bmwgroup.net",
                                            "canonical_name": "cc-github.bmwgroup.net/swh/franky_ib",
                                            "checkout": "master",
                                            "checkout_description": "zuul branch",
                                            "commit": "7a74d491251435e7b011e7010d11fbc9224b355c",
                                            "name": "swh/franky_ib",
                                            "required": true,
                                            "short_name": "franky_ib",
                                            "src_dir": "src/cc-github.bmwgroup.net/swh/franky_ib"
                                        }
                                    },
                                    "msg": "setting changed"
                                },
                                {
                                    "ansible_loop_var": "item",
                                    "changed": true,
                                    "diff": {
                                        "after": "ignore\n",
                                        "after_header": "/usr/bin/git config --includes --local receive.denyDeleteCurrent",
                                        "before": "\n",
                                        "before_header": "/usr/bin/git config --includes --local receive.denyDeleteCurrent"
                                    },
                                    "failed": false,
                                    "invocation": {
                                        "module_args": {
                                            "file": null,
                                            "list_all": false,
                                            "name": "receive.denyDeleteCurrent",
                                            "repo": "/home/zuul/src/cc-github.bmwgroup.net/swh/gnss_common",
                                            "scope": "local",
                                            "state": "present",
                                            "value": "ignore"
                                        }
                                    },
                                    "item": {
                                        "key": "cc-github.bmwgroup.net/swh/gnss_common",
                                        "value": {
                                            "canonical_hostname": "cc-github.bmwgroup.net",
                                            "canonical_name": "cc-github.bmwgroup.net/swh/gnss_common",
                                            "checkout": "master",
                                            "checkout_description": "zuul branch",
                                            "commit": "7aeb42bd9976938f99a41c088c70fe8af14ee8fc",
                                            "name": "swh/gnss_common",
                                            "required": true,
                                            "short_name": "gnss_common",
                                            "src_dir": "src/cc-github.bmwgroup.net/swh/gnss_common"
                                        }
                                    },
                                    "msg": "setting changed"
                                },
                                {
                                    "ansible_loop_var": "item",
                                    "changed": true,
                                    "diff": {
                                        "after": "ignore\n",
                                        "after_header": "/usr/bin/git config --includes --local receive.denyDeleteCurrent",
                                        "before": "\n",
                                        "before_header": "/usr/bin/git config --includes --local receive.denyDeleteCurrent"
                                    },
                                    "failed": false,
                                    "invocation": {
                                        "module_args": {
                                            "file": null,
                                            "list_all": false,
                                            "name": "receive.denyDeleteCurrent",
                                            "repo": "/home/zuul/src/cc-github.bmwgroup.net/swh/ib-vip",
                                            "scope": "local",
                                            "state": "present",
                                            "value": "ignore"
                                        }
                                    },
                                    "item": {
                                        "key": "cc-github.bmwgroup.net/swh/ib-vip",
                                        "value": {
                                            "canonical_hostname": "cc-github.bmwgroup.net",
                                            "canonical_name": "cc-github.bmwgroup.net/swh/ib-vip",
                                            "checkout": "master",
                                            "checkout_description": "zuul branch",
                                            "commit": "77d3abe6f172efef2f93e6c3a61af0f3ee7d7967",
                                            "name": "swh/ib-vip",
                                            "required": true,
                                            "short_name": "ib-vip",
                                            "src_dir": "src/cc-github.bmwgroup.net/swh/ib-vip"
                                        }
                                    },
                                    "msg": "setting changed"
                                },
                                {
                                    "ansible_loop_var": "item",
                                    "changed": true,
                                    "diff": {
                                        "after": "ignore\n",
                                        "after_header": "/usr/bin/git config --includes --local receive.denyDeleteCurrent",
                                        "before": "\n",
                                        "before_header": "/usr/bin/git config --includes --local receive.denyDeleteCurrent"
                                    },
                                    "failed": false,
                                    "invocation": {
                                        "module_args": {
                                            "file": null,
                                            "list_all": false,
                                            "name": "receive.denyDeleteCurrent",
                                            "repo": "/home/zuul/src/cc-github.bmwgroup.net/swh/ltf-dlt",
                                            "scope": "local",
                                            "state": "present",
                                            "value": "ignore"
                                        }
                                    },
                                    "item": {
                                        "key": "cc-github.bmwgroup.net/swh/ltf-dlt",
                                        "value": {
                                            "canonical_hostname": "cc-github.bmwgroup.net",
                                            "canonical_name": "cc-github.bmwgroup.net/swh/ltf-dlt",
                                            "checkout": "master",
                                            "checkout_description": "zuul branch",
                                            "commit": "68fa15c725670a73c3c7f3566a99f38cd3a87ae5",
                                            "name": "swh/ltf-dlt",
                                            "required": true,
                                            "short_name": "ltf-dlt",
                                            "src_dir": "src/cc-github.bmwgroup.net/swh/ltf-dlt"
                                        }
                                    },
                                    "msg": "setting changed"
                                },
                                {
                                    "ansible_loop_var": "item",
                                    "changed": true,
                                    "diff": {
                                        "after": "ignore\n",
                                        "after_header": "/usr/bin/git config --includes --local receive.denyDeleteCurrent",
                                        "before": "\n",
                                        "before_header": "/usr/bin/git config --includes --local receive.denyDeleteCurrent"
                                    },
                                    "failed": false,
                                    "invocation": {
                                        "module_args": {
                                            "file": null,
                                            "list_all": false,
                                            "name": "receive.denyDeleteCurrent",
                                            "repo": "/home/zuul/src/cc-github.bmwgroup.net/swh/orion",
                                            "scope": "local",
                                            "state": "present",
                                            "value": "ignore"
                                        }
                                    },
                                    "item": {
                                        "key": "cc-github.bmwgroup.net/swh/orion",
                                        "value": {
                                            "canonical_hostname": "cc-github.bmwgroup.net",
                                            "canonical_name": "cc-github.bmwgroup.net/swh/orion",
                                            "checkout": "master",
                                            "checkout_description": "zuul branch",
                                            "commit": "72eb2c62dc7bccf336d71917365610e01f7b7512",
                                            "name": "swh/orion",
                                            "required": true,
                                            "short_name": "orion",
                                            "src_dir": "src/cc-github.bmwgroup.net/swh/orion"
                                        }
                                    },
                                    "msg": "setting changed"
                                },
                                {
                                    "ansible_loop_var": "item",
                                    "changed": true,
                                    "diff": {
                                        "after": "ignore\n",
                                        "after_header": "/usr/bin/git config --includes --local receive.denyDeleteCurrent",
                                        "before": "\n",
                                        "before_header": "/usr/bin/git config --includes --local receive.denyDeleteCurrent"
                                    },
                                    "failed": false,
                                    "invocation": {
                                        "module_args": {
                                            "file": null,
                                            "list_all": false,
                                            "name": "receive.denyDeleteCurrent",
                                            "repo": "/home/zuul/src/cc-github.bmwgroup.net/swh/orion_aeb_temp",
                                            "scope": "local",
                                            "state": "present",
                                            "value": "ignore"
                                        }
                                    },
                                    "item": {
                                        "key": "cc-github.bmwgroup.net/swh/orion_aeb_temp",
                                        "value": {
                                            "canonical_hostname": "cc-github.bmwgroup.net",
                                            "canonical_name": "cc-github.bmwgroup.net/swh/orion_aeb_temp",
                                            "checkout": "master",
                                            "checkout_description": "zuul branch",
                                            "commit": "b473c7ab8c70f69511aeff1374d70aef88f33d4a",
                                            "name": "swh/orion_aeb_temp",
                                            "required": true,
                                            "short_name": "orion_aeb_temp",
                                            "src_dir": "src/cc-github.bmwgroup.net/swh/orion_aeb_temp"
                                        }
                                    },
                                    "msg": "setting changed"
                                },
                                {
                                    "ansible_loop_var": "item",
                                    "changed": true,
                                    "diff": {
                                        "after": "ignore\n",
                                        "after_header": "/usr/bin/git config --includes --local receive.denyDeleteCurrent",
                                        "before": "\n",
                                        "before_header": "/usr/bin/git config --includes --local receive.denyDeleteCurrent"
                                    },
                                    "failed": false,
                                    "invocation": {
                                        "module_args": {
                                            "file": null,
                                            "list_all": false,
                                            "name": "receive.denyDeleteCurrent",
                                            "repo": "/home/zuul/src/cc-github.bmwgroup.net/swh/system_description",
                                            "scope": "local",
                                            "state": "present",
                                            "value": "ignore"
                                        }
                                    },
                                    "item": {
                                        "key": "cc-github.bmwgroup.net/swh/system_description",
                                        "value": {
                                            "canonical_hostname": "cc-github.bmwgroup.net",
                                            "canonical_name": "cc-github.bmwgroup.net/swh/system_description",
                                            "checkout": "master",
                                            "checkout_description": "zuul branch",
                                            "commit": "42dc122349acc14be41c1ebee15c7edff680fb79",
                                            "name": "swh/system_description",
                                            "required": true,
                                            "short_name": "system_description",
                                            "src_dir": "src/cc-github.bmwgroup.net/swh/system_description"
                                        }
                                    },
                                    "msg": "setting changed"
                                },
                                {
                                    "ansible_loop_var": "item",
                                    "changed": true,
                                    "diff": {
                                        "after": "ignore\n",
                                        "after_header": "/usr/bin/git config --includes --local receive.denyDeleteCurrent",
                                        "before": "\n",
                                        "before_header": "/usr/bin/git config --includes --local receive.denyDeleteCurrent"
                                    },
                                    "failed": false,
                                    "invocation": {
                                        "module_args": {
                                            "file": null,
                                            "list_all": false,
                                            "name": "receive.denyDeleteCurrent",
                                            "repo": "/home/zuul/src/cc-github.bmwgroup.net/swh/ufm",
                                            "scope": "local",
                                            "state": "present",
                                            "value": "ignore"
                                        }
                                    },
                                    "item": {
                                        "key": "cc-github.bmwgroup.net/swh/ufm",
                                        "value": {
                                            "canonical_hostname": "cc-github.bmwgroup.net",
                                            "canonical_name": "cc-github.bmwgroup.net/swh/ufm",
                                            "checkout": "master",
                                            "checkout_description": "zuul branch",
                                            "commit": "24d683807041b01ac000b8a6212ec6ad50e3b5e2",
                                            "name": "swh/ufm",
                                            "required": true,
                                            "short_name": "ufm",
                                            "src_dir": "src/cc-github.bmwgroup.net/swh/ufm"
                                        }
                                    },
                                    "msg": "setting changed"
                                },
                                {
                                    "ansible_loop_var": "item",
                                    "changed": true,
                                    "diff": {
                                        "after": "ignore\n",
                                        "after_header": "/usr/bin/git config --includes --local receive.denyDeleteCurrent",
                                        "before": "\n",
                                        "before_header": "/usr/bin/git config --includes --local receive.denyDeleteCurrent"
                                    },
                                    "failed": false,
                                    "invocation": {
                                        "module_args": {
                                            "file": null,
                                            "list_all": false,
                                            "name": "receive.denyDeleteCurrent",
                                            "repo": "/home/zuul/src/cc-github.bmwgroup.net/swh/xpad-ara",
                                            "scope": "local",
                                            "state": "present",
                                            "value": "ignore"
                                        }
                                    },
                                    "item": {
                                        "key": "cc-github.bmwgroup.net/swh/xpad-ara",
                                        "value": {
                                            "canonical_hostname": "cc-github.bmwgroup.net",
                                            "canonical_name": "cc-github.bmwgroup.net/swh/xpad-ara",
                                            "checkout": "master",
                                            "checkout_description": "zuul branch",
                                            "commit": "591c4c708640423656b97148b3d5767a987d4818",
                                            "name": "swh/xpad-ara",
                                            "required": true,
                                            "short_name": "xpad-ara",
                                            "src_dir": "src/cc-github.bmwgroup.net/swh/xpad-ara"
                                        }
                                    },
                                    "msg": "setting changed"
                                },
                                {
                                    "ansible_loop_var": "item",
                                    "changed": true,
                                    "diff": {
                                        "after": "ignore\n",
                                        "after_header": "/usr/bin/git config --includes --local receive.denyDeleteCurrent",
                                        "before": "\n",
                                        "before_header": "/usr/bin/git config --includes --local receive.denyDeleteCurrent"
                                    },
                                    "failed": false,
                                    "invocation": {
                                        "module_args": {
                                            "file": null,
                                            "list_all": false,
                                            "name": "receive.denyDeleteCurrent",
                                            "repo": "/home/zuul/src/cc-github.bmwgroup.net/swh/xpad-shared",
                                            "scope": "local",
                                            "state": "present",
                                            "value": "ignore"
                                        }
                                    },
                                    "item": {
                                        "key": "cc-github.bmwgroup.net/swh/xpad-shared",
                                        "value": {
                                            "canonical_hostname": "cc-github.bmwgroup.net",
                                            "canonical_name": "cc-github.bmwgroup.net/swh/xpad-shared",
                                            "checkout": "master",
                                            "checkout_description": "zuul branch",
                                            "commit": "5fe3ea2c8e16591c6c11a5398c0fd866652ef652",
                                            "name": "swh/xpad-shared",
                                            "required": true,
                                            "short_name": "xpad-shared",
                                            "src_dir": "src/cc-github.bmwgroup.net/swh/xpad-shared"
                                        }
                                    },
                                    "msg": "setting changed"
                                },
                                {
                                    "ansible_loop_var": "item",
                                    "changed": true,
                                    "diff": {
                                        "after": "ignore\n",
                                        "after_header": "/usr/bin/git config --includes --local receive.denyDeleteCurrent",
                                        "before": "\n",
                                        "before_header": "/usr/bin/git config --includes --local receive.denyDeleteCurrent"
                                    },
                                    "failed": false,
                                    "invocation": {
                                        "module_args": {
                                            "file": null,
                                            "list_all": false,
                                            "name": "receive.denyDeleteCurrent",
                                            "repo": "/home/zuul/src/cc-github.bmwgroup.net/swh/xpad_xpc",
                                            "scope": "local",
                                            "state": "present",
                                            "value": "ignore"
                                        }
                                    },
                                    "item": {
                                        "key": "cc-github.bmwgroup.net/swh/xpad_xpc",
                                        "value": {
                                            "canonical_hostname": "cc-github.bmwgroup.net",
                                            "canonical_name": "cc-github.bmwgroup.net/swh/xpad_xpc",
                                            "checkout": "master",
                                            "checkout_description": "zuul branch",
                                            "commit": "9ce2131edf06568e92545d2f5d1464924b016780",
                                            "name": "swh/xpad_xpc",
                                            "required": true,
                                            "short_name": "xpad_xpc",
                                            "src_dir": "src/cc-github.bmwgroup.net/swh/xpad_xpc"
                                        }
                                    },
                                    "msg": "setting changed"
                                },
                                {
                                    "ansible_loop_var": "item",
                                    "changed": true,
                                    "diff": {
                                        "after": "ignore\n",
                                        "after_header": "/usr/bin/git config --includes --local receive.denyDeleteCurrent",
                                        "before": "\n",
                                        "before_header": "/usr/bin/git config --includes --local receive.denyDeleteCurrent"
                                    },
                                    "failed": false,
                                    "invocation": {
                                        "module_args": {
                                            "file": null,
                                            "list_all": false,
                                            "name": "receive.denyDeleteCurrent",
                                            "repo": "/home/zuul/src/cc-github.bmwgroup.net/swh/zuul-trusted-ddad",
                                            "scope": "local",
                                            "state": "present",
                                            "value": "ignore"
                                        }
                                    },
                                    "item": {
                                        "key": "cc-github.bmwgroup.net/swh/zuul-trusted-ddad",
                                        "value": {
                                            "canonical_hostname": "cc-github.bmwgroup.net",
                                            "canonical_name": "cc-github.bmwgroup.net/swh/zuul-trusted-ddad",
                                            "checkout": "master",
                                            "checkout_description": "zuul branch",
                                            "commit": "a22500345c4283b6add4f2a3c354c663a904d9d0",
                                            "name": "swh/zuul-trusted-ddad",
                                            "required": true,
                                            "short_name": "zuul-trusted-ddad",
                                            "src_dir": "src/cc-github.bmwgroup.net/swh/zuul-trusted-ddad"
                                        }
                                    },
                                    "msg": "setting changed"
                                }
                            ]
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-d7cb-6b39-0000000008fb",
                        "name": "prepare-workspace-git",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_2/cc-github.bmwgroup.net/codecraft-oss/zuul-jobs/roles/prepare-workspace-git"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:40:45.274952Z",
                            "start": "2024-04-21T00:40:38.079855Z"
                        },
                        "id": "ce4df5fb-964c-d7cb-6b39-000000000904",
                        "name": "Allow deleting current branch"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "include_tasks",
                            "changed": false,
                            "msg": "All items completed",
                            "results": [
                                {
                                    "ansible_loop_var": "zj_project",
                                    "include": "sync-project.yaml",
                                    "include_args": {},
                                    "zj_project": {
                                        "key": "cc-github.bmwgroup.net/swh/adp",
                                        "value": {
                                            "canonical_hostname": "cc-github.bmwgroup.net",
                                            "canonical_name": "cc-github.bmwgroup.net/swh/adp",
                                            "checkout": "master",
                                            "checkout_description": "zuul branch",
                                            "commit": "8d83dea1d58bef901e97793e1c34ad57986fada1",
                                            "name": "swh/adp",
                                            "required": true,
                                            "short_name": "adp",
                                            "src_dir": "src/cc-github.bmwgroup.net/swh/adp"
                                        }
                                    }
                                },
                                {
                                    "ansible_loop_var": "zj_project",
                                    "include": "sync-project.yaml",
                                    "include_args": {},
                                    "zj_project": {
                                        "key": "cc-github.bmwgroup.net/swh/cvc",
                                        "value": {
                                            "canonical_hostname": "cc-github.bmwgroup.net",
                                            "canonical_name": "cc-github.bmwgroup.net/swh/cvc",
                                            "checkout": "master",
                                            "checkout_description": "zuul branch",
                                            "commit": "dbf0e56926a6baad91df5b15b84746c66de73a47",
                                            "name": "swh/cvc",
                                            "required": true,
                                            "short_name": "cvc",
                                            "src_dir": "src/cc-github.bmwgroup.net/swh/cvc"
                                        }
                                    }
                                },
                                {
                                    "ansible_loop_var": "zj_project",
                                    "include": "sync-project.yaml",
                                    "include_args": {},
                                    "zj_project": {
                                        "key": "cc-github.bmwgroup.net/swh/ddad",
                                        "value": {
                                            "canonical_hostname": "cc-github.bmwgroup.net",
                                            "canonical_name": "cc-github.bmwgroup.net/swh/ddad",
                                            "checkout": "master",
                                            "checkout_description": "zuul branch",
                                            "commit": "32fe27876b12e612823c5f9cfd63b2cc1eaa68c1",
                                            "name": "swh/ddad",
                                            "required": true,
                                            "short_name": "ddad",
                                            "src_dir": "src/cc-github.bmwgroup.net/swh/ddad"
                                        }
                                    }
                                },
                                {
                                    "ansible_loop_var": "zj_project",
                                    "include": "sync-project.yaml",
                                    "include_args": {},
                                    "zj_project": {
                                        "key": "cc-github.bmwgroup.net/swh/ddad-domains-fasinfo",
                                        "value": {
                                            "canonical_hostname": "cc-github.bmwgroup.net",
                                            "canonical_name": "cc-github.bmwgroup.net/swh/ddad-domains-fasinfo",
                                            "checkout": "master",
                                            "checkout_description": "zuul branch",
                                            "commit": "a5b41fd76a124026ff81320e27d5caa5a772f235",
                                            "name": "swh/ddad-domains-fasinfo",
                                            "required": true,
                                            "short_name": "ddad-domains-fasinfo",
                                            "src_dir": "src/cc-github.bmwgroup.net/swh/ddad-domains-fasinfo"
                                        }
                                    }
                                },
                                {
                                    "ansible_loop_var": "zj_project",
                                    "include": "sync-project.yaml",
                                    "include_args": {},
                                    "zj_project": {
                                        "key": "cc-github.bmwgroup.net/swh/ddad-domains-generic",
                                        "value": {
                                            "canonical_hostname": "cc-github.bmwgroup.net",
                                            "canonical_name": "cc-github.bmwgroup.net/swh/ddad-domains-generic",
                                            "checkout": "master",
                                            "checkout_description": "zuul branch",
                                            "commit": "872e7456cf3b5838f30c47753e8187b8c62b636a",
                                            "name": "swh/ddad-domains-generic",
                                            "required": true,
                                            "short_name": "ddad-domains-generic",
                                            "src_dir": "src/cc-github.bmwgroup.net/swh/ddad-domains-generic"
                                        }
                                    }
                                },
                                {
                                    "ansible_loop_var": "zj_project",
                                    "include": "sync-project.yaml",
                                    "include_args": {},
                                    "zj_project": {
                                        "key": "cc-github.bmwgroup.net/swh/ddad-ecu-ipnext",
                                        "value": {
                                            "canonical_hostname": "cc-github.bmwgroup.net",
                                            "canonical_name": "cc-github.bmwgroup.net/swh/ddad-ecu-ipnext",
                                            "checkout": "master",
                                            "checkout_description": "zuul branch",
                                            "commit": "4e0fd5384e92431311a139b52f3b191523237f3f",
                                            "name": "swh/ddad-ecu-ipnext",
                                            "required": true,
                                            "short_name": "ddad-ecu-ipnext",
                                            "src_dir": "src/cc-github.bmwgroup.net/swh/ddad-ecu-ipnext"
                                        }
                                    }
                                },
                                {
                                    "ansible_loop_var": "zj_project",
                                    "include": "sync-project.yaml",
                                    "include_args": {},
                                    "zj_project": {
                                        "key": "cc-github.bmwgroup.net/swh/ddad_ci_config",
                                        "value": {
                                            "canonical_hostname": "cc-github.bmwgroup.net",
                                            "canonical_name": "cc-github.bmwgroup.net/swh/ddad_ci_config",
                                            "checkout": "master",
                                            "checkout_description": "zuul branch",
                                            "commit": "a2ea1242739a7a16dba7d7781925949e31cfc29f",
                                            "name": "swh/ddad_ci_config",
                                            "required": true,
                                            "short_name": "ddad_ci_config",
                                            "src_dir": "src/cc-github.bmwgroup.net/swh/ddad_ci_config"
                                        }
                                    }
                                },
                                {
                                    "ansible_loop_var": "zj_project",
                                    "include": "sync-project.yaml",
                                    "include_args": {},
                                    "zj_project": {
                                        "key": "cc-github.bmwgroup.net/swh/ddad_platform",
                                        "value": {
                                            "canonical_hostname": "cc-github.bmwgroup.net",
                                            "canonical_name": "cc-github.bmwgroup.net/swh/ddad_platform",
                                            "checkout": "master",
                                            "checkout_description": "zuul branch",
                                            "commit": "0fc13c778f15b8def496ce821b67df115746cfb6",
                                            "name": "swh/ddad_platform",
                                            "required": true,
                                            "short_name": "ddad_platform",
                                            "src_dir": "src/cc-github.bmwgroup.net/swh/ddad_platform"
                                        }
                                    }
                                },
                                {
                                    "ansible_loop_var": "zj_project",
                                    "include": "sync-project.yaml",
                                    "include_args": {},
                                    "zj_project": {
                                        "key": "cc-github.bmwgroup.net/swh/domain-tools",
                                        "value": {
                                            "canonical_hostname": "cc-github.bmwgroup.net",
                                            "canonical_name": "cc-github.bmwgroup.net/swh/domain-tools",
                                            "checkout": "master",
                                            "checkout_description": "zuul branch",
                                            "commit": "22e48aea74d3e1a9d405529652492a0cfd84611a",
                                            "name": "swh/domain-tools",
                                            "required": true,
                                            "short_name": "domain-tools",
                                            "src_dir": "src/cc-github.bmwgroup.net/swh/domain-tools"
                                        }
                                    }
                                },
                                {
                                    "ansible_loop_var": "zj_project",
                                    "include": "sync-project.yaml",
                                    "include_args": {},
                                    "zj_project": {
                                        "key": "cc-github.bmwgroup.net/swh/ecu_xpad_sc_mpad",
                                        "value": {
                                            "canonical_hostname": "cc-github.bmwgroup.net",
                                            "canonical_name": "cc-github.bmwgroup.net/swh/ecu_xpad_sc_mpad",
                                            "checkout": "master",
                                            "checkout_description": "zuul branch",
                                            "commit": "9f275d5b9f924de72632bda96690327fccdd5ff5",
                                            "name": "swh/ecu_xpad_sc_mpad",
                                            "required": true,
                                            "short_name": "ecu_xpad_sc_mpad",
                                            "src_dir": "src/cc-github.bmwgroup.net/swh/ecu_xpad_sc_mpad"
                                        }
                                    }
                                },
                                {
                                    "ansible_loop_var": "zj_project",
                                    "include": "sync-project.yaml",
                                    "include_args": {},
                                    "zj_project": {
                                        "key": "cc-github.bmwgroup.net/swh/foresight",
                                        "value": {
                                            "canonical_hostname": "cc-github.bmwgroup.net",
                                            "canonical_name": "cc-github.bmwgroup.net/swh/foresight",
                                            "checkout": "master",
                                            "checkout_description": "zuul branch",
                                            "commit": "0961a62bed7ee412bf80fe5a9b879e5586964358",
                                            "name": "swh/foresight",
                                            "required": true,
                                            "short_name": "foresight",
                                            "src_dir": "src/cc-github.bmwgroup.net/swh/foresight"
                                        }
                                    }
                                },
                                {
                                    "ansible_loop_var": "zj_project",
                                    "include": "sync-project.yaml",
                                    "include_args": {},
                                    "zj_project": {
                                        "key": "cc-github.bmwgroup.net/swh/franky_ib",
                                        "value": {
                                            "canonical_hostname": "cc-github.bmwgroup.net",
                                            "canonical_name": "cc-github.bmwgroup.net/swh/franky_ib",
                                            "checkout": "master",
                                            "checkout_description": "zuul branch",
                                            "commit": "7a74d491251435e7b011e7010d11fbc9224b355c",
                                            "name": "swh/franky_ib",
                                            "required": true,
                                            "short_name": "franky_ib",
                                            "src_dir": "src/cc-github.bmwgroup.net/swh/franky_ib"
                                        }
                                    }
                                },
                                {
                                    "ansible_loop_var": "zj_project",
                                    "include": "sync-project.yaml",
                                    "include_args": {},
                                    "zj_project": {
                                        "key": "cc-github.bmwgroup.net/swh/gnss_common",
                                        "value": {
                                            "canonical_hostname": "cc-github.bmwgroup.net",
                                            "canonical_name": "cc-github.bmwgroup.net/swh/gnss_common",
                                            "checkout": "master",
                                            "checkout_description": "zuul branch",
                                            "commit": "7aeb42bd9976938f99a41c088c70fe8af14ee8fc",
                                            "name": "swh/gnss_common",
                                            "required": true,
                                            "short_name": "gnss_common",
                                            "src_dir": "src/cc-github.bmwgroup.net/swh/gnss_common"
                                        }
                                    }
                                },
                                {
                                    "ansible_loop_var": "zj_project",
                                    "include": "sync-project.yaml",
                                    "include_args": {},
                                    "zj_project": {
                                        "key": "cc-github.bmwgroup.net/swh/ib-vip",
                                        "value": {
                                            "canonical_hostname": "cc-github.bmwgroup.net",
                                            "canonical_name": "cc-github.bmwgroup.net/swh/ib-vip",
                                            "checkout": "master",
                                            "checkout_description": "zuul branch",
                                            "commit": "77d3abe6f172efef2f93e6c3a61af0f3ee7d7967",
                                            "name": "swh/ib-vip",
                                            "required": true,
                                            "short_name": "ib-vip",
                                            "src_dir": "src/cc-github.bmwgroup.net/swh/ib-vip"
                                        }
                                    }
                                },
                                {
                                    "ansible_loop_var": "zj_project",
                                    "include": "sync-project.yaml",
                                    "include_args": {},
                                    "zj_project": {
                                        "key": "cc-github.bmwgroup.net/swh/ltf-dlt",
                                        "value": {
                                            "canonical_hostname": "cc-github.bmwgroup.net",
                                            "canonical_name": "cc-github.bmwgroup.net/swh/ltf-dlt",
                                            "checkout": "master",
                                            "checkout_description": "zuul branch",
                                            "commit": "68fa15c725670a73c3c7f3566a99f38cd3a87ae5",
                                            "name": "swh/ltf-dlt",
                                            "required": true,
                                            "short_name": "ltf-dlt",
                                            "src_dir": "src/cc-github.bmwgroup.net/swh/ltf-dlt"
                                        }
                                    }
                                },
                                {
                                    "ansible_loop_var": "zj_project",
                                    "include": "sync-project.yaml",
                                    "include_args": {},
                                    "zj_project": {
                                        "key": "cc-github.bmwgroup.net/swh/orion",
                                        "value": {
                                            "canonical_hostname": "cc-github.bmwgroup.net",
                                            "canonical_name": "cc-github.bmwgroup.net/swh/orion",
                                            "checkout": "master",
                                            "checkout_description": "zuul branch",
                                            "commit": "72eb2c62dc7bccf336d71917365610e01f7b7512",
                                            "name": "swh/orion",
                                            "required": true,
                                            "short_name": "orion",
                                            "src_dir": "src/cc-github.bmwgroup.net/swh/orion"
                                        }
                                    }
                                },
                                {
                                    "ansible_loop_var": "zj_project",
                                    "include": "sync-project.yaml",
                                    "include_args": {},
                                    "zj_project": {
                                        "key": "cc-github.bmwgroup.net/swh/orion_aeb_temp",
                                        "value": {
                                            "canonical_hostname": "cc-github.bmwgroup.net",
                                            "canonical_name": "cc-github.bmwgroup.net/swh/orion_aeb_temp",
                                            "checkout": "master",
                                            "checkout_description": "zuul branch",
                                            "commit": "b473c7ab8c70f69511aeff1374d70aef88f33d4a",
                                            "name": "swh/orion_aeb_temp",
                                            "required": true,
                                            "short_name": "orion_aeb_temp",
                                            "src_dir": "src/cc-github.bmwgroup.net/swh/orion_aeb_temp"
                                        }
                                    }
                                },
                                {
                                    "ansible_loop_var": "zj_project",
                                    "include": "sync-project.yaml",
                                    "include_args": {},
                                    "zj_project": {
                                        "key": "cc-github.bmwgroup.net/swh/system_description",
                                        "value": {
                                            "canonical_hostname": "cc-github.bmwgroup.net",
                                            "canonical_name": "cc-github.bmwgroup.net/swh/system_description",
                                            "checkout": "master",
                                            "checkout_description": "zuul branch",
                                            "commit": "42dc122349acc14be41c1ebee15c7edff680fb79",
                                            "name": "swh/system_description",
                                            "required": true,
                                            "short_name": "system_description",
                                            "src_dir": "src/cc-github.bmwgroup.net/swh/system_description"
                                        }
                                    }
                                },
                                {
                                    "ansible_loop_var": "zj_project",
                                    "include": "sync-project.yaml",
                                    "include_args": {},
                                    "zj_project": {
                                        "key": "cc-github.bmwgroup.net/swh/ufm",
                                        "value": {
                                            "canonical_hostname": "cc-github.bmwgroup.net",
                                            "canonical_name": "cc-github.bmwgroup.net/swh/ufm",
                                            "checkout": "master",
                                            "checkout_description": "zuul branch",
                                            "commit": "24d683807041b01ac000b8a6212ec6ad50e3b5e2",
                                            "name": "swh/ufm",
                                            "required": true,
                                            "short_name": "ufm",
                                            "src_dir": "src/cc-github.bmwgroup.net/swh/ufm"
                                        }
                                    }
                                },
                                {
                                    "ansible_loop_var": "zj_project",
                                    "include": "sync-project.yaml",
                                    "include_args": {},
                                    "zj_project": {
                                        "key": "cc-github.bmwgroup.net/swh/xpad-ara",
                                        "value": {
                                            "canonical_hostname": "cc-github.bmwgroup.net",
                                            "canonical_name": "cc-github.bmwgroup.net/swh/xpad-ara",
                                            "checkout": "master",
                                            "checkout_description": "zuul branch",
                                            "commit": "591c4c708640423656b97148b3d5767a987d4818",
                                            "name": "swh/xpad-ara",
                                            "required": true,
                                            "short_name": "xpad-ara",
                                            "src_dir": "src/cc-github.bmwgroup.net/swh/xpad-ara"
                                        }
                                    }
                                },
                                {
                                    "ansible_loop_var": "zj_project",
                                    "include": "sync-project.yaml",
                                    "include_args": {},
                                    "zj_project": {
                                        "key": "cc-github.bmwgroup.net/swh/xpad-shared",
                                        "value": {
                                            "canonical_hostname": "cc-github.bmwgroup.net",
                                            "canonical_name": "cc-github.bmwgroup.net/swh/xpad-shared",
                                            "checkout": "master",
                                            "checkout_description": "zuul branch",
                                            "commit": "5fe3ea2c8e16591c6c11a5398c0fd866652ef652",
                                            "name": "swh/xpad-shared",
                                            "required": true,
                                            "short_name": "xpad-shared",
                                            "src_dir": "src/cc-github.bmwgroup.net/swh/xpad-shared"
                                        }
                                    }
                                },
                                {
                                    "ansible_loop_var": "zj_project",
                                    "include": "sync-project.yaml",
                                    "include_args": {},
                                    "zj_project": {
                                        "key": "cc-github.bmwgroup.net/swh/xpad_xpc",
                                        "value": {
                                            "canonical_hostname": "cc-github.bmwgroup.net",
                                            "canonical_name": "cc-github.bmwgroup.net/swh/xpad_xpc",
                                            "checkout": "master",
                                            "checkout_description": "zuul branch",
                                            "commit": "9ce2131edf06568e92545d2f5d1464924b016780",
                                            "name": "swh/xpad_xpc",
                                            "required": true,
                                            "short_name": "xpad_xpc",
                                            "src_dir": "src/cc-github.bmwgroup.net/swh/xpad_xpc"
                                        }
                                    }
                                },
                                {
                                    "ansible_loop_var": "zj_project",
                                    "include": "sync-project.yaml",
                                    "include_args": {},
                                    "zj_project": {
                                        "key": "cc-github.bmwgroup.net/swh/zuul-trusted-ddad",
                                        "value": {
                                            "canonical_hostname": "cc-github.bmwgroup.net",
                                            "canonical_name": "cc-github.bmwgroup.net/swh/zuul-trusted-ddad",
                                            "checkout": "master",
                                            "checkout_description": "zuul branch",
                                            "commit": "a22500345c4283b6add4f2a3c354c663a904d9d0",
                                            "name": "swh/zuul-trusted-ddad",
                                            "required": true,
                                            "short_name": "zuul-trusted-ddad",
                                            "src_dir": "src/cc-github.bmwgroup.net/swh/zuul-trusted-ddad"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-d7cb-6b39-0000000008fb",
                        "name": "prepare-workspace-git",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_2/cc-github.bmwgroup.net/codecraft-oss/zuul-jobs/roles/prepare-workspace-git"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:40:45.551968Z",
                            "start": "2024-04-21T00:40:45.286352Z"
                        },
                        "id": "ce4df5fb-964c-d7cb-6b39-000000000905",
                        "name": "Include tasks to synchronize src repos to workspace directory"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "command",
                            "attempts": 1,
                            "changed": true,
                            "cmd": [
                                "git",
                                "push",
                                "--quiet",
                                "--mirror",
                                "git+ssh://zuul@10.31.118.224:22//home/zuul/src/cc-github.bmwgroup.net/swh/adp"
                            ],
                            "delta": "0:00:05.269811",
                            "end": "2024-04-21 00:40:51.395367",
                            "invocation": {
                                "module_args": {
                                    "_raw_params": "  git push --quiet --mirror git+ssh://zuul@10.31.118.224:22//home/zuul/src/cc-github.bmwgroup.net/swh/adp\n",
                                    "_uses_shell": false,
                                    "argv": null,
                                    "chdir": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/work/src/cc-github.bmwgroup.net/swh/adp",
                                    "creates": null,
                                    "executable": null,
                                    "removes": null,
                                    "stdin": null,
                                    "stdin_add_newline": true,
                                    "strip_empty_ends": true,
                                    "warn": false,
                                    "zuul_ansible_split_streams": false,
                                    "zuul_log_id": "ce4df5fb-964c-d7cb-6b39-000000000a33-0-node"
                                }
                            },
                            "msg": "",
                            "rc": 0,
                            "start": "2024-04-21 00:40:46.125556",
                            "stderr": "",
                            "stderr_lines": [],
                            "stdout": "",
                            "stdout_lines": [],
                            "zuul_log_id": "ce4df5fb-964c-d7cb-6b39-000000000a33-0-node"
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-d7cb-6b39-0000000008fb",
                        "name": "prepare-workspace-git",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_2/cc-github.bmwgroup.net/codecraft-oss/zuul-jobs/roles/prepare-workspace-git"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:40:51.467557Z",
                            "start": "2024-04-21T00:40:45.739609Z"
                        },
                        "id": "ce4df5fb-964c-d7cb-6b39-000000000a33",
                        "name": "Synchronize cc-github.bmwgroup.net/swh/adp"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "command",
                            "attempts": 1,
                            "changed": true,
                            "cmd": [
                                "git",
                                "push",
                                "--quiet",
                                "--mirror",
                                "git+ssh://zuul@10.31.118.224:22//home/zuul/src/cc-github.bmwgroup.net/swh/cvc"
                            ],
                            "delta": "0:00:00.496979",
                            "end": "2024-04-21 00:40:52.459006",
                            "invocation": {
                                "module_args": {
                                    "_raw_params": "  git push --quiet --mirror git+ssh://zuul@10.31.118.224:22//home/zuul/src/cc-github.bmwgroup.net/swh/cvc\n",
                                    "_uses_shell": false,
                                    "argv": null,
                                    "chdir": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/work/src/cc-github.bmwgroup.net/swh/cvc",
                                    "creates": null,
                                    "executable": null,
                                    "removes": null,
                                    "stdin": null,
                                    "stdin_add_newline": true,
                                    "strip_empty_ends": true,
                                    "warn": false,
                                    "zuul_ansible_split_streams": false,
                                    "zuul_log_id": "ce4df5fb-964c-d7cb-6b39-000000000a37-0-node"
                                }
                            },
                            "msg": "",
                            "rc": 0,
                            "start": "2024-04-21 00:40:51.962027",
                            "stderr": "",
                            "stderr_lines": [],
                            "stdout": "",
                            "stdout_lines": [],
                            "zuul_log_id": "ce4df5fb-964c-d7cb-6b39-000000000a37-0-node"
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-d7cb-6b39-0000000008fb",
                        "name": "prepare-workspace-git",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_2/cc-github.bmwgroup.net/codecraft-oss/zuul-jobs/roles/prepare-workspace-git"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:40:52.538110Z",
                            "start": "2024-04-21T00:40:51.483645Z"
                        },
                        "id": "ce4df5fb-964c-d7cb-6b39-000000000a37",
                        "name": "Synchronize cc-github.bmwgroup.net/swh/cvc"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "command",
                            "attempts": 1,
                            "changed": true,
                            "cmd": [
                                "git",
                                "push",
                                "--quiet",
                                "--mirror",
                                "git+ssh://zuul@10.31.118.224:22//home/zuul/src/cc-github.bmwgroup.net/swh/ddad"
                            ],
                            "delta": "0:00:01.031544",
                            "end": "2024-04-21 00:40:53.988286",
                            "invocation": {
                                "module_args": {
                                    "_raw_params": "  git push --quiet --mirror git+ssh://zuul@10.31.118.224:22//home/zuul/src/cc-github.bmwgroup.net/swh/ddad\n",
                                    "_uses_shell": false,
                                    "argv": null,
                                    "chdir": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/work/src/cc-github.bmwgroup.net/swh/ddad",
                                    "creates": null,
                                    "executable": null,
                                    "removes": null,
                                    "stdin": null,
                                    "stdin_add_newline": true,
                                    "strip_empty_ends": true,
                                    "warn": false,
                                    "zuul_ansible_split_streams": false,
                                    "zuul_log_id": "ce4df5fb-964c-d7cb-6b39-000000000a3b-0-node"
                                }
                            },
                            "msg": "",
                            "rc": 0,
                            "start": "2024-04-21 00:40:52.956742",
                            "stderr": "",
                            "stderr_lines": [],
                            "stdout": "",
                            "stdout_lines": [],
                            "zuul_log_id": "ce4df5fb-964c-d7cb-6b39-000000000a3b-0-node"
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-d7cb-6b39-0000000008fb",
                        "name": "prepare-workspace-git",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_2/cc-github.bmwgroup.net/codecraft-oss/zuul-jobs/roles/prepare-workspace-git"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:40:54.064345Z",
                            "start": "2024-04-21T00:40:52.556368Z"
                        },
                        "id": "ce4df5fb-964c-d7cb-6b39-000000000a3b",
                        "name": "Synchronize cc-github.bmwgroup.net/swh/ddad"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "command",
                            "attempts": 1,
                            "changed": true,
                            "cmd": [
                                "git",
                                "push",
                                "--quiet",
                                "--mirror",
                                "git+ssh://zuul@10.31.118.224:22//home/zuul/src/cc-github.bmwgroup.net/swh/ddad-domains-fasinfo"
                            ],
                            "delta": "0:00:00.441473",
                            "end": "2024-04-21 00:40:54.915664",
                            "invocation": {
                                "module_args": {
                                    "_raw_params": "  git push --quiet --mirror git+ssh://zuul@10.31.118.224:22//home/zuul/src/cc-github.bmwgroup.net/swh/ddad-domains-fasinfo\n",
                                    "_uses_shell": false,
                                    "argv": null,
                                    "chdir": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/work/src/cc-github.bmwgroup.net/swh/ddad-domains-fasinfo",
                                    "creates": null,
                                    "executable": null,
                                    "removes": null,
                                    "stdin": null,
                                    "stdin_add_newline": true,
                                    "strip_empty_ends": true,
                                    "warn": false,
                                    "zuul_ansible_split_streams": false,
                                    "zuul_log_id": "ce4df5fb-964c-d7cb-6b39-000000000a3f-0-node"
                                }
                            },
                            "msg": "",
                            "rc": 0,
                            "start": "2024-04-21 00:40:54.474191",
                            "stderr": "",
                            "stderr_lines": [],
                            "stdout": "",
                            "stdout_lines": [],
                            "zuul_log_id": "ce4df5fb-964c-d7cb-6b39-000000000a3f-0-node"
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-d7cb-6b39-0000000008fb",
                        "name": "prepare-workspace-git",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_2/cc-github.bmwgroup.net/codecraft-oss/zuul-jobs/roles/prepare-workspace-git"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:40:54.995705Z",
                            "start": "2024-04-21T00:40:54.075831Z"
                        },
                        "id": "ce4df5fb-964c-d7cb-6b39-000000000a3f",
                        "name": "Synchronize cc-github.bmwgroup.net/swh/ddad-domains-fasinfo"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "command",
                            "attempts": 1,
                            "changed": true,
                            "cmd": [
                                "git",
                                "push",
                                "--quiet",
                                "--mirror",
                                "git+ssh://zuul@10.31.118.224:22//home/zuul/src/cc-github.bmwgroup.net/swh/ddad-domains-generic"
                            ],
                            "delta": "0:00:00.427569",
                            "end": "2024-04-21 00:40:55.905518",
                            "invocation": {
                                "module_args": {
                                    "_raw_params": "  git push --quiet --mirror git+ssh://zuul@10.31.118.224:22//home/zuul/src/cc-github.bmwgroup.net/swh/ddad-domains-generic\n",
                                    "_uses_shell": false,
                                    "argv": null,
                                    "chdir": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/work/src/cc-github.bmwgroup.net/swh/ddad-domains-generic",
                                    "creates": null,
                                    "executable": null,
                                    "removes": null,
                                    "stdin": null,
                                    "stdin_add_newline": true,
                                    "strip_empty_ends": true,
                                    "warn": false,
                                    "zuul_ansible_split_streams": false,
                                    "zuul_log_id": "ce4df5fb-964c-d7cb-6b39-000000000a43-0-node"
                                }
                            },
                            "msg": "",
                            "rc": 0,
                            "start": "2024-04-21 00:40:55.477949",
                            "stderr": "",
                            "stderr_lines": [],
                            "stdout": "",
                            "stdout_lines": [],
                            "zuul_log_id": "ce4df5fb-964c-d7cb-6b39-000000000a43-0-node"
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-d7cb-6b39-0000000008fb",
                        "name": "prepare-workspace-git",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_2/cc-github.bmwgroup.net/codecraft-oss/zuul-jobs/roles/prepare-workspace-git"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:40:55.965040Z",
                            "start": "2024-04-21T00:40:55.011784Z"
                        },
                        "id": "ce4df5fb-964c-d7cb-6b39-000000000a43",
                        "name": "Synchronize cc-github.bmwgroup.net/swh/ddad-domains-generic"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "command",
                            "attempts": 1,
                            "changed": true,
                            "cmd": [
                                "git",
                                "push",
                                "--quiet",
                                "--mirror",
                                "git+ssh://zuul@10.31.118.224:22//home/zuul/src/cc-github.bmwgroup.net/swh/ddad-ecu-ipnext"
                            ],
                            "delta": "0:00:00.956327",
                            "end": "2024-04-21 00:40:57.360807",
                            "invocation": {
                                "module_args": {
                                    "_raw_params": "  git push --quiet --mirror git+ssh://zuul@10.31.118.224:22//home/zuul/src/cc-github.bmwgroup.net/swh/ddad-ecu-ipnext\n",
                                    "_uses_shell": false,
                                    "argv": null,
                                    "chdir": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/work/src/cc-github.bmwgroup.net/swh/ddad-ecu-ipnext",
                                    "creates": null,
                                    "executable": null,
                                    "removes": null,
                                    "stdin": null,
                                    "stdin_add_newline": true,
                                    "strip_empty_ends": true,
                                    "warn": false,
                                    "zuul_ansible_split_streams": false,
                                    "zuul_log_id": "ce4df5fb-964c-d7cb-6b39-000000000a47-0-node"
                                }
                            },
                            "msg": "",
                            "rc": 0,
                            "start": "2024-04-21 00:40:56.404480",
                            "stderr": "",
                            "stderr_lines": [],
                            "stdout": "",
                            "stdout_lines": [],
                            "zuul_log_id": "ce4df5fb-964c-d7cb-6b39-000000000a47-0-node"
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-d7cb-6b39-0000000008fb",
                        "name": "prepare-workspace-git",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_2/cc-github.bmwgroup.net/codecraft-oss/zuul-jobs/roles/prepare-workspace-git"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:40:57.440629Z",
                            "start": "2024-04-21T00:40:55.977094Z"
                        },
                        "id": "ce4df5fb-964c-d7cb-6b39-000000000a47",
                        "name": "Synchronize cc-github.bmwgroup.net/swh/ddad-ecu-ipnext"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "command",
                            "attempts": 1,
                            "changed": true,
                            "cmd": [
                                "git",
                                "push",
                                "--quiet",
                                "--mirror",
                                "git+ssh://zuul@10.31.118.224:22//home/zuul/src/cc-github.bmwgroup.net/swh/ddad_ci_config"
                            ],
                            "delta": "0:00:00.844535",
                            "end": "2024-04-21 00:40:58.744927",
                            "invocation": {
                                "module_args": {
                                    "_raw_params": "  git push --quiet --mirror git+ssh://zuul@10.31.118.224:22//home/zuul/src/cc-github.bmwgroup.net/swh/ddad_ci_config\n",
                                    "_uses_shell": false,
                                    "argv": null,
                                    "chdir": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/work/src/cc-github.bmwgroup.net/swh/ddad_ci_config",
                                    "creates": null,
                                    "executable": null,
                                    "removes": null,
                                    "stdin": null,
                                    "stdin_add_newline": true,
                                    "strip_empty_ends": true,
                                    "warn": false,
                                    "zuul_ansible_split_streams": false,
                                    "zuul_log_id": "ce4df5fb-964c-d7cb-6b39-000000000a4b-0-node"
                                }
                            },
                            "msg": "",
                            "rc": 0,
                            "start": "2024-04-21 00:40:57.900392",
                            "stderr": "",
                            "stderr_lines": [],
                            "stdout": "",
                            "stdout_lines": [],
                            "zuul_log_id": "ce4df5fb-964c-d7cb-6b39-000000000a4b-0-node"
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-d7cb-6b39-0000000008fb",
                        "name": "prepare-workspace-git",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_2/cc-github.bmwgroup.net/codecraft-oss/zuul-jobs/roles/prepare-workspace-git"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:40:58.812569Z",
                            "start": "2024-04-21T00:40:57.457344Z"
                        },
                        "id": "ce4df5fb-964c-d7cb-6b39-000000000a4b",
                        "name": "Synchronize cc-github.bmwgroup.net/swh/ddad_ci_config"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "command",
                            "attempts": 1,
                            "changed": true,
                            "cmd": [
                                "git",
                                "push",
                                "--quiet",
                                "--mirror",
                                "git+ssh://zuul@10.31.118.224:22//home/zuul/src/cc-github.bmwgroup.net/swh/ddad_platform"
                            ],
                            "delta": "0:00:01.164034",
                            "end": "2024-04-21 00:41:00.400671",
                            "invocation": {
                                "module_args": {
                                    "_raw_params": "  git push --quiet --mirror git+ssh://zuul@10.31.118.224:22//home/zuul/src/cc-github.bmwgroup.net/swh/ddad_platform\n",
                                    "_uses_shell": false,
                                    "argv": null,
                                    "chdir": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/work/src/cc-github.bmwgroup.net/swh/ddad_platform",
                                    "creates": null,
                                    "executable": null,
                                    "removes": null,
                                    "stdin": null,
                                    "stdin_add_newline": true,
                                    "strip_empty_ends": true,
                                    "warn": false,
                                    "zuul_ansible_split_streams": false,
                                    "zuul_log_id": "ce4df5fb-964c-d7cb-6b39-000000000a4f-0-node"
                                }
                            },
                            "msg": "",
                            "rc": 0,
                            "start": "2024-04-21 00:40:59.236637",
                            "stderr": "",
                            "stderr_lines": [],
                            "stdout": "",
                            "stdout_lines": [],
                            "zuul_log_id": "ce4df5fb-964c-d7cb-6b39-000000000a4f-0-node"
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-d7cb-6b39-0000000008fb",
                        "name": "prepare-workspace-git",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_2/cc-github.bmwgroup.net/codecraft-oss/zuul-jobs/roles/prepare-workspace-git"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:41:00.467144Z",
                            "start": "2024-04-21T00:40:58.827835Z"
                        },
                        "id": "ce4df5fb-964c-d7cb-6b39-000000000a4f",
                        "name": "Synchronize cc-github.bmwgroup.net/swh/ddad_platform"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "command",
                            "attempts": 1,
                            "changed": true,
                            "cmd": [
                                "git",
                                "push",
                                "--quiet",
                                "--mirror",
                                "git+ssh://zuul@10.31.118.224:22//home/zuul/src/cc-github.bmwgroup.net/swh/domain-tools"
                            ],
                            "delta": "0:00:00.561716",
                            "end": "2024-04-21 00:41:01.500831",
                            "invocation": {
                                "module_args": {
                                    "_raw_params": "  git push --quiet --mirror git+ssh://zuul@10.31.118.224:22//home/zuul/src/cc-github.bmwgroup.net/swh/domain-tools\n",
                                    "_uses_shell": false,
                                    "argv": null,
                                    "chdir": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/work/src/cc-github.bmwgroup.net/swh/domain-tools",
                                    "creates": null,
                                    "executable": null,
                                    "removes": null,
                                    "stdin": null,
                                    "stdin_add_newline": true,
                                    "strip_empty_ends": true,
                                    "warn": false,
                                    "zuul_ansible_split_streams": false,
                                    "zuul_log_id": "ce4df5fb-964c-d7cb-6b39-000000000a53-0-node"
                                }
                            },
                            "msg": "",
                            "rc": 0,
                            "start": "2024-04-21 00:41:00.939115",
                            "stderr": "",
                            "stderr_lines": [],
                            "stdout": "",
                            "stdout_lines": [],
                            "zuul_log_id": "ce4df5fb-964c-d7cb-6b39-000000000a53-0-node"
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-d7cb-6b39-0000000008fb",
                        "name": "prepare-workspace-git",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_2/cc-github.bmwgroup.net/codecraft-oss/zuul-jobs/roles/prepare-workspace-git"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:41:01.573708Z",
                            "start": "2024-04-21T00:41:00.483232Z"
                        },
                        "id": "ce4df5fb-964c-d7cb-6b39-000000000a53",
                        "name": "Synchronize cc-github.bmwgroup.net/swh/domain-tools"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "command",
                            "attempts": 1,
                            "changed": true,
                            "cmd": [
                                "git",
                                "push",
                                "--quiet",
                                "--mirror",
                                "git+ssh://zuul@10.31.118.224:22//home/zuul/src/cc-github.bmwgroup.net/swh/ecu_xpad_sc_mpad"
                            ],
                            "delta": "0:00:00.520791",
                            "end": "2024-04-21 00:41:02.530199",
                            "invocation": {
                                "module_args": {
                                    "_raw_params": "  git push --quiet --mirror git+ssh://zuul@10.31.118.224:22//home/zuul/src/cc-github.bmwgroup.net/swh/ecu_xpad_sc_mpad\n",
                                    "_uses_shell": false,
                                    "argv": null,
                                    "chdir": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/work/src/cc-github.bmwgroup.net/swh/ecu_xpad_sc_mpad",
                                    "creates": null,
                                    "executable": null,
                                    "removes": null,
                                    "stdin": null,
                                    "stdin_add_newline": true,
                                    "strip_empty_ends": true,
                                    "warn": false,
                                    "zuul_ansible_split_streams": false,
                                    "zuul_log_id": "ce4df5fb-964c-d7cb-6b39-000000000a57-0-node"
                                }
                            },
                            "msg": "",
                            "rc": 0,
                            "start": "2024-04-21 00:41:02.009408",
                            "stderr": "",
                            "stderr_lines": [],
                            "stdout": "",
                            "stdout_lines": [],
                            "zuul_log_id": "ce4df5fb-964c-d7cb-6b39-000000000a57-0-node"
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-d7cb-6b39-0000000008fb",
                        "name": "prepare-workspace-git",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_2/cc-github.bmwgroup.net/codecraft-oss/zuul-jobs/roles/prepare-workspace-git"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:41:02.584780Z",
                            "start": "2024-04-21T00:41:01.589970Z"
                        },
                        "id": "ce4df5fb-964c-d7cb-6b39-000000000a57",
                        "name": "Synchronize cc-github.bmwgroup.net/swh/ecu_xpad_sc_mpad"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "command",
                            "attempts": 1,
                            "changed": true,
                            "cmd": [
                                "git",
                                "push",
                                "--quiet",
                                "--mirror",
                                "git+ssh://zuul@10.31.118.224:22//home/zuul/src/cc-github.bmwgroup.net/swh/foresight"
                            ],
                            "delta": "0:00:00.735632",
                            "end": "2024-04-21 00:41:03.840288",
                            "invocation": {
                                "module_args": {
                                    "_raw_params": "  git push --quiet --mirror git+ssh://zuul@10.31.118.224:22//home/zuul/src/cc-github.bmwgroup.net/swh/foresight\n",
                                    "_uses_shell": false,
                                    "argv": null,
                                    "chdir": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/work/src/cc-github.bmwgroup.net/swh/foresight",
                                    "creates": null,
                                    "executable": null,
                                    "removes": null,
                                    "stdin": null,
                                    "stdin_add_newline": true,
                                    "strip_empty_ends": true,
                                    "warn": false,
                                    "zuul_ansible_split_streams": false,
                                    "zuul_log_id": "ce4df5fb-964c-d7cb-6b39-000000000a5b-0-node"
                                }
                            },
                            "msg": "",
                            "rc": 0,
                            "start": "2024-04-21 00:41:03.104656",
                            "stderr": "",
                            "stderr_lines": [],
                            "stdout": "",
                            "stdout_lines": [],
                            "zuul_log_id": "ce4df5fb-964c-d7cb-6b39-000000000a5b-0-node"
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-d7cb-6b39-0000000008fb",
                        "name": "prepare-workspace-git",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_2/cc-github.bmwgroup.net/codecraft-oss/zuul-jobs/roles/prepare-workspace-git"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:41:03.970809Z",
                            "start": "2024-04-21T00:41:02.598357Z"
                        },
                        "id": "ce4df5fb-964c-d7cb-6b39-000000000a5b",
                        "name": "Synchronize cc-github.bmwgroup.net/swh/foresight"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "command",
                            "attempts": 1,
                            "changed": true,
                            "cmd": [
                                "git",
                                "push",
                                "--quiet",
                                "--mirror",
                                "git+ssh://zuul@10.31.118.224:22//home/zuul/src/cc-github.bmwgroup.net/swh/franky_ib"
                            ],
                            "delta": "0:00:00.415451",
                            "end": "2024-04-21 00:41:04.973979",
                            "invocation": {
                                "module_args": {
                                    "_raw_params": "  git push --quiet --mirror git+ssh://zuul@10.31.118.224:22//home/zuul/src/cc-github.bmwgroup.net/swh/franky_ib\n",
                                    "_uses_shell": false,
                                    "argv": null,
                                    "chdir": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/work/src/cc-github.bmwgroup.net/swh/franky_ib",
                                    "creates": null,
                                    "executable": null,
                                    "removes": null,
                                    "stdin": null,
                                    "stdin_add_newline": true,
                                    "strip_empty_ends": true,
                                    "warn": false,
                                    "zuul_ansible_split_streams": false,
                                    "zuul_log_id": "ce4df5fb-964c-d7cb-6b39-000000000a5f-0-node"
                                }
                            },
                            "msg": "",
                            "rc": 0,
                            "start": "2024-04-21 00:41:04.558528",
                            "stderr": "",
                            "stderr_lines": [],
                            "stdout": "",
                            "stdout_lines": [],
                            "zuul_log_id": "ce4df5fb-964c-d7cb-6b39-000000000a5f-0-node"
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-d7cb-6b39-0000000008fb",
                        "name": "prepare-workspace-git",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_2/cc-github.bmwgroup.net/codecraft-oss/zuul-jobs/roles/prepare-workspace-git"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:41:05.129134Z",
                            "start": "2024-04-21T00:41:04.002596Z"
                        },
                        "id": "ce4df5fb-964c-d7cb-6b39-000000000a5f",
                        "name": "Synchronize cc-github.bmwgroup.net/swh/franky_ib"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "command",
                            "attempts": 1,
                            "changed": true,
                            "cmd": [
                                "git",
                                "push",
                                "--quiet",
                                "--mirror",
                                "git+ssh://zuul@10.31.118.224:22//home/zuul/src/cc-github.bmwgroup.net/swh/gnss_common"
                            ],
                            "delta": "0:00:00.518257",
                            "end": "2024-04-21 00:41:06.123500",
                            "invocation": {
                                "module_args": {
                                    "_raw_params": "  git push --quiet --mirror git+ssh://zuul@10.31.118.224:22//home/zuul/src/cc-github.bmwgroup.net/swh/gnss_common\n",
                                    "_uses_shell": false,
                                    "argv": null,
                                    "chdir": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/work/src/cc-github.bmwgroup.net/swh/gnss_common",
                                    "creates": null,
                                    "executable": null,
                                    "removes": null,
                                    "stdin": null,
                                    "stdin_add_newline": true,
                                    "strip_empty_ends": true,
                                    "warn": false,
                                    "zuul_ansible_split_streams": false,
                                    "zuul_log_id": "ce4df5fb-964c-d7cb-6b39-000000000a63-0-node"
                                }
                            },
                            "msg": "",
                            "rc": 0,
                            "start": "2024-04-21 00:41:05.605243",
                            "stderr": "",
                            "stderr_lines": [],
                            "stdout": "",
                            "stdout_lines": [],
                            "zuul_log_id": "ce4df5fb-964c-d7cb-6b39-000000000a63-0-node"
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-d7cb-6b39-0000000008fb",
                        "name": "prepare-workspace-git",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_2/cc-github.bmwgroup.net/codecraft-oss/zuul-jobs/roles/prepare-workspace-git"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:41:06.190587Z",
                            "start": "2024-04-21T00:41:05.143320Z"
                        },
                        "id": "ce4df5fb-964c-d7cb-6b39-000000000a63",
                        "name": "Synchronize cc-github.bmwgroup.net/swh/gnss_common"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "command",
                            "attempts": 1,
                            "changed": true,
                            "cmd": [
                                "git",
                                "push",
                                "--quiet",
                                "--mirror",
                                "git+ssh://zuul@10.31.118.224:22//home/zuul/src/cc-github.bmwgroup.net/swh/ib-vip"
                            ],
                            "delta": "0:00:00.482457",
                            "end": "2024-04-21 00:41:07.113195",
                            "invocation": {
                                "module_args": {
                                    "_raw_params": "  git push --quiet --mirror git+ssh://zuul@10.31.118.224:22//home/zuul/src/cc-github.bmwgroup.net/swh/ib-vip\n",
                                    "_uses_shell": false,
                                    "argv": null,
                                    "chdir": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/work/src/cc-github.bmwgroup.net/swh/ib-vip",
                                    "creates": null,
                                    "executable": null,
                                    "removes": null,
                                    "stdin": null,
                                    "stdin_add_newline": true,
                                    "strip_empty_ends": true,
                                    "warn": false,
                                    "zuul_ansible_split_streams": false,
                                    "zuul_log_id": "ce4df5fb-964c-d7cb-6b39-000000000a67-0-node"
                                }
                            },
                            "msg": "",
                            "rc": 0,
                            "start": "2024-04-21 00:41:06.630738",
                            "stderr": "",
                            "stderr_lines": [],
                            "stdout": "",
                            "stdout_lines": [],
                            "zuul_log_id": "ce4df5fb-964c-d7cb-6b39-000000000a67-0-node"
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-d7cb-6b39-0000000008fb",
                        "name": "prepare-workspace-git",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_2/cc-github.bmwgroup.net/codecraft-oss/zuul-jobs/roles/prepare-workspace-git"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:41:07.178523Z",
                            "start": "2024-04-21T00:41:06.203683Z"
                        },
                        "id": "ce4df5fb-964c-d7cb-6b39-000000000a67",
                        "name": "Synchronize cc-github.bmwgroup.net/swh/ib-vip"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "command",
                            "attempts": 1,
                            "changed": true,
                            "cmd": [
                                "git",
                                "push",
                                "--quiet",
                                "--mirror",
                                "git+ssh://zuul@10.31.118.224:22//home/zuul/src/cc-github.bmwgroup.net/swh/ltf-dlt"
                            ],
                            "delta": "0:00:00.516643",
                            "end": "2024-04-21 00:41:08.148070",
                            "invocation": {
                                "module_args": {
                                    "_raw_params": "  git push --quiet --mirror git+ssh://zuul@10.31.118.224:22//home/zuul/src/cc-github.bmwgroup.net/swh/ltf-dlt\n",
                                    "_uses_shell": false,
                                    "argv": null,
                                    "chdir": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/work/src/cc-github.bmwgroup.net/swh/ltf-dlt",
                                    "creates": null,
                                    "executable": null,
                                    "removes": null,
                                    "stdin": null,
                                    "stdin_add_newline": true,
                                    "strip_empty_ends": true,
                                    "warn": false,
                                    "zuul_ansible_split_streams": false,
                                    "zuul_log_id": "ce4df5fb-964c-d7cb-6b39-000000000a6b-0-node"
                                }
                            },
                            "msg": "",
                            "rc": 0,
                            "start": "2024-04-21 00:41:07.631427",
                            "stderr": "",
                            "stderr_lines": [],
                            "stdout": "",
                            "stdout_lines": [],
                            "zuul_log_id": "ce4df5fb-964c-d7cb-6b39-000000000a6b-0-node"
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-d7cb-6b39-0000000008fb",
                        "name": "prepare-workspace-git",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_2/cc-github.bmwgroup.net/codecraft-oss/zuul-jobs/roles/prepare-workspace-git"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:41:08.202180Z",
                            "start": "2024-04-21T00:41:07.194078Z"
                        },
                        "id": "ce4df5fb-964c-d7cb-6b39-000000000a6b",
                        "name": "Synchronize cc-github.bmwgroup.net/swh/ltf-dlt"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "command",
                            "attempts": 1,
                            "changed": true,
                            "cmd": [
                                "git",
                                "push",
                                "--quiet",
                                "--mirror",
                                "git+ssh://zuul@10.31.118.224:22//home/zuul/src/cc-github.bmwgroup.net/swh/orion"
                            ],
                            "delta": "0:00:01.216221",
                            "end": "2024-04-21 00:41:09.855882",
                            "invocation": {
                                "module_args": {
                                    "_raw_params": "  git push --quiet --mirror git+ssh://zuul@10.31.118.224:22//home/zuul/src/cc-github.bmwgroup.net/swh/orion\n",
                                    "_uses_shell": false,
                                    "argv": null,
                                    "chdir": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/work/src/cc-github.bmwgroup.net/swh/orion",
                                    "creates": null,
                                    "executable": null,
                                    "removes": null,
                                    "stdin": null,
                                    "stdin_add_newline": true,
                                    "strip_empty_ends": true,
                                    "warn": false,
                                    "zuul_ansible_split_streams": false,
                                    "zuul_log_id": "ce4df5fb-964c-d7cb-6b39-000000000a6f-0-node"
                                }
                            },
                            "msg": "",
                            "rc": 0,
                            "start": "2024-04-21 00:41:08.639661",
                            "stderr": "",
                            "stderr_lines": [],
                            "stdout": "",
                            "stdout_lines": [],
                            "zuul_log_id": "ce4df5fb-964c-d7cb-6b39-000000000a6f-0-node"
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-d7cb-6b39-0000000008fb",
                        "name": "prepare-workspace-git",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_2/cc-github.bmwgroup.net/codecraft-oss/zuul-jobs/roles/prepare-workspace-git"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:41:09.907843Z",
                            "start": "2024-04-21T00:41:08.215375Z"
                        },
                        "id": "ce4df5fb-964c-d7cb-6b39-000000000a6f",
                        "name": "Synchronize cc-github.bmwgroup.net/swh/orion"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "command",
                            "attempts": 1,
                            "changed": true,
                            "cmd": [
                                "git",
                                "push",
                                "--quiet",
                                "--mirror",
                                "git+ssh://zuul@10.31.118.224:22//home/zuul/src/cc-github.bmwgroup.net/swh/orion_aeb_temp"
                            ],
                            "delta": "0:00:00.502557",
                            "end": "2024-04-21 00:41:10.837454",
                            "invocation": {
                                "module_args": {
                                    "_raw_params": "  git push --quiet --mirror git+ssh://zuul@10.31.118.224:22//home/zuul/src/cc-github.bmwgroup.net/swh/orion_aeb_temp\n",
                                    "_uses_shell": false,
                                    "argv": null,
                                    "chdir": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/work/src/cc-github.bmwgroup.net/swh/orion_aeb_temp",
                                    "creates": null,
                                    "executable": null,
                                    "removes": null,
                                    "stdin": null,
                                    "stdin_add_newline": true,
                                    "strip_empty_ends": true,
                                    "warn": false,
                                    "zuul_ansible_split_streams": false,
                                    "zuul_log_id": "ce4df5fb-964c-d7cb-6b39-000000000a73-0-node"
                                }
                            },
                            "msg": "",
                            "rc": 0,
                            "start": "2024-04-21 00:41:10.334897",
                            "stderr": "",
                            "stderr_lines": [],
                            "stdout": "",
                            "stdout_lines": [],
                            "zuul_log_id": "ce4df5fb-964c-d7cb-6b39-000000000a73-0-node"
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-d7cb-6b39-0000000008fb",
                        "name": "prepare-workspace-git",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_2/cc-github.bmwgroup.net/codecraft-oss/zuul-jobs/roles/prepare-workspace-git"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:41:10.915235Z",
                            "start": "2024-04-21T00:41:09.917310Z"
                        },
                        "id": "ce4df5fb-964c-d7cb-6b39-000000000a73",
                        "name": "Synchronize cc-github.bmwgroup.net/swh/orion_aeb_temp"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "command",
                            "attempts": 1,
                            "changed": true,
                            "cmd": [
                                "git",
                                "push",
                                "--quiet",
                                "--mirror",
                                "git+ssh://zuul@10.31.118.224:22//home/zuul/src/cc-github.bmwgroup.net/swh/system_description"
                            ],
                            "delta": "0:00:00.448163",
                            "end": "2024-04-21 00:41:11.776891",
                            "invocation": {
                                "module_args": {
                                    "_raw_params": "  git push --quiet --mirror git+ssh://zuul@10.31.118.224:22//home/zuul/src/cc-github.bmwgroup.net/swh/system_description\n",
                                    "_uses_shell": false,
                                    "argv": null,
                                    "chdir": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/work/src/cc-github.bmwgroup.net/swh/system_description",
                                    "creates": null,
                                    "executable": null,
                                    "removes": null,
                                    "stdin": null,
                                    "stdin_add_newline": true,
                                    "strip_empty_ends": true,
                                    "warn": false,
                                    "zuul_ansible_split_streams": false,
                                    "zuul_log_id": "ce4df5fb-964c-d7cb-6b39-000000000a77-0-node"
                                }
                            },
                            "msg": "",
                            "rc": 0,
                            "start": "2024-04-21 00:41:11.328728",
                            "stderr": "",
                            "stderr_lines": [],
                            "stdout": "",
                            "stdout_lines": [],
                            "zuul_log_id": "ce4df5fb-964c-d7cb-6b39-000000000a77-0-node"
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-d7cb-6b39-0000000008fb",
                        "name": "prepare-workspace-git",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_2/cc-github.bmwgroup.net/codecraft-oss/zuul-jobs/roles/prepare-workspace-git"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:41:11.863579Z",
                            "start": "2024-04-21T00:41:10.933426Z"
                        },
                        "id": "ce4df5fb-964c-d7cb-6b39-000000000a77",
                        "name": "Synchronize cc-github.bmwgroup.net/swh/system_description"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "command",
                            "attempts": 1,
                            "changed": true,
                            "cmd": [
                                "git",
                                "push",
                                "--quiet",
                                "--mirror",
                                "git+ssh://zuul@10.31.118.224:22//home/zuul/src/cc-github.bmwgroup.net/swh/ufm"
                            ],
                            "delta": "0:00:00.444525",
                            "end": "2024-04-21 00:41:12.810087",
                            "invocation": {
                                "module_args": {
                                    "_raw_params": "  git push --quiet --mirror git+ssh://zuul@10.31.118.224:22//home/zuul/src/cc-github.bmwgroup.net/swh/ufm\n",
                                    "_uses_shell": false,
                                    "argv": null,
                                    "chdir": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/work/src/cc-github.bmwgroup.net/swh/ufm",
                                    "creates": null,
                                    "executable": null,
                                    "removes": null,
                                    "stdin": null,
                                    "stdin_add_newline": true,
                                    "strip_empty_ends": true,
                                    "warn": false,
                                    "zuul_ansible_split_streams": false,
                                    "zuul_log_id": "ce4df5fb-964c-d7cb-6b39-000000000a7b-0-node"
                                }
                            },
                            "msg": "",
                            "rc": 0,
                            "start": "2024-04-21 00:41:12.365562",
                            "stderr": "",
                            "stderr_lines": [],
                            "stdout": "",
                            "stdout_lines": [],
                            "zuul_log_id": "ce4df5fb-964c-d7cb-6b39-000000000a7b-0-node"
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-d7cb-6b39-0000000008fb",
                        "name": "prepare-workspace-git",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_2/cc-github.bmwgroup.net/codecraft-oss/zuul-jobs/roles/prepare-workspace-git"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:41:12.883978Z",
                            "start": "2024-04-21T00:41:11.873558Z"
                        },
                        "id": "ce4df5fb-964c-d7cb-6b39-000000000a7b",
                        "name": "Synchronize cc-github.bmwgroup.net/swh/ufm"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "command",
                            "attempts": 1,
                            "changed": true,
                            "cmd": [
                                "git",
                                "push",
                                "--quiet",
                                "--mirror",
                                "git+ssh://zuul@10.31.118.224:22//home/zuul/src/cc-github.bmwgroup.net/swh/xpad-ara"
                            ],
                            "delta": "0:00:00.393124",
                            "end": "2024-04-21 00:41:13.759425",
                            "invocation": {
                                "module_args": {
                                    "_raw_params": "  git push --quiet --mirror git+ssh://zuul@10.31.118.224:22//home/zuul/src/cc-github.bmwgroup.net/swh/xpad-ara\n",
                                    "_uses_shell": false,
                                    "argv": null,
                                    "chdir": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/work/src/cc-github.bmwgroup.net/swh/xpad-ara",
                                    "creates": null,
                                    "executable": null,
                                    "removes": null,
                                    "stdin": null,
                                    "stdin_add_newline": true,
                                    "strip_empty_ends": true,
                                    "warn": false,
                                    "zuul_ansible_split_streams": false,
                                    "zuul_log_id": "ce4df5fb-964c-d7cb-6b39-000000000a7f-0-node"
                                }
                            },
                            "msg": "",
                            "rc": 0,
                            "start": "2024-04-21 00:41:13.366301",
                            "stderr": "",
                            "stderr_lines": [],
                            "stdout": "",
                            "stdout_lines": [],
                            "zuul_log_id": "ce4df5fb-964c-d7cb-6b39-000000000a7f-0-node"
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-d7cb-6b39-0000000008fb",
                        "name": "prepare-workspace-git",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_2/cc-github.bmwgroup.net/codecraft-oss/zuul-jobs/roles/prepare-workspace-git"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:41:13.809709Z",
                            "start": "2024-04-21T00:41:12.898934Z"
                        },
                        "id": "ce4df5fb-964c-d7cb-6b39-000000000a7f",
                        "name": "Synchronize cc-github.bmwgroup.net/swh/xpad-ara"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "command",
                            "attempts": 1,
                            "changed": true,
                            "cmd": [
                                "git",
                                "push",
                                "--quiet",
                                "--mirror",
                                "git+ssh://zuul@10.31.118.224:22//home/zuul/src/cc-github.bmwgroup.net/swh/xpad-shared"
                            ],
                            "delta": "0:00:01.100032",
                            "end": "2024-04-21 00:41:15.369911",
                            "invocation": {
                                "module_args": {
                                    "_raw_params": "  git push --quiet --mirror git+ssh://zuul@10.31.118.224:22//home/zuul/src/cc-github.bmwgroup.net/swh/xpad-shared\n",
                                    "_uses_shell": false,
                                    "argv": null,
                                    "chdir": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/work/src/cc-github.bmwgroup.net/swh/xpad-shared",
                                    "creates": null,
                                    "executable": null,
                                    "removes": null,
                                    "stdin": null,
                                    "stdin_add_newline": true,
                                    "strip_empty_ends": true,
                                    "warn": false,
                                    "zuul_ansible_split_streams": false,
                                    "zuul_log_id": "ce4df5fb-964c-d7cb-6b39-000000000a83-0-node"
                                }
                            },
                            "msg": "",
                            "rc": 0,
                            "start": "2024-04-21 00:41:14.269879",
                            "stderr": "",
                            "stderr_lines": [],
                            "stdout": "",
                            "stdout_lines": [],
                            "zuul_log_id": "ce4df5fb-964c-d7cb-6b39-000000000a83-0-node"
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-d7cb-6b39-0000000008fb",
                        "name": "prepare-workspace-git",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_2/cc-github.bmwgroup.net/codecraft-oss/zuul-jobs/roles/prepare-workspace-git"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:41:15.446194Z",
                            "start": "2024-04-21T00:41:13.819061Z"
                        },
                        "id": "ce4df5fb-964c-d7cb-6b39-000000000a83",
                        "name": "Synchronize cc-github.bmwgroup.net/swh/xpad-shared"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "command",
                            "attempts": 1,
                            "changed": true,
                            "cmd": [
                                "git",
                                "push",
                                "--quiet",
                                "--mirror",
                                "git+ssh://zuul@10.31.118.224:22//home/zuul/src/cc-github.bmwgroup.net/swh/xpad_xpc"
                            ],
                            "delta": "0:00:00.500635",
                            "end": "2024-04-21 00:41:16.355075",
                            "invocation": {
                                "module_args": {
                                    "_raw_params": "  git push --quiet --mirror git+ssh://zuul@10.31.118.224:22//home/zuul/src/cc-github.bmwgroup.net/swh/xpad_xpc\n",
                                    "_uses_shell": false,
                                    "argv": null,
                                    "chdir": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/work/src/cc-github.bmwgroup.net/swh/xpad_xpc",
                                    "creates": null,
                                    "executable": null,
                                    "removes": null,
                                    "stdin": null,
                                    "stdin_add_newline": true,
                                    "strip_empty_ends": true,
                                    "warn": false,
                                    "zuul_ansible_split_streams": false,
                                    "zuul_log_id": "ce4df5fb-964c-d7cb-6b39-000000000a87-0-node"
                                }
                            },
                            "msg": "",
                            "rc": 0,
                            "start": "2024-04-21 00:41:15.854440",
                            "stderr": "",
                            "stderr_lines": [],
                            "stdout": "",
                            "stdout_lines": [],
                            "zuul_log_id": "ce4df5fb-964c-d7cb-6b39-000000000a87-0-node"
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-d7cb-6b39-0000000008fb",
                        "name": "prepare-workspace-git",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_2/cc-github.bmwgroup.net/codecraft-oss/zuul-jobs/roles/prepare-workspace-git"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:41:16.420316Z",
                            "start": "2024-04-21T00:41:15.460646Z"
                        },
                        "id": "ce4df5fb-964c-d7cb-6b39-000000000a87",
                        "name": "Synchronize cc-github.bmwgroup.net/swh/xpad_xpc"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "command",
                            "attempts": 1,
                            "changed": true,
                            "cmd": [
                                "git",
                                "push",
                                "--quiet",
                                "--mirror",
                                "git+ssh://zuul@10.31.118.224:22//home/zuul/src/cc-github.bmwgroup.net/swh/zuul-trusted-ddad"
                            ],
                            "delta": "0:00:00.544803",
                            "end": "2024-04-21 00:41:17.456944",
                            "invocation": {
                                "module_args": {
                                    "_raw_params": "  git push --quiet --mirror git+ssh://zuul@10.31.118.224:22//home/zuul/src/cc-github.bmwgroup.net/swh/zuul-trusted-ddad\n",
                                    "_uses_shell": false,
                                    "argv": null,
                                    "chdir": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/work/src/cc-github.bmwgroup.net/swh/zuul-trusted-ddad",
                                    "creates": null,
                                    "executable": null,
                                    "removes": null,
                                    "stdin": null,
                                    "stdin_add_newline": true,
                                    "strip_empty_ends": true,
                                    "warn": false,
                                    "zuul_ansible_split_streams": false,
                                    "zuul_log_id": "ce4df5fb-964c-d7cb-6b39-000000000a8b-0-node"
                                }
                            },
                            "msg": "",
                            "rc": 0,
                            "start": "2024-04-21 00:41:16.912141",
                            "stderr": "",
                            "stderr_lines": [],
                            "stdout": "",
                            "stdout_lines": [],
                            "zuul_log_id": "ce4df5fb-964c-d7cb-6b39-000000000a8b-0-node"
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-d7cb-6b39-0000000008fb",
                        "name": "prepare-workspace-git",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_2/cc-github.bmwgroup.net/codecraft-oss/zuul-jobs/roles/prepare-workspace-git"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:41:17.523726Z",
                            "start": "2024-04-21T00:41:16.434912Z"
                        },
                        "id": "ce4df5fb-964c-d7cb-6b39-000000000a8b",
                        "name": "Synchronize cc-github.bmwgroup.net/swh/zuul-trusted-ddad"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "shell",
                            "changed": true,
                            "msg": "All items completed",
                            "results": [
                                {
                                    "ansible_loop_var": "zj_project",
                                    "changed": true,
                                    "cmd": "set -eu\n\n# Reset is needed because we pushed to a non-bare repo\ngit reset --hard\n# Clean is needed because we pushed to a non-bare repo\ngit clean -xdf\n# Undo the config setting we did above\ngit config --local --unset receive.denyCurrentBranch\n# checkout the branch matching the branch set up by the executor\ngit checkout --quiet master\n# put out a status line with the current HEAD\necho \"cc-github.bmwgroup.net/swh/adp checked out to:\"\ngit log --pretty=oneline  -1\n",
                                    "delta": "0:00:14.747701",
                                    "end": "2024-04-21 00:41:32.580564",
                                    "failed": false,
                                    "invocation": {
                                        "module_args": {
                                            "_raw_params": "set -eu\n\n# Reset is needed because we pushed to a non-bare repo\ngit reset --hard\n# Clean is needed because we pushed to a non-bare repo\ngit clean -xdf\n# Undo the config setting we did above\ngit config --local --unset receive.denyCurrentBranch\n# checkout the branch matching the branch set up by the executor\ngit checkout --quiet master\n# put out a status line with the current HEAD\necho \"cc-github.bmwgroup.net/swh/adp checked out to:\"\ngit log --pretty=oneline  -1\n",
                                            "_uses_shell": true,
                                            "argv": null,
                                            "chdir": "/home/zuul/src/cc-github.bmwgroup.net/swh/adp",
                                            "creates": null,
                                            "executable": null,
                                            "removes": null,
                                            "stdin": null,
                                            "stdin_add_newline": true,
                                            "strip_empty_ends": true,
                                            "warn": false,
                                            "zuul_ansible_split_streams": false,
                                            "zuul_log_id": "in-loop-ignore"
                                        }
                                    },
                                    "msg": "",
                                    "rc": 0,
                                    "start": "2024-04-21 00:41:17.832863",
                                    "stderr": "",
                                    "stderr_lines": [],
                                    "stdout": "Updating files:   7% (5656/80544)\rUpdating files:   8% (6444/80544)\rUpdating files:   9% (7249/80544)\rUpdating files:  10% (8055/80544)\rUpdating files:  11% (8860/80544)\rUpdating files:  12% (9666/80544)\rUpdating files:  13% (10471/80544)\rUpdating files:  14% (11277/80544)\rUpdating files:  15% (12082/80544)\rUpdating files:  16% (12888/80544)\rUpdating files:  17% (13693/80544)\rUpdating files:  18% (14498/80544)\rUpdating files:  19% (15304/80544)\rUpdating files:  19% (15465/80544)\rUpdating files:  20% (16109/80544)\rUpdating files:  21% (16915/80544)\rUpdating files:  22% (17720/80544)\rUpdating files:  23% (18526/80544)\rUpdating files:  24% (19331/80544)\rUpdating files:  25% (20136/80544)\rUpdating files:  26% (20942/80544)\rUpdating files:  27% (21747/80544)\rUpdating files:  28% (22553/80544)\rUpdating files:  29% (23358/80544)\rUpdating files:  30% (24164/80544)\rUpdating files:  31% (24969/80544)\rUpdating files:  32% (25775/80544)\rUpdating files:  33% (26580/80544)\rUpdating files:  34% (27385/80544)\rUpdating files:  35% (28191/80544)\rUpdating files:  36% (28996/80544)\rUpdating files:  36% (28998/80544)\rUpdating files:  37% (29802/80544)\rUpdating files:  38% (30607/80544)\rUpdating files:  39% (31413/80544)\rUpdating files:  40% (32218/80544)\rUpdating files:  41% (33024/80544)\rUpdating files:  42% (33829/80544)\rUpdating files:  43% (34634/80544)\rUpdating files:  44% (35440/80544)\rUpdating files:  45% (36245/80544)\rUpdating files:  46% (37051/80544)\rUpdating files:  47% (37856/80544)\rUpdating files:  48% (38662/80544)\rUpdating files:  49% (39467/80544)\rUpdating files:  49% (40148/80544)\rUpdating files:  50% (40272/80544)\rUpdating files:  51% (41078/80544)\rUpdating files:  52% (41883/80544)\rUpdating files:  53% (42689/80544)\rUpdating files:  54% (43494/80544)\rUpdating files:  55% (44300/80544)\rUpdating files:  56% (45105/80544)\rUpdating files:  57% (45911/80544)\rUpdating files:  58% (46716/80544)\rUpdating files:  59% (47521/80544)\rUpdating files:  60% (48327/80544)\rUpdating files:  60% (48600/80544)\rUpdating files:  61% (49132/80544)\rUpdating files:  62% (49938/80544)\rUpdating files:  63% (50743/80544)\rUpdating files:  64% (51549/80544)\rUpdating files:  65% (52354/80544)\rUpdating files:  66% (53160/80544)\rUpdating files:  67% (53965/80544)\rUpdating files:  68% (54770/80544)\rUpdating files:  69% (55576/80544)\rUpdating files:  69% (56287/80544)\rUpdating files:  70% (56381/80544)\rUpdating files:  71% (57187/80544)\rUpdating files:  72% (57992/80544)\rUpdating files:  73% (58798/80544)\rUpdating files:  74% (59603/80544)\rUpdating files:  75% (60408/80544)\rUpdating files:  76% (61214/80544)\rUpdating files:  77% (62019/80544)\rUpdating files:  78% (62825/80544)\rUpdating files:  78% (63585/80544)\rUpdating files:  79% (63630/80544)\rUpdating files:  80% (64436/80544)\rUpdating files:  81% (65241/80544)\rUpdating files:  82% (66047/80544)\rUpdating files:  83% (66852/80544)\rUpdating files:  84% (67657/80544)\rUpdating files:  85% (68463/80544)\rUpdating files:  85% (69006/80544)\rUpdating files:  86% (69268/80544)\rUpdating files:  87% (70074/80544)\rUpdating files:  88% (70879/80544)\rUpdating files:  89% (71685/80544)\rUpdating files:  90% (72490/80544)\rUpdating files:  91% (73296/80544)\rUpdating files:  92% (74101/80544)\rUpdating files:  93% (74906/80544)\rUpdating files:  94% (75712/80544)\rUpdating files:  94% (75871/80544)\rUpdating files:  95% (76517/80544)\rUpdating files:  96% (77323/80544)\rUpdating files:  97% (78128/80544)\rUpdating files:  98% (78934/80544)\rUpdating files:  99% (79739/80544)\rUpdating files:  99% (79877/80544)\rUpdating files:  99% (79886/80544)\rUpdating files:  99% (79950/80544)\rUpdating files: 100% (80544/80544)\rUpdating files: 100% (80544/80544), done.\nHEAD is now at 8d83dea1d58b Merge pull request #167730 from swh/mm/use_ros_without_aliases\ncc-github.bmwgroup.net/swh/adp checked out to:\n8d83dea1d58bef901e97793e1c34ad57986fada1 Merge pull request #167730 from swh/mm/use_ros_without_aliases",
                                    "stdout_lines": [
                                        "Updating files:   7% (5656/80544)",
                                        "Updating files:   8% (6444/80544)",
                                        "Updating files:   9% (7249/80544)",
                                        "Updating files:  10% (8055/80544)",
                                        "Updating files:  11% (8860/80544)",
                                        "Updating files:  12% (9666/80544)",
                                        "Updating files:  13% (10471/80544)",
                                        "Updating files:  14% (11277/80544)",
                                        "Updating files:  15% (12082/80544)",
                                        "Updating files:  16% (12888/80544)",
                                        "Updating files:  17% (13693/80544)",
                                        "Updating files:  18% (14498/80544)",
                                        "Updating files:  19% (15304/80544)",
                                        "Updating files:  19% (15465/80544)",
                                        "Updating files:  20% (16109/80544)",
                                        "Updating files:  21% (16915/80544)",
                                        "Updating files:  22% (17720/80544)",
                                        "Updating files:  23% (18526/80544)",
                                        "Updating files:  24% (19331/80544)",
                                        "Updating files:  25% (20136/80544)",
                                        "Updating files:  26% (20942/80544)",
                                        "Updating files:  27% (21747/80544)",
                                        "Updating files:  28% (22553/80544)",
                                        "Updating files:  29% (23358/80544)",
                                        "Updating files:  30% (24164/80544)",
                                        "Updating files:  31% (24969/80544)",
                                        "Updating files:  32% (25775/80544)",
                                        "Updating files:  33% (26580/80544)",
                                        "Updating files:  34% (27385/80544)",
                                        "Updating files:  35% (28191/80544)",
                                        "Updating files:  36% (28996/80544)",
                                        "Updating files:  36% (28998/80544)",
                                        "Updating files:  37% (29802/80544)",
                                        "Updating files:  38% (30607/80544)",
                                        "Updating files:  39% (31413/80544)",
                                        "Updating files:  40% (32218/80544)",
                                        "Updating files:  41% (33024/80544)",
                                        "Updating files:  42% (33829/80544)",
                                        "Updating files:  43% (34634/80544)",
                                        "Updating files:  44% (35440/80544)",
                                        "Updating files:  45% (36245/80544)",
                                        "Updating files:  46% (37051/80544)",
                                        "Updating files:  47% (37856/80544)",
                                        "Updating files:  48% (38662/80544)",
                                        "Updating files:  49% (39467/80544)",
                                        "Updating files:  49% (40148/80544)",
                                        "Updating files:  50% (40272/80544)",
                                        "Updating files:  51% (41078/80544)",
                                        "Updating files:  52% (41883/80544)",
                                        "Updating files:  53% (42689/80544)",
                                        "Updating files:  54% (43494/80544)",
                                        "Updating files:  55% (44300/80544)",
                                        "Updating files:  56% (45105/80544)",
                                        "Updating files:  57% (45911/80544)",
                                        "Updating files:  58% (46716/80544)",
                                        "Updating files:  59% (47521/80544)",
                                        "Updating files:  60% (48327/80544)",
                                        "Updating files:  60% (48600/80544)",
                                        "Updating files:  61% (49132/80544)",
                                        "Updating files:  62% (49938/80544)",
                                        "Updating files:  63% (50743/80544)",
                                        "Updating files:  64% (51549/80544)",
                                        "Updating files:  65% (52354/80544)",
                                        "Updating files:  66% (53160/80544)",
                                        "Updating files:  67% (53965/80544)",
                                        "Updating files:  68% (54770/80544)",
                                        "Updating files:  69% (55576/80544)",
                                        "Updating files:  69% (56287/80544)",
                                        "Updating files:  70% (56381/80544)",
                                        "Updating files:  71% (57187/80544)",
                                        "Updating files:  72% (57992/80544)",
                                        "Updating files:  73% (58798/80544)",
                                        "Updating files:  74% (59603/80544)",
                                        "Updating files:  75% (60408/80544)",
                                        "Updating files:  76% (61214/80544)",
                                        "Updating files:  77% (62019/80544)",
                                        "Updating files:  78% (62825/80544)",
                                        "Updating files:  78% (63585/80544)",
                                        "Updating files:  79% (63630/80544)",
                                        "Updating files:  80% (64436/80544)",
                                        "Updating files:  81% (65241/80544)",
                                        "Updating files:  82% (66047/80544)",
                                        "Updating files:  83% (66852/80544)",
                                        "Updating files:  84% (67657/80544)",
                                        "Updating files:  85% (68463/80544)",
                                        "Updating files:  85% (69006/80544)",
                                        "Updating files:  86% (69268/80544)",
                                        "Updating files:  87% (70074/80544)",
                                        "Updating files:  88% (70879/80544)",
                                        "Updating files:  89% (71685/80544)",
                                        "Updating files:  90% (72490/80544)",
                                        "Updating files:  91% (73296/80544)",
                                        "Updating files:  92% (74101/80544)",
                                        "Updating files:  93% (74906/80544)",
                                        "Updating files:  94% (75712/80544)",
                                        "Updating files:  94% (75871/80544)",
                                        "Updating files:  95% (76517/80544)",
                                        "Updating files:  96% (77323/80544)",
                                        "Updating files:  97% (78128/80544)",
                                        "Updating files:  98% (78934/80544)",
                                        "Updating files:  99% (79739/80544)",
                                        "Updating files:  99% (79877/80544)",
                                        "Updating files:  99% (79886/80544)",
                                        "Updating files:  99% (79950/80544)",
                                        "Updating files: 100% (80544/80544)",
                                        "Updating files: 100% (80544/80544), done.",
                                        "HEAD is now at 8d83dea1d58b Merge pull request #167730 from swh/mm/use_ros_without_aliases",
                                        "cc-github.bmwgroup.net/swh/adp checked out to:",
                                        "8d83dea1d58bef901e97793e1c34ad57986fada1 Merge pull request #167730 from swh/mm/use_ros_without_aliases"
                                    ],
                                    "zj_project": {
                                        "key": "cc-github.bmwgroup.net/swh/adp",
                                        "value": {
                                            "canonical_hostname": "cc-github.bmwgroup.net",
                                            "canonical_name": "cc-github.bmwgroup.net/swh/adp",
                                            "checkout": "master",
                                            "checkout_description": "zuul branch",
                                            "commit": "8d83dea1d58bef901e97793e1c34ad57986fada1",
                                            "name": "swh/adp",
                                            "required": true,
                                            "short_name": "adp",
                                            "src_dir": "src/cc-github.bmwgroup.net/swh/adp"
                                        }
                                    },
                                    "zuul_log_id": "in-loop-ignore"
                                },
                                {
                                    "ansible_loop_var": "zj_project",
                                    "changed": true,
                                    "cmd": "set -eu\n\n# Reset is needed because we pushed to a non-bare repo\ngit reset --hard\n# Clean is needed because we pushed to a non-bare repo\ngit clean -xdf\n# Undo the config setting we did above\ngit config --local --unset receive.denyCurrentBranch\n# checkout the branch matching the branch set up by the executor\ngit checkout --quiet master\n# put out a status line with the current HEAD\necho \"cc-github.bmwgroup.net/swh/cvc checked out to:\"\ngit log --pretty=oneline  -1\n",
                                    "delta": "0:00:01.317355",
                                    "end": "2024-04-21 00:41:34.184737",
                                    "failed": false,
                                    "invocation": {
                                        "module_args": {
                                            "_raw_params": "set -eu\n\n# Reset is needed because we pushed to a non-bare repo\ngit reset --hard\n# Clean is needed because we pushed to a non-bare repo\ngit clean -xdf\n# Undo the config setting we did above\ngit config --local --unset receive.denyCurrentBranch\n# checkout the branch matching the branch set up by the executor\ngit checkout --quiet master\n# put out a status line with the current HEAD\necho \"cc-github.bmwgroup.net/swh/cvc checked out to:\"\ngit log --pretty=oneline  -1\n",
                                            "_uses_shell": true,
                                            "argv": null,
                                            "chdir": "/home/zuul/src/cc-github.bmwgroup.net/swh/cvc",
                                            "creates": null,
                                            "executable": null,
                                            "removes": null,
                                            "stdin": null,
                                            "stdin_add_newline": true,
                                            "strip_empty_ends": true,
                                            "warn": false,
                                            "zuul_ansible_split_streams": false,
                                            "zuul_log_id": "in-loop-ignore"
                                        }
                                    },
                                    "msg": "",
                                    "rc": 0,
                                    "start": "2024-04-21 00:41:32.867382",
                                    "stderr": "",
                                    "stderr_lines": [],
                                    "stdout": "HEAD is now at dbf0e56 Merge pull request #762 from swh/ag-cvc02-pdx-logistic\ncc-github.bmwgroup.net/swh/cvc checked out to:\ndbf0e56926a6baad91df5b15b84746c66de73a47 Merge pull request #762 from swh/ag-cvc02-pdx-logistic",
                                    "stdout_lines": [
                                        "HEAD is now at dbf0e56 Merge pull request #762 from swh/ag-cvc02-pdx-logistic",
                                        "cc-github.bmwgroup.net/swh/cvc checked out to:",
                                        "dbf0e56926a6baad91df5b15b84746c66de73a47 Merge pull request #762 from swh/ag-cvc02-pdx-logistic"
                                    ],
                                    "zj_project": {
                                        "key": "cc-github.bmwgroup.net/swh/cvc",
                                        "value": {
                                            "canonical_hostname": "cc-github.bmwgroup.net",
                                            "canonical_name": "cc-github.bmwgroup.net/swh/cvc",
                                            "checkout": "master",
                                            "checkout_description": "zuul branch",
                                            "commit": "dbf0e56926a6baad91df5b15b84746c66de73a47",
                                            "name": "swh/cvc",
                                            "required": true,
                                            "short_name": "cvc",
                                            "src_dir": "src/cc-github.bmwgroup.net/swh/cvc"
                                        }
                                    },
                                    "zuul_log_id": "in-loop-ignore"
                                },
                                {
                                    "ansible_loop_var": "zj_project",
                                    "changed": true,
                                    "cmd": "set -eu\n\n# Reset is needed because we pushed to a non-bare repo\ngit reset --hard\n# Clean is needed because we pushed to a non-bare repo\ngit clean -xdf\n# Undo the config setting we did above\ngit config --local --unset receive.denyCurrentBranch\n# checkout the branch matching the branch set up by the executor\ngit checkout --quiet master\n# put out a status line with the current HEAD\necho \"cc-github.bmwgroup.net/swh/ddad checked out to:\"\ngit log --pretty=oneline  -1\n",
                                    "delta": "0:00:01.032868",
                                    "end": "2024-04-21 00:41:35.470911",
                                    "failed": false,
                                    "invocation": {
                                        "module_args": {
                                            "_raw_params": "set -eu\n\n# Reset is needed because we pushed to a non-bare repo\ngit reset --hard\n# Clean is needed because we pushed to a non-bare repo\ngit clean -xdf\n# Undo the config setting we did above\ngit config --local --unset receive.denyCurrentBranch\n# checkout the branch matching the branch set up by the executor\ngit checkout --quiet master\n# put out a status line with the current HEAD\necho \"cc-github.bmwgroup.net/swh/ddad checked out to:\"\ngit log --pretty=oneline  -1\n",
                                            "_uses_shell": true,
                                            "argv": null,
                                            "chdir": "/home/zuul/src/cc-github.bmwgroup.net/swh/ddad",
                                            "creates": null,
                                            "executable": null,
                                            "removes": null,
                                            "stdin": null,
                                            "stdin_add_newline": true,
                                            "strip_empty_ends": true,
                                            "warn": false,
                                            "zuul_ansible_split_streams": false,
                                            "zuul_log_id": "in-loop-ignore"
                                        }
                                    },
                                    "msg": "",
                                    "rc": 0,
                                    "start": "2024-04-21 00:41:34.438043",
                                    "stderr": "",
                                    "stderr_lines": [],
                                    "stdout": "HEAD is now at 32fe27876b Submodules updated\ncc-github.bmwgroup.net/swh/ddad checked out to:\n32fe27876b12e612823c5f9cfd63b2cc1eaa68c1 Submodules updated",
                                    "stdout_lines": [
                                        "HEAD is now at 32fe27876b Submodules updated",
                                        "cc-github.bmwgroup.net/swh/ddad checked out to:",
                                        "32fe27876b12e612823c5f9cfd63b2cc1eaa68c1 Submodules updated"
                                    ],
                                    "zj_project": {
                                        "key": "cc-github.bmwgroup.net/swh/ddad",
                                        "value": {
                                            "canonical_hostname": "cc-github.bmwgroup.net",
                                            "canonical_name": "cc-github.bmwgroup.net/swh/ddad",
                                            "checkout": "master",
                                            "checkout_description": "zuul branch",
                                            "commit": "32fe27876b12e612823c5f9cfd63b2cc1eaa68c1",
                                            "name": "swh/ddad",
                                            "required": true,
                                            "short_name": "ddad",
                                            "src_dir": "src/cc-github.bmwgroup.net/swh/ddad"
                                        }
                                    },
                                    "zuul_log_id": "in-loop-ignore"
                                },
                                {
                                    "ansible_loop_var": "zj_project",
                                    "changed": true,
                                    "cmd": "set -eu\n\n# Reset is needed because we pushed to a non-bare repo\ngit reset --hard\n# Clean is needed because we pushed to a non-bare repo\ngit clean -xdf\n# Undo the config setting we did above\ngit config --local --unset receive.denyCurrentBranch\n# checkout the branch matching the branch set up by the executor\ngit checkout --quiet master\n# put out a status line with the current HEAD\necho \"cc-github.bmwgroup.net/swh/ddad-domains-fasinfo checked out to:\"\ngit log --pretty=oneline  -1\n",
                                    "delta": "0:00:00.972306",
                                    "end": "2024-04-21 00:41:36.654483",
                                    "failed": false,
                                    "invocation": {
                                        "module_args": {
                                            "_raw_params": "set -eu\n\n# Reset is needed because we pushed to a non-bare repo\ngit reset --hard\n# Clean is needed because we pushed to a non-bare repo\ngit clean -xdf\n# Undo the config setting we did above\ngit config --local --unset receive.denyCurrentBranch\n# checkout the branch matching the branch set up by the executor\ngit checkout --quiet master\n# put out a status line with the current HEAD\necho \"cc-github.bmwgroup.net/swh/ddad-domains-fasinfo checked out to:\"\ngit log --pretty=oneline  -1\n",
                                            "_uses_shell": true,
                                            "argv": null,
                                            "chdir": "/home/zuul/src/cc-github.bmwgroup.net/swh/ddad-domains-fasinfo",
                                            "creates": null,
                                            "executable": null,
                                            "removes": null,
                                            "stdin": null,
                                            "stdin_add_newline": true,
                                            "strip_empty_ends": true,
                                            "warn": false,
                                            "zuul_ansible_split_streams": false,
                                            "zuul_log_id": "in-loop-ignore"
                                        }
                                    },
                                    "msg": "",
                                    "rc": 0,
                                    "start": "2024-04-21 00:41:35.682177",
                                    "stderr": "",
                                    "stderr_lines": [],
                                    "stdout": "HEAD is now at a5b41fd76a Merge pull request #964 from swh/csav/add_position_on_map_lane_position\ncc-github.bmwgroup.net/swh/ddad-domains-fasinfo checked out to:\na5b41fd76a124026ff81320e27d5caa5a772f235 Merge pull request #964 from swh/csav/add_position_on_map_lane_position",
                                    "stdout_lines": [
                                        "HEAD is now at a5b41fd76a Merge pull request #964 from swh/csav/add_position_on_map_lane_position",
                                        "cc-github.bmwgroup.net/swh/ddad-domains-fasinfo checked out to:",
                                        "a5b41fd76a124026ff81320e27d5caa5a772f235 Merge pull request #964 from swh/csav/add_position_on_map_lane_position"
                                    ],
                                    "zj_project": {
                                        "key": "cc-github.bmwgroup.net/swh/ddad-domains-fasinfo",
                                        "value": {
                                            "canonical_hostname": "cc-github.bmwgroup.net",
                                            "canonical_name": "cc-github.bmwgroup.net/swh/ddad-domains-fasinfo",
                                            "checkout": "master",
                                            "checkout_description": "zuul branch",
                                            "commit": "a5b41fd76a124026ff81320e27d5caa5a772f235",
                                            "name": "swh/ddad-domains-fasinfo",
                                            "required": true,
                                            "short_name": "ddad-domains-fasinfo",
                                            "src_dir": "src/cc-github.bmwgroup.net/swh/ddad-domains-fasinfo"
                                        }
                                    },
                                    "zuul_log_id": "in-loop-ignore"
                                },
                                {
                                    "ansible_loop_var": "zj_project",
                                    "changed": true,
                                    "cmd": "set -eu\n\n# Reset is needed because we pushed to a non-bare repo\ngit reset --hard\n# Clean is needed because we pushed to a non-bare repo\ngit clean -xdf\n# Undo the config setting we did above\ngit config --local --unset receive.denyCurrentBranch\n# checkout the branch matching the branch set up by the executor\ngit checkout --quiet master\n# put out a status line with the current HEAD\necho \"cc-github.bmwgroup.net/swh/ddad-domains-generic checked out to:\"\ngit log --pretty=oneline  -1\n",
                                    "delta": "0:00:00.874945",
                                    "end": "2024-04-21 00:41:37.755880",
                                    "failed": false,
                                    "invocation": {
                                        "module_args": {
                                            "_raw_params": "set -eu\n\n# Reset is needed because we pushed to a non-bare repo\ngit reset --hard\n# Clean is needed because we pushed to a non-bare repo\ngit clean -xdf\n# Undo the config setting we did above\ngit config --local --unset receive.denyCurrentBranch\n# checkout the branch matching the branch set up by the executor\ngit checkout --quiet master\n# put out a status line with the current HEAD\necho \"cc-github.bmwgroup.net/swh/ddad-domains-generic checked out to:\"\ngit log --pretty=oneline  -1\n",
                                            "_uses_shell": true,
                                            "argv": null,
                                            "chdir": "/home/zuul/src/cc-github.bmwgroup.net/swh/ddad-domains-generic",
                                            "creates": null,
                                            "executable": null,
                                            "removes": null,
                                            "stdin": null,
                                            "stdin_add_newline": true,
                                            "strip_empty_ends": true,
                                            "warn": false,
                                            "zuul_ansible_split_streams": false,
                                            "zuul_log_id": "in-loop-ignore"
                                        }
                                    },
                                    "msg": "",
                                    "rc": 0,
                                    "start": "2024-04-21 00:41:36.880935",
                                    "stderr": "",
                                    "stderr_lines": [],
                                    "stdout": "HEAD is now at 872e7456 Merge pull request #901 from swh/lber-htcoreq2pm-new-su-soll-volf-wcc\ncc-github.bmwgroup.net/swh/ddad-domains-generic checked out to:\n872e7456cf3b5838f30c47753e8187b8c62b636a Merge pull request #901 from swh/lber-htcoreq2pm-new-su-soll-volf-wcc",
                                    "stdout_lines": [
                                        "HEAD is now at 872e7456 Merge pull request #901 from swh/lber-htcoreq2pm-new-su-soll-volf-wcc",
                                        "cc-github.bmwgroup.net/swh/ddad-domains-generic checked out to:",
                                        "872e7456cf3b5838f30c47753e8187b8c62b636a Merge pull request #901 from swh/lber-htcoreq2pm-new-su-soll-volf-wcc"
                                    ],
                                    "zj_project": {
                                        "key": "cc-github.bmwgroup.net/swh/ddad-domains-generic",
                                        "value": {
                                            "canonical_hostname": "cc-github.bmwgroup.net",
                                            "canonical_name": "cc-github.bmwgroup.net/swh/ddad-domains-generic",
                                            "checkout": "master",
                                            "checkout_description": "zuul branch",
                                            "commit": "872e7456cf3b5838f30c47753e8187b8c62b636a",
                                            "name": "swh/ddad-domains-generic",
                                            "required": true,
                                            "short_name": "ddad-domains-generic",
                                            "src_dir": "src/cc-github.bmwgroup.net/swh/ddad-domains-generic"
                                        }
                                    },
                                    "zuul_log_id": "in-loop-ignore"
                                },
                                {
                                    "ansible_loop_var": "zj_project",
                                    "changed": true,
                                    "cmd": "set -eu\n\n# Reset is needed because we pushed to a non-bare repo\ngit reset --hard\n# Clean is needed because we pushed to a non-bare repo\ngit clean -xdf\n# Undo the config setting we did above\ngit config --local --unset receive.denyCurrentBranch\n# checkout the branch matching the branch set up by the executor\ngit checkout --quiet master\n# put out a status line with the current HEAD\necho \"cc-github.bmwgroup.net/swh/ddad-ecu-ipnext checked out to:\"\ngit log --pretty=oneline  -1\n",
                                    "delta": "0:00:02.359581",
                                    "end": "2024-04-21 00:41:40.391143",
                                    "failed": false,
                                    "invocation": {
                                        "module_args": {
                                            "_raw_params": "set -eu\n\n# Reset is needed because we pushed to a non-bare repo\ngit reset --hard\n# Clean is needed because we pushed to a non-bare repo\ngit clean -xdf\n# Undo the config setting we did above\ngit config --local --unset receive.denyCurrentBranch\n# checkout the branch matching the branch set up by the executor\ngit checkout --quiet master\n# put out a status line with the current HEAD\necho \"cc-github.bmwgroup.net/swh/ddad-ecu-ipnext checked out to:\"\ngit log --pretty=oneline  -1\n",
                                            "_uses_shell": true,
                                            "argv": null,
                                            "chdir": "/home/zuul/src/cc-github.bmwgroup.net/swh/ddad-ecu-ipnext",
                                            "creates": null,
                                            "executable": null,
                                            "removes": null,
                                            "stdin": null,
                                            "stdin_add_newline": true,
                                            "strip_empty_ends": true,
                                            "warn": false,
                                            "zuul_ansible_split_streams": false,
                                            "zuul_log_id": "in-loop-ignore"
                                        }
                                    },
                                    "msg": "",
                                    "rc": 0,
                                    "start": "2024-04-21 00:41:38.031562",
                                    "stderr": "",
                                    "stderr_lines": [],
                                    "stdout": "Updating files:  64% (8211/12717)\rUpdating files:  65% (8267/12717)\rUpdating files:  66% (8394/12717)\rUpdating files:  67% (8521/12717)\rUpdating files:  68% (8648/12717)\rUpdating files:  69% (8775/12717)\rUpdating files:  70% (8902/12717)\rUpdating files:  71% (9030/12717)\rUpdating files:  72% (9157/12717)\rUpdating files:  73% (9284/12717)\rUpdating files:  74% (9411/12717)\rUpdating files:  75% (9538/12717)\rUpdating files:  76% (9665/12717)\rUpdating files:  77% (9793/12717)\rUpdating files:  78% (9920/12717)\rUpdating files:  79% (10047/12717)\rUpdating files:  80% (10174/12717)\rUpdating files:  81% (10301/12717)\rUpdating files:  82% (10428/12717)\rUpdating files:  83% (10556/12717)\rUpdating files:  84% (10683/12717)\rUpdating files:  85% (10810/12717)\rUpdating files:  86% (10937/12717)\rUpdating files:  87% (11064/12717)\rUpdating files:  88% (11191/12717)\rUpdating files:  89% (11319/12717)\rUpdating files:  90% (11446/12717)\rUpdating files:  91% (11573/12717)\rUpdating files:  92% (11700/12717)\rUpdating files:  93% (11827/12717)\rUpdating files:  94% (11954/12717)\rUpdating files:  95% (12082/12717)\rUpdating files:  96% (12209/12717)\rUpdating files:  97% (12336/12717)\rUpdating files:  98% (12463/12717)\rUpdating files:  99% (12590/12717)\rUpdating files: 100% (12717/12717)\rUpdating files: 100% (12717/12717), done.\nHEAD is now at 4e0fd5384 Merge pull request #9524 from swh/feat_valeo_parking/parkingstack_i390_ffs_mailbox_change\ncc-github.bmwgroup.net/swh/ddad-ecu-ipnext checked out to:\n4e0fd5384e92431311a139b52f3b191523237f3f Merge pull request #9524 from swh/feat_valeo_parking/parkingstack_i390_ffs_mailbox_change",
                                    "stdout_lines": [
                                        "Updating files:  64% (8211/12717)",
                                        "Updating files:  65% (8267/12717)",
                                        "Updating files:  66% (8394/12717)",
                                        "Updating files:  67% (8521/12717)",
                                        "Updating files:  68% (8648/12717)",
                                        "Updating files:  69% (8775/12717)",
                                        "Updating files:  70% (8902/12717)",
                                        "Updating files:  71% (9030/12717)",
                                        "Updating files:  72% (9157/12717)",
                                        "Updating files:  73% (9284/12717)",
                                        "Updating files:  74% (9411/12717)",
                                        "Updating files:  75% (9538/12717)",
                                        "Updating files:  76% (9665/12717)",
                                        "Updating files:  77% (9793/12717)",
                                        "Updating files:  78% (9920/12717)",
                                        "Updating files:  79% (10047/12717)",
                                        "Updating files:  80% (10174/12717)",
                                        "Updating files:  81% (10301/12717)",
                                        "Updating files:  82% (10428/12717)",
                                        "Updating files:  83% (10556/12717)",
                                        "Updating files:  84% (10683/12717)",
                                        "Updating files:  85% (10810/12717)",
                                        "Updating files:  86% (10937/12717)",
                                        "Updating files:  87% (11064/12717)",
                                        "Updating files:  88% (11191/12717)",
                                        "Updating files:  89% (11319/12717)",
                                        "Updating files:  90% (11446/12717)",
                                        "Updating files:  91% (11573/12717)",
                                        "Updating files:  92% (11700/12717)",
                                        "Updating files:  93% (11827/12717)",
                                        "Updating files:  94% (11954/12717)",
                                        "Updating files:  95% (12082/12717)",
                                        "Updating files:  96% (12209/12717)",
                                        "Updating files:  97% (12336/12717)",
                                        "Updating files:  98% (12463/12717)",
                                        "Updating files:  99% (12590/12717)",
                                        "Updating files: 100% (12717/12717)",
                                        "Updating files: 100% (12717/12717), done.",
                                        "HEAD is now at 4e0fd5384 Merge pull request #9524 from swh/feat_valeo_parking/parkingstack_i390_ffs_mailbox_change",
                                        "cc-github.bmwgroup.net/swh/ddad-ecu-ipnext checked out to:",
                                        "4e0fd5384e92431311a139b52f3b191523237f3f Merge pull request #9524 from swh/feat_valeo_parking/parkingstack_i390_ffs_mailbox_change"
                                    ],
                                    "zj_project": {
                                        "key": "cc-github.bmwgroup.net/swh/ddad-ecu-ipnext",
                                        "value": {
                                            "canonical_hostname": "cc-github.bmwgroup.net",
                                            "canonical_name": "cc-github.bmwgroup.net/swh/ddad-ecu-ipnext",
                                            "checkout": "master",
                                            "checkout_description": "zuul branch",
                                            "commit": "4e0fd5384e92431311a139b52f3b191523237f3f",
                                            "name": "swh/ddad-ecu-ipnext",
                                            "required": true,
                                            "short_name": "ddad-ecu-ipnext",
                                            "src_dir": "src/cc-github.bmwgroup.net/swh/ddad-ecu-ipnext"
                                        }
                                    },
                                    "zuul_log_id": "in-loop-ignore"
                                },
                                {
                                    "ansible_loop_var": "zj_project",
                                    "changed": true,
                                    "cmd": "set -eu\n\n# Reset is needed because we pushed to a non-bare repo\ngit reset --hard\n# Clean is needed because we pushed to a non-bare repo\ngit clean -xdf\n# Undo the config setting we did above\ngit config --local --unset receive.denyCurrentBranch\n# checkout the branch matching the branch set up by the executor\ngit checkout --quiet master\n# put out a status line with the current HEAD\necho \"cc-github.bmwgroup.net/swh/ddad_ci_config checked out to:\"\ngit log --pretty=oneline  -1\n",
                                    "delta": "0:00:01.648828",
                                    "end": "2024-04-21 00:41:42.250974",
                                    "failed": false,
                                    "invocation": {
                                        "module_args": {
                                            "_raw_params": "set -eu\n\n# Reset is needed because we pushed to a non-bare repo\ngit reset --hard\n# Clean is needed because we pushed to a non-bare repo\ngit clean -xdf\n# Undo the config setting we did above\ngit config --local --unset receive.denyCurrentBranch\n# checkout the branch matching the branch set up by the executor\ngit checkout --quiet master\n# put out a status line with the current HEAD\necho \"cc-github.bmwgroup.net/swh/ddad_ci_config checked out to:\"\ngit log --pretty=oneline  -1\n",
                                            "_uses_shell": true,
                                            "argv": null,
                                            "chdir": "/home/zuul/src/cc-github.bmwgroup.net/swh/ddad_ci_config",
                                            "creates": null,
                                            "executable": null,
                                            "removes": null,
                                            "stdin": null,
                                            "stdin_add_newline": true,
                                            "strip_empty_ends": true,
                                            "warn": false,
                                            "zuul_ansible_split_streams": false,
                                            "zuul_log_id": "in-loop-ignore"
                                        }
                                    },
                                    "msg": "",
                                    "rc": 0,
                                    "start": "2024-04-21 00:41:40.602146",
                                    "stderr": "",
                                    "stderr_lines": [],
                                    "stdout": "Updating files:  83% (4450/5327)\rUpdating files:  84% (4475/5327)\rUpdating files:  85% (4528/5327)\rUpdating files:  86% (4582/5327)\rUpdating files:  87% (4635/5327)\rUpdating files:  88% (4688/5327)\rUpdating files:  89% (4742/5327)\rUpdating files:  90% (4795/5327)\rUpdating files:  91% (4848/5327)\rUpdating files:  92% (4901/5327)\rUpdating files:  93% (4955/5327)\rUpdating files:  94% (5008/5327)\rUpdating files:  95% (5061/5327)\rUpdating files:  96% (5114/5327)\rUpdating files:  97% (5168/5327)\rUpdating files:  98% (5221/5327)\rUpdating files:  99% (5274/5327)\rUpdating files: 100% (5327/5327)\rUpdating files: 100% (5327/5327), done.\nHEAD is now at a2ea124273 Merge pull request #62209 from swh/ascott/fix_path_on_windows\ncc-github.bmwgroup.net/swh/ddad_ci_config checked out to:\na2ea1242739a7a16dba7d7781925949e31cfc29f Merge pull request #62209 from swh/ascott/fix_path_on_windows",
                                    "stdout_lines": [
                                        "Updating files:  83% (4450/5327)",
                                        "Updating files:  84% (4475/5327)",
                                        "Updating files:  85% (4528/5327)",
                                        "Updating files:  86% (4582/5327)",
                                        "Updating files:  87% (4635/5327)",
                                        "Updating files:  88% (4688/5327)",
                                        "Updating files:  89% (4742/5327)",
                                        "Updating files:  90% (4795/5327)",
                                        "Updating files:  91% (4848/5327)",
                                        "Updating files:  92% (4901/5327)",
                                        "Updating files:  93% (4955/5327)",
                                        "Updating files:  94% (5008/5327)",
                                        "Updating files:  95% (5061/5327)",
                                        "Updating files:  96% (5114/5327)",
                                        "Updating files:  97% (5168/5327)",
                                        "Updating files:  98% (5221/5327)",
                                        "Updating files:  99% (5274/5327)",
                                        "Updating files: 100% (5327/5327)",
                                        "Updating files: 100% (5327/5327), done.",
                                        "HEAD is now at a2ea124273 Merge pull request #62209 from swh/ascott/fix_path_on_windows",
                                        "cc-github.bmwgroup.net/swh/ddad_ci_config checked out to:",
                                        "a2ea1242739a7a16dba7d7781925949e31cfc29f Merge pull request #62209 from swh/ascott/fix_path_on_windows"
                                    ],
                                    "zj_project": {
                                        "key": "cc-github.bmwgroup.net/swh/ddad_ci_config",
                                        "value": {
                                            "canonical_hostname": "cc-github.bmwgroup.net",
                                            "canonical_name": "cc-github.bmwgroup.net/swh/ddad_ci_config",
                                            "checkout": "master",
                                            "checkout_description": "zuul branch",
                                            "commit": "a2ea1242739a7a16dba7d7781925949e31cfc29f",
                                            "name": "swh/ddad_ci_config",
                                            "required": true,
                                            "short_name": "ddad_ci_config",
                                            "src_dir": "src/cc-github.bmwgroup.net/swh/ddad_ci_config"
                                        }
                                    },
                                    "zuul_log_id": "in-loop-ignore"
                                },
                                {
                                    "ansible_loop_var": "zj_project",
                                    "changed": true,
                                    "cmd": "set -eu\n\n# Reset is needed because we pushed to a non-bare repo\ngit reset --hard\n# Clean is needed because we pushed to a non-bare repo\ngit clean -xdf\n# Undo the config setting we did above\ngit config --local --unset receive.denyCurrentBranch\n# checkout the branch matching the branch set up by the executor\ngit checkout --quiet master\n# put out a status line with the current HEAD\necho \"cc-github.bmwgroup.net/swh/ddad_platform checked out to:\"\ngit log --pretty=oneline  -1\n",
                                    "delta": "0:00:07.679359",
                                    "end": "2024-04-21 00:41:50.122391",
                                    "failed": false,
                                    "invocation": {
                                        "module_args": {
                                            "_raw_params": "set -eu\n\n# Reset is needed because we pushed to a non-bare repo\ngit reset --hard\n# Clean is needed because we pushed to a non-bare repo\ngit clean -xdf\n# Undo the config setting we did above\ngit config --local --unset receive.denyCurrentBranch\n# checkout the branch matching the branch set up by the executor\ngit checkout --quiet master\n# put out a status line with the current HEAD\necho \"cc-github.bmwgroup.net/swh/ddad_platform checked out to:\"\ngit log --pretty=oneline  -1\n",
                                            "_uses_shell": true,
                                            "argv": null,
                                            "chdir": "/home/zuul/src/cc-github.bmwgroup.net/swh/ddad_platform",
                                            "creates": null,
                                            "executable": null,
                                            "removes": null,
                                            "stdin": null,
                                            "stdin_add_newline": true,
                                            "strip_empty_ends": true,
                                            "warn": false,
                                            "zuul_ansible_split_streams": false,
                                            "zuul_log_id": "in-loop-ignore"
                                        }
                                    },
                                    "msg": "",
                                    "rc": 0,
                                    "start": "2024-04-21 00:41:42.443032",
                                    "stderr": "",
                                    "stderr_lines": [],
                                    "stdout": "Updating files:  38% (14155/37111)\rUpdating files:  39% (14474/37111)\rUpdating files:  40% (14845/37111)\rUpdating files:  41% (15216/37111)\rUpdating files:  42% (15587/37111)\rUpdating files:  43% (15958/37111)\rUpdating files:  44% (16329/37111)\rUpdating files:  45% (16700/37111)\rUpdating files:  46% (17072/37111)\rUpdating files:  47% (17443/37111)\rUpdating files:  48% (17814/37111)\rUpdating files:  49% (18185/37111)\rUpdating files:  50% (18556/37111)\rUpdating files:  51% (18927/37111)\rUpdating files:  52% (19298/37111)\rUpdating files:  53% (19669/37111)\rUpdating files:  54% (20040/37111)\rUpdating files:  55% (20412/37111)\rUpdating files:  56% (20783/37111)\rUpdating files:  57% (21154/37111)\rUpdating files:  58% (21525/37111)\rUpdating files:  59% (21896/37111)\rUpdating files:  60% (22267/37111)\rUpdating files:  61% (22638/37111)\rUpdating files:  62% (23009/37111)\rUpdating files:  63% (23380/37111)\rUpdating files:  64% (23752/37111)\rUpdating files:  65% (24123/37111)\rUpdating files:  66% (24494/37111)\rUpdating files:  67% (24865/37111)\rUpdating files:  68% (25236/37111)\rUpdating files:  69% (25607/37111)\rUpdating files:  70% (25978/37111)\rUpdating files:  71% (26349/37111)\rUpdating files:  72% (26720/37111)\rUpdating files:  73% (27092/37111)\rUpdating files:  74% (27463/37111)\rUpdating files:  75% (27834/37111)\rUpdating files:  75% (28130/37111)\rUpdating files:  76% (28205/37111)\rUpdating files:  77% (28576/37111)\rUpdating files:  78% (28947/37111)\rUpdating files:  79% (29318/37111)\rUpdating files:  80% (29689/37111)\rUpdating files:  80% (29737/37111)\rUpdating files:  81% (30060/37111)\rUpdating files:  82% (30432/37111)\rUpdating files:  83% (30803/37111)\rUpdating files:  84% (31174/37111)\rUpdating files:  85% (31545/37111)\rUpdating files:  86% (31916/37111)\rUpdating files:  87% (32287/37111)\rUpdating files:  88% (32658/37111)\rUpdating files:  89% (33029/37111)\rUpdating files:  90% (33400/37111)\rUpdating files:  91% (33772/37111)\rUpdating files:  92% (34143/37111)\rUpdating files:  93% (34514/37111)\rUpdating files:  94% (34885/37111)\rUpdating files:  95% (35256/37111)\rUpdating files:  95% (35362/37111)\rUpdating files:  96% (35627/37111)\rUpdating files:  97% (35998/37111)\rUpdating files:  97% (36025/37111)\rUpdating files:  98% (36369/37111)\rUpdating files:  99% (36740/37111)\rUpdating files: 100% (37111/37111)\rUpdating files: 100% (37111/37111), done.\nHEAD is now at 0fc13c778f1 Merge pull request #45320 from swh/ssp_string_encoding_optional\ncc-github.bmwgroup.net/swh/ddad_platform checked out to:\n0fc13c778f15b8def496ce821b67df115746cfb6 Merge pull request #45320 from swh/ssp_string_encoding_optional",
                                    "stdout_lines": [
                                        "Updating files:  38% (14155/37111)",
                                        "Updating files:  39% (14474/37111)",
                                        "Updating files:  40% (14845/37111)",
                                        "Updating files:  41% (15216/37111)",
                                        "Updating files:  42% (15587/37111)",
                                        "Updating files:  43% (15958/37111)",
                                        "Updating files:  44% (16329/37111)",
                                        "Updating files:  45% (16700/37111)",
                                        "Updating files:  46% (17072/37111)",
                                        "Updating files:  47% (17443/37111)",
                                        "Updating files:  48% (17814/37111)",
                                        "Updating files:  49% (18185/37111)",
                                        "Updating files:  50% (18556/37111)",
                                        "Updating files:  51% (18927/37111)",
                                        "Updating files:  52% (19298/37111)",
                                        "Updating files:  53% (19669/37111)",
                                        "Updating files:  54% (20040/37111)",
                                        "Updating files:  55% (20412/37111)",
                                        "Updating files:  56% (20783/37111)",
                                        "Updating files:  57% (21154/37111)",
                                        "Updating files:  58% (21525/37111)",
                                        "Updating files:  59% (21896/37111)",
                                        "Updating files:  60% (22267/37111)",
                                        "Updating files:  61% (22638/37111)",
                                        "Updating files:  62% (23009/37111)",
                                        "Updating files:  63% (23380/37111)",
                                        "Updating files:  64% (23752/37111)",
                                        "Updating files:  65% (24123/37111)",
                                        "Updating files:  66% (24494/37111)",
                                        "Updating files:  67% (24865/37111)",
                                        "Updating files:  68% (25236/37111)",
                                        "Updating files:  69% (25607/37111)",
                                        "Updating files:  70% (25978/37111)",
                                        "Updating files:  71% (26349/37111)",
                                        "Updating files:  72% (26720/37111)",
                                        "Updating files:  73% (27092/37111)",
                                        "Updating files:  74% (27463/37111)",
                                        "Updating files:  75% (27834/37111)",
                                        "Updating files:  75% (28130/37111)",
                                        "Updating files:  76% (28205/37111)",
                                        "Updating files:  77% (28576/37111)",
                                        "Updating files:  78% (28947/37111)",
                                        "Updating files:  79% (29318/37111)",
                                        "Updating files:  80% (29689/37111)",
                                        "Updating files:  80% (29737/37111)",
                                        "Updating files:  81% (30060/37111)",
                                        "Updating files:  82% (30432/37111)",
                                        "Updating files:  83% (30803/37111)",
                                        "Updating files:  84% (31174/37111)",
                                        "Updating files:  85% (31545/37111)",
                                        "Updating files:  86% (31916/37111)",
                                        "Updating files:  87% (32287/37111)",
                                        "Updating files:  88% (32658/37111)",
                                        "Updating files:  89% (33029/37111)",
                                        "Updating files:  90% (33400/37111)",
                                        "Updating files:  91% (33772/37111)",
                                        "Updating files:  92% (34143/37111)",
                                        "Updating files:  93% (34514/37111)",
                                        "Updating files:  94% (34885/37111)",
                                        "Updating files:  95% (35256/37111)",
                                        "Updating files:  95% (35362/37111)",
                                        "Updating files:  96% (35627/37111)",
                                        "Updating files:  97% (35998/37111)",
                                        "Updating files:  97% (36025/37111)",
                                        "Updating files:  98% (36369/37111)",
                                        "Updating files:  99% (36740/37111)",
                                        "Updating files: 100% (37111/37111)",
                                        "Updating files: 100% (37111/37111), done.",
                                        "HEAD is now at 0fc13c778f1 Merge pull request #45320 from swh/ssp_string_encoding_optional",
                                        "cc-github.bmwgroup.net/swh/ddad_platform checked out to:",
                                        "0fc13c778f15b8def496ce821b67df115746cfb6 Merge pull request #45320 from swh/ssp_string_encoding_optional"
                                    ],
                                    "zj_project": {
                                        "key": "cc-github.bmwgroup.net/swh/ddad_platform",
                                        "value": {
                                            "canonical_hostname": "cc-github.bmwgroup.net",
                                            "canonical_name": "cc-github.bmwgroup.net/swh/ddad_platform",
                                            "checkout": "master",
                                            "checkout_description": "zuul branch",
                                            "commit": "0fc13c778f15b8def496ce821b67df115746cfb6",
                                            "name": "swh/ddad_platform",
                                            "required": true,
                                            "short_name": "ddad_platform",
                                            "src_dir": "src/cc-github.bmwgroup.net/swh/ddad_platform"
                                        }
                                    },
                                    "zuul_log_id": "in-loop-ignore"
                                },
                                {
                                    "ansible_loop_var": "zj_project",
                                    "changed": true,
                                    "cmd": "set -eu\n\n# Reset is needed because we pushed to a non-bare repo\ngit reset --hard\n# Clean is needed because we pushed to a non-bare repo\ngit clean -xdf\n# Undo the config setting we did above\ngit config --local --unset receive.denyCurrentBranch\n# checkout the branch matching the branch set up by the executor\ngit checkout --quiet master\n# put out a status line with the current HEAD\necho \"cc-github.bmwgroup.net/swh/domain-tools checked out to:\"\ngit log --pretty=oneline  -1\n",
                                    "delta": "0:00:02.176249",
                                    "end": "2024-04-21 00:41:52.577879",
                                    "failed": false,
                                    "invocation": {
                                        "module_args": {
                                            "_raw_params": "set -eu\n\n# Reset is needed because we pushed to a non-bare repo\ngit reset --hard\n# Clean is needed because we pushed to a non-bare repo\ngit clean -xdf\n# Undo the config setting we did above\ngit config --local --unset receive.denyCurrentBranch\n# checkout the branch matching the branch set up by the executor\ngit checkout --quiet master\n# put out a status line with the current HEAD\necho \"cc-github.bmwgroup.net/swh/domain-tools checked out to:\"\ngit log --pretty=oneline  -1\n",
                                            "_uses_shell": true,
                                            "argv": null,
                                            "chdir": "/home/zuul/src/cc-github.bmwgroup.net/swh/domain-tools",
                                            "creates": null,
                                            "executable": null,
                                            "removes": null,
                                            "stdin": null,
                                            "stdin_add_newline": true,
                                            "strip_empty_ends": true,
                                            "warn": false,
                                            "zuul_ansible_split_streams": false,
                                            "zuul_log_id": "in-loop-ignore"
                                        }
                                    },
                                    "msg": "",
                                    "rc": 0,
                                    "start": "2024-04-21 00:41:50.401630",
                                    "stderr": "",
                                    "stderr_lines": [],
                                    "stdout": "Updating files:  47% (7432/15668)\rUpdating files:  48% (7521/15668)\rUpdating files:  49% (7678/15668)\rUpdating files:  50% (7834/15668)\rUpdating files:  51% (7991/15668)\rUpdating files:  52% (8148/15668)\rUpdating files:  53% (8305/15668)\rUpdating files:  54% (8461/15668)\rUpdating files:  55% (8618/15668)\rUpdating files:  56% (8775/15668)\rUpdating files:  57% (8931/15668)\rUpdating files:  58% (9088/15668)\rUpdating files:  59% (9245/15668)\rUpdating files:  60% (9401/15668)\rUpdating files:  61% (9558/15668)\rUpdating files:  62% (9715/15668)\rUpdating files:  63% (9871/15668)\rUpdating files:  64% (10028/15668)\rUpdating files:  65% (10185/15668)\rUpdating files:  66% (10341/15668)\rUpdating files:  67% (10498/15668)\rUpdating files:  68% (10655/15668)\rUpdating files:  69% (10811/15668)\rUpdating files:  70% (10968/15668)\rUpdating files:  71% (11125/15668)\rUpdating files:  72% (11281/15668)\rUpdating files:  73% (11438/15668)\rUpdating files:  74% (11595/15668)\rUpdating files:  75% (11751/15668)\rUpdating files:  76% (11908/15668)\rUpdating files:  77% (12065/15668)\rUpdating files:  78% (12222/15668)\rUpdating files:  79% (12378/15668)\rUpdating files:  80% (12535/15668)\rUpdating files:  81% (12692/15668)\rUpdating files:  82% (12848/15668)\rUpdating files:  83% (13005/15668)\rUpdating files:  84% (13162/15668)\rUpdating files:  85% (13318/15668)\rUpdating files:  86% (13475/15668)\rUpdating files:  87% (13632/15668)\rUpdating files:  88% (13788/15668)\rUpdating files:  89% (13945/15668)\rUpdating files:  90% (14102/15668)\rUpdating files:  91% (14258/15668)\rUpdating files:  92% (14415/15668)\rUpdating files:  93% (14572/15668)\rUpdating files:  94% (14728/15668)\rUpdating files:  95% (14885/15668)\rUpdating files:  96% (15042/15668)\rUpdating files:  97% (15198/15668)\rUpdating files:  98% (15355/15668)\rUpdating files:  99% (15512/15668)\rUpdating files: 100% (15668/15668)\rUpdating files: 100% (15668/15668), done.\nHEAD is now at 22e48aea7 Merge pull request #2382 from swh/codify/report_whitelistings\ncc-github.bmwgroup.net/swh/domain-tools checked out to:\n22e48aea74d3e1a9d405529652492a0cfd84611a Merge pull request #2382 from swh/codify/report_whitelistings",
                                    "stdout_lines": [
                                        "Updating files:  47% (7432/15668)",
                                        "Updating files:  48% (7521/15668)",
                                        "Updating files:  49% (7678/15668)",
                                        "Updating files:  50% (7834/15668)",
                                        "Updating files:  51% (7991/15668)",
                                        "Updating files:  52% (8148/15668)",
                                        "Updating files:  53% (8305/15668)",
                                        "Updating files:  54% (8461/15668)",
                                        "Updating files:  55% (8618/15668)",
                                        "Updating files:  56% (8775/15668)",
                                        "Updating files:  57% (8931/15668)",
                                        "Updating files:  58% (9088/15668)",
                                        "Updating files:  59% (9245/15668)",
                                        "Updating files:  60% (9401/15668)",
                                        "Updating files:  61% (9558/15668)",
                                        "Updating files:  62% (9715/15668)",
                                        "Updating files:  63% (9871/15668)",
                                        "Updating files:  64% (10028/15668)",
                                        "Updating files:  65% (10185/15668)",
                                        "Updating files:  66% (10341/15668)",
                                        "Updating files:  67% (10498/15668)",
                                        "Updating files:  68% (10655/15668)",
                                        "Updating files:  69% (10811/15668)",
                                        "Updating files:  70% (10968/15668)",
                                        "Updating files:  71% (11125/15668)",
                                        "Updating files:  72% (11281/15668)",
                                        "Updating files:  73% (11438/15668)",
                                        "Updating files:  74% (11595/15668)",
                                        "Updating files:  75% (11751/15668)",
                                        "Updating files:  76% (11908/15668)",
                                        "Updating files:  77% (12065/15668)",
                                        "Updating files:  78% (12222/15668)",
                                        "Updating files:  79% (12378/15668)",
                                        "Updating files:  80% (12535/15668)",
                                        "Updating files:  81% (12692/15668)",
                                        "Updating files:  82% (12848/15668)",
                                        "Updating files:  83% (13005/15668)",
                                        "Updating files:  84% (13162/15668)",
                                        "Updating files:  85% (13318/15668)",
                                        "Updating files:  86% (13475/15668)",
                                        "Updating files:  87% (13632/15668)",
                                        "Updating files:  88% (13788/15668)",
                                        "Updating files:  89% (13945/15668)",
                                        "Updating files:  90% (14102/15668)",
                                        "Updating files:  91% (14258/15668)",
                                        "Updating files:  92% (14415/15668)",
                                        "Updating files:  93% (14572/15668)",
                                        "Updating files:  94% (14728/15668)",
                                        "Updating files:  95% (14885/15668)",
                                        "Updating files:  96% (15042/15668)",
                                        "Updating files:  97% (15198/15668)",
                                        "Updating files:  98% (15355/15668)",
                                        "Updating files:  99% (15512/15668)",
                                        "Updating files: 100% (15668/15668)",
                                        "Updating files: 100% (15668/15668), done.",
                                        "HEAD is now at 22e48aea7 Merge pull request #2382 from swh/codify/report_whitelistings",
                                        "cc-github.bmwgroup.net/swh/domain-tools checked out to:",
                                        "22e48aea74d3e1a9d405529652492a0cfd84611a Merge pull request #2382 from swh/codify/report_whitelistings"
                                    ],
                                    "zj_project": {
                                        "key": "cc-github.bmwgroup.net/swh/domain-tools",
                                        "value": {
                                            "canonical_hostname": "cc-github.bmwgroup.net",
                                            "canonical_name": "cc-github.bmwgroup.net/swh/domain-tools",
                                            "checkout": "master",
                                            "checkout_description": "zuul branch",
                                            "commit": "22e48aea74d3e1a9d405529652492a0cfd84611a",
                                            "name": "swh/domain-tools",
                                            "required": true,
                                            "short_name": "domain-tools",
                                            "src_dir": "src/cc-github.bmwgroup.net/swh/domain-tools"
                                        }
                                    },
                                    "zuul_log_id": "in-loop-ignore"
                                },
                                {
                                    "ansible_loop_var": "zj_project",
                                    "changed": true,
                                    "cmd": "set -eu\n\n# Reset is needed because we pushed to a non-bare repo\ngit reset --hard\n# Clean is needed because we pushed to a non-bare repo\ngit clean -xdf\n# Undo the config setting we did above\ngit config --local --unset receive.denyCurrentBranch\n# checkout the branch matching the branch set up by the executor\ngit checkout --quiet master\n# put out a status line with the current HEAD\necho \"cc-github.bmwgroup.net/swh/ecu_xpad_sc_mpad checked out to:\"\ngit log --pretty=oneline  -1\n",
                                    "delta": "0:01:44.546635",
                                    "end": "2024-04-21 00:43:37.500743",
                                    "failed": false,
                                    "invocation": {
                                        "module_args": {
                                            "_raw_params": "set -eu\n\n# Reset is needed because we pushed to a non-bare repo\ngit reset --hard\n# Clean is needed because we pushed to a non-bare repo\ngit clean -xdf\n# Undo the config setting we did above\ngit config --local --unset receive.denyCurrentBranch\n# checkout the branch matching the branch set up by the executor\ngit checkout --quiet master\n# put out a status line with the current HEAD\necho \"cc-github.bmwgroup.net/swh/ecu_xpad_sc_mpad checked out to:\"\ngit log --pretty=oneline  -1\n",
                                            "_uses_shell": true,
                                            "argv": null,
                                            "chdir": "/home/zuul/src/cc-github.bmwgroup.net/swh/ecu_xpad_sc_mpad",
                                            "creates": null,
                                            "executable": null,
                                            "removes": null,
                                            "stdin": null,
                                            "stdin_add_newline": true,
                                            "strip_empty_ends": true,
                                            "warn": false,
                                            "zuul_ansible_split_streams": false,
                                            "zuul_log_id": "in-loop-ignore"
                                        }
                                    },
                                    "msg": "",
                                    "rc": 0,
                                    "start": "2024-04-21 00:41:52.954108",
                                    "stderr": "",
                                    "stderr_lines": [],
                                    "stdout": "Updating files:   0% (127/31388)\rUpdating files:   0% (184/31388)\rUpdating files:   0% (215/31388)\rUpdating files:   0% (223/31388)\rUpdating files:   0% (232/31388)\rUpdating files:   0% (243/31388)\rUpdating files:   0% (247/31388)\rUpdating files:   0% (260/31388)\rUpdating files:   0% (264/31388)\rUpdating files:   0% (273/31388)\rUpdating files:   0% (289/31388)\rUpdating files:   1% (314/31388)\rUpdating files:   1% (383/31388)\rUpdating files:   1% (414/31388)\rUpdating files:   1% (449/31388)\rUpdating files:   2% (628/31388)\rUpdating files:   3% (942/31388)\rUpdating files:   4% (1256/31388)\rUpdating files:   5% (1570/31388)\rUpdating files:   5% (1677/31388)\rUpdating files:   6% (1884/31388)\rUpdating files:   6% (1942/31388)\rUpdating files:   7% (2198/31388)\rUpdating files:   8% (2512/31388)\rUpdating files:   9% (2825/31388)\rUpdating files:   9% (2914/31388)\rUpdating files:  10% (3139/31388)\rUpdating files:  10% (3451/31388)\rUpdating files:  11% (3453/31388)\rUpdating files:  11% (3720/31388)\rUpdating files:  11% (3729/31388)\rUpdating files:  11% (3743/31388)\rUpdating files:  11% (3757/31388)\rUpdating files:  12% (3767/31388)\rUpdating files:  12% (3775/31388)\rUpdating files:  13% (4081/31388)\rUpdating files:  14% (4395/31388)\rUpdating files:  14% (4402/31388)\rUpdating files:  15% (4709/31388)\rUpdating files:  16% (5023/31388)\rUpdating files:  17% (5336/31388)\rUpdating files:  18% (5650/31388)\rUpdating files:  19% (5964/31388)\rUpdating files:  20% (6278/31388)\rUpdating files:  21% (6592/31388)\rUpdating files:  22% (6906/31388)\rUpdating files:  22% (7139/31388)\rUpdating files:  23% (7220/31388)\rUpdating files:  23% (7236/31388)\rUpdating files:  23% (7276/31388)\rUpdating files:  24% (7534/31388)\rUpdating files:  24% (7693/31388)\rUpdating files:  25% (7847/31388)\rUpdating files:  26% (8161/31388)\rUpdating files:  27% (8475/31388)\rUpdating files:  28% (8789/31388)\rUpdating files:  29% (9103/31388)\rUpdating files:  30% (9417/31388)\rUpdating files:  31% (9731/31388)\rUpdating files:  32% (10045/31388)\rUpdating files:  33% (10359/31388)\rUpdating files:  34% (10672/31388)\rUpdating files:  34% (10917/31388)\rUpdating files:  35% (10986/31388)\rUpdating files:  36% (11300/31388)\rUpdating files:  37% (11614/31388)\rUpdating files:  38% (11928/31388)\rUpdating files:  38% (12133/31388)\rUpdating files:  39% (12242/31388)\rUpdating files:  40% (12556/31388)\rUpdating files:  41% (12870/31388)\rUpdating files:  42% (13183/31388)\rUpdating files:  43% (13497/31388)\rUpdating files:  44% (13811/31388)\rUpdating files:  45% (14125/31388)\rUpdating files:  45% (14364/31388)\rUpdating files:  45% (14391/31388)\rUpdating files:  45% (14415/31388)\rUpdating files:  45% (14433/31388)\rUpdating files:  46% (14439/31388)\rUpdating files:  46% (14453/31388)\rUpdating files:  46% (14461/31388)\rUpdating files:  46% (14483/31388)\rUpdating files:  46% (14493/31388)\rUpdating files:  46% (14499/31388)\rUpdating files:  46% (14515/31388)\rUpdating files:  46% (14526/31388)\rUpdating files:  46% (14538/31388)\rUpdating files:  46% (14543/31388)\rUpdating files:  46% (14555/31388)\rUpdating files:  46% (14564/31388)\rUpdating files:  46% (14661/31388)\rUpdating files:  46% (14669/31388)\rUpdating files:  46% (14696/31388)\rUpdating files:  46% (14731/31388)\rUpdating files:  47% (14753/31388)\rUpdating files:  48% (15067/31388)\rUpdating files:  48% (15247/31388)\rUpdating files:  49% (15381/31388)\rUpdating files:  50% (15694/31388)\rUpdating files:  50% (15836/31388)\rUpdating files:  51% (16008/31388)\rUpdating files:  51% (16175/31388)\rUpdating files:  51% (16292/31388)\rUpdating files:  52% (16322/31388)\rUpdating files:  52% (16334/31388)\rUpdating files:  53% (16636/31388)\rUpdating files:  54% (16950/31388)\rUpdating files:  55% (17264/31388)\rUpdating files:  56% (17578/31388)\rUpdating files:  56% (17679/31388)\rUpdating files:  56% (17843/31388)\rUpdating files:  57% (17892/31388)\rUpdating files:  57% (18087/31388)\rUpdating files:  57% (18094/31388)\rUpdating files:  57% (18106/31388)\rUpdating files:  57% (18113/31388)\rUpdating files:  57% (18133/31388)\rUpdating files:  57% (18143/31388)\rUpdating files:  58% (18206/31388)\rUpdating files:  58% (18486/31388)\rUpdating files:  59% (18519/31388)\rUpdating files:  60% (18833/31388)\rUpdating files:  61% (19147/31388)\rUpdating files:  62% (19461/31388)\rUpdating files:  63% (19775/31388)\rUpdating files:  64% (20089/31388)\rUpdating files:  65% (20403/31388)\rUpdating files:  66% (20717/31388)\rUpdating files:  67% (21030/31388)\rUpdating files:  68% (21344/31388)\rUpdating files:  68% (21521/31388)\rUpdating files:  68% (21619/31388)\rUpdating files:  68% (21627/31388)\rUpdating files:  69% (21658/31388)\rUpdating files:  69% (21684/31388)\rUpdating files:  70% (21972/31388)\rUpdating files:  71% (22286/31388)\rUpdating files:  71% (22356/31388)\rUpdating files:  72% (22600/31388)\rUpdating files:  73% (22914/31388)\rUpdating files:  74% (23228/31388)\rUpdating files:  75% (23541/31388)\rUpdating files:  76% (23855/31388)\rUpdating files:  77% (24169/31388)\rUpdating files:  78% (24483/31388)\rUpdating files:  79% (24797/31388)\rUpdating files:  79% (24843/31388)\rUpdating files:  79% (24917/31388)\rUpdating files:  79% (24935/31388)\rUpdating files:  79% (24952/31388)\rUpdating files:  79% (24956/31388)\rUpdating files:  79% (24965/31388)\rUpdating files:  79% (24971/31388)\rUpdating files:  79% (24976/31388)\rUpdating files:  79% (24983/31388)\rUpdating files:  79% (24987/31388)\rUpdating files:  79% (24990/31388)\rUpdating files:  79% (24993/31388)\rUpdating files:  79% (24999/31388)\rUpdating files:  79% (25007/31388)\rUpdating files:  79% (25012/31388)\rUpdating files:  79% (25103/31388)\rUpdating files:  79% (25108/31388)\rUpdating files:  80% (25111/31388)\rUpdating files:  80% (25113/31388)\rUpdating files:  80% (25140/31388)\rUpdating files:  80% (25162/31388)\rUpdating files:  81% (25425/31388)\rUpdating files:  82% (25739/31388)\rUpdating files:  82% (25945/31388)\rUpdating files:  83% (26053/31388)\rUpdating files:  83% (26240/31388)\rUpdating files:  84% (26366/31388)\rUpdating files:  84% (26415/31388)\rUpdating files:  85% (26680/31388)\rUpdating files:  85% (26856/31388)\rUpdating files:  86% (26994/31388)\rUpdating files:  87% (27308/31388)\rUpdating files:  88% (27622/31388)\rUpdating files:  88% (27823/31388)\rUpdating files:  89% (27936/31388)\rUpdating files:  89% (28065/31388)\rUpdating files:  89% (28097/31388)\rUpdating files:  89% (28109/31388)\rUpdating files:  89% (28126/31388)\rUpdating files:  89% (28137/31388)\rUpdating files:  89% (28205/31388)\rUpdating files:  90% (28250/31388)\rUpdating files:  91% (28564/31388)\rUpdating files:  92% (28877/31388)\rUpdating files:  93% (29191/31388)\rUpdating files:  94% (29505/31388)\rUpdating files:  94% (29563/31388)\rUpdating files:  95% (29819/31388)\rUpdating files:  96% (30133/31388)\rUpdating files:  97% (30447/31388)\rUpdating files:  98% (30761/31388)\rUpdating files:  98% (30891/31388)\rUpdating files:  98% (30984/31388)\rUpdating files:  98% (31024/31388)\rUpdating files:  99% (31075/31388)\rUpdating files: 100% (31388/31388)\rUpdating files: 100% (31388/31388), done.\nHEAD is now at 9f275d5b9f Merge \"\"EIS-648 BMW_CHANGE_REQUEST: bmw/upstream/aptiv/master/upgrade_xcp_protocol_patcher_tool/be91dc0080f1cd9eecc1ee070fdf3e42197b5abf\"\" into ReleaseBranch_8.48.10-130\ncc-github.bmwgroup.net/swh/ecu_xpad_sc_mpad checked out to:\n9f275d5b9f924de72632bda96690327fccdd5ff5 Merge \"\"EIS-648 BMW_CHANGE_REQUEST: bmw/upstream/aptiv/master/upgrade_xcp_protocol_patcher_tool/be91dc0080f1cd9eecc1ee070fdf3e42197b5abf\"\" into ReleaseBranch_8.48.10-130",
                                    "stdout_lines": [
                                        "Updating files:   0% (127/31388)",
                                        "Updating files:   0% (184/31388)",
                                        "Updating files:   0% (215/31388)",
                                        "Updating files:   0% (223/31388)",
                                        "Updating files:   0% (232/31388)",
                                        "Updating files:   0% (243/31388)",
                                        "Updating files:   0% (247/31388)",
                                        "Updating files:   0% (260/31388)",
                                        "Updating files:   0% (264/31388)",
                                        "Updating files:   0% (273/31388)",
                                        "Updating files:   0% (289/31388)",
                                        "Updating files:   1% (314/31388)",
                                        "Updating files:   1% (383/31388)",
                                        "Updating files:   1% (414/31388)",
                                        "Updating files:   1% (449/31388)",
                                        "Updating files:   2% (628/31388)",
                                        "Updating files:   3% (942/31388)",
                                        "Updating files:   4% (1256/31388)",
                                        "Updating files:   5% (1570/31388)",
                                        "Updating files:   5% (1677/31388)",
                                        "Updating files:   6% (1884/31388)",
                                        "Updating files:   6% (1942/31388)",
                                        "Updating files:   7% (2198/31388)",
                                        "Updating files:   8% (2512/31388)",
                                        "Updating files:   9% (2825/31388)",
                                        "Updating files:   9% (2914/31388)",
                                        "Updating files:  10% (3139/31388)",
                                        "Updating files:  10% (3451/31388)",
                                        "Updating files:  11% (3453/31388)",
                                        "Updating files:  11% (3720/31388)",
                                        "Updating files:  11% (3729/31388)",
                                        "Updating files:  11% (3743/31388)",
                                        "Updating files:  11% (3757/31388)",
                                        "Updating files:  12% (3767/31388)",
                                        "Updating files:  12% (3775/31388)",
                                        "Updating files:  13% (4081/31388)",
                                        "Updating files:  14% (4395/31388)",
                                        "Updating files:  14% (4402/31388)",
                                        "Updating files:  15% (4709/31388)",
                                        "Updating files:  16% (5023/31388)",
                                        "Updating files:  17% (5336/31388)",
                                        "Updating files:  18% (5650/31388)",
                                        "Updating files:  19% (5964/31388)",
                                        "Updating files:  20% (6278/31388)",
                                        "Updating files:  21% (6592/31388)",
                                        "Updating files:  22% (6906/31388)",
                                        "Updating files:  22% (7139/31388)",
                                        "Updating files:  23% (7220/31388)",
                                        "Updating files:  23% (7236/31388)",
                                        "Updating files:  23% (7276/31388)",
                                        "Updating files:  24% (7534/31388)",
                                        "Updating files:  24% (7693/31388)",
                                        "Updating files:  25% (7847/31388)",
                                        "Updating files:  26% (8161/31388)",
                                        "Updating files:  27% (8475/31388)",
                                        "Updating files:  28% (8789/31388)",
                                        "Updating files:  29% (9103/31388)",
                                        "Updating files:  30% (9417/31388)",
                                        "Updating files:  31% (9731/31388)",
                                        "Updating files:  32% (10045/31388)",
                                        "Updating files:  33% (10359/31388)",
                                        "Updating files:  34% (10672/31388)",
                                        "Updating files:  34% (10917/31388)",
                                        "Updating files:  35% (10986/31388)",
                                        "Updating files:  36% (11300/31388)",
                                        "Updating files:  37% (11614/31388)",
                                        "Updating files:  38% (11928/31388)",
                                        "Updating files:  38% (12133/31388)",
                                        "Updating files:  39% (12242/31388)",
                                        "Updating files:  40% (12556/31388)",
                                        "Updating files:  41% (12870/31388)",
                                        "Updating files:  42% (13183/31388)",
                                        "Updating files:  43% (13497/31388)",
                                        "Updating files:  44% (13811/31388)",
                                        "Updating files:  45% (14125/31388)",
                                        "Updating files:  45% (14364/31388)",
                                        "Updating files:  45% (14391/31388)",
                                        "Updating files:  45% (14415/31388)",
                                        "Updating files:  45% (14433/31388)",
                                        "Updating files:  46% (14439/31388)",
                                        "Updating files:  46% (14453/31388)",
                                        "Updating files:  46% (14461/31388)",
                                        "Updating files:  46% (14483/31388)",
                                        "Updating files:  46% (14493/31388)",
                                        "Updating files:  46% (14499/31388)",
                                        "Updating files:  46% (14515/31388)",
                                        "Updating files:  46% (14526/31388)",
                                        "Updating files:  46% (14538/31388)",
                                        "Updating files:  46% (14543/31388)",
                                        "Updating files:  46% (14555/31388)",
                                        "Updating files:  46% (14564/31388)",
                                        "Updating files:  46% (14661/31388)",
                                        "Updating files:  46% (14669/31388)",
                                        "Updating files:  46% (14696/31388)",
                                        "Updating files:  46% (14731/31388)",
                                        "Updating files:  47% (14753/31388)",
                                        "Updating files:  48% (15067/31388)",
                                        "Updating files:  48% (15247/31388)",
                                        "Updating files:  49% (15381/31388)",
                                        "Updating files:  50% (15694/31388)",
                                        "Updating files:  50% (15836/31388)",
                                        "Updating files:  51% (16008/31388)",
                                        "Updating files:  51% (16175/31388)",
                                        "Updating files:  51% (16292/31388)",
                                        "Updating files:  52% (16322/31388)",
                                        "Updating files:  52% (16334/31388)",
                                        "Updating files:  53% (16636/31388)",
                                        "Updating files:  54% (16950/31388)",
                                        "Updating files:  55% (17264/31388)",
                                        "Updating files:  56% (17578/31388)",
                                        "Updating files:  56% (17679/31388)",
                                        "Updating files:  56% (17843/31388)",
                                        "Updating files:  57% (17892/31388)",
                                        "Updating files:  57% (18087/31388)",
                                        "Updating files:  57% (18094/31388)",
                                        "Updating files:  57% (18106/31388)",
                                        "Updating files:  57% (18113/31388)",
                                        "Updating files:  57% (18133/31388)",
                                        "Updating files:  57% (18143/31388)",
                                        "Updating files:  58% (18206/31388)",
                                        "Updating files:  58% (18486/31388)",
                                        "Updating files:  59% (18519/31388)",
                                        "Updating files:  60% (18833/31388)",
                                        "Updating files:  61% (19147/31388)",
                                        "Updating files:  62% (19461/31388)",
                                        "Updating files:  63% (19775/31388)",
                                        "Updating files:  64% (20089/31388)",
                                        "Updating files:  65% (20403/31388)",
                                        "Updating files:  66% (20717/31388)",
                                        "Updating files:  67% (21030/31388)",
                                        "Updating files:  68% (21344/31388)",
                                        "Updating files:  68% (21521/31388)",
                                        "Updating files:  68% (21619/31388)",
                                        "Updating files:  68% (21627/31388)",
                                        "Updating files:  69% (21658/31388)",
                                        "Updating files:  69% (21684/31388)",
                                        "Updating files:  70% (21972/31388)",
                                        "Updating files:  71% (22286/31388)",
                                        "Updating files:  71% (22356/31388)",
                                        "Updating files:  72% (22600/31388)",
                                        "Updating files:  73% (22914/31388)",
                                        "Updating files:  74% (23228/31388)",
                                        "Updating files:  75% (23541/31388)",
                                        "Updating files:  76% (23855/31388)",
                                        "Updating files:  77% (24169/31388)",
                                        "Updating files:  78% (24483/31388)",
                                        "Updating files:  79% (24797/31388)",
                                        "Updating files:  79% (24843/31388)",
                                        "Updating files:  79% (24917/31388)",
                                        "Updating files:  79% (24935/31388)",
                                        "Updating files:  79% (24952/31388)",
                                        "Updating files:  79% (24956/31388)",
                                        "Updating files:  79% (24965/31388)",
                                        "Updating files:  79% (24971/31388)",
                                        "Updating files:  79% (24976/31388)",
                                        "Updating files:  79% (24983/31388)",
                                        "Updating files:  79% (24987/31388)",
                                        "Updating files:  79% (24990/31388)",
                                        "Updating files:  79% (24993/31388)",
                                        "Updating files:  79% (24999/31388)",
                                        "Updating files:  79% (25007/31388)",
                                        "Updating files:  79% (25012/31388)",
                                        "Updating files:  79% (25103/31388)",
                                        "Updating files:  79% (25108/31388)",
                                        "Updating files:  80% (25111/31388)",
                                        "Updating files:  80% (25113/31388)",
                                        "Updating files:  80% (25140/31388)",
                                        "Updating files:  80% (25162/31388)",
                                        "Updating files:  81% (25425/31388)",
                                        "Updating files:  82% (25739/31388)",
                                        "Updating files:  82% (25945/31388)",
                                        "Updating files:  83% (26053/31388)",
                                        "Updating files:  83% (26240/31388)",
                                        "Updating files:  84% (26366/31388)",
                                        "Updating files:  84% (26415/31388)",
                                        "Updating files:  85% (26680/31388)",
                                        "Updating files:  85% (26856/31388)",
                                        "Updating files:  86% (26994/31388)",
                                        "Updating files:  87% (27308/31388)",
                                        "Updating files:  88% (27622/31388)",
                                        "Updating files:  88% (27823/31388)",
                                        "Updating files:  89% (27936/31388)",
                                        "Updating files:  89% (28065/31388)",
                                        "Updating files:  89% (28097/31388)",
                                        "Updating files:  89% (28109/31388)",
                                        "Updating files:  89% (28126/31388)",
                                        "Updating files:  89% (28137/31388)",
                                        "Updating files:  89% (28205/31388)",
                                        "Updating files:  90% (28250/31388)",
                                        "Updating files:  91% (28564/31388)",
                                        "Updating files:  92% (28877/31388)",
                                        "Updating files:  93% (29191/31388)",
                                        "Updating files:  94% (29505/31388)",
                                        "Updating files:  94% (29563/31388)",
                                        "Updating files:  95% (29819/31388)",
                                        "Updating files:  96% (30133/31388)",
                                        "Updating files:  97% (30447/31388)",
                                        "Updating files:  98% (30761/31388)",
                                        "Updating files:  98% (30891/31388)",
                                        "Updating files:  98% (30984/31388)",
                                        "Updating files:  98% (31024/31388)",
                                        "Updating files:  99% (31075/31388)",
                                        "Updating files: 100% (31388/31388)",
                                        "Updating files: 100% (31388/31388), done.",
                                        "HEAD is now at 9f275d5b9f Merge \"\"EIS-648 BMW_CHANGE_REQUEST: bmw/upstream/aptiv/master/upgrade_xcp_protocol_patcher_tool/be91dc0080f1cd9eecc1ee070fdf3e42197b5abf\"\" into ReleaseBranch_8.48.10-130",
                                        "cc-github.bmwgroup.net/swh/ecu_xpad_sc_mpad checked out to:",
                                        "9f275d5b9f924de72632bda96690327fccdd5ff5 Merge \"\"EIS-648 BMW_CHANGE_REQUEST: bmw/upstream/aptiv/master/upgrade_xcp_protocol_patcher_tool/be91dc0080f1cd9eecc1ee070fdf3e42197b5abf\"\" into ReleaseBranch_8.48.10-130"
                                    ],
                                    "zj_project": {
                                        "key": "cc-github.bmwgroup.net/swh/ecu_xpad_sc_mpad",
                                        "value": {
                                            "canonical_hostname": "cc-github.bmwgroup.net",
                                            "canonical_name": "cc-github.bmwgroup.net/swh/ecu_xpad_sc_mpad",
                                            "checkout": "master",
                                            "checkout_description": "zuul branch",
                                            "commit": "9f275d5b9f924de72632bda96690327fccdd5ff5",
                                            "name": "swh/ecu_xpad_sc_mpad",
                                            "required": true,
                                            "short_name": "ecu_xpad_sc_mpad",
                                            "src_dir": "src/cc-github.bmwgroup.net/swh/ecu_xpad_sc_mpad"
                                        }
                                    },
                                    "zuul_log_id": "in-loop-ignore"
                                },
                                {
                                    "ansible_loop_var": "zj_project",
                                    "changed": true,
                                    "cmd": "set -eu\n\n# Reset is needed because we pushed to a non-bare repo\ngit reset --hard\n# Clean is needed because we pushed to a non-bare repo\ngit clean -xdf\n# Undo the config setting we did above\ngit config --local --unset receive.denyCurrentBranch\n# checkout the branch matching the branch set up by the executor\ngit checkout --quiet master\n# put out a status line with the current HEAD\necho \"cc-github.bmwgroup.net/swh/foresight checked out to:\"\ngit log --pretty=oneline  -1\n",
                                    "delta": "0:00:00.490173",
                                    "end": "2024-04-21 00:43:38.312953",
                                    "failed": false,
                                    "invocation": {
                                        "module_args": {
                                            "_raw_params": "set -eu\n\n# Reset is needed because we pushed to a non-bare repo\ngit reset --hard\n# Clean is needed because we pushed to a non-bare repo\ngit clean -xdf\n# Undo the config setting we did above\ngit config --local --unset receive.denyCurrentBranch\n# checkout the branch matching the branch set up by the executor\ngit checkout --quiet master\n# put out a status line with the current HEAD\necho \"cc-github.bmwgroup.net/swh/foresight checked out to:\"\ngit log --pretty=oneline  -1\n",
                                            "_uses_shell": true,
                                            "argv": null,
                                            "chdir": "/home/zuul/src/cc-github.bmwgroup.net/swh/foresight",
                                            "creates": null,
                                            "executable": null,
                                            "removes": null,
                                            "stdin": null,
                                            "stdin_add_newline": true,
                                            "strip_empty_ends": true,
                                            "warn": false,
                                            "zuul_ansible_split_streams": false,
                                            "zuul_log_id": "in-loop-ignore"
                                        }
                                    },
                                    "msg": "",
                                    "rc": 0,
                                    "start": "2024-04-21 00:43:37.822780",
                                    "stderr": "",
                                    "stderr_lines": [],
                                    "stdout": "HEAD is now at 0961a62bed Merge pull request #18874 from swh/mah/adbk25-5914/use_mapdalprovider_in_lanedata\ncc-github.bmwgroup.net/swh/foresight checked out to:\n0961a62bed7ee412bf80fe5a9b879e5586964358 Merge pull request #18874 from swh/mah/adbk25-5914/use_mapdalprovider_in_lanedata",
                                    "stdout_lines": [
                                        "HEAD is now at 0961a62bed Merge pull request #18874 from swh/mah/adbk25-5914/use_mapdalprovider_in_lanedata",
                                        "cc-github.bmwgroup.net/swh/foresight checked out to:",
                                        "0961a62bed7ee412bf80fe5a9b879e5586964358 Merge pull request #18874 from swh/mah/adbk25-5914/use_mapdalprovider_in_lanedata"
                                    ],
                                    "zj_project": {
                                        "key": "cc-github.bmwgroup.net/swh/foresight",
                                        "value": {
                                            "canonical_hostname": "cc-github.bmwgroup.net",
                                            "canonical_name": "cc-github.bmwgroup.net/swh/foresight",
                                            "checkout": "master",
                                            "checkout_description": "zuul branch",
                                            "commit": "0961a62bed7ee412bf80fe5a9b879e5586964358",
                                            "name": "swh/foresight",
                                            "required": true,
                                            "short_name": "foresight",
                                            "src_dir": "src/cc-github.bmwgroup.net/swh/foresight"
                                        }
                                    },
                                    "zuul_log_id": "in-loop-ignore"
                                },
                                {
                                    "ansible_loop_var": "zj_project",
                                    "changed": true,
                                    "cmd": "set -eu\n\n# Reset is needed because we pushed to a non-bare repo\ngit reset --hard\n# Clean is needed because we pushed to a non-bare repo\ngit clean -xdf\n# Undo the config setting we did above\ngit config --local --unset receive.denyCurrentBranch\n# checkout the branch matching the branch set up by the executor\ngit checkout --quiet master\n# put out a status line with the current HEAD\necho \"cc-github.bmwgroup.net/swh/franky_ib checked out to:\"\ngit log --pretty=oneline  -1\n",
                                    "delta": "0:00:00.181874",
                                    "end": "2024-04-21 00:43:38.788123",
                                    "failed": false,
                                    "invocation": {
                                        "module_args": {
                                            "_raw_params": "set -eu\n\n# Reset is needed because we pushed to a non-bare repo\ngit reset --hard\n# Clean is needed because we pushed to a non-bare repo\ngit clean -xdf\n# Undo the config setting we did above\ngit config --local --unset receive.denyCurrentBranch\n# checkout the branch matching the branch set up by the executor\ngit checkout --quiet master\n# put out a status line with the current HEAD\necho \"cc-github.bmwgroup.net/swh/franky_ib checked out to:\"\ngit log --pretty=oneline  -1\n",
                                            "_uses_shell": true,
                                            "argv": null,
                                            "chdir": "/home/zuul/src/cc-github.bmwgroup.net/swh/franky_ib",
                                            "creates": null,
                                            "executable": null,
                                            "removes": null,
                                            "stdin": null,
                                            "stdin_add_newline": true,
                                            "strip_empty_ends": true,
                                            "warn": false,
                                            "zuul_ansible_split_streams": false,
                                            "zuul_log_id": "in-loop-ignore"
                                        }
                                    },
                                    "msg": "",
                                    "rc": 0,
                                    "start": "2024-04-21 00:43:38.606249",
                                    "stderr": "",
                                    "stderr_lines": [],
                                    "stdout": "HEAD is now at 7a74d49 Merge pull request #28 from swh/mt/dcs2219/define_adp_std_types_for_franky_ib\ncc-github.bmwgroup.net/swh/franky_ib checked out to:\n7a74d491251435e7b011e7010d11fbc9224b355c Merge pull request #28 from swh/mt/dcs2219/define_adp_std_types_for_franky_ib",
                                    "stdout_lines": [
                                        "HEAD is now at 7a74d49 Merge pull request #28 from swh/mt/dcs2219/define_adp_std_types_for_franky_ib",
                                        "cc-github.bmwgroup.net/swh/franky_ib checked out to:",
                                        "7a74d491251435e7b011e7010d11fbc9224b355c Merge pull request #28 from swh/mt/dcs2219/define_adp_std_types_for_franky_ib"
                                    ],
                                    "zj_project": {
                                        "key": "cc-github.bmwgroup.net/swh/franky_ib",
                                        "value": {
                                            "canonical_hostname": "cc-github.bmwgroup.net",
                                            "canonical_name": "cc-github.bmwgroup.net/swh/franky_ib",
                                            "checkout": "master",
                                            "checkout_description": "zuul branch",
                                            "commit": "7a74d491251435e7b011e7010d11fbc9224b355c",
                                            "name": "swh/franky_ib",
                                            "required": true,
                                            "short_name": "franky_ib",
                                            "src_dir": "src/cc-github.bmwgroup.net/swh/franky_ib"
                                        }
                                    },
                                    "zuul_log_id": "in-loop-ignore"
                                },
                                {
                                    "ansible_loop_var": "zj_project",
                                    "changed": true,
                                    "cmd": "set -eu\n\n# Reset is needed because we pushed to a non-bare repo\ngit reset --hard\n# Clean is needed because we pushed to a non-bare repo\ngit clean -xdf\n# Undo the config setting we did above\ngit config --local --unset receive.denyCurrentBranch\n# checkout the branch matching the branch set up by the executor\ngit checkout --quiet master\n# put out a status line with the current HEAD\necho \"cc-github.bmwgroup.net/swh/gnss_common checked out to:\"\ngit log --pretty=oneline  -1\n",
                                    "delta": "0:00:00.927173",
                                    "end": "2024-04-21 00:43:39.972147",
                                    "failed": false,
                                    "invocation": {
                                        "module_args": {
                                            "_raw_params": "set -eu\n\n# Reset is needed because we pushed to a non-bare repo\ngit reset --hard\n# Clean is needed because we pushed to a non-bare repo\ngit clean -xdf\n# Undo the config setting we did above\ngit config --local --unset receive.denyCurrentBranch\n# checkout the branch matching the branch set up by the executor\ngit checkout --quiet master\n# put out a status line with the current HEAD\necho \"cc-github.bmwgroup.net/swh/gnss_common checked out to:\"\ngit log --pretty=oneline  -1\n",
                                            "_uses_shell": true,
                                            "argv": null,
                                            "chdir": "/home/zuul/src/cc-github.bmwgroup.net/swh/gnss_common",
                                            "creates": null,
                                            "executable": null,
                                            "removes": null,
                                            "stdin": null,
                                            "stdin_add_newline": true,
                                            "strip_empty_ends": true,
                                            "warn": false,
                                            "zuul_ansible_split_streams": false,
                                            "zuul_log_id": "in-loop-ignore"
                                        }
                                    },
                                    "msg": "",
                                    "rc": 0,
                                    "start": "2024-04-21 00:43:39.044974",
                                    "stderr": "",
                                    "stderr_lines": [],
                                    "stdout": "HEAD is now at 7aeb42bd Merge pull request #711 from swh/vlru/use_newer_coding_api\ncc-github.bmwgroup.net/swh/gnss_common checked out to:\n7aeb42bd9976938f99a41c088c70fe8af14ee8fc Merge pull request #711 from swh/vlru/use_newer_coding_api",
                                    "stdout_lines": [
                                        "HEAD is now at 7aeb42bd Merge pull request #711 from swh/vlru/use_newer_coding_api",
                                        "cc-github.bmwgroup.net/swh/gnss_common checked out to:",
                                        "7aeb42bd9976938f99a41c088c70fe8af14ee8fc Merge pull request #711 from swh/vlru/use_newer_coding_api"
                                    ],
                                    "zj_project": {
                                        "key": "cc-github.bmwgroup.net/swh/gnss_common",
                                        "value": {
                                            "canonical_hostname": "cc-github.bmwgroup.net",
                                            "canonical_name": "cc-github.bmwgroup.net/swh/gnss_common",
                                            "checkout": "master",
                                            "checkout_description": "zuul branch",
                                            "commit": "7aeb42bd9976938f99a41c088c70fe8af14ee8fc",
                                            "name": "swh/gnss_common",
                                            "required": true,
                                            "short_name": "gnss_common",
                                            "src_dir": "src/cc-github.bmwgroup.net/swh/gnss_common"
                                        }
                                    },
                                    "zuul_log_id": "in-loop-ignore"
                                },
                                {
                                    "ansible_loop_var": "zj_project",
                                    "changed": true,
                                    "cmd": "set -eu\n\n# Reset is needed because we pushed to a non-bare repo\ngit reset --hard\n# Clean is needed because we pushed to a non-bare repo\ngit clean -xdf\n# Undo the config setting we did above\ngit config --local --unset receive.denyCurrentBranch\n# checkout the branch matching the branch set up by the executor\ngit checkout --quiet master\n# put out a status line with the current HEAD\necho \"cc-github.bmwgroup.net/swh/ib-vip checked out to:\"\ngit log --pretty=oneline  -1\n",
                                    "delta": "0:00:05.955165",
                                    "end": "2024-04-21 00:43:46.162503",
                                    "failed": false,
                                    "invocation": {
                                        "module_args": {
                                            "_raw_params": "set -eu\n\n# Reset is needed because we pushed to a non-bare repo\ngit reset --hard\n# Clean is needed because we pushed to a non-bare repo\ngit clean -xdf\n# Undo the config setting we did above\ngit config --local --unset receive.denyCurrentBranch\n# checkout the branch matching the branch set up by the executor\ngit checkout --quiet master\n# put out a status line with the current HEAD\necho \"cc-github.bmwgroup.net/swh/ib-vip checked out to:\"\ngit log --pretty=oneline  -1\n",
                                            "_uses_shell": true,
                                            "argv": null,
                                            "chdir": "/home/zuul/src/cc-github.bmwgroup.net/swh/ib-vip",
                                            "creates": null,
                                            "executable": null,
                                            "removes": null,
                                            "stdin": null,
                                            "stdin_add_newline": true,
                                            "strip_empty_ends": true,
                                            "warn": false,
                                            "zuul_ansible_split_streams": false,
                                            "zuul_log_id": "in-loop-ignore"
                                        }
                                    },
                                    "msg": "",
                                    "rc": 0,
                                    "start": "2024-04-21 00:43:40.207338",
                                    "stderr": "",
                                    "stderr_lines": [],
                                    "stdout": "Updating files:  40% (339/837)\rUpdating files:  41% (344/837)\rUpdating files:  42% (352/837)\rUpdating files:  43% (360/837)\rUpdating files:  44% (369/837)\rUpdating files:  45% (377/837)\rUpdating files:  46% (386/837)\rUpdating files:  47% (394/837)\rUpdating files:  48% (402/837)\rUpdating files:  49% (411/837)\rUpdating files:  50% (419/837)\rUpdating files:  51% (427/837)\rUpdating files:  52% (436/837)\rUpdating files:  53% (444/837)\rUpdating files:  54% (452/837)\rUpdating files:  54% (458/837)\rUpdating files:  55% (461/837)\rUpdating files:  56% (469/837)\rUpdating files:  57% (478/837)\rUpdating files:  58% (486/837)\rUpdating files:  59% (494/837)\rUpdating files:  60% (503/837)\rUpdating files:  61% (511/837)\rUpdating files:  62% (519/837)\rUpdating files:  63% (528/837)\rUpdating files:  64% (536/837)\rUpdating files:  65% (545/837)\rUpdating files:  66% (553/837)\rUpdating files:  67% (561/837)\rUpdating files:  68% (570/837)\rUpdating files:  69% (578/837)\rUpdating files:  69% (585/837)\rUpdating files:  70% (586/837)\rUpdating files:  71% (595/837)\rUpdating files:  72% (603/837)\rUpdating files:  73% (612/837)\rUpdating files:  74% (620/837)\rUpdating files:  75% (628/837)\rUpdating files:  76% (637/837)\rUpdating files:  77% (645/837)\rUpdating files:  78% (653/837)\rUpdating files:  79% (662/837)\rUpdating files:  80% (670/837)\rUpdating files:  81% (678/837)\rUpdating files:  81% (686/837)\rUpdating files:  82% (687/837)\rUpdating files:  83% (695/837)\rUpdating files:  84% (704/837)\rUpdating files:  85% (712/837)\rUpdating files:  86% (720/837)\rUpdating files:  87% (729/837)\rUpdating files:  88% (737/837)\rUpdating files:  89% (745/837)\rUpdating files:  90% (754/837)\rUpdating files:  91% (762/837)\rUpdating files:  92% (771/837)\rUpdating files:  93% (779/837)\rUpdating files:  94% (787/837)\rUpdating files:  94% (792/837)\rUpdating files:  95% (796/837)\rUpdating files:  96% (804/837)\rUpdating files:  97% (812/837)\rUpdating files:  98% (821/837)\rUpdating files:  99% (829/837)\rUpdating files: 100% (837/837)\rUpdating files: 100% (837/837), done.\nHEAD is now at 77d3abe6f Merge pull request #2123 from swh/autocherry_master_tc_9.2411.2404.2.0\ncc-github.bmwgroup.net/swh/ib-vip checked out to:\n77d3abe6f172efef2f93e6c3a61af0f3ee7d7967 Merge pull request #2123 from swh/autocherry_master_tc_9.2411.2404.2.0",
                                    "stdout_lines": [
                                        "Updating files:  40% (339/837)",
                                        "Updating files:  41% (344/837)",
                                        "Updating files:  42% (352/837)",
                                        "Updating files:  43% (360/837)",
                                        "Updating files:  44% (369/837)",
                                        "Updating files:  45% (377/837)",
                                        "Updating files:  46% (386/837)",
                                        "Updating files:  47% (394/837)",
                                        "Updating files:  48% (402/837)",
                                        "Updating files:  49% (411/837)",
                                        "Updating files:  50% (419/837)",
                                        "Updating files:  51% (427/837)",
                                        "Updating files:  52% (436/837)",
                                        "Updating files:  53% (444/837)",
                                        "Updating files:  54% (452/837)",
                                        "Updating files:  54% (458/837)",
                                        "Updating files:  55% (461/837)",
                                        "Updating files:  56% (469/837)",
                                        "Updating files:  57% (478/837)",
                                        "Updating files:  58% (486/837)",
                                        "Updating files:  59% (494/837)",
                                        "Updating files:  60% (503/837)",
                                        "Updating files:  61% (511/837)",
                                        "Updating files:  62% (519/837)",
                                        "Updating files:  63% (528/837)",
                                        "Updating files:  64% (536/837)",
                                        "Updating files:  65% (545/837)",
                                        "Updating files:  66% (553/837)",
                                        "Updating files:  67% (561/837)",
                                        "Updating files:  68% (570/837)",
                                        "Updating files:  69% (578/837)",
                                        "Updating files:  69% (585/837)",
                                        "Updating files:  70% (586/837)",
                                        "Updating files:  71% (595/837)",
                                        "Updating files:  72% (603/837)",
                                        "Updating files:  73% (612/837)",
                                        "Updating files:  74% (620/837)",
                                        "Updating files:  75% (628/837)",
                                        "Updating files:  76% (637/837)",
                                        "Updating files:  77% (645/837)",
                                        "Updating files:  78% (653/837)",
                                        "Updating files:  79% (662/837)",
                                        "Updating files:  80% (670/837)",
                                        "Updating files:  81% (678/837)",
                                        "Updating files:  81% (686/837)",
                                        "Updating files:  82% (687/837)",
                                        "Updating files:  83% (695/837)",
                                        "Updating files:  84% (704/837)",
                                        "Updating files:  85% (712/837)",
                                        "Updating files:  86% (720/837)",
                                        "Updating files:  87% (729/837)",
                                        "Updating files:  88% (737/837)",
                                        "Updating files:  89% (745/837)",
                                        "Updating files:  90% (754/837)",
                                        "Updating files:  91% (762/837)",
                                        "Updating files:  92% (771/837)",
                                        "Updating files:  93% (779/837)",
                                        "Updating files:  94% (787/837)",
                                        "Updating files:  94% (792/837)",
                                        "Updating files:  95% (796/837)",
                                        "Updating files:  96% (804/837)",
                                        "Updating files:  97% (812/837)",
                                        "Updating files:  98% (821/837)",
                                        "Updating files:  99% (829/837)",
                                        "Updating files: 100% (837/837)",
                                        "Updating files: 100% (837/837), done.",
                                        "HEAD is now at 77d3abe6f Merge pull request #2123 from swh/autocherry_master_tc_9.2411.2404.2.0",
                                        "cc-github.bmwgroup.net/swh/ib-vip checked out to:",
                                        "77d3abe6f172efef2f93e6c3a61af0f3ee7d7967 Merge pull request #2123 from swh/autocherry_master_tc_9.2411.2404.2.0"
                                    ],
                                    "zj_project": {
                                        "key": "cc-github.bmwgroup.net/swh/ib-vip",
                                        "value": {
                                            "canonical_hostname": "cc-github.bmwgroup.net",
                                            "canonical_name": "cc-github.bmwgroup.net/swh/ib-vip",
                                            "checkout": "master",
                                            "checkout_description": "zuul branch",
                                            "commit": "77d3abe6f172efef2f93e6c3a61af0f3ee7d7967",
                                            "name": "swh/ib-vip",
                                            "required": true,
                                            "short_name": "ib-vip",
                                            "src_dir": "src/cc-github.bmwgroup.net/swh/ib-vip"
                                        }
                                    },
                                    "zuul_log_id": "in-loop-ignore"
                                },
                                {
                                    "ansible_loop_var": "zj_project",
                                    "changed": true,
                                    "cmd": "set -eu\n\n# Reset is needed because we pushed to a non-bare repo\ngit reset --hard\n# Clean is needed because we pushed to a non-bare repo\ngit clean -xdf\n# Undo the config setting we did above\ngit config --local --unset receive.denyCurrentBranch\n# checkout the branch matching the branch set up by the executor\ngit checkout --quiet master\n# put out a status line with the current HEAD\necho \"cc-github.bmwgroup.net/swh/ltf-dlt checked out to:\"\ngit log --pretty=oneline  -1\n",
                                    "delta": "0:00:00.078361",
                                    "end": "2024-04-21 00:43:46.559167",
                                    "failed": false,
                                    "invocation": {
                                        "module_args": {
                                            "_raw_params": "set -eu\n\n# Reset is needed because we pushed to a non-bare repo\ngit reset --hard\n# Clean is needed because we pushed to a non-bare repo\ngit clean -xdf\n# Undo the config setting we did above\ngit config --local --unset receive.denyCurrentBranch\n# checkout the branch matching the branch set up by the executor\ngit checkout --quiet master\n# put out a status line with the current HEAD\necho \"cc-github.bmwgroup.net/swh/ltf-dlt checked out to:\"\ngit log --pretty=oneline  -1\n",
                                            "_uses_shell": true,
                                            "argv": null,
                                            "chdir": "/home/zuul/src/cc-github.bmwgroup.net/swh/ltf-dlt",
                                            "creates": null,
                                            "executable": null,
                                            "removes": null,
                                            "stdin": null,
                                            "stdin_add_newline": true,
                                            "strip_empty_ends": true,
                                            "warn": false,
                                            "zuul_ansible_split_streams": false,
                                            "zuul_log_id": "in-loop-ignore"
                                        }
                                    },
                                    "msg": "",
                                    "rc": 0,
                                    "start": "2024-04-21 00:43:46.480806",
                                    "stderr": "",
                                    "stderr_lines": [],
                                    "stdout": "HEAD is now at 68fa15c Merge pull request #146 from swh/feature__swp_31496__simplified_gitlint\ncc-github.bmwgroup.net/swh/ltf-dlt checked out to:\n68fa15c725670a73c3c7f3566a99f38cd3a87ae5 Merge pull request #146 from swh/feature__swp_31496__simplified_gitlint",
                                    "stdout_lines": [
                                        "HEAD is now at 68fa15c Merge pull request #146 from swh/feature__swp_31496__simplified_gitlint",
                                        "cc-github.bmwgroup.net/swh/ltf-dlt checked out to:",
                                        "68fa15c725670a73c3c7f3566a99f38cd3a87ae5 Merge pull request #146 from swh/feature__swp_31496__simplified_gitlint"
                                    ],
                                    "zj_project": {
                                        "key": "cc-github.bmwgroup.net/swh/ltf-dlt",
                                        "value": {
                                            "canonical_hostname": "cc-github.bmwgroup.net",
                                            "canonical_name": "cc-github.bmwgroup.net/swh/ltf-dlt",
                                            "checkout": "master",
                                            "checkout_description": "zuul branch",
                                            "commit": "68fa15c725670a73c3c7f3566a99f38cd3a87ae5",
                                            "name": "swh/ltf-dlt",
                                            "required": true,
                                            "short_name": "ltf-dlt",
                                            "src_dir": "src/cc-github.bmwgroup.net/swh/ltf-dlt"
                                        }
                                    },
                                    "zuul_log_id": "in-loop-ignore"
                                },
                                {
                                    "ansible_loop_var": "zj_project",
                                    "changed": true,
                                    "cmd": "set -eu\n\n# Reset is needed because we pushed to a non-bare repo\ngit reset --hard\n# Clean is needed because we pushed to a non-bare repo\ngit clean -xdf\n# Undo the config setting we did above\ngit config --local --unset receive.denyCurrentBranch\n# checkout the branch matching the branch set up by the executor\ngit checkout --quiet master\n# put out a status line with the current HEAD\necho \"cc-github.bmwgroup.net/swh/orion checked out to:\"\ngit log --pretty=oneline  -1\n",
                                    "delta": "0:00:01.101757",
                                    "end": "2024-04-21 00:43:47.925678",
                                    "failed": false,
                                    "invocation": {
                                        "module_args": {
                                            "_raw_params": "set -eu\n\n# Reset is needed because we pushed to a non-bare repo\ngit reset --hard\n# Clean is needed because we pushed to a non-bare repo\ngit clean -xdf\n# Undo the config setting we did above\ngit config --local --unset receive.denyCurrentBranch\n# checkout the branch matching the branch set up by the executor\ngit checkout --quiet master\n# put out a status line with the current HEAD\necho \"cc-github.bmwgroup.net/swh/orion checked out to:\"\ngit log --pretty=oneline  -1\n",
                                            "_uses_shell": true,
                                            "argv": null,
                                            "chdir": "/home/zuul/src/cc-github.bmwgroup.net/swh/orion",
                                            "creates": null,
                                            "executable": null,
                                            "removes": null,
                                            "stdin": null,
                                            "stdin_add_newline": true,
                                            "strip_empty_ends": true,
                                            "warn": false,
                                            "zuul_ansible_split_streams": false,
                                            "zuul_log_id": "in-loop-ignore"
                                        }
                                    },
                                    "msg": "",
                                    "rc": 0,
                                    "start": "2024-04-21 00:43:46.823921",
                                    "stderr": "",
                                    "stderr_lines": [],
                                    "stdout": "HEAD is now at 72eb2c62d Bumping third_party/adp_pkg/commit_info.bzl to 8d83dea1d58bef901e97793e1c34ad57986fada1\ncc-github.bmwgroup.net/swh/orion checked out to:\n72eb2c62dc7bccf336d71917365610e01f7b7512 Bumping third_party/adp_pkg/commit_info.bzl to 8d83dea1d58bef901e97793e1c34ad57986fada1",
                                    "stdout_lines": [
                                        "HEAD is now at 72eb2c62d Bumping third_party/adp_pkg/commit_info.bzl to 8d83dea1d58bef901e97793e1c34ad57986fada1",
                                        "cc-github.bmwgroup.net/swh/orion checked out to:",
                                        "72eb2c62dc7bccf336d71917365610e01f7b7512 Bumping third_party/adp_pkg/commit_info.bzl to 8d83dea1d58bef901e97793e1c34ad57986fada1"
                                    ],
                                    "zj_project": {
                                        "key": "cc-github.bmwgroup.net/swh/orion",
                                        "value": {
                                            "canonical_hostname": "cc-github.bmwgroup.net",
                                            "canonical_name": "cc-github.bmwgroup.net/swh/orion",
                                            "checkout": "master",
                                            "checkout_description": "zuul branch",
                                            "commit": "72eb2c62dc7bccf336d71917365610e01f7b7512",
                                            "name": "swh/orion",
                                            "required": true,
                                            "short_name": "orion",
                                            "src_dir": "src/cc-github.bmwgroup.net/swh/orion"
                                        }
                                    },
                                    "zuul_log_id": "in-loop-ignore"
                                },
                                {
                                    "ansible_loop_var": "zj_project",
                                    "changed": true,
                                    "cmd": "set -eu\n\n# Reset is needed because we pushed to a non-bare repo\ngit reset --hard\n# Clean is needed because we pushed to a non-bare repo\ngit clean -xdf\n# Undo the config setting we did above\ngit config --local --unset receive.denyCurrentBranch\n# checkout the branch matching the branch set up by the executor\ngit checkout --quiet master\n# put out a status line with the current HEAD\necho \"cc-github.bmwgroup.net/swh/orion_aeb_temp checked out to:\"\ngit log --pretty=oneline  -1\n",
                                    "delta": "0:00:00.023784",
                                    "end": "2024-04-21 00:43:48.192476",
                                    "failed": false,
                                    "invocation": {
                                        "module_args": {
                                            "_raw_params": "set -eu\n\n# Reset is needed because we pushed to a non-bare repo\ngit reset --hard\n# Clean is needed because we pushed to a non-bare repo\ngit clean -xdf\n# Undo the config setting we did above\ngit config --local --unset receive.denyCurrentBranch\n# checkout the branch matching the branch set up by the executor\ngit checkout --quiet master\n# put out a status line with the current HEAD\necho \"cc-github.bmwgroup.net/swh/orion_aeb_temp checked out to:\"\ngit log --pretty=oneline  -1\n",
                                            "_uses_shell": true,
                                            "argv": null,
                                            "chdir": "/home/zuul/src/cc-github.bmwgroup.net/swh/orion_aeb_temp",
                                            "creates": null,
                                            "executable": null,
                                            "removes": null,
                                            "stdin": null,
                                            "stdin_add_newline": true,
                                            "strip_empty_ends": true,
                                            "warn": false,
                                            "zuul_ansible_split_streams": false,
                                            "zuul_log_id": "in-loop-ignore"
                                        }
                                    },
                                    "msg": "",
                                    "rc": 0,
                                    "start": "2024-04-21 00:43:48.168692",
                                    "stderr": "",
                                    "stderr_lines": [],
                                    "stdout": "HEAD is now at b473c7ab Merge pull request #598 from swh/elsa_erase_aeb\ncc-github.bmwgroup.net/swh/orion_aeb_temp checked out to:\nb473c7ab8c70f69511aeff1374d70aef88f33d4a Merge pull request #598 from swh/elsa_erase_aeb",
                                    "stdout_lines": [
                                        "HEAD is now at b473c7ab Merge pull request #598 from swh/elsa_erase_aeb",
                                        "cc-github.bmwgroup.net/swh/orion_aeb_temp checked out to:",
                                        "b473c7ab8c70f69511aeff1374d70aef88f33d4a Merge pull request #598 from swh/elsa_erase_aeb"
                                    ],
                                    "zj_project": {
                                        "key": "cc-github.bmwgroup.net/swh/orion_aeb_temp",
                                        "value": {
                                            "canonical_hostname": "cc-github.bmwgroup.net",
                                            "canonical_name": "cc-github.bmwgroup.net/swh/orion_aeb_temp",
                                            "checkout": "master",
                                            "checkout_description": "zuul branch",
                                            "commit": "b473c7ab8c70f69511aeff1374d70aef88f33d4a",
                                            "name": "swh/orion_aeb_temp",
                                            "required": true,
                                            "short_name": "orion_aeb_temp",
                                            "src_dir": "src/cc-github.bmwgroup.net/swh/orion_aeb_temp"
                                        }
                                    },
                                    "zuul_log_id": "in-loop-ignore"
                                },
                                {
                                    "ansible_loop_var": "zj_project",
                                    "changed": true,
                                    "cmd": "set -eu\n\n# Reset is needed because we pushed to a non-bare repo\ngit reset --hard\n# Clean is needed because we pushed to a non-bare repo\ngit clean -xdf\n# Undo the config setting we did above\ngit config --local --unset receive.denyCurrentBranch\n# checkout the branch matching the branch set up by the executor\ngit checkout --quiet master\n# put out a status line with the current HEAD\necho \"cc-github.bmwgroup.net/swh/system_description checked out to:\"\ngit log --pretty=oneline  -1\n",
                                    "delta": "0:00:01.008281",
                                    "end": "2024-04-21 00:43:49.443883",
                                    "failed": false,
                                    "invocation": {
                                        "module_args": {
                                            "_raw_params": "set -eu\n\n# Reset is needed because we pushed to a non-bare repo\ngit reset --hard\n# Clean is needed because we pushed to a non-bare repo\ngit clean -xdf\n# Undo the config setting we did above\ngit config --local --unset receive.denyCurrentBranch\n# checkout the branch matching the branch set up by the executor\ngit checkout --quiet master\n# put out a status line with the current HEAD\necho \"cc-github.bmwgroup.net/swh/system_description checked out to:\"\ngit log --pretty=oneline  -1\n",
                                            "_uses_shell": true,
                                            "argv": null,
                                            "chdir": "/home/zuul/src/cc-github.bmwgroup.net/swh/system_description",
                                            "creates": null,
                                            "executable": null,
                                            "removes": null,
                                            "stdin": null,
                                            "stdin_add_newline": true,
                                            "strip_empty_ends": true,
                                            "warn": false,
                                            "zuul_ansible_split_streams": false,
                                            "zuul_log_id": "in-loop-ignore"
                                        }
                                    },
                                    "msg": "",
                                    "rc": 0,
                                    "start": "2024-04-21 00:43:48.435602",
                                    "stderr": "",
                                    "stderr_lines": [],
                                    "stdout": "HEAD is now at 42dc12234 Merge pull request #2319 from swh/at_brcf\ncc-github.bmwgroup.net/swh/system_description checked out to:\n42dc122349acc14be41c1ebee15c7edff680fb79 Merge pull request #2319 from swh/at_brcf",
                                    "stdout_lines": [
                                        "HEAD is now at 42dc12234 Merge pull request #2319 from swh/at_brcf",
                                        "cc-github.bmwgroup.net/swh/system_description checked out to:",
                                        "42dc122349acc14be41c1ebee15c7edff680fb79 Merge pull request #2319 from swh/at_brcf"
                                    ],
                                    "zj_project": {
                                        "key": "cc-github.bmwgroup.net/swh/system_description",
                                        "value": {
                                            "canonical_hostname": "cc-github.bmwgroup.net",
                                            "canonical_name": "cc-github.bmwgroup.net/swh/system_description",
                                            "checkout": "master",
                                            "checkout_description": "zuul branch",
                                            "commit": "42dc122349acc14be41c1ebee15c7edff680fb79",
                                            "name": "swh/system_description",
                                            "required": true,
                                            "short_name": "system_description",
                                            "src_dir": "src/cc-github.bmwgroup.net/swh/system_description"
                                        }
                                    },
                                    "zuul_log_id": "in-loop-ignore"
                                },
                                {
                                    "ansible_loop_var": "zj_project",
                                    "changed": true,
                                    "cmd": "set -eu\n\n# Reset is needed because we pushed to a non-bare repo\ngit reset --hard\n# Clean is needed because we pushed to a non-bare repo\ngit clean -xdf\n# Undo the config setting we did above\ngit config --local --unset receive.denyCurrentBranch\n# checkout the branch matching the branch set up by the executor\ngit checkout --quiet master\n# put out a status line with the current HEAD\necho \"cc-github.bmwgroup.net/swh/ufm checked out to:\"\ngit log --pretty=oneline  -1\n",
                                    "delta": "0:00:04.952581",
                                    "end": "2024-04-21 00:43:54.641322",
                                    "failed": false,
                                    "invocation": {
                                        "module_args": {
                                            "_raw_params": "set -eu\n\n# Reset is needed because we pushed to a non-bare repo\ngit reset --hard\n# Clean is needed because we pushed to a non-bare repo\ngit clean -xdf\n# Undo the config setting we did above\ngit config --local --unset receive.denyCurrentBranch\n# checkout the branch matching the branch set up by the executor\ngit checkout --quiet master\n# put out a status line with the current HEAD\necho \"cc-github.bmwgroup.net/swh/ufm checked out to:\"\ngit log --pretty=oneline  -1\n",
                                            "_uses_shell": true,
                                            "argv": null,
                                            "chdir": "/home/zuul/src/cc-github.bmwgroup.net/swh/ufm",
                                            "creates": null,
                                            "executable": null,
                                            "removes": null,
                                            "stdin": null,
                                            "stdin_add_newline": true,
                                            "strip_empty_ends": true,
                                            "warn": false,
                                            "zuul_ansible_split_streams": false,
                                            "zuul_log_id": "in-loop-ignore"
                                        }
                                    },
                                    "msg": "",
                                    "rc": 0,
                                    "start": "2024-04-21 00:43:49.688741",
                                    "stderr": "",
                                    "stderr_lines": [],
                                    "stdout": "Updating files:  13% (1017/7788)\rUpdating files:  14% (1091/7788)\rUpdating files:  14% (1092/7788)\rUpdating files:  15% (1169/7788)\rUpdating files:  16% (1247/7788)\rUpdating files:  17% (1324/7788)\rUpdating files:  18% (1402/7788)\rUpdating files:  19% (1480/7788)\rUpdating files:  20% (1558/7788)\rUpdating files:  21% (1636/7788)\rUpdating files:  22% (1714/7788)\rUpdating files:  23% (1792/7788)\rUpdating files:  24% (1870/7788)\rUpdating files:  25% (1947/7788)\rUpdating files:  26% (2025/7788)\rUpdating files:  27% (2103/7788)\rUpdating files:  27% (2165/7788)\rUpdating files:  28% (2181/7788)\rUpdating files:  29% (2259/7788)\rUpdating files:  30% (2337/7788)\rUpdating files:  31% (2415/7788)\rUpdating files:  32% (2493/7788)\rUpdating files:  33% (2571/7788)\rUpdating files:  34% (2648/7788)\rUpdating files:  35% (2726/7788)\rUpdating files:  36% (2804/7788)\rUpdating files:  37% (2882/7788)\rUpdating files:  38% (2960/7788)\rUpdating files:  39% (3038/7788)\rUpdating files:  40% (3116/7788)\rUpdating files:  41% (3194/7788)\rUpdating files:  42% (3271/7788)\rUpdating files:  43% (3349/7788)\rUpdating files:  44% (3427/7788)\rUpdating files:  45% (3505/7788)\rUpdating files:  46% (3583/7788)\rUpdating files:  47% (3661/7788)\rUpdating files:  48% (3739/7788)\rUpdating files:  49% (3817/7788)\rUpdating files:  50% (3894/7788)\rUpdating files:  51% (3972/7788)\rUpdating files:  52% (4050/7788)\rUpdating files:  53% (4128/7788)\rUpdating files:  54% (4206/7788)\rUpdating files:  55% (4284/7788)\rUpdating files:  56% (4362/7788)\rUpdating files:  57% (4440/7788)\rUpdating files:  58% (4518/7788)\rUpdating files:  59% (4595/7788)\rUpdating files:  60% (4673/7788)\rUpdating files:  61% (4751/7788)\rUpdating files:  62% (4829/7788)\rUpdating files:  63% (4907/7788)\rUpdating files:  64% (4985/7788)\rUpdating files:  65% (5063/7788)\rUpdating files:  66% (5141/7788)\rUpdating files:  67% (5218/7788)\rUpdating files:  68% (5296/7788)\rUpdating files:  69% (5374/7788)\rUpdating files:  70% (5452/7788)\rUpdating files:  71% (5530/7788)\rUpdating files:  72% (5608/7788)\rUpdating files:  73% (5686/7788)\rUpdating files:  74% (5764/7788)\rUpdating files:  75% (5841/7788)\rUpdating files:  76% (5919/7788)\rUpdating files:  77% (5997/7788)\rUpdating files:  78% (6075/7788)\rUpdating files:  79% (6153/7788)\rUpdating files:  80% (6231/7788)\rUpdating files:  81% (6309/7788)\rUpdating files:  82% (6387/7788)\rUpdating files:  83% (6465/7788)\rUpdating files:  84% (6542/7788)\rUpdating files:  85% (6620/7788)\rUpdating files:  86% (6698/7788)\rUpdating files:  87% (6776/7788)\rUpdating files:  88% (6854/7788)\rUpdating files:  89% (6932/7788)\rUpdating files:  90% (7010/7788)\rUpdating files:  90% (7068/7788)\rUpdating files:  91% (7088/7788)\rUpdating files:  92% (7165/7788)\rUpdating files:  93% (7243/7788)\rUpdating files:  94% (7321/7788)\rUpdating files:  95% (7399/7788)\rUpdating files:  96% (7477/7788)\rUpdating files:  97% (7555/7788)\rUpdating files:  98% (7633/7788)\rUpdating files:  99% (7711/7788)\rUpdating files: 100% (7788/7788)\rUpdating files: 100% (7788/7788), done.\nHEAD is now at 24d683807 Merge pull request #1800 from swh/cbedda_update_hashes_490\ncc-github.bmwgroup.net/swh/ufm checked out to:\n24d683807041b01ac000b8a6212ec6ad50e3b5e2 Merge pull request #1800 from swh/cbedda_update_hashes_490",
                                    "stdout_lines": [
                                        "Updating files:  13% (1017/7788)",
                                        "Updating files:  14% (1091/7788)",
                                        "Updating files:  14% (1092/7788)",
                                        "Updating files:  15% (1169/7788)",
                                        "Updating files:  16% (1247/7788)",
                                        "Updating files:  17% (1324/7788)",
                                        "Updating files:  18% (1402/7788)",
                                        "Updating files:  19% (1480/7788)",
                                        "Updating files:  20% (1558/7788)",
                                        "Updating files:  21% (1636/7788)",
                                        "Updating files:  22% (1714/7788)",
                                        "Updating files:  23% (1792/7788)",
                                        "Updating files:  24% (1870/7788)",
                                        "Updating files:  25% (1947/7788)",
                                        "Updating files:  26% (2025/7788)",
                                        "Updating files:  27% (2103/7788)",
                                        "Updating files:  27% (2165/7788)",
                                        "Updating files:  28% (2181/7788)",
                                        "Updating files:  29% (2259/7788)",
                                        "Updating files:  30% (2337/7788)",
                                        "Updating files:  31% (2415/7788)",
                                        "Updating files:  32% (2493/7788)",
                                        "Updating files:  33% (2571/7788)",
                                        "Updating files:  34% (2648/7788)",
                                        "Updating files:  35% (2726/7788)",
                                        "Updating files:  36% (2804/7788)",
                                        "Updating files:  37% (2882/7788)",
                                        "Updating files:  38% (2960/7788)",
                                        "Updating files:  39% (3038/7788)",
                                        "Updating files:  40% (3116/7788)",
                                        "Updating files:  41% (3194/7788)",
                                        "Updating files:  42% (3271/7788)",
                                        "Updating files:  43% (3349/7788)",
                                        "Updating files:  44% (3427/7788)",
                                        "Updating files:  45% (3505/7788)",
                                        "Updating files:  46% (3583/7788)",
                                        "Updating files:  47% (3661/7788)",
                                        "Updating files:  48% (3739/7788)",
                                        "Updating files:  49% (3817/7788)",
                                        "Updating files:  50% (3894/7788)",
                                        "Updating files:  51% (3972/7788)",
                                        "Updating files:  52% (4050/7788)",
                                        "Updating files:  53% (4128/7788)",
                                        "Updating files:  54% (4206/7788)",
                                        "Updating files:  55% (4284/7788)",
                                        "Updating files:  56% (4362/7788)",
                                        "Updating files:  57% (4440/7788)",
                                        "Updating files:  58% (4518/7788)",
                                        "Updating files:  59% (4595/7788)",
                                        "Updating files:  60% (4673/7788)",
                                        "Updating files:  61% (4751/7788)",
                                        "Updating files:  62% (4829/7788)",
                                        "Updating files:  63% (4907/7788)",
                                        "Updating files:  64% (4985/7788)",
                                        "Updating files:  65% (5063/7788)",
                                        "Updating files:  66% (5141/7788)",
                                        "Updating files:  67% (5218/7788)",
                                        "Updating files:  68% (5296/7788)",
                                        "Updating files:  69% (5374/7788)",
                                        "Updating files:  70% (5452/7788)",
                                        "Updating files:  71% (5530/7788)",
                                        "Updating files:  72% (5608/7788)",
                                        "Updating files:  73% (5686/7788)",
                                        "Updating files:  74% (5764/7788)",
                                        "Updating files:  75% (5841/7788)",
                                        "Updating files:  76% (5919/7788)",
                                        "Updating files:  77% (5997/7788)",
                                        "Updating files:  78% (6075/7788)",
                                        "Updating files:  79% (6153/7788)",
                                        "Updating files:  80% (6231/7788)",
                                        "Updating files:  81% (6309/7788)",
                                        "Updating files:  82% (6387/7788)",
                                        "Updating files:  83% (6465/7788)",
                                        "Updating files:  84% (6542/7788)",
                                        "Updating files:  85% (6620/7788)",
                                        "Updating files:  86% (6698/7788)",
                                        "Updating files:  87% (6776/7788)",
                                        "Updating files:  88% (6854/7788)",
                                        "Updating files:  89% (6932/7788)",
                                        "Updating files:  90% (7010/7788)",
                                        "Updating files:  90% (7068/7788)",
                                        "Updating files:  91% (7088/7788)",
                                        "Updating files:  92% (7165/7788)",
                                        "Updating files:  93% (7243/7788)",
                                        "Updating files:  94% (7321/7788)",
                                        "Updating files:  95% (7399/7788)",
                                        "Updating files:  96% (7477/7788)",
                                        "Updating files:  97% (7555/7788)",
                                        "Updating files:  98% (7633/7788)",
                                        "Updating files:  99% (7711/7788)",
                                        "Updating files: 100% (7788/7788)",
                                        "Updating files: 100% (7788/7788), done.",
                                        "HEAD is now at 24d683807 Merge pull request #1800 from swh/cbedda_update_hashes_490",
                                        "cc-github.bmwgroup.net/swh/ufm checked out to:",
                                        "24d683807041b01ac000b8a6212ec6ad50e3b5e2 Merge pull request #1800 from swh/cbedda_update_hashes_490"
                                    ],
                                    "zj_project": {
                                        "key": "cc-github.bmwgroup.net/swh/ufm",
                                        "value": {
                                            "canonical_hostname": "cc-github.bmwgroup.net",
                                            "canonical_name": "cc-github.bmwgroup.net/swh/ufm",
                                            "checkout": "master",
                                            "checkout_description": "zuul branch",
                                            "commit": "24d683807041b01ac000b8a6212ec6ad50e3b5e2",
                                            "name": "swh/ufm",
                                            "required": true,
                                            "short_name": "ufm",
                                            "src_dir": "src/cc-github.bmwgroup.net/swh/ufm"
                                        }
                                    },
                                    "zuul_log_id": "in-loop-ignore"
                                },
                                {
                                    "ansible_loop_var": "zj_project",
                                    "changed": true,
                                    "cmd": "set -eu\n\n# Reset is needed because we pushed to a non-bare repo\ngit reset --hard\n# Clean is needed because we pushed to a non-bare repo\ngit clean -xdf\n# Undo the config setting we did above\ngit config --local --unset receive.denyCurrentBranch\n# checkout the branch matching the branch set up by the executor\ngit checkout --quiet master\n# put out a status line with the current HEAD\necho \"cc-github.bmwgroup.net/swh/xpad-ara checked out to:\"\ngit log --pretty=oneline  -1\n",
                                    "delta": "0:00:01.690351",
                                    "end": "2024-04-21 00:43:56.602314",
                                    "failed": false,
                                    "invocation": {
                                        "module_args": {
                                            "_raw_params": "set -eu\n\n# Reset is needed because we pushed to a non-bare repo\ngit reset --hard\n# Clean is needed because we pushed to a non-bare repo\ngit clean -xdf\n# Undo the config setting we did above\ngit config --local --unset receive.denyCurrentBranch\n# checkout the branch matching the branch set up by the executor\ngit checkout --quiet master\n# put out a status line with the current HEAD\necho \"cc-github.bmwgroup.net/swh/xpad-ara checked out to:\"\ngit log --pretty=oneline  -1\n",
                                            "_uses_shell": true,
                                            "argv": null,
                                            "chdir": "/home/zuul/src/cc-github.bmwgroup.net/swh/xpad-ara",
                                            "creates": null,
                                            "executable": null,
                                            "removes": null,
                                            "stdin": null,
                                            "stdin_add_newline": true,
                                            "strip_empty_ends": true,
                                            "warn": false,
                                            "zuul_ansible_split_streams": false,
                                            "zuul_log_id": "in-loop-ignore"
                                        }
                                    },
                                    "msg": "",
                                    "rc": 0,
                                    "start": "2024-04-21 00:43:54.911963",
                                    "stderr": "",
                                    "stderr_lines": [],
                                    "stdout": "HEAD is now at 591c4c708 Merge pull request #2327 from swh/swp_109160_moving_pkcs11_test_app\ncc-github.bmwgroup.net/swh/xpad-ara checked out to:\n591c4c708640423656b97148b3d5767a987d4818 Merge pull request #2327 from swh/swp_109160_moving_pkcs11_test_app",
                                    "stdout_lines": [
                                        "HEAD is now at 591c4c708 Merge pull request #2327 from swh/swp_109160_moving_pkcs11_test_app",
                                        "cc-github.bmwgroup.net/swh/xpad-ara checked out to:",
                                        "591c4c708640423656b97148b3d5767a987d4818 Merge pull request #2327 from swh/swp_109160_moving_pkcs11_test_app"
                                    ],
                                    "zj_project": {
                                        "key": "cc-github.bmwgroup.net/swh/xpad-ara",
                                        "value": {
                                            "canonical_hostname": "cc-github.bmwgroup.net",
                                            "canonical_name": "cc-github.bmwgroup.net/swh/xpad-ara",
                                            "checkout": "master",
                                            "checkout_description": "zuul branch",
                                            "commit": "591c4c708640423656b97148b3d5767a987d4818",
                                            "name": "swh/xpad-ara",
                                            "required": true,
                                            "short_name": "xpad-ara",
                                            "src_dir": "src/cc-github.bmwgroup.net/swh/xpad-ara"
                                        }
                                    },
                                    "zuul_log_id": "in-loop-ignore"
                                },
                                {
                                    "ansible_loop_var": "zj_project",
                                    "changed": true,
                                    "cmd": "set -eu\n\n# Reset is needed because we pushed to a non-bare repo\ngit reset --hard\n# Clean is needed because we pushed to a non-bare repo\ngit clean -xdf\n# Undo the config setting we did above\ngit config --local --unset receive.denyCurrentBranch\n# checkout the branch matching the branch set up by the executor\ngit checkout --quiet master\n# put out a status line with the current HEAD\necho \"cc-github.bmwgroup.net/swh/xpad-shared checked out to:\"\ngit log --pretty=oneline  -1\n",
                                    "delta": "0:00:02.026675",
                                    "end": "2024-04-21 00:43:58.911889",
                                    "failed": false,
                                    "invocation": {
                                        "module_args": {
                                            "_raw_params": "set -eu\n\n# Reset is needed because we pushed to a non-bare repo\ngit reset --hard\n# Clean is needed because we pushed to a non-bare repo\ngit clean -xdf\n# Undo the config setting we did above\ngit config --local --unset receive.denyCurrentBranch\n# checkout the branch matching the branch set up by the executor\ngit checkout --quiet master\n# put out a status line with the current HEAD\necho \"cc-github.bmwgroup.net/swh/xpad-shared checked out to:\"\ngit log --pretty=oneline  -1\n",
                                            "_uses_shell": true,
                                            "argv": null,
                                            "chdir": "/home/zuul/src/cc-github.bmwgroup.net/swh/xpad-shared",
                                            "creates": null,
                                            "executable": null,
                                            "removes": null,
                                            "stdin": null,
                                            "stdin_add_newline": true,
                                            "strip_empty_ends": true,
                                            "warn": false,
                                            "zuul_ansible_split_streams": false,
                                            "zuul_log_id": "in-loop-ignore"
                                        }
                                    },
                                    "msg": "",
                                    "rc": 0,
                                    "start": "2024-04-21 00:43:56.885214",
                                    "stderr": "",
                                    "stderr_lines": [],
                                    "stdout": "HEAD is now at 5fe3ea2c8e Merge pull request #22942 from swh/juwi_pas_calibration_integration_2024_cw16\ncc-github.bmwgroup.net/swh/xpad-shared checked out to:\n5fe3ea2c8e16591c6c11a5398c0fd866652ef652 Merge pull request #22942 from swh/juwi_pas_calibration_integration_2024_cw16",
                                    "stdout_lines": [
                                        "HEAD is now at 5fe3ea2c8e Merge pull request #22942 from swh/juwi_pas_calibration_integration_2024_cw16",
                                        "cc-github.bmwgroup.net/swh/xpad-shared checked out to:",
                                        "5fe3ea2c8e16591c6c11a5398c0fd866652ef652 Merge pull request #22942 from swh/juwi_pas_calibration_integration_2024_cw16"
                                    ],
                                    "zj_project": {
                                        "key": "cc-github.bmwgroup.net/swh/xpad-shared",
                                        "value": {
                                            "canonical_hostname": "cc-github.bmwgroup.net",
                                            "canonical_name": "cc-github.bmwgroup.net/swh/xpad-shared",
                                            "checkout": "master",
                                            "checkout_description": "zuul branch",
                                            "commit": "5fe3ea2c8e16591c6c11a5398c0fd866652ef652",
                                            "name": "swh/xpad-shared",
                                            "required": true,
                                            "short_name": "xpad-shared",
                                            "src_dir": "src/cc-github.bmwgroup.net/swh/xpad-shared"
                                        }
                                    },
                                    "zuul_log_id": "in-loop-ignore"
                                },
                                {
                                    "ansible_loop_var": "zj_project",
                                    "changed": true,
                                    "cmd": "set -eu\n\n# Reset is needed because we pushed to a non-bare repo\ngit reset --hard\n# Clean is needed because we pushed to a non-bare repo\ngit clean -xdf\n# Undo the config setting we did above\ngit config --local --unset receive.denyCurrentBranch\n# checkout the branch matching the branch set up by the executor\ngit checkout --quiet master\n# put out a status line with the current HEAD\necho \"cc-github.bmwgroup.net/swh/xpad_xpc checked out to:\"\ngit log --pretty=oneline  -1\n",
                                    "delta": "0:00:00.025840",
                                    "end": "2024-04-21 00:43:59.170600",
                                    "failed": false,
                                    "invocation": {
                                        "module_args": {
                                            "_raw_params": "set -eu\n\n# Reset is needed because we pushed to a non-bare repo\ngit reset --hard\n# Clean is needed because we pushed to a non-bare repo\ngit clean -xdf\n# Undo the config setting we did above\ngit config --local --unset receive.denyCurrentBranch\n# checkout the branch matching the branch set up by the executor\ngit checkout --quiet master\n# put out a status line with the current HEAD\necho \"cc-github.bmwgroup.net/swh/xpad_xpc checked out to:\"\ngit log --pretty=oneline  -1\n",
                                            "_uses_shell": true,
                                            "argv": null,
                                            "chdir": "/home/zuul/src/cc-github.bmwgroup.net/swh/xpad_xpc",
                                            "creates": null,
                                            "executable": null,
                                            "removes": null,
                                            "stdin": null,
                                            "stdin_add_newline": true,
                                            "strip_empty_ends": true,
                                            "warn": false,
                                            "zuul_ansible_split_streams": false,
                                            "zuul_log_id": "in-loop-ignore"
                                        }
                                    },
                                    "msg": "",
                                    "rc": 0,
                                    "start": "2024-04-21 00:43:59.144760",
                                    "stderr": "",
                                    "stderr_lines": [],
                                    "stdout": "HEAD is now at 9ce2131 Merge pull request #212 from swh/anchana-enabling-buildifier\ncc-github.bmwgroup.net/swh/xpad_xpc checked out to:\n9ce2131edf06568e92545d2f5d1464924b016780 Merge pull request #212 from swh/anchana-enabling-buildifier",
                                    "stdout_lines": [
                                        "HEAD is now at 9ce2131 Merge pull request #212 from swh/anchana-enabling-buildifier",
                                        "cc-github.bmwgroup.net/swh/xpad_xpc checked out to:",
                                        "9ce2131edf06568e92545d2f5d1464924b016780 Merge pull request #212 from swh/anchana-enabling-buildifier"
                                    ],
                                    "zj_project": {
                                        "key": "cc-github.bmwgroup.net/swh/xpad_xpc",
                                        "value": {
                                            "canonical_hostname": "cc-github.bmwgroup.net",
                                            "canonical_name": "cc-github.bmwgroup.net/swh/xpad_xpc",
                                            "checkout": "master",
                                            "checkout_description": "zuul branch",
                                            "commit": "9ce2131edf06568e92545d2f5d1464924b016780",
                                            "name": "swh/xpad_xpc",
                                            "required": true,
                                            "short_name": "xpad_xpc",
                                            "src_dir": "src/cc-github.bmwgroup.net/swh/xpad_xpc"
                                        }
                                    },
                                    "zuul_log_id": "in-loop-ignore"
                                },
                                {
                                    "ansible_loop_var": "zj_project",
                                    "changed": true,
                                    "cmd": "set -eu\n\n# Reset is needed because we pushed to a non-bare repo\ngit reset --hard\n# Clean is needed because we pushed to a non-bare repo\ngit clean -xdf\n# Undo the config setting we did above\ngit config --local --unset receive.denyCurrentBranch\n# checkout the branch matching the branch set up by the executor\ngit checkout --quiet master\n# put out a status line with the current HEAD\necho \"cc-github.bmwgroup.net/swh/zuul-trusted-ddad checked out to:\"\ngit log --pretty=oneline  -1\n",
                                    "delta": "0:00:00.090689",
                                    "end": "2024-04-21 00:43:59.509488",
                                    "failed": false,
                                    "invocation": {
                                        "module_args": {
                                            "_raw_params": "set -eu\n\n# Reset is needed because we pushed to a non-bare repo\ngit reset --hard\n# Clean is needed because we pushed to a non-bare repo\ngit clean -xdf\n# Undo the config setting we did above\ngit config --local --unset receive.denyCurrentBranch\n# checkout the branch matching the branch set up by the executor\ngit checkout --quiet master\n# put out a status line with the current HEAD\necho \"cc-github.bmwgroup.net/swh/zuul-trusted-ddad checked out to:\"\ngit log --pretty=oneline  -1\n",
                                            "_uses_shell": true,
                                            "argv": null,
                                            "chdir": "/home/zuul/src/cc-github.bmwgroup.net/swh/zuul-trusted-ddad",
                                            "creates": null,
                                            "executable": null,
                                            "removes": null,
                                            "stdin": null,
                                            "stdin_add_newline": true,
                                            "strip_empty_ends": true,
                                            "warn": false,
                                            "zuul_ansible_split_streams": false,
                                            "zuul_log_id": "in-loop-ignore"
                                        }
                                    },
                                    "msg": "",
                                    "rc": 0,
                                    "start": "2024-04-21 00:43:59.418799",
                                    "stderr": "",
                                    "stderr_lines": [],
                                    "stdout": "HEAD is now at a2250034 Merge pull request #4551 from swh/revert-4541-pth_49329_dcdc_klocwork_credentials\ncc-github.bmwgroup.net/swh/zuul-trusted-ddad checked out to:\na22500345c4283b6add4f2a3c354c663a904d9d0 Merge pull request #4551 from swh/revert-4541-pth_49329_dcdc_klocwork_credentials",
                                    "stdout_lines": [
                                        "HEAD is now at a2250034 Merge pull request #4551 from swh/revert-4541-pth_49329_dcdc_klocwork_credentials",
                                        "cc-github.bmwgroup.net/swh/zuul-trusted-ddad checked out to:",
                                        "a22500345c4283b6add4f2a3c354c663a904d9d0 Merge pull request #4551 from swh/revert-4541-pth_49329_dcdc_klocwork_credentials"
                                    ],
                                    "zj_project": {
                                        "key": "cc-github.bmwgroup.net/swh/zuul-trusted-ddad",
                                        "value": {
                                            "canonical_hostname": "cc-github.bmwgroup.net",
                                            "canonical_name": "cc-github.bmwgroup.net/swh/zuul-trusted-ddad",
                                            "checkout": "master",
                                            "checkout_description": "zuul branch",
                                            "commit": "a22500345c4283b6add4f2a3c354c663a904d9d0",
                                            "name": "swh/zuul-trusted-ddad",
                                            "required": true,
                                            "short_name": "zuul-trusted-ddad",
                                            "src_dir": "src/cc-github.bmwgroup.net/swh/zuul-trusted-ddad"
                                        }
                                    },
                                    "zuul_log_id": "in-loop-ignore"
                                }
                            ]
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-d7cb-6b39-0000000008fb",
                        "name": "prepare-workspace-git",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_2/cc-github.bmwgroup.net/codecraft-oss/zuul-jobs/roles/prepare-workspace-git"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:43:59.596625Z",
                            "start": "2024-04-21T00:41:17.533757Z"
                        },
                        "id": "ce4df5fb-964c-d7cb-6b39-000000000907",
                        "name": "Update remote repository state correctly"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "include_tasks",
                            "changed": false,
                            "false_condition": "ansible_os_family == \"Windows\" and not skip_repo_sync",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-d7cb-6b39-00000000089b",
                        "name": "synchronize-repos",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_0/cc-github.bmwgroup.net/codecraft/zuul-conf-global/roles/synchronize-repos"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:43:59.658509Z",
                            "start": "2024-04-21T00:43:59.626411Z"
                        },
                        "id": "ce4df5fb-964c-d7cb-6b39-00000000089e",
                        "name": ""
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "include_role",
                            "changed": false,
                            "false_condition": "enable_bmw_certificates | default(True)",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:43:59.749060Z",
                            "start": "2024-04-21T00:43:59.688266Z"
                        },
                        "id": "ce4df5fb-964c-d7cb-6b39-000000000026",
                        "name": ""
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "include_role",
                            "changed": false,
                            "false_condition": "enable_proxy",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:43:59.801834Z",
                            "start": "2024-04-21T00:43:59.762071Z"
                        },
                        "id": "ce4df5fb-964c-d7cb-6b39-000000000027",
                        "name": ""
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "include_role",
                            "changed": false,
                            "include_args": {
                                "name": "ensure-pypi-mirror"
                            }
                        }
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:43:59.897090Z",
                            "start": "2024-04-21T00:43:59.813821Z"
                        },
                        "id": "ce4df5fb-964c-d7cb-6b39-000000000028",
                        "name": ""
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "include_tasks",
                            "changed": false,
                            "include": "linux.yaml",
                            "include_args": {}
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-d7cb-6b39-000000000b77",
                        "name": "ensure-pypi-mirror",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_1/cc-github.bmwgroup.net/codecraft/cilib/roles/ensure-pypi-mirror"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:43:59.986839Z",
                            "start": "2024-04-21T00:43:59.942386Z"
                        },
                        "id": "ce4df5fb-964c-d7cb-6b39-000000000b79",
                        "name": ""
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "file",
                            "changed": true,
                            "diff": {
                                "after": {
                                    "mode": "0755",
                                    "path": "/home/zuul/.config/pip",
                                    "state": "directory"
                                },
                                "before": {
                                    "mode": "0775",
                                    "path": "/home/zuul/.config/pip",
                                    "state": "absent"
                                }
                            },
                            "gid": 1000,
                            "group": "zuul",
                            "invocation": {
                                "module_args": {
                                    "_diff_peek": null,
                                    "_original_basename": null,
                                    "access_time": null,
                                    "access_time_format": "%Y%m%d%H%M.%S",
                                    "attributes": null,
                                    "follow": true,
                                    "force": false,
                                    "group": null,
                                    "mode": 493,
                                    "modification_time": null,
                                    "modification_time_format": "%Y%m%d%H%M.%S",
                                    "owner": null,
                                    "path": "/home/zuul/.config/pip",
                                    "recurse": false,
                                    "selevel": null,
                                    "serole": null,
                                    "setype": null,
                                    "seuser": null,
                                    "src": null,
                                    "state": "directory",
                                    "unsafe_writes": false
                                }
                            },
                            "mode": "0755",
                            "owner": "zuul",
                            "path": "/home/zuul/.config/pip",
                            "size": 4096,
                            "state": "directory",
                            "uid": 1000
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-d7cb-6b39-000000000b77",
                        "name": "ensure-pypi-mirror",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_1/cc-github.bmwgroup.net/codecraft/cilib/roles/ensure-pypi-mirror"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:44:00.325974Z",
                            "start": "2024-04-21T00:44:00.028547Z"
                        },
                        "id": "ce4df5fb-964c-d7cb-6b39-000000000bac",
                        "name": "Ensure config path exists"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "template",
                            "changed": true,
                            "checksum": "1d4933b949a5d6f1d4143d36db29f03a903107c9",
                            "dest": "/home/zuul/.config/pip/pip.conf",
                            "diff": [],
                            "gid": 1000,
                            "group": "zuul",
                            "invocation": {
                                "module_args": {
                                    "_original_basename": "pip.conf.j2",
                                    "attributes": null,
                                    "backup": false,
                                    "checksum": "1d4933b949a5d6f1d4143d36db29f03a903107c9",
                                    "content": null,
                                    "dest": "/home/zuul/.config/pip/pip.conf",
                                    "directory_mode": null,
                                    "follow": false,
                                    "force": true,
                                    "group": null,
                                    "local_follow": null,
                                    "mode": 420,
                                    "owner": null,
                                    "remote_src": null,
                                    "selevel": null,
                                    "serole": null,
                                    "setype": null,
                                    "seuser": null,
                                    "src": "/home/zuul/.ansible/tmp/ansible-tmp-1713660240.5297534-1413-242610029649552/source",
                                    "unsafe_writes": false,
                                    "validate": null
                                }
                            },
                            "md5sum": "a0138de79983b4a35f83cf7f1680fe32",
                            "mode": "0644",
                            "owner": "zuul",
                            "size": 114,
                            "src": "/home/zuul/.ansible/tmp/ansible-tmp-1713660240.5297534-1413-242610029649552/source",
                            "state": "file",
                            "uid": 1000
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-d7cb-6b39-000000000b77",
                        "name": "ensure-pypi-mirror",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_1/cc-github.bmwgroup.net/codecraft/cilib/roles/ensure-pypi-mirror"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:44:01.202989Z",
                            "start": "2024-04-21T00:44:00.477843Z"
                        },
                        "id": "ce4df5fb-964c-d7cb-6b39-000000000bad",
                        "name": "Ensure CodeCraft PyPI mirror in /home/zuul/.config/pip/pip.conf"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "template",
                            "changed": true,
                            "checksum": "228ca72eacf9dce65c5d7ebfebbab36f1dc71efc",
                            "dest": "/home/zuul/.pydistutils.cfg",
                            "diff": [],
                            "gid": 1000,
                            "group": "zuul",
                            "invocation": {
                                "module_args": {
                                    "_original_basename": "distutils.cfg.j2",
                                    "attributes": null,
                                    "backup": false,
                                    "checksum": "228ca72eacf9dce65c5d7ebfebbab36f1dc71efc",
                                    "content": null,
                                    "dest": "/home/zuul/.pydistutils.cfg",
                                    "directory_mode": null,
                                    "follow": false,
                                    "force": true,
                                    "group": null,
                                    "local_follow": null,
                                    "mode": 420,
                                    "owner": null,
                                    "remote_src": null,
                                    "selevel": null,
                                    "serole": null,
                                    "setype": null,
                                    "seuser": null,
                                    "src": "/home/zuul/.ansible/tmp/ansible-tmp-1713660241.2739627-1423-150684623539637/source",
                                    "unsafe_writes": false,
                                    "validate": null
                                }
                            },
                            "md5sum": "601816fcb89b4e849f322f2ec29138bf",
                            "mode": "0644",
                            "owner": "zuul",
                            "size": 120,
                            "src": "/home/zuul/.ansible/tmp/ansible-tmp-1713660241.2739627-1423-150684623539637/source",
                            "state": "file",
                            "uid": 1000
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-d7cb-6b39-000000000b77",
                        "name": "ensure-pypi-mirror",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_1/cc-github.bmwgroup.net/codecraft/cilib/roles/ensure-pypi-mirror"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:44:01.806813Z",
                            "start": "2024-04-21T00:44:01.219198Z"
                        },
                        "id": "ce4df5fb-964c-d7cb-6b39-000000000bae",
                        "name": "Ensure CodeCraft PyPI mirror in ~/.pydistutils.cfg"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "include_tasks",
                            "changed": false,
                            "false_condition": "ansible_os_family == \"Windows\"",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-d7cb-6b39-000000000b77",
                        "name": "ensure-pypi-mirror",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_1/cc-github.bmwgroup.net/codecraft/cilib/roles/ensure-pypi-mirror"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:44:01.851660Z",
                            "start": "2024-04-21T00:44:01.821894Z"
                        },
                        "id": "ce4df5fb-964c-d7cb-6b39-000000000b7a",
                        "name": ""
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "include_role",
                            "changed": false,
                            "include_args": {
                                "name": "ensure-cilib"
                            }
                        }
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:44:01.953527Z",
                            "start": "2024-04-21T00:44:01.876952Z"
                        },
                        "id": "ce4df5fb-964c-d7cb-6b39-000000000029",
                        "name": ""
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "set_fact",
                            "ansible_facts": {
                                "cilib_artifactory_url": "https://common.artifactory.cc.bmwgroup.net/artifactory",
                                "cilib_docker_registry": "common.artifactory.cc.bmwgroup.net",
                                "cilib_patterns": {
                                    "file_comments": {
                                        "ansiblelint": "^\\s*(?P<file_path>.*):(?P<start_line>\\d+): (?P<message>.*)$",
                                        "hadolint": "^(?P<file_path>.*):(?P<start_line>\\d+) (?P<message>.*)$",
                                        "labellint": "^(?P<file_path>.*):(?P<start_line>\\d+):(?P<message>.*)$",
                                        "oelint": "^(?P<file_path>.*):(?P<start_line>\\d+):(?P<log_level>.*?):(?P<message>.*)$",
                                        "pipelinelint": "^(?P<file_path>.*):(?P<start_line>\\d+):\\d+\\s(?P<log_level>\\S*)\\s(?P<rule_name>\\b(?!parser\\b)\\S*)\\s\\\"(?P<message>.*)\\\"$",
                                        "shellcheck": "^(?P<file_path>.*):(?P<start_line>\\d+):\\d+: (?P<message>.*)$",
                                        "yamllint": "^\\s*(?P<file_path>.*):(?P<start_line>\\d+):\\d+: \\[(?P<log_level>.*)\\] (?P<message>.*)$"
                                    }
                                },
                                "cilib_pypi_url": "https://common.artifactory.cc.bmwgroup.net/artifactory/api/pypi/codecraft-pypi-public/simple"
                            },
                            "changed": false
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-d7cb-6b39-000000000c08",
                        "name": "cilib-defaults",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_1/cc-github.bmwgroup.net/codecraft/cilib/roles/cilib-defaults"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:44:02.110555Z",
                            "start": "2024-04-21T00:44:02.039583Z"
                        },
                        "id": "ce4df5fb-964c-d7cb-6b39-000000000c0a",
                        "name": "Set cilib defaults"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "include_tasks",
                            "changed": false,
                            "include": "linux.yaml",
                            "include_args": {}
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-d7cb-6b39-000000000c04",
                        "name": "ensure-cilib",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_1/cc-github.bmwgroup.net/codecraft/cilib/roles/ensure-cilib"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:44:02.185663Z",
                            "start": "2024-04-21T00:44:02.139534Z"
                        },
                        "id": "ce4df5fb-964c-d7cb-6b39-000000000c0c",
                        "name": ""
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "file",
                            "changed": false,
                            "invocation": {
                                "module_args": {
                                    "_diff_peek": null,
                                    "_original_basename": null,
                                    "access_time": null,
                                    "access_time_format": "%Y%m%d%H%M.%S",
                                    "attributes": null,
                                    "follow": true,
                                    "force": false,
                                    "group": null,
                                    "mode": null,
                                    "modification_time": null,
                                    "modification_time_format": "%Y%m%d%H%M.%S",
                                    "owner": null,
                                    "path": "/home/zuul/cilib",
                                    "recurse": false,
                                    "selevel": null,
                                    "serole": null,
                                    "setype": null,
                                    "seuser": null,
                                    "src": null,
                                    "state": "absent",
                                    "unsafe_writes": false
                                }
                            },
                            "path": "/home/zuul/cilib",
                            "state": "absent"
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-d7cb-6b39-000000000c04",
                        "name": "ensure-cilib",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_1/cc-github.bmwgroup.net/codecraft/cilib/roles/ensure-cilib"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:44:02.502681Z",
                            "start": "2024-04-21T00:44:02.215538Z"
                        },
                        "id": "ce4df5fb-964c-d7cb-6b39-000000000c5c",
                        "name": "Cleanup old cilib install dir"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "file",
                            "changed": true,
                            "diff": {
                                "after": {
                                    "path": "/home/zuul/cilib",
                                    "state": "directory"
                                },
                                "before": {
                                    "path": "/home/zuul/cilib",
                                    "state": "absent"
                                }
                            },
                            "gid": 1000,
                            "group": "zuul",
                            "invocation": {
                                "module_args": {
                                    "_diff_peek": null,
                                    "_original_basename": null,
                                    "access_time": null,
                                    "access_time_format": "%Y%m%d%H%M.%S",
                                    "attributes": null,
                                    "follow": true,
                                    "force": false,
                                    "group": null,
                                    "mode": null,
                                    "modification_time": null,
                                    "modification_time_format": "%Y%m%d%H%M.%S",
                                    "owner": "zuul",
                                    "path": "/home/zuul/cilib",
                                    "recurse": false,
                                    "selevel": null,
                                    "serole": null,
                                    "setype": null,
                                    "seuser": null,
                                    "src": null,
                                    "state": "directory",
                                    "unsafe_writes": false
                                }
                            },
                            "mode": "0775",
                            "owner": "zuul",
                            "path": "/home/zuul/cilib",
                            "size": 4096,
                            "state": "directory",
                            "uid": 1000
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-d7cb-6b39-000000000c04",
                        "name": "ensure-cilib",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_1/cc-github.bmwgroup.net/codecraft/cilib/roles/ensure-cilib"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:44:02.787388Z",
                            "start": "2024-04-21T00:44:02.510815Z"
                        },
                        "id": "ce4df5fb-964c-d7cb-6b39-000000000c5d",
                        "name": "Ensure cilib install dir"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "copy",
                            "changed": true,
                            "checksum": "7e524d6849caafbecb115bc9060b4af29c8a64c1",
                            "dest": "/home/zuul/cilib-requirements.txt",
                            "diff": [],
                            "gid": 1000,
                            "group": "zuul",
                            "invocation": {
                                "module_args": {
                                    "_original_basename": "requirements.txt",
                                    "attributes": null,
                                    "backup": false,
                                    "checksum": "7e524d6849caafbecb115bc9060b4af29c8a64c1",
                                    "content": null,
                                    "dest": "/home/zuul/cilib-requirements.txt",
                                    "directory_mode": null,
                                    "follow": false,
                                    "force": true,
                                    "group": null,
                                    "local_follow": null,
                                    "mode": 420,
                                    "owner": null,
                                    "remote_src": null,
                                    "selevel": null,
                                    "serole": null,
                                    "setype": null,
                                    "seuser": null,
                                    "src": "/home/zuul/.ansible/tmp/ansible-tmp-1713660242.8401227-1447-276758093312922/source",
                                    "unsafe_writes": false,
                                    "validate": null
                                }
                            },
                            "md5sum": "432efde0336a321e1cd099eac6aa7e87",
                            "mode": "0644",
                            "owner": "zuul",
                            "size": 1118,
                            "src": "/home/zuul/.ansible/tmp/ansible-tmp-1713660242.8401227-1447-276758093312922/source",
                            "state": "file",
                            "uid": 1000
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-d7cb-6b39-000000000c04",
                        "name": "ensure-cilib",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_1/cc-github.bmwgroup.net/codecraft/cilib/roles/ensure-cilib"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:44:03.484715Z",
                            "start": "2024-04-21T00:44:02.797657Z"
                        },
                        "id": "ce4df5fb-964c-d7cb-6b39-000000000c5e",
                        "name": "Copy cilib requirements file"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "apt",
                            "changed": false,
                            "false_condition": "ensure_cilib_install_python3_venv",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-d7cb-6b39-000000000c04",
                        "name": "ensure-cilib",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_1/cc-github.bmwgroup.net/codecraft/cilib/roles/ensure-cilib"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:44:03.527887Z",
                            "start": "2024-04-21T00:44:03.497698Z"
                        },
                        "id": "ce4df5fb-964c-d7cb-6b39-000000000c5f",
                        "name": "Install python3-venv"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "shell",
                            "attempts": 1,
                            "changed": true,
                            "cmd": "set -o errexit\nset -o nounset\nset -o pipefail\n\n/usr/bin/python3 -m venv \"/home/zuul/cilib\"\n\"/home/zuul/cilib/bin/pip\" install -i https://common.artifactory.cc.bmwgroup.net/artifactory/api/pypi/codecraft-pypi-public/simple --upgrade pip setuptools wheel\n\"/home/zuul/cilib/bin/pip\" --no-color install --progress-bar off  --no-deps  --upgrade  --find-links /var/cache/wheelcache  -r \"/home/zuul/cilib-requirements.txt\"\n",
                            "delta": "0:00:15.613494",
                            "end": "2024-04-21 00:44:19.511466",
                            "invocation": {
                                "module_args": {
                                    "_raw_params": "set -o errexit\nset -o nounset\nset -o pipefail\n\n/usr/bin/python3 -m venv \"/home/zuul/cilib\"\n\"/home/zuul/cilib/bin/pip\" install -i https://common.artifactory.cc.bmwgroup.net/artifactory/api/pypi/codecraft-pypi-public/simple --upgrade pip setuptools wheel\n\"/home/zuul/cilib/bin/pip\" --no-color install --progress-bar off  --no-deps  --upgrade  --find-links /var/cache/wheelcache  -r \"/home/zuul/cilib-requirements.txt\"\n",
                                    "_uses_shell": true,
                                    "argv": null,
                                    "chdir": null,
                                    "creates": null,
                                    "executable": "/bin/bash",
                                    "removes": null,
                                    "stdin": null,
                                    "stdin_add_newline": true,
                                    "strip_empty_ends": true,
                                    "warn": false,
                                    "zuul_ansible_split_streams": false,
                                    "zuul_log_id": "ce4df5fb-964c-d7cb-6b39-000000000c60-1-node"
                                }
                            },
                            "msg": "",
                            "rc": 0,
                            "start": "2024-04-21 00:44:03.897972",
                            "stderr": "",
                            "stderr_lines": [],
                            "stdout": "Looking in indexes: https://common.artifactory.cc.bmwgroup.net/artifactory/api/pypi/codecraft-pypi-public/simple\nRequirement already satisfied: pip in ./cilib/lib/python3.10/site-packages (22.0.2)\nCollecting pip\n  Downloading https://common.artifactory.cc.bmwgroup.net/artifactory/api/pypi/codecraft-pypi-public/packages/packages/8a/6a/19e9fe04fca059ccf770861c7d5721ab4c2aebc539889e97c7977528a53b/pip-24.0-py3-none-any.whl (2.1 MB)\n     \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 2.1/2.1 MB 25.3 MB/s eta 0:00:00\nRequirement already satisfied: setuptools in ./cilib/lib/python3.10/site-packages (59.6.0)\nCollecting setuptools\n  Downloading https://common.artifactory.cc.bmwgroup.net/artifactory/api/pypi/codecraft-pypi-public/packages/packages/f7/29/13965af254e3373bceae8fb9a0e6ea0d0e571171b80d6646932131d6439b/setuptools-69.5.1-py3-none-any.whl (894 kB)\n     \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 894.6/894.6 KB 102.3 MB/s eta 0:00:00\nCollecting wheel\n  Downloading https://common.artifactory.cc.bmwgroup.net/artifactory/api/pypi/codecraft-pypi-public/packages/packages/7d/cd/d7460c9a869b16c3dd4e1e403cce337df165368c71d6af229a74699622ce/wheel-0.43.0-py3-none-any.whl (65 kB)\n     \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 65.8/65.8 KB 13.4 MB/s eta 0:00:00\nInstalling collected packages: wheel, setuptools, pip\n  Attempting uninstall: setuptools\n    Found existing installation: setuptools 59.6.0\n    Uninstalling setuptools-59.6.0:\n      Successfully uninstalled setuptools-59.6.0\n  Attempting uninstall: pip\n    Found existing installation: pip 22.0.2\n    Uninstalling pip-22.0.2:\n      Successfully uninstalled pip-22.0.2\nSuccessfully installed pip-24.0 setuptools-69.5.1 wheel-0.43.0\nLooking in indexes: https://common.artifactory.cc.bmwgroup.net/artifactory/api/pypi/codecraft-pypi-public/simple\nLooking in links: /var/cache/wheelcache\nCollecting certifi==2022.12.7 (from -r /home/zuul/cilib-requirements.txt (line 2))\n  Downloading https://common.artifactory.cc.bmwgroup.net/artifactory/api/pypi/codecraft-pypi-public/packages/packages/71/4c/3db2b8021bd6f2f0ceb0e088d6b2d49147671f25832fb17970e9b583d742/certifi-2022.12.7-py3-none-any.whl (155 kB)\nCollecting cffi==1.15.1 (from -r /home/zuul/cilib-requirements.txt (line 3))\n  Downloading https://common.artifactory.cc.bmwgroup.net/artifactory/api/pypi/codecraft-pypi-public/packages/packages/88/89/c34caf63029fb7628ec2ebd5c88ae0c9bd17db98c812e4065a4d020ca41f/cffi-1.15.1-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (441 kB)\nCollecting charset-normalizer==2.0.12 (from -r /home/zuul/cilib-requirements.txt (line 4))\n  Downloading https://common.artifactory.cc.bmwgroup.net/artifactory/api/pypi/codecraft-pypi-public/packages/packages/06/b3/24afc8868eba069a7f03650ac750a778862dc34941a4bebeb58706715726/charset_normalizer-2.0.12-py3-none-any.whl (39 kB)\nCollecting cilib==2022.50.0 (from -r /home/zuul/cilib-requirements.txt (line 5))\n  Downloading https://common.artifactory.cc.bmwgroup.net/artifactory/api/pypi/codecraft-pypi-public/cilib/2022.50.0/cilib-2022.50.0-py3-none-any.whl (34 kB)\nCollecting click==8.0.4 (from -r /home/zuul/cilib-requirements.txt (line 6))\n  Downloading https://common.artifactory.cc.bmwgroup.net/artifactory/api/pypi/codecraft-pypi-public/packages/packages/4a/a8/0b2ced25639fb20cc1c9784de90a8c25f9504a7f18cd8b5397bd61696d7d/click-8.0.4-py3-none-any.whl (97 kB)\nCollecting cryptography==38.0.4 (from -r /home/zuul/cilib-requirements.txt (line 7))\n  Downloading https://common.artifactory.cc.bmwgroup.net/artifactory/api/pypi/codecraft-pypi-public/packages/packages/26/f8/a81170a816679fca9ccd907b801992acfc03c33f952440421c921af2cc57/cryptography-38.0.4-cp36-abi3-manylinux_2_28_x86_64.whl (4.2 MB)\nCollecting gitdb==4.0.10 (from -r /home/zuul/cilib-requirements.txt (line 8))\n  Downloading https://common.artifactory.cc.bmwgroup.net/artifactory/api/pypi/codecraft-pypi-public/packages/packages/21/a6/35f83efec687615c711fe0a09b67e58f6d1254db27b1013119de46f450bd/gitdb-4.0.10-py3-none-any.whl (62 kB)\nCollecting github3.py==3.2.0 (from -r /home/zuul/cilib-requirements.txt (line 9))\n  Downloading https://common.artifactory.cc.bmwgroup.net/artifactory/api/pypi/codecraft-pypi-public/packages/packages/d3/2c/a6feede98828964a662970fe646020bbd1d5156fffe1424480ee601b48f1/github3.py-3.2.0-py2.py3-none-any.whl (152 kB)\nCollecting gitpython==3.1.18 (from -r /home/zuul/cilib-requirements.txt (line 10))\n  Downloading https://common.artifactory.cc.bmwgroup.net/artifactory/api/pypi/codecraft-pypi-public/packages/packages/bc/91/b38c4fabb6e5092ab23492ded4f318ab7299b19263272b703478038c0fbc/GitPython-3.1.18-py3-none-any.whl (170 kB)\nCollecting idna==3.4 (from -r /home/zuul/cilib-requirements.txt (line 11))\n  Downloading https://common.artifactory.cc.bmwgroup.net/artifactory/api/pypi/codecraft-pypi-public/packages/packages/fc/34/3030de6f1370931b9dbb4dad48f6ab1015ab1d32447850b9fc94e60097be/idna-3.4-py3-none-any.whl (61 kB)\nCollecting oauthlib==3.2.2 (from -r /home/zuul/cilib-requirements.txt (line 12))\n  Downloading https://common.artifactory.cc.bmwgroup.net/artifactory/api/pypi/codecraft-pypi-public/packages/packages/7e/80/cab10959dc1faead58dc8384a781dfbf93cb4d33d50988f7a69f1b7c9bbe/oauthlib-3.2.2-py3-none-any.whl (151 kB)\nCollecting pycparser==2.21 (from -r /home/zuul/cilib-requirements.txt (line 13))\n  Downloading https://common.artifactory.cc.bmwgroup.net/artifactory/api/pypi/codecraft-pypi-public/packages/packages/62/d5/5f610ebe421e85889f2e55e33b7f9a6795bd982198517d912eb1c76e1a53/pycparser-2.21-py2.py3-none-any.whl (118 kB)\nCollecting pyjwt==2.4.0 (from pyjwt[crypto]==2.4.0->-r /home/zuul/cilib-requirements.txt (line 14))\n  Downloading https://common.artifactory.cc.bmwgroup.net/artifactory/api/pypi/codecraft-pypi-public/packages/packages/1c/fb/b82e9601b00d88cf8bbee1f39b855ae773f9d5bcbcedb3801b2f72460696/PyJWT-2.4.0-py3-none-any.whl (18 kB)\nCollecting python-dateutil==2.8.2 (from -r /home/zuul/cilib-requirements.txt (line 15))\n  Downloading https://common.artifactory.cc.bmwgroup.net/artifactory/api/pypi/codecraft-pypi-public/packages/packages/36/7a/87837f39d0296e723bb9b62bbb257d0355c7f6128853c78955f57342a56d/python_dateutil-2.8.2-py2.py3-none-any.whl (247 kB)\nCollecting requests==2.27.1 (from -r /home/zuul/cilib-requirements.txt (line 16))\n  Downloading https://common.artifactory.cc.bmwgroup.net/artifactory/api/pypi/codecraft-pypi-public/packages/packages/2d/61/08076519c80041bc0ffa1a8af0cbd3bf3e2b62af10435d269a9d0f40564d/requests-2.27.1-py2.py3-none-any.whl (63 kB)\nCollecting requests-oauthlib==1.3.1 (from -r /home/zuul/cilib-requirements.txt (line 17))\n  Downloading https://common.artifactory.cc.bmwgroup.net/artifactory/api/pypi/codecraft-pypi-public/packages/packages/6f/bb/5deac77a9af870143c684ab46a7934038a53eb4aa975bc0687ed6ca2c610/requests_oauthlib-1.3.1-py2.py3-none-any.whl (23 kB)\nCollecting sh==1.14.3 (from -r /home/zuul/cilib-requirements.txt (line 18))\n  Downloading https://common.artifactory.cc.bmwgroup.net/artifactory/api/pypi/codecraft-pypi-public/packages/packages/b7/09/89c28aaf2a49f226fef8587c90c6386bd2cc03a0295bc4ff7fc6ee43c01d/sh-1.14.3.tar.gz (62 kB)\n  Preparing metadata (setup.py): started\n  Preparing metadata (setup.py): finished with status 'done'\nCollecting six==1.16.0 (from -r /home/zuul/cilib-requirements.txt (line 19))\n  Downloading https://common.artifactory.cc.bmwgroup.net/artifactory/api/pypi/codecraft-pypi-public/packages/packages/d9/5a/e7c31adbe875f2abbb91bd84cf2dc52d792b5a01506781dbcf25c91daf11/six-1.16.0-py2.py3-none-any.whl (11 kB)\nCollecting smmap==5.0.0 (from -r /home/zuul/cilib-requirements.txt (line 20))\n  Downloading https://common.artifactory.cc.bmwgroup.net/artifactory/api/pypi/codecraft-pypi-public/packages/packages/6d/01/7caa71608bc29952ae09b0be63a539e50d2484bc37747797a66a60679856/smmap-5.0.0-py3-none-any.whl (24 kB)\nCollecting uritemplate==4.1.1 (from -r /home/zuul/cilib-requirements.txt (line 21))\n  Downloading https://common.artifactory.cc.bmwgroup.net/artifactory/api/pypi/codecraft-pypi-public/packages/packages/81/c0/7461b49cd25aeece13766f02ee576d1db528f1c37ce69aee300e075b485b/uritemplate-4.1.1-py2.py3-none-any.whl (10 kB)\nCollecting urllib3==1.26.13 (from -r /home/zuul/cilib-requirements.txt (line 22))\n  Downloading https://common.artifactory.cc.bmwgroup.net/artifactory/api/pypi/codecraft-pypi-public/packages/packages/65/0c/cc6644eaa594585e5875f46f3c83ee8762b647b51fc5b0fb253a242df2dc/urllib3-1.26.13-py2.py3-none-any.whl (140 kB)\nBuilding wheels for collected packages: sh\n  Building wheel for sh (setup.py): started\n  Building wheel for sh (setup.py): finished with status 'done'\n  Created wheel for sh: filename=sh-1.14.3-py2.py3-none-any.whl size=39638 sha256=afd2a8c58af563d0bdf6a6274496b1c0a635ad822ea37ff1bc7b816fa5666876\n  Stored in directory: /home/zuul/.cache/pip/wheels/34/5a/29/0dad80112cf6fbaa892ad7dc164b6f8ac8716b3e65adb2d2a4\nSuccessfully built sh\nInstalling collected packages: sh, cffi, urllib3, uritemplate, smmap, six, requests-oauthlib, requests, python-dateutil, pyjwt, pycparser, oauthlib, idna, gitpython, github3.py, gitdb, cryptography, click, cilib, charset-normalizer, certifi\nSuccessfully installed certifi-2022.12.7 cffi-1.15.1 charset-normalizer-2.0.12 cilib-2022.50.0 click-8.0.4 cryptography-38.0.4 gitdb-4.0.10 github3.py-3.2.0 gitpython-3.1.18 idna-3.4 oauthlib-3.2.2 pycparser-2.21 pyjwt-2.4.0 python-dateutil-2.8.2 requests-2.27.1 requests-oauthlib-1.3.1 sh-1.14.3 six-1.16.0 smmap-5.0.0 uritemplate-4.1.1 urllib3-1.26.13",
                            "stdout_lines": [
                                "Looking in indexes: https://common.artifactory.cc.bmwgroup.net/artifactory/api/pypi/codecraft-pypi-public/simple",
                                "Requirement already satisfied: pip in ./cilib/lib/python3.10/site-packages (22.0.2)",
                                "Collecting pip",
                                "  Downloading https://common.artifactory.cc.bmwgroup.net/artifactory/api/pypi/codecraft-pypi-public/packages/packages/8a/6a/19e9fe04fca059ccf770861c7d5721ab4c2aebc539889e97c7977528a53b/pip-24.0-py3-none-any.whl (2.1 MB)",
                                "     \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 2.1/2.1 MB 25.3 MB/s eta 0:00:00",
                                "Requirement already satisfied: setuptools in ./cilib/lib/python3.10/site-packages (59.6.0)",
                                "Collecting setuptools",
                                "  Downloading https://common.artifactory.cc.bmwgroup.net/artifactory/api/pypi/codecraft-pypi-public/packages/packages/f7/29/13965af254e3373bceae8fb9a0e6ea0d0e571171b80d6646932131d6439b/setuptools-69.5.1-py3-none-any.whl (894 kB)",
                                "     \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 894.6/894.6 KB 102.3 MB/s eta 0:00:00",
                                "Collecting wheel",
                                "  Downloading https://common.artifactory.cc.bmwgroup.net/artifactory/api/pypi/codecraft-pypi-public/packages/packages/7d/cd/d7460c9a869b16c3dd4e1e403cce337df165368c71d6af229a74699622ce/wheel-0.43.0-py3-none-any.whl (65 kB)",
                                "     \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 65.8/65.8 KB 13.4 MB/s eta 0:00:00",
                                "Installing collected packages: wheel, setuptools, pip",
                                "  Attempting uninstall: setuptools",
                                "    Found existing installation: setuptools 59.6.0",
                                "    Uninstalling setuptools-59.6.0:",
                                "      Successfully uninstalled setuptools-59.6.0",
                                "  Attempting uninstall: pip",
                                "    Found existing installation: pip 22.0.2",
                                "    Uninstalling pip-22.0.2:",
                                "      Successfully uninstalled pip-22.0.2",
                                "Successfully installed pip-24.0 setuptools-69.5.1 wheel-0.43.0",
                                "Looking in indexes: https://common.artifactory.cc.bmwgroup.net/artifactory/api/pypi/codecraft-pypi-public/simple",
                                "Looking in links: /var/cache/wheelcache",
                                "Collecting certifi==2022.12.7 (from -r /home/zuul/cilib-requirements.txt (line 2))",
                                "  Downloading https://common.artifactory.cc.bmwgroup.net/artifactory/api/pypi/codecraft-pypi-public/packages/packages/71/4c/3db2b8021bd6f2f0ceb0e088d6b2d49147671f25832fb17970e9b583d742/certifi-2022.12.7-py3-none-any.whl (155 kB)",
                                "Collecting cffi==1.15.1 (from -r /home/zuul/cilib-requirements.txt (line 3))",
                                "  Downloading https://common.artifactory.cc.bmwgroup.net/artifactory/api/pypi/codecraft-pypi-public/packages/packages/88/89/c34caf63029fb7628ec2ebd5c88ae0c9bd17db98c812e4065a4d020ca41f/cffi-1.15.1-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (441 kB)",
                                "Collecting charset-normalizer==2.0.12 (from -r /home/zuul/cilib-requirements.txt (line 4))",
                                "  Downloading https://common.artifactory.cc.bmwgroup.net/artifactory/api/pypi/codecraft-pypi-public/packages/packages/06/b3/24afc8868eba069a7f03650ac750a778862dc34941a4bebeb58706715726/charset_normalizer-2.0.12-py3-none-any.whl (39 kB)",
                                "Collecting cilib==2022.50.0 (from -r /home/zuul/cilib-requirements.txt (line 5))",
                                "  Downloading https://common.artifactory.cc.bmwgroup.net/artifactory/api/pypi/codecraft-pypi-public/cilib/2022.50.0/cilib-2022.50.0-py3-none-any.whl (34 kB)",
                                "Collecting click==8.0.4 (from -r /home/zuul/cilib-requirements.txt (line 6))",
                                "  Downloading https://common.artifactory.cc.bmwgroup.net/artifactory/api/pypi/codecraft-pypi-public/packages/packages/4a/a8/0b2ced25639fb20cc1c9784de90a8c25f9504a7f18cd8b5397bd61696d7d/click-8.0.4-py3-none-any.whl (97 kB)",
                                "Collecting cryptography==38.0.4 (from -r /home/zuul/cilib-requirements.txt (line 7))",
                                "  Downloading https://common.artifactory.cc.bmwgroup.net/artifactory/api/pypi/codecraft-pypi-public/packages/packages/26/f8/a81170a816679fca9ccd907b801992acfc03c33f952440421c921af2cc57/cryptography-38.0.4-cp36-abi3-manylinux_2_28_x86_64.whl (4.2 MB)",
                                "Collecting gitdb==4.0.10 (from -r /home/zuul/cilib-requirements.txt (line 8))",
                                "  Downloading https://common.artifactory.cc.bmwgroup.net/artifactory/api/pypi/codecraft-pypi-public/packages/packages/21/a6/35f83efec687615c711fe0a09b67e58f6d1254db27b1013119de46f450bd/gitdb-4.0.10-py3-none-any.whl (62 kB)",
                                "Collecting github3.py==3.2.0 (from -r /home/zuul/cilib-requirements.txt (line 9))",
                                "  Downloading https://common.artifactory.cc.bmwgroup.net/artifactory/api/pypi/codecraft-pypi-public/packages/packages/d3/2c/a6feede98828964a662970fe646020bbd1d5156fffe1424480ee601b48f1/github3.py-3.2.0-py2.py3-none-any.whl (152 kB)",
                                "Collecting gitpython==3.1.18 (from -r /home/zuul/cilib-requirements.txt (line 10))",
                                "  Downloading https://common.artifactory.cc.bmwgroup.net/artifactory/api/pypi/codecraft-pypi-public/packages/packages/bc/91/b38c4fabb6e5092ab23492ded4f318ab7299b19263272b703478038c0fbc/GitPython-3.1.18-py3-none-any.whl (170 kB)",
                                "Collecting idna==3.4 (from -r /home/zuul/cilib-requirements.txt (line 11))",
                                "  Downloading https://common.artifactory.cc.bmwgroup.net/artifactory/api/pypi/codecraft-pypi-public/packages/packages/fc/34/3030de6f1370931b9dbb4dad48f6ab1015ab1d32447850b9fc94e60097be/idna-3.4-py3-none-any.whl (61 kB)",
                                "Collecting oauthlib==3.2.2 (from -r /home/zuul/cilib-requirements.txt (line 12))",
                                "  Downloading https://common.artifactory.cc.bmwgroup.net/artifactory/api/pypi/codecraft-pypi-public/packages/packages/7e/80/cab10959dc1faead58dc8384a781dfbf93cb4d33d50988f7a69f1b7c9bbe/oauthlib-3.2.2-py3-none-any.whl (151 kB)",
                                "Collecting pycparser==2.21 (from -r /home/zuul/cilib-requirements.txt (line 13))",
                                "  Downloading https://common.artifactory.cc.bmwgroup.net/artifactory/api/pypi/codecraft-pypi-public/packages/packages/62/d5/5f610ebe421e85889f2e55e33b7f9a6795bd982198517d912eb1c76e1a53/pycparser-2.21-py2.py3-none-any.whl (118 kB)",
                                "Collecting pyjwt==2.4.0 (from pyjwt[crypto]==2.4.0->-r /home/zuul/cilib-requirements.txt (line 14))",
                                "  Downloading https://common.artifactory.cc.bmwgroup.net/artifactory/api/pypi/codecraft-pypi-public/packages/packages/1c/fb/b82e9601b00d88cf8bbee1f39b855ae773f9d5bcbcedb3801b2f72460696/PyJWT-2.4.0-py3-none-any.whl (18 kB)",
                                "Collecting python-dateutil==2.8.2 (from -r /home/zuul/cilib-requirements.txt (line 15))",
                                "  Downloading https://common.artifactory.cc.bmwgroup.net/artifactory/api/pypi/codecraft-pypi-public/packages/packages/36/7a/87837f39d0296e723bb9b62bbb257d0355c7f6128853c78955f57342a56d/python_dateutil-2.8.2-py2.py3-none-any.whl (247 kB)",
                                "Collecting requests==2.27.1 (from -r /home/zuul/cilib-requirements.txt (line 16))",
                                "  Downloading https://common.artifactory.cc.bmwgroup.net/artifactory/api/pypi/codecraft-pypi-public/packages/packages/2d/61/08076519c80041bc0ffa1a8af0cbd3bf3e2b62af10435d269a9d0f40564d/requests-2.27.1-py2.py3-none-any.whl (63 kB)",
                                "Collecting requests-oauthlib==1.3.1 (from -r /home/zuul/cilib-requirements.txt (line 17))",
                                "  Downloading https://common.artifactory.cc.bmwgroup.net/artifactory/api/pypi/codecraft-pypi-public/packages/packages/6f/bb/5deac77a9af870143c684ab46a7934038a53eb4aa975bc0687ed6ca2c610/requests_oauthlib-1.3.1-py2.py3-none-any.whl (23 kB)",
                                "Collecting sh==1.14.3 (from -r /home/zuul/cilib-requirements.txt (line 18))",
                                "  Downloading https://common.artifactory.cc.bmwgroup.net/artifactory/api/pypi/codecraft-pypi-public/packages/packages/b7/09/89c28aaf2a49f226fef8587c90c6386bd2cc03a0295bc4ff7fc6ee43c01d/sh-1.14.3.tar.gz (62 kB)",
                                "  Preparing metadata (setup.py): started",
                                "  Preparing metadata (setup.py): finished with status 'done'",
                                "Collecting six==1.16.0 (from -r /home/zuul/cilib-requirements.txt (line 19))",
                                "  Downloading https://common.artifactory.cc.bmwgroup.net/artifactory/api/pypi/codecraft-pypi-public/packages/packages/d9/5a/e7c31adbe875f2abbb91bd84cf2dc52d792b5a01506781dbcf25c91daf11/six-1.16.0-py2.py3-none-any.whl (11 kB)",
                                "Collecting smmap==5.0.0 (from -r /home/zuul/cilib-requirements.txt (line 20))",
                                "  Downloading https://common.artifactory.cc.bmwgroup.net/artifactory/api/pypi/codecraft-pypi-public/packages/packages/6d/01/7caa71608bc29952ae09b0be63a539e50d2484bc37747797a66a60679856/smmap-5.0.0-py3-none-any.whl (24 kB)",
                                "Collecting uritemplate==4.1.1 (from -r /home/zuul/cilib-requirements.txt (line 21))",
                                "  Downloading https://common.artifactory.cc.bmwgroup.net/artifactory/api/pypi/codecraft-pypi-public/packages/packages/81/c0/7461b49cd25aeece13766f02ee576d1db528f1c37ce69aee300e075b485b/uritemplate-4.1.1-py2.py3-none-any.whl (10 kB)",
                                "Collecting urllib3==1.26.13 (from -r /home/zuul/cilib-requirements.txt (line 22))",
                                "  Downloading https://common.artifactory.cc.bmwgroup.net/artifactory/api/pypi/codecraft-pypi-public/packages/packages/65/0c/cc6644eaa594585e5875f46f3c83ee8762b647b51fc5b0fb253a242df2dc/urllib3-1.26.13-py2.py3-none-any.whl (140 kB)",
                                "Building wheels for collected packages: sh",
                                "  Building wheel for sh (setup.py): started",
                                "  Building wheel for sh (setup.py): finished with status 'done'",
                                "  Created wheel for sh: filename=sh-1.14.3-py2.py3-none-any.whl size=39638 sha256=afd2a8c58af563d0bdf6a6274496b1c0a635ad822ea37ff1bc7b816fa5666876",
                                "  Stored in directory: /home/zuul/.cache/pip/wheels/34/5a/29/0dad80112cf6fbaa892ad7dc164b6f8ac8716b3e65adb2d2a4",
                                "Successfully built sh",
                                "Installing collected packages: sh, cffi, urllib3, uritemplate, smmap, six, requests-oauthlib, requests, python-dateutil, pyjwt, pycparser, oauthlib, idna, gitpython, github3.py, gitdb, cryptography, click, cilib, charset-normalizer, certifi",
                                "Successfully installed certifi-2022.12.7 cffi-1.15.1 charset-normalizer-2.0.12 cilib-2022.50.0 click-8.0.4 cryptography-38.0.4 gitdb-4.0.10 github3.py-3.2.0 gitpython-3.1.18 idna-3.4 oauthlib-3.2.2 pycparser-2.21 pyjwt-2.4.0 python-dateutil-2.8.2 requests-2.27.1 requests-oauthlib-1.3.1 sh-1.14.3 six-1.16.0 smmap-5.0.0 uritemplate-4.1.1 urllib3-1.26.13"
                            ],
                            "zuul_log_id": "ce4df5fb-964c-d7cb-6b39-000000000c60-1-node"
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-d7cb-6b39-000000000c04",
                        "name": "ensure-cilib",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_1/cc-github.bmwgroup.net/codecraft/cilib/roles/ensure-cilib"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:44:19.650064Z",
                            "start": "2024-04-21T00:44:03.602566Z"
                        },
                        "id": "ce4df5fb-964c-d7cb-6b39-000000000c60",
                        "name": "Install cilib in virtual env"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "shell",
                            "changed": true,
                            "cmd": "ln -snf \"/home/zuul/cilib/bin/cilib-\"* \"/usr/bin/\"",
                            "delta": "0:00:00.007491",
                            "end": "2024-04-21 00:44:20.044744",
                            "invocation": {
                                "module_args": {
                                    "_raw_params": "ln -snf \"/home/zuul/cilib/bin/cilib-\"* \"/usr/bin/\"",
                                    "_uses_shell": true,
                                    "argv": null,
                                    "chdir": null,
                                    "creates": null,
                                    "executable": null,
                                    "removes": null,
                                    "stdin": null,
                                    "stdin_add_newline": true,
                                    "strip_empty_ends": true,
                                    "warn": false,
                                    "zuul_ansible_split_streams": false,
                                    "zuul_log_id": "ce4df5fb-964c-d7cb-6b39-000000000c62-1-node"
                                }
                            },
                            "msg": "",
                            "rc": 0,
                            "start": "2024-04-21 00:44:20.037253",
                            "stderr": "",
                            "stderr_lines": [],
                            "stdout": "",
                            "stdout_lines": [],
                            "zuul_log_id": "ce4df5fb-964c-d7cb-6b39-000000000c62-1-node"
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-d7cb-6b39-000000000c04",
                        "name": "ensure-cilib",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_1/cc-github.bmwgroup.net/codecraft/cilib/roles/ensure-cilib"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:44:20.215255Z",
                            "start": "2024-04-21T00:44:19.698944Z"
                        },
                        "id": "ce4df5fb-964c-d7cb-6b39-000000000c62",
                        "name": "Create symlinks for cilib commands"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "include_tasks",
                            "changed": false,
                            "false_condition": "ansible_os_family == \"Windows\"",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-d7cb-6b39-000000000c04",
                        "name": "ensure-cilib",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_1/cc-github.bmwgroup.net/codecraft/cilib/roles/ensure-cilib"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:44:20.255672Z",
                            "start": "2024-04-21T00:44:20.226937Z"
                        },
                        "id": "ce4df5fb-964c-d7cb-6b39-000000000c0d",
                        "name": ""
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "include_role",
                            "changed": false,
                            "include_args": {
                                "name": "dns-reliability"
                            }
                        }
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:44:20.362008Z",
                            "start": "2024-04-21T00:44:20.280483Z"
                        },
                        "id": "ce4df5fb-964c-d7cb-6b39-00000000002a",
                        "name": ""
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "shell",
                            "changed": true,
                            "cmd": "echo \"\" >>/etc/resolv.conf\necho \"# overcome short network outages\" >>/etc/resolv.conf\necho \"options timeout:30 attempts:5\" >>/etc/resolv.conf\n",
                            "delta": "0:00:00.007520",
                            "end": "2024-04-21 00:44:20.767709",
                            "invocation": {
                                "module_args": {
                                    "_raw_params": "echo \"\" >>/etc/resolv.conf\necho \"# overcome short network outages\" >>/etc/resolv.conf\necho \"options timeout:30 attempts:5\" >>/etc/resolv.conf\n",
                                    "_uses_shell": true,
                                    "argv": null,
                                    "chdir": null,
                                    "creates": null,
                                    "executable": null,
                                    "removes": null,
                                    "stdin": null,
                                    "stdin_add_newline": true,
                                    "strip_empty_ends": true,
                                    "warn": false,
                                    "zuul_ansible_split_streams": false,
                                    "zuul_log_id": "ce4df5fb-964c-d7cb-6b39-000000000ce6-1-node"
                                }
                            },
                            "msg": "",
                            "rc": 0,
                            "start": "2024-04-21 00:44:20.760189",
                            "stderr": "",
                            "stderr_lines": [],
                            "stdout": "",
                            "stdout_lines": [],
                            "zuul_log_id": "ce4df5fb-964c-d7cb-6b39-000000000ce6-1-node"
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-d7cb-6b39-000000000ce4",
                        "name": "dns-reliability",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_1/cc-github.bmwgroup.net/codecraft/cilib/roles/dns-reliability"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:44:20.968366Z",
                            "start": "2024-04-21T00:44:20.453356Z"
                        },
                        "id": "ce4df5fb-964c-d7cb-6b39-000000000ce6",
                        "name": "add options to resolv.conf"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "include_role",
                            "changed": false,
                            "false_condition": "enable_mtu_config | default(False)",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:44:21.060689Z",
                            "start": "2024-04-21T00:44:20.990310Z"
                        },
                        "id": "ce4df5fb-964c-d7cb-6b39-00000000002b",
                        "name": ""
                    }
                }
            ]
        }
    ],
    "stats": {
        "localhost": {
            "changed": 0,
            "failures": 0,
            "ignored": 0,
            "ok": 4,
            "rescued": 0,
            "skipped": 5,
            "unreachable": 0
        },
        "node": {
            "changed": 49,
            "failures": 0,
            "ignored": 0,
            "ok": 96,
            "rescued": 0,
            "skipped": 29,
            "unreachable": 0
        }
    },
    "trusted": true
},
{
    "branch": "master",
    "index": "1",
    "phase": "pre",
    "playbook": "cc-github.bmwgroup.net/swh/zuul-trusted-ddad/playbooks/add-node-debug-key.yaml",
    "plays": [
        {
            "play": {
                "duration": {
                    "end": "2024-04-21T00:44:23.451717Z",
                    "start": "2024-04-21T00:44:22.626542Z"
                },
                "id": "ce4df5fb-964c-9ad3-cbaa-000000000002",
                "name": "all"
            },
            "tasks": [
                {
                    "hosts": {
                        "node": {
                            "action": "authorized_key",
                            "changed": false,
                            "comment": null,
                            "exclusive": false,
                            "follow": false,
                            "invocation": {
                                "module_args": {
                                    "comment": null,
                                    "exclusive": false,
                                    "follow": false,
                                    "key": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDlml1J8ssEY+uE1MDGhv/vmdGz5ks94x2wS1buI2N6e67xfaP8t8OCY/CHRFY4lbuToyWHC6TjSpQBHgprCfNuHOikxk+PLlJ/+FzapJPk5OuY7WvZTLzS1L4/FL1otxbIO8WPyILRxCpP2NclSkdgvbmKDBGX6IHmVZacj6aK13Kwb2OSt9MFCg4JAkEKB9hSuSHokzHBOeqAx4adJAAvHbt8ak58w0Q0ZYscDWl37/2hr4OTp35uexx0pRHkPCwDXgHONvMvoYmWlDuOGq1hcgOIlgKesnR1tTeuStQbvPIZbpdD8fK03U41+z7XPD1GD3asR0gHBcyE7p1smqZb",
                                    "key_options": null,
                                    "keyfile": "/home/zuul/.ssh/authorized_keys",
                                    "manage_dir": true,
                                    "path": null,
                                    "state": "present",
                                    "user": "zuul",
                                    "validate_certs": true
                                }
                            },
                            "key": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDlml1J8ssEY+uE1MDGhv/vmdGz5ks94x2wS1buI2N6e67xfaP8t8OCY/CHRFY4lbuToyWHC6TjSpQBHgprCfNuHOikxk+PLlJ/+FzapJPk5OuY7WvZTLzS1L4/FL1otxbIO8WPyILRxCpP2NclSkdgvbmKDBGX6IHmVZacj6aK13Kwb2OSt9MFCg4JAkEKB9hSuSHokzHBOeqAx4adJAAvHbt8ak58w0Q0ZYscDWl37/2hr4OTp35uexx0pRHkPCwDXgHONvMvoYmWlDuOGq1hcgOIlgKesnR1tTeuStQbvPIZbpdD8fK03U41+z7XPD1GD3asR0gHBcyE7p1smqZb",
                            "key_options": null,
                            "keyfile": "/home/zuul/.ssh/authorized_keys",
                            "manage_dir": true,
                            "path": null,
                            "state": "present",
                            "user": "zuul",
                            "validate_certs": true
                        }
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:44:23.413881Z",
                            "start": "2024-04-21T00:44:22.674000Z"
                        },
                        "id": "ce4df5fb-964c-9ad3-cbaa-000000000004",
                        "name": "Add SSH key for debug purposes"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "win_user",
                            "changed": false,
                            "false_condition": "ansible_os_family == \"Windows\" and 'release' not in zuul.pipeline",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:44:23.451717Z",
                            "start": "2024-04-21T00:44:23.425000Z"
                        },
                        "id": "ce4df5fb-964c-9ad3-cbaa-000000000005",
                        "name": "Create windows user for debug purposes"
                    }
                }
            ]
        }
    ],
    "stats": {
        "node": {
            "changed": 0,
            "failures": 0,
            "ignored": 0,
            "ok": 1,
            "rescued": 0,
            "skipped": 1,
            "unreachable": 0
        }
    },
    "trusted": true
},
{
    "branch": "master",
    "index": "2",
    "phase": "pre",
    "playbook": "cc-github.bmwgroup.net/swh/zuul-trusted-ddad/playbooks/build-data/create-directory-for-upload.yaml",
    "plays": [
        {
            "play": {
                "duration": {
                    "end": "2024-04-21T00:44:26.223132Z",
                    "start": "2024-04-21T00:44:24.906912Z"
                },
                "id": "ce4df5fb-964c-76bf-a389-000000000002",
                "name": "Create directory for Elasticsearch uploads"
            },
            "tasks": [
                {
                    "hosts": {
                        "node": {
                            "action": "file",
                            "changed": false,
                            "invocation": {
                                "module_args": {
                                    "_diff_peek": null,
                                    "_original_basename": null,
                                    "access_time": null,
                                    "access_time_format": "%Y%m%d%H%M.%S",
                                    "attributes": null,
                                    "follow": true,
                                    "force": false,
                                    "group": null,
                                    "mode": null,
                                    "modification_time": null,
                                    "modification_time_format": "%Y%m%d%H%M.%S",
                                    "owner": null,
                                    "path": "/home/zuul/build_data/",
                                    "recurse": false,
                                    "selevel": null,
                                    "serole": null,
                                    "setype": null,
                                    "seuser": null,
                                    "src": null,
                                    "state": "absent",
                                    "unsafe_writes": false
                                }
                            },
                            "path": "/home/zuul/build_data/",
                            "state": "absent"
                        }
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:44:25.516493Z",
                            "start": "2024-04-21T00:44:24.927968Z"
                        },
                        "id": "ce4df5fb-964c-76bf-a389-000000000004",
                        "name": "Delete directory at /home/zuul/build_data/"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "file",
                            "changed": true,
                            "diff": {
                                "after": {
                                    "path": "/home/zuul/build_data/",
                                    "state": "directory"
                                },
                                "before": {
                                    "path": "/home/zuul/build_data/",
                                    "state": "absent"
                                }
                            },
                            "gid": 1000,
                            "group": "zuul",
                            "invocation": {
                                "module_args": {
                                    "_diff_peek": null,
                                    "_original_basename": null,
                                    "access_time": null,
                                    "access_time_format": "%Y%m%d%H%M.%S",
                                    "attributes": null,
                                    "follow": true,
                                    "force": false,
                                    "group": null,
                                    "mode": null,
                                    "modification_time": null,
                                    "modification_time_format": "%Y%m%d%H%M.%S",
                                    "owner": null,
                                    "path": "/home/zuul/build_data/",
                                    "recurse": false,
                                    "selevel": null,
                                    "serole": null,
                                    "setype": null,
                                    "seuser": null,
                                    "src": null,
                                    "state": "directory",
                                    "unsafe_writes": false
                                }
                            },
                            "mode": "0775",
                            "owner": "zuul",
                            "path": "/home/zuul/build_data/",
                            "size": 4096,
                            "state": "directory",
                            "uid": 1000
                        }
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:44:26.135534Z",
                            "start": "2024-04-21T00:44:25.533818Z"
                        },
                        "id": "ce4df5fb-964c-76bf-a389-000000000005",
                        "name": "Ensure directory at /home/zuul/build_data/ exists"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "win_file",
                            "changed": false,
                            "false_condition": "ansible_os_family == \"Windows\"",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:44:26.172505Z",
                            "start": "2024-04-21T00:44:26.145397Z"
                        },
                        "id": "ce4df5fb-964c-76bf-a389-000000000006",
                        "name": "Delete directory at /home/zuul/build_data/"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "win_file",
                            "changed": false,
                            "false_condition": "ansible_os_family == \"Windows\"",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:44:26.223132Z",
                            "start": "2024-04-21T00:44:26.185511Z"
                        },
                        "id": "ce4df5fb-964c-76bf-a389-000000000007",
                        "name": "Ensure directory at /home/zuul/build_data/ exists"
                    }
                }
            ]
        }
    ],
    "stats": {
        "node": {
            "changed": 1,
            "failures": 0,
            "ignored": 0,
            "ok": 2,
            "rescued": 0,
            "skipped": 2,
            "unreachable": 0
        }
    },
    "trusted": true
},
{
    "branch": "master",
    "index": "3",
    "phase": "pre",
    "playbook": "cc-github.bmwgroup.net/swh/ddad_ci_config/playbooks/helper/validate-required-projects.yaml",
    "plays": [
        {
            "play": {
                "duration": {
                    "end": "2024-04-21T00:44:28.301206Z",
                    "start": "2024-04-21T00:44:27.809994Z"
                },
                "id": "ce4df5fb-964c-a103-843f-000000000002",
                "name": "all"
            },
            "tasks": [
                {
                    "hosts": {
                        "node": {
                            "action": "set_fact",
                            "ansible_facts": {
                                "pr_repository_required": true
                            },
                            "changed": false
                        }
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:44:27.986641Z",
                            "start": "2024-04-21T00:44:27.860276Z"
                        },
                        "id": "ce4df5fb-964c-a103-843f-000000000004",
                        "name": "Extract repository data from required-projects"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "set_fact",
                            "ansible_facts": {
                                "validate_required_projects_independent": false
                            },
                            "changed": false
                        }
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:44:28.054107Z",
                            "start": "2024-04-21T00:44:27.996777Z"
                        },
                        "id": "ce4df5fb-964c-a103-843f-000000000005",
                        "name": "Extract job tags"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "zuul_return",
                            "changed": false,
                            "false_condition": "not pr_repository_required | bool",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:44:28.140046Z",
                            "start": "2024-04-21T00:44:28.062318Z"
                        },
                        "id": "ce4df5fb-964c-a103-843f-000000000007",
                        "name": "Skip retries if we are about to fail the job"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "fail",
                            "changed": false,
                            "false_condition": "not pr_repository_required | bool",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:44:28.218158Z",
                            "start": "2024-04-21T00:44:28.149924Z"
                        },
                        "id": "ce4df5fb-964c-a103-843f-000000000008",
                        "name": "Fail job if repository is not in required-projects"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "debug",
                            "changed": false,
                            "false_condition": "not pr_repository_required | bool",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:44:28.301206Z",
                            "start": "2024-04-21T00:44:28.232018Z"
                        },
                        "id": "ce4df5fb-964c-a103-843f-00000000000a",
                        "name": "Warn job if repository is not in required-projects"
                    }
                }
            ]
        }
    ],
    "stats": {
        "node": {
            "changed": 0,
            "failures": 0,
            "ignored": 0,
            "ok": 2,
            "rescued": 0,
            "skipped": 3,
            "unreachable": 0
        }
    },
    "trusted": false
},
{
    "branch": "master",
    "index": "4",
    "phase": "pre",
    "playbook": "cc-github.bmwgroup.net/swh/ddad_ci_config/playbooks/strace-monitoring/control/start.yaml",
    "plays": [
        {
            "play": {
                "duration": {
                    "end": "2024-04-21T00:44:31.344992Z",
                    "start": "2024-04-21T00:44:29.596555Z"
                },
                "id": "ce4df5fb-964c-9d67-a2b5-000000000003",
                "name": "all"
            },
            "tasks": [
                {
                    "hosts": {
                        "node": {
                            "action": "set_fact",
                            "changed": false,
                            "false_condition": "strace_monitoring_enabled|default(false)",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:44:29.714600Z",
                            "start": "2024-04-21T00:44:29.632482Z"
                        },
                        "id": "ce4df5fb-964c-9d67-a2b5-000000000005",
                        "name": ""
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "set_fact",
                            "changed": false,
                            "false_condition": "strace_monitoring_enabled|default(false)",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:44:29.791560Z",
                            "start": "2024-04-21T00:44:29.724243Z"
                        },
                        "id": "ce4df5fb-964c-9d67-a2b5-000000000006",
                        "name": ""
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "file",
                            "changed": false,
                            "false_condition": "strace_monitoring_enabled|default(false)",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:44:29.850728Z",
                            "start": "2024-04-21T00:44:29.803666Z"
                        },
                        "id": "ce4df5fb-964c-9d67-a2b5-000000000007",
                        "name": "Create a directory {{ output_dir }}"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "shell",
                            "changed": false,
                            "false_condition": "strace_monitoring_enabled|default(false)",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:44:30.463551Z",
                            "start": "2024-04-21T00:44:29.923955Z"
                        },
                        "id": "ce4df5fb-964c-9d67-a2b5-000000000008",
                        "name": "Strace version"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "template",
                            "changed": false,
                            "false_condition": "strace_monitoring_enabled|default(false)",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:44:30.605816Z",
                            "start": "2024-04-21T00:44:30.473858Z"
                        },
                        "id": "ce4df5fb-964c-9d67-a2b5-000000000009",
                        "name": "Ensure {{ service_name }} service file"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "systemd",
                            "changed": false,
                            "false_condition": "strace_monitoring_enabled|default(false)",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:44:30.756847Z",
                            "start": "2024-04-21T00:44:30.697137Z"
                        },
                        "id": "ce4df5fb-964c-9d67-a2b5-00000000000a",
                        "name": "Restart {{ service_name }} service"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "shell",
                            "changed": false,
                            "false_condition": "strace_monitoring_enabled|default(false)",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:44:31.344992Z",
                            "start": "2024-04-21T00:44:30.822469Z"
                        },
                        "id": "ce4df5fb-964c-9d67-a2b5-00000000000b",
                        "name": "Status of {{ service_name }} service"
                    }
                }
            ]
        }
    ],
    "stats": {
        "node": {
            "changed": 0,
            "failures": 0,
            "ignored": 0,
            "ok": 0,
            "rescued": 0,
            "skipped": 7,
            "unreachable": 0
        }
    },
    "trusted": false
},
{
    "branch": "master",
    "index": "5",
    "phase": "pre",
    "playbook": "cc-github.bmwgroup.net/swh/zuul-trusted-ddad/playbooks/base-xpad/pre.yaml",
    "plays": [
        {
            "play": {
                "duration": {
                    "end": "2024-04-21T00:44:56.497478Z",
                    "start": "2024-04-21T00:44:32.899922Z"
                },
                "id": "ce4df5fb-964c-1b2c-89dc-000000000002",
                "name": "all"
            },
            "tasks": [
                {
                    "hosts": {
                        "node": {
                            "action": "assert",
                            "changed": false,
                            "msg": "All assertions passed"
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-1b2c-89dc-00000000000c",
                        "name": "artifactory-token",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_1/cc-github.bmwgroup.net/codecraft/cilib/roles/artifactory-token"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:44:32.991379Z",
                            "start": "2024-04-21T00:44:32.942856Z"
                        },
                        "id": "ce4df5fb-964c-1b2c-89dc-00000000000e",
                        "name": "Ensure all mandatory variables are defined"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "include_tasks",
                            "changed": false,
                            "include": "linux.yaml",
                            "include_args": {}
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-1b2c-89dc-00000000000c",
                        "name": "artifactory-token",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_1/cc-github.bmwgroup.net/codecraft/cilib/roles/artifactory-token"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:44:33.114258Z",
                            "start": "2024-04-21T00:44:33.004442Z"
                        },
                        "id": "ce4df5fb-964c-1b2c-89dc-00000000000f",
                        "name": ""
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "tempfile",
                            "changed": true,
                            "gid": 1000,
                            "group": "zuul",
                            "invocation": {
                                "module_args": {
                                    "path": null,
                                    "prefix": "ansible.",
                                    "state": "file",
                                    "suffix": ""
                                }
                            },
                            "mode": "0600",
                            "owner": "zuul",
                            "path": "/tmp/ansible.w9__hi1m",
                            "size": 0,
                            "state": "file",
                            "uid": 1000
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-1b2c-89dc-00000000000c",
                        "name": "artifactory-token",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_1/cc-github.bmwgroup.net/codecraft/cilib/roles/artifactory-token"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:44:33.704481Z",
                            "start": "2024-04-21T00:44:33.144004Z"
                        },
                        "id": "ce4df5fb-964c-1b2c-89dc-0000000000bf",
                        "name": "Create temporary file for tokens"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "shell",
                            "censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result",
                            "changed": true
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-1b2c-89dc-00000000000c",
                        "name": "artifactory-token",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_1/cc-github.bmwgroup.net/codecraft/cilib/roles/artifactory-token"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:44:34.622069Z",
                            "start": "2024-04-21T00:44:33.719712Z"
                        },
                        "id": "ce4df5fb-964c-1b2c-89dc-0000000000c1",
                        "name": "Create artifactory tokens"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "slurp",
                            "censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result",
                            "changed": false
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-1b2c-89dc-00000000000c",
                        "name": "artifactory-token",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_1/cc-github.bmwgroup.net/codecraft/cilib/roles/artifactory-token"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:44:35.172727Z",
                            "start": "2024-04-21T00:44:34.636967Z"
                        },
                        "id": "ce4df5fb-964c-1b2c-89dc-0000000000c2",
                        "name": "Get the tokens"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "set_fact",
                            "censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result",
                            "changed": false
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-1b2c-89dc-00000000000c",
                        "name": "artifactory-token",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_1/cc-github.bmwgroup.net/codecraft/cilib/roles/artifactory-token"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:44:35.299961Z",
                            "start": "2024-04-21T00:44:35.189600Z"
                        },
                        "id": "ce4df5fb-964c-1b2c-89dc-0000000000c3",
                        "name": ""
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "include_tasks",
                            "censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result",
                            "changed": false
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-1b2c-89dc-00000000000c",
                        "name": "artifactory-token",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_1/cc-github.bmwgroup.net/codecraft/cilib/roles/artifactory-token"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:44:35.370586Z",
                            "start": "2024-04-21T00:44:35.309397Z"
                        },
                        "id": "ce4df5fb-964c-1b2c-89dc-0000000000c4",
                        "name": ""
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "set_fact",
                            "censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result",
                            "changed": false
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-1b2c-89dc-00000000000c",
                        "name": "artifactory-token",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_1/cc-github.bmwgroup.net/codecraft/cilib/roles/artifactory-token"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:44:35.461904Z",
                            "start": "2024-04-21T00:44:35.409775Z"
                        },
                        "id": "ce4df5fb-964c-1b2c-89dc-0000000000e4",
                        "name": ""
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "set_fact",
                            "censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result",
                            "changed": false
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-1b2c-89dc-00000000000c",
                        "name": "artifactory-token",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_1/cc-github.bmwgroup.net/codecraft/cilib/roles/artifactory-token"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:44:35.526893Z",
                            "start": "2024-04-21T00:44:35.475489Z"
                        },
                        "id": "ce4df5fb-964c-1b2c-89dc-0000000000e5",
                        "name": ""
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "file",
                            "censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result",
                            "changed": true
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-1b2c-89dc-00000000000c",
                        "name": "artifactory-token",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_1/cc-github.bmwgroup.net/codecraft/cilib/roles/artifactory-token"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:44:36.415412Z",
                            "start": "2024-04-21T00:44:35.540794Z"
                        },
                        "id": "ce4df5fb-964c-1b2c-89dc-0000000000c5",
                        "name": ""
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "include_tasks",
                            "changed": false,
                            "false_condition": "ansible_os_family == \"Windows\"",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-1b2c-89dc-00000000000c",
                        "name": "artifactory-token",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_1/cc-github.bmwgroup.net/codecraft/cilib/roles/artifactory-token"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:44:36.455624Z",
                            "start": "2024-04-21T00:44:36.425784Z"
                        },
                        "id": "ce4df5fb-964c-1b2c-89dc-000000000010",
                        "name": ""
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "include_tasks",
                            "changed": false,
                            "include": "linux.yaml",
                            "include_args": {}
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-1b2c-89dc-000000000012",
                        "name": "ensure-netrc",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_1/cc-github.bmwgroup.net/codecraft/cilib/roles/ensure-netrc"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:44:36.526670Z",
                            "start": "2024-04-21T00:44:36.485429Z"
                        },
                        "id": "ce4df5fb-964c-1b2c-89dc-000000000014",
                        "name": ""
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "lineinfile",
                            "censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result",
                            "changed": true
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-1b2c-89dc-000000000012",
                        "name": "ensure-netrc",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_1/cc-github.bmwgroup.net/codecraft/cilib/roles/ensure-netrc"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:44:43.311755Z",
                            "start": "2024-04-21T00:44:36.558616Z"
                        },
                        "id": "ce4df5fb-964c-1b2c-89dc-000000000110",
                        "name": "Ensure netrc entries"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "fail",
                            "changed": false,
                            "false_condition": "command_result.failed is defined",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-1b2c-89dc-000000000012",
                        "name": "ensure-netrc",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_1/cc-github.bmwgroup.net/codecraft/cilib/roles/ensure-netrc"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:44:43.378314Z",
                            "start": "2024-04-21T00:44:43.321357Z"
                        },
                        "id": "ce4df5fb-964c-1b2c-89dc-000000000111",
                        "name": "fail if Ensure netrc entries not succeed"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "include_tasks",
                            "changed": false,
                            "false_condition": "ansible_os_family == \"Windows\"",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-1b2c-89dc-000000000012",
                        "name": "ensure-netrc",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_1/cc-github.bmwgroup.net/codecraft/cilib/roles/ensure-netrc"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:44:43.419091Z",
                            "start": "2024-04-21T00:44:43.392293Z"
                        },
                        "id": "ce4df5fb-964c-1b2c-89dc-000000000015",
                        "name": ""
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "set_fact",
                            "ansible_facts": {
                                "platform": "linux"
                            },
                            "changed": false
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-1b2c-89dc-000000000017",
                        "name": "ensure-private-key",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_1/cc-github.bmwgroup.net/codecraft/cilib/roles/ensure-private-key"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:44:43.484858Z",
                            "start": "2024-04-21T00:44:43.435663Z"
                        },
                        "id": "ce4df5fb-964c-1b2c-89dc-000000000019",
                        "name": ""
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "set_fact",
                            "changed": false,
                            "false_condition": "ansible_os_family == \"Windows\"",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-1b2c-89dc-000000000017",
                        "name": "ensure-private-key",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_1/cc-github.bmwgroup.net/codecraft/cilib/roles/ensure-private-key"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:44:43.528529Z",
                            "start": "2024-04-21T00:44:43.500841Z"
                        },
                        "id": "ce4df5fb-964c-1b2c-89dc-00000000001a",
                        "name": ""
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "include_tasks",
                            "changed": false,
                            "include": "linux/main.yaml",
                            "include_args": {}
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-1b2c-89dc-000000000017",
                        "name": "ensure-private-key",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_1/cc-github.bmwgroup.net/codecraft/cilib/roles/ensure-private-key"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:44:43.573506Z",
                            "start": "2024-04-21T00:44:43.538806Z"
                        },
                        "id": "ce4df5fb-964c-1b2c-89dc-00000000001b",
                        "name": ""
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "file",
                            "changed": false,
                            "diff": {
                                "after": {
                                    "path": "/home/zuul/.ssh"
                                },
                                "before": {
                                    "path": "/home/zuul/.ssh"
                                }
                            },
                            "gid": 1000,
                            "group": "zuul",
                            "invocation": {
                                "module_args": {
                                    "_diff_peek": null,
                                    "_original_basename": null,
                                    "access_time": null,
                                    "access_time_format": "%Y%m%d%H%M.%S",
                                    "attributes": null,
                                    "follow": true,
                                    "force": false,
                                    "group": "1000",
                                    "mode": 448,
                                    "modification_time": null,
                                    "modification_time_format": "%Y%m%d%H%M.%S",
                                    "owner": "1000",
                                    "path": "/home/zuul/.ssh",
                                    "recurse": false,
                                    "selevel": null,
                                    "serole": null,
                                    "setype": null,
                                    "seuser": null,
                                    "src": null,
                                    "state": "directory",
                                    "unsafe_writes": false
                                }
                            },
                            "mode": "0700",
                            "owner": "zuul",
                            "path": "/home/zuul/.ssh",
                            "size": 4096,
                            "state": "directory",
                            "uid": 1000
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-1b2c-89dc-000000000017",
                        "name": "ensure-private-key",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_1/cc-github.bmwgroup.net/codecraft/cilib/roles/ensure-private-key"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:44:43.891021Z",
                            "start": "2024-04-21T00:44:43.601070Z"
                        },
                        "id": "ce4df5fb-964c-1b2c-89dc-000000000155",
                        "name": "Ensure the .ssh directory is present"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "include_tasks",
                            "censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result",
                            "changed": false
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-1b2c-89dc-000000000017",
                        "name": "ensure-private-key",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_1/cc-github.bmwgroup.net/codecraft/cilib/roles/ensure-private-key"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:44:43.987827Z",
                            "start": "2024-04-21T00:44:43.906376Z"
                        },
                        "id": "ce4df5fb-964c-1b2c-89dc-00000000001c",
                        "name": ""
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "set_fact",
                            "ansible_facts": {
                                "key_sha": "b3fe7e9ae1a3ad81894f537762ac137e4ae478ca"
                            },
                            "changed": false
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-1b2c-89dc-000000000017",
                        "name": "ensure-private-key",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_1/cc-github.bmwgroup.net/codecraft/cilib/roles/ensure-private-key"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:44:44.098750Z",
                            "start": "2024-04-21T00:44:44.022090Z"
                        },
                        "id": "ce4df5fb-964c-1b2c-89dc-00000000016c",
                        "name": "Calculate SHA1 for private key"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "set_fact",
                            "ansible_facts": {
                                "key_file_path": "~/.ssh/id_rsa_b3fe7e9ae1a3ad81894f537762ac137e4ae478ca"
                            },
                            "changed": false
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-1b2c-89dc-000000000017",
                        "name": "ensure-private-key",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_1/cc-github.bmwgroup.net/codecraft/cilib/roles/ensure-private-key"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:44:44.143460Z",
                            "start": "2024-04-21T00:44:44.107509Z"
                        },
                        "id": "ce4df5fb-964c-1b2c-89dc-00000000016d",
                        "name": "Define the private key file path"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "copy",
                            "changed": false,
                            "checksum": "b3fe7e9ae1a3ad81894f537762ac137e4ae478ca",
                            "dest": "/home/zuul/.ssh/id_rsa_b3fe7e9ae1a3ad81894f537762ac137e4ae478ca",
                            "diff": {
                                "after": {
                                    "path": "/home/zuul/.ssh/id_rsa_b3fe7e9ae1a3ad81894f537762ac137e4ae478ca"
                                },
                                "before": {
                                    "path": "/home/zuul/.ssh/id_rsa_b3fe7e9ae1a3ad81894f537762ac137e4ae478ca"
                                }
                            },
                            "gid": 1000,
                            "group": "zuul",
                            "invocation": {
                                "module_args": {
                                    "_diff_peek": null,
                                    "_original_basename": "tmptxatg0uz",
                                    "access_time": null,
                                    "access_time_format": "%Y%m%d%H%M.%S",
                                    "attributes": null,
                                    "dest": "/home/zuul/.ssh/id_rsa_b3fe7e9ae1a3ad81894f537762ac137e4ae478ca",
                                    "follow": true,
                                    "force": false,
                                    "group": "1000",
                                    "mode": 384,
                                    "modification_time": null,
                                    "modification_time_format": "%Y%m%d%H%M.%S",
                                    "owner": "1000",
                                    "path": "/home/zuul/.ssh/id_rsa_b3fe7e9ae1a3ad81894f537762ac137e4ae478ca",
                                    "recurse": false,
                                    "selevel": null,
                                    "serole": null,
                                    "setype": null,
                                    "seuser": null,
                                    "src": null,
                                    "state": "file",
                                    "unsafe_writes": false
                                }
                            },
                            "mode": "0600",
                            "owner": "zuul",
                            "path": "/home/zuul/.ssh/id_rsa_b3fe7e9ae1a3ad81894f537762ac137e4ae478ca",
                            "size": 411,
                            "state": "file",
                            "uid": 1000
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-1b2c-89dc-000000000017",
                        "name": "ensure-private-key",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_1/cc-github.bmwgroup.net/codecraft/cilib/roles/ensure-private-key"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:44:45.088237Z",
                            "start": "2024-04-21T00:44:44.152902Z"
                        },
                        "id": "ce4df5fb-964c-1b2c-89dc-00000000016e",
                        "name": "Write private key to file"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "lineinfile",
                            "backup": "",
                            "changed": false,
                            "diff": [
                                {
                                    "after": "",
                                    "after_header": "/home/zuul/.ssh/config (content)",
                                    "before": "",
                                    "before_header": "/home/zuul/.ssh/config (content)"
                                },
                                {
                                    "after_header": "/home/zuul/.ssh/config (file attributes)",
                                    "before_header": "/home/zuul/.ssh/config (file attributes)"
                                }
                            ],
                            "invocation": {
                                "module_args": {
                                    "attributes": null,
                                    "backrefs": false,
                                    "backup": false,
                                    "create": true,
                                    "firstmatch": false,
                                    "group": "1000",
                                    "insertafter": null,
                                    "insertbefore": "BOF",
                                    "line": "IdentityFile ~/.ssh/id_rsa_b3fe7e9ae1a3ad81894f537762ac137e4ae478ca",
                                    "mode": 384,
                                    "owner": "1000",
                                    "path": "/home/zuul/.ssh/config",
                                    "regexp": null,
                                    "search_string": null,
                                    "selevel": null,
                                    "serole": null,
                                    "setype": null,
                                    "seuser": null,
                                    "state": "present",
                                    "unsafe_writes": false,
                                    "validate": null
                                }
                            },
                            "msg": ""
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-1b2c-89dc-000000000017",
                        "name": "ensure-private-key",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_1/cc-github.bmwgroup.net/codecraft/cilib/roles/ensure-private-key"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:44:45.421373Z",
                            "start": "2024-04-21T00:44:45.102533Z"
                        },
                        "id": "ce4df5fb-964c-1b2c-89dc-00000000016f",
                        "name": "Add the private key file to the ssh configuration"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "include_tasks",
                            "censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result",
                            "changed": false,
                            "skipped": true
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-1b2c-89dc-000000000017",
                        "name": "ensure-private-key",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_1/cc-github.bmwgroup.net/codecraft/cilib/roles/ensure-private-key"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:44:45.503230Z",
                            "start": "2024-04-21T00:44:45.434209Z"
                        },
                        "id": "ce4df5fb-964c-1b2c-89dc-00000000001d",
                        "name": ""
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "include_tasks",
                            "changed": false,
                            "include": "linux.yaml",
                            "include_args": {}
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-1b2c-89dc-00000000001f",
                        "name": "ensure-known-hosts",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_1/cc-github.bmwgroup.net/codecraft/cilib/roles/ensure-known-hosts"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:44:45.568589Z",
                            "start": "2024-04-21T00:44:45.530848Z"
                        },
                        "id": "ce4df5fb-964c-1b2c-89dc-000000000021",
                        "name": ""
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "file",
                            "changed": false,
                            "diff": {
                                "after": {
                                    "path": "/home/zuul/.ssh"
                                },
                                "before": {
                                    "path": "/home/zuul/.ssh"
                                }
                            },
                            "gid": 1000,
                            "group": "zuul",
                            "invocation": {
                                "module_args": {
                                    "_diff_peek": null,
                                    "_original_basename": null,
                                    "access_time": null,
                                    "access_time_format": "%Y%m%d%H%M.%S",
                                    "attributes": null,
                                    "follow": true,
                                    "force": false,
                                    "group": "1000",
                                    "mode": 448,
                                    "modification_time": null,
                                    "modification_time_format": "%Y%m%d%H%M.%S",
                                    "owner": "1000",
                                    "path": "/home/zuul/.ssh",
                                    "recurse": false,
                                    "selevel": null,
                                    "serole": null,
                                    "setype": null,
                                    "seuser": null,
                                    "src": null,
                                    "state": "directory",
                                    "unsafe_writes": false
                                }
                            },
                            "mode": "0700",
                            "owner": "zuul",
                            "path": "/home/zuul/.ssh",
                            "size": 4096,
                            "state": "directory",
                            "uid": 1000
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-1b2c-89dc-00000000001f",
                        "name": "ensure-known-hosts",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_1/cc-github.bmwgroup.net/codecraft/cilib/roles/ensure-known-hosts"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:44:46.124705Z",
                            "start": "2024-04-21T00:44:45.587128Z"
                        },
                        "id": "ce4df5fb-964c-1b2c-89dc-00000000019a",
                        "name": "Ensure the known_hosts directory is present"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "known_hosts",
                            "changed": false,
                            "msg": "All items completed",
                            "results": [
                                {
                                    "ansible_loop_var": "item",
                                    "changed": false,
                                    "diff": {
                                        "after": "cc-github.bmwgroup.net ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBCOiBcTK5jsKgzWZKreE9Oz2alnNuMH+EjxV61P+ilJGeZ/liCBWbw4lxMXfECisemjh1PRIH8kDWMpUCnR/QLY=\nxpad-ci-dev.sign.extern.cc.bmwgroup.net ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBG1LwKnyuWY9mc0j2a+NLseH+io5tEYZGbdXONqMl2x2m3ObHjNrB9ugaPAnivYQQCEQD1+3oNC7lQRDP5hwUiA=\nxpad-ci-prod.sign.extern.cc.bmwgroup.net ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBAhs6Kotpb9A41YyjUBG51EKuZC6sTMXTcf3Zw0D6cGhdVprbdOcHE4WF/5cgHzo9WeWyvqCX5WFE6aLEEdo5Pw=\n|1|FJz9OYQQGFwSU4CIY+WEE9AI2Xw=|8Lo0kJiUDD9GRkaQLMmj0nQBWZs= ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCrHtFsVV0V5//DICJy5+3DGRuTCh4DhATaXyVaM4SEw50xizaAECs9vqb0SqSrHw5yWUP2GY2QTtwFL1t0CxWRqjtteUo9THZjxzvCYu1zM/vn9bC/+uzvIKfzXbk8FUEy1Ut7aGhtTYWCpcNkfGbP3HSYoj51R9UZ/2PVz9S9DFq+UtNTXEOdrrF6N3LLKtvcc6H6DPLXiDkrrwOi2sqkAznbg7SOADn71hcI0E9RhbgS57qlcSno6j8OOFlxYUdBhb1HjVS9obCkUUvmUvaqSl19uKtlideNGZjENishj+pKQiRevdknXdlT6YKLY0fqSEfK40Dygeu+8SKa+FV3\n|1|+vcqwCVem8EdeWhsmqn/dIuaajU=|1bbo57jlMWxhRtzI5cWSX+9Y/lw= ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAINg9g/bzeHeozOCvYWatmUFpxL3vCannONOaqRqCiGsD\n",
                                        "after_header": "/home/zuul/.ssh/known_hosts",
                                        "before": "cc-github.bmwgroup.net ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBCOiBcTK5jsKgzWZKreE9Oz2alnNuMH+EjxV61P+ilJGeZ/liCBWbw4lxMXfECisemjh1PRIH8kDWMpUCnR/QLY=\nxpad-ci-dev.sign.extern.cc.bmwgroup.net ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBG1LwKnyuWY9mc0j2a+NLseH+io5tEYZGbdXONqMl2x2m3ObHjNrB9ugaPAnivYQQCEQD1+3oNC7lQRDP5hwUiA=\nxpad-ci-prod.sign.extern.cc.bmwgroup.net ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBAhs6Kotpb9A41YyjUBG51EKuZC6sTMXTcf3Zw0D6cGhdVprbdOcHE4WF/5cgHzo9WeWyvqCX5WFE6aLEEdo5Pw=\n|1|FJz9OYQQGFwSU4CIY+WEE9AI2Xw=|8Lo0kJiUDD9GRkaQLMmj0nQBWZs= ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCrHtFsVV0V5//DICJy5+3DGRuTCh4DhATaXyVaM4SEw50xizaAECs9vqb0SqSrHw5yWUP2GY2QTtwFL1t0CxWRqjtteUo9THZjxzvCYu1zM/vn9bC/+uzvIKfzXbk8FUEy1Ut7aGhtTYWCpcNkfGbP3HSYoj51R9UZ/2PVz9S9DFq+UtNTXEOdrrF6N3LLKtvcc6H6DPLXiDkrrwOi2sqkAznbg7SOADn71hcI0E9RhbgS57qlcSno6j8OOFlxYUdBhb1HjVS9obCkUUvmUvaqSl19uKtlideNGZjENishj+pKQiRevdknXdlT6YKLY0fqSEfK40Dygeu+8SKa+FV3\n|1|+vcqwCVem8EdeWhsmqn/dIuaajU=|1bbo57jlMWxhRtzI5cWSX+9Y/lw= ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAINg9g/bzeHeozOCvYWatmUFpxL3vCannONOaqRqCiGsD\n",
                                        "before_header": "/home/zuul/.ssh/known_hosts"
                                    },
                                    "failed": false,
                                    "gid": 1000,
                                    "group": "zuul",
                                    "hash_host": false,
                                    "invocation": {
                                        "module_args": {
                                            "diff": {
                                                "after": "cc-github.bmwgroup.net ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBCOiBcTK5jsKgzWZKreE9Oz2alnNuMH+EjxV61P+ilJGeZ/liCBWbw4lxMXfECisemjh1PRIH8kDWMpUCnR/QLY=\nxpad-ci-dev.sign.extern.cc.bmwgroup.net ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBG1LwKnyuWY9mc0j2a+NLseH+io5tEYZGbdXONqMl2x2m3ObHjNrB9ugaPAnivYQQCEQD1+3oNC7lQRDP5hwUiA=\nxpad-ci-prod.sign.extern.cc.bmwgroup.net ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBAhs6Kotpb9A41YyjUBG51EKuZC6sTMXTcf3Zw0D6cGhdVprbdOcHE4WF/5cgHzo9WeWyvqCX5WFE6aLEEdo5Pw=\n|1|FJz9OYQQGFwSU4CIY+WEE9AI2Xw=|8Lo0kJiUDD9GRkaQLMmj0nQBWZs= ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCrHtFsVV0V5//DICJy5+3DGRuTCh4DhATaXyVaM4SEw50xizaAECs9vqb0SqSrHw5yWUP2GY2QTtwFL1t0CxWRqjtteUo9THZjxzvCYu1zM/vn9bC/+uzvIKfzXbk8FUEy1Ut7aGhtTYWCpcNkfGbP3HSYoj51R9UZ/2PVz9S9DFq+UtNTXEOdrrF6N3LLKtvcc6H6DPLXiDkrrwOi2sqkAznbg7SOADn71hcI0E9RhbgS57qlcSno6j8OOFlxYUdBhb1HjVS9obCkUUvmUvaqSl19uKtlideNGZjENishj+pKQiRevdknXdlT6YKLY0fqSEfK40Dygeu+8SKa+FV3\n|1|+vcqwCVem8EdeWhsmqn/dIuaajU=|1bbo57jlMWxhRtzI5cWSX+9Y/lw= ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAINg9g/bzeHeozOCvYWatmUFpxL3vCannONOaqRqCiGsD\n",
                                                "after_header": "/home/zuul/.ssh/known_hosts",
                                                "before": "cc-github.bmwgroup.net ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBCOiBcTK5jsKgzWZKreE9Oz2alnNuMH+EjxV61P+ilJGeZ/liCBWbw4lxMXfECisemjh1PRIH8kDWMpUCnR/QLY=\nxpad-ci-dev.sign.extern.cc.bmwgroup.net ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBG1LwKnyuWY9mc0j2a+NLseH+io5tEYZGbdXONqMl2x2m3ObHjNrB9ugaPAnivYQQCEQD1+3oNC7lQRDP5hwUiA=\nxpad-ci-prod.sign.extern.cc.bmwgroup.net ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBAhs6Kotpb9A41YyjUBG51EKuZC6sTMXTcf3Zw0D6cGhdVprbdOcHE4WF/5cgHzo9WeWyvqCX5WFE6aLEEdo5Pw=\n|1|FJz9OYQQGFwSU4CIY+WEE9AI2Xw=|8Lo0kJiUDD9GRkaQLMmj0nQBWZs= ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCrHtFsVV0V5//DICJy5+3DGRuTCh4DhATaXyVaM4SEw50xizaAECs9vqb0SqSrHw5yWUP2GY2QTtwFL1t0CxWRqjtteUo9THZjxzvCYu1zM/vn9bC/+uzvIKfzXbk8FUEy1Ut7aGhtTYWCpcNkfGbP3HSYoj51R9UZ/2PVz9S9DFq+UtNTXEOdrrF6N3LLKtvcc6H6DPLXiDkrrwOi2sqkAznbg7SOADn71hcI0E9RhbgS57qlcSno6j8OOFlxYUdBhb1HjVS9obCkUUvmUvaqSl19uKtlideNGZjENishj+pKQiRevdknXdlT6YKLY0fqSEfK40Dygeu+8SKa+FV3\n|1|+vcqwCVem8EdeWhsmqn/dIuaajU=|1bbo57jlMWxhRtzI5cWSX+9Y/lw= ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAINg9g/bzeHeozOCvYWatmUFpxL3vCannONOaqRqCiGsD\n",
                                                "before_header": "/home/zuul/.ssh/known_hosts"
                                            },
                                            "hash_host": false,
                                            "key": "cc-github.bmwgroup.net ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBCOiBcTK5jsKgzWZKreE9Oz2alnNuMH+EjxV61P+ilJGeZ/liCBWbw4lxMXfECisemjh1PRIH8kDWMpUCnR/QLY=",
                                            "name": "cc-github.bmwgroup.net",
                                            "path": "/home/zuul/.ssh/known_hosts",
                                            "state": "present"
                                        }
                                    },
                                    "item": "cc-github.bmwgroup.net",
                                    "key": "cc-github.bmwgroup.net ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBCOiBcTK5jsKgzWZKreE9Oz2alnNuMH+EjxV61P+ilJGeZ/liCBWbw4lxMXfECisemjh1PRIH8kDWMpUCnR/QLY=",
                                    "mode": "0600",
                                    "name": "cc-github.bmwgroup.net",
                                    "owner": "zuul",
                                    "path": "/home/zuul/.ssh/known_hosts",
                                    "size": 1171,
                                    "state": "file",
                                    "uid": 1000
                                }
                            ]
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-1b2c-89dc-00000000001f",
                        "name": "ensure-known-hosts",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_1/cc-github.bmwgroup.net/codecraft/cilib/roles/ensure-known-hosts"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:44:46.798548Z",
                            "start": "2024-04-21T00:44:46.136932Z"
                        },
                        "id": "ce4df5fb-964c-1b2c-89dc-00000000019b",
                        "name": "Adding known SSH hosts"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "include_tasks",
                            "changed": false,
                            "false_condition": "ansible_os_family == \"Windows\"",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-1b2c-89dc-00000000001f",
                        "name": "ensure-known-hosts",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_1/cc-github.bmwgroup.net/codecraft/cilib/roles/ensure-known-hosts"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:44:46.849891Z",
                            "start": "2024-04-21T00:44:46.812691Z"
                        },
                        "id": "ce4df5fb-964c-1b2c-89dc-000000000022",
                        "name": ""
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "set_fact",
                            "ansible_facts": {
                                "cilib_artifactory_url": "https://common.artifactory.cc.bmwgroup.net/artifactory",
                                "cilib_docker_registry": "common.artifactory.cc.bmwgroup.net",
                                "cilib_patterns": {
                                    "file_comments": {
                                        "ansiblelint": "^\\s*(?P<file_path>.*):(?P<start_line>\\d+): (?P<message>.*)$",
                                        "hadolint": "^(?P<file_path>.*):(?P<start_line>\\d+) (?P<message>.*)$",
                                        "labellint": "^(?P<file_path>.*):(?P<start_line>\\d+):(?P<message>.*)$",
                                        "oelint": "^(?P<file_path>.*):(?P<start_line>\\d+):(?P<log_level>.*?):(?P<message>.*)$",
                                        "pipelinelint": "^(?P<file_path>.*):(?P<start_line>\\d+):\\d+\\s(?P<log_level>\\S*)\\s(?P<rule_name>\\b(?!parser\\b)\\S*)\\s\\\"(?P<message>.*)\\\"$",
                                        "shellcheck": "^(?P<file_path>.*):(?P<start_line>\\d+):\\d+: (?P<message>.*)$",
                                        "yamllint": "^\\s*(?P<file_path>.*):(?P<start_line>\\d+):\\d+: \\[(?P<log_level>.*)\\] (?P<message>.*)$"
                                    }
                                },
                                "cilib_pypi_url": "https://common.artifactory.cc.bmwgroup.net/artifactory/api/pypi/codecraft-pypi-public/simple"
                            },
                            "changed": false
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-1b2c-89dc-000000000028",
                        "name": "cilib-defaults",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_1/cc-github.bmwgroup.net/codecraft/cilib/roles/cilib-defaults"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:44:46.912316Z",
                            "start": "2024-04-21T00:44:46.867759Z"
                        },
                        "id": "ce4df5fb-964c-1b2c-89dc-00000000002a",
                        "name": "Set cilib defaults"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "assert",
                            "changed": false,
                            "msg": "All assertions passed"
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-1b2c-89dc-000000000024",
                        "name": "docker-login",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_1/cc-github.bmwgroup.net/codecraft/cilib/roles/docker-login"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:44:47.071609Z",
                            "start": "2024-04-21T00:44:47.009441Z"
                        },
                        "id": "ce4df5fb-964c-1b2c-89dc-00000000002c",
                        "name": "Ensure all mandatory variables are defined"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "shell",
                            "attempts": 1,
                            "changed": true,
                            "cmd": "echo \"${DOCKER_LOGIN_PASSWORD}\" | docker login  --username \"xpadtech\"  --password-stdin  \"ddad.artifactory.cc.bmwgroup.net\"\n",
                            "delta": "0:00:00.494204",
                            "end": "2024-04-21 00:44:47.997948",
                            "invocation": {
                                "module_args": {
                                    "_raw_params": "echo \"${DOCKER_LOGIN_PASSWORD}\" | docker login  --username \"xpadtech\"  --password-stdin  \"ddad.artifactory.cc.bmwgroup.net\"\n",
                                    "_uses_shell": true,
                                    "argv": null,
                                    "chdir": null,
                                    "creates": null,
                                    "executable": null,
                                    "removes": null,
                                    "stdin": null,
                                    "stdin_add_newline": true,
                                    "strip_empty_ends": true,
                                    "warn": false,
                                    "zuul_ansible_split_streams": false,
                                    "zuul_log_id": "ce4df5fb-964c-1b2c-89dc-00000000002d-1-node"
                                }
                            },
                            "msg": "",
                            "rc": 0,
                            "start": "2024-04-21 00:44:47.503744",
                            "stderr": "",
                            "stderr_lines": [],
                            "stdout": "WARNING! Your password will be stored unencrypted in /home/zuul/.docker/config.json.\nConfigure a credential helper to remove this warning. See\nhttps://docs.docker.com/engine/reference/commandline/login/#credentials-store\n\nLogin Succeeded",
                            "stdout_lines": [
                                "WARNING! Your password will be stored unencrypted in /home/zuul/.docker/config.json.",
                                "Configure a credential helper to remove this warning. See",
                                "https://docs.docker.com/engine/reference/commandline/login/#credentials-store",
                                "",
                                "Login Succeeded"
                            ],
                            "zuul_log_id": "ce4df5fb-964c-1b2c-89dc-00000000002d-1-node"
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-1b2c-89dc-000000000024",
                        "name": "docker-login",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_1/cc-github.bmwgroup.net/codecraft/cilib/roles/docker-login"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:44:48.154208Z",
                            "start": "2024-04-21T00:44:47.140652Z"
                        },
                        "id": "ce4df5fb-964c-1b2c-89dc-00000000002d",
                        "name": "Login to Docker registry"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "include_tasks",
                            "changed": false,
                            "include": "linux.yaml",
                            "include_args": {}
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-1b2c-89dc-00000000002f",
                        "name": "ensure-known-hosts",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_1/cc-github.bmwgroup.net/codecraft/cilib/roles/ensure-known-hosts"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:44:48.213985Z",
                            "start": "2024-04-21T00:44:48.176322Z"
                        },
                        "id": "ce4df5fb-964c-1b2c-89dc-000000000031",
                        "name": ""
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "file",
                            "changed": false,
                            "diff": {
                                "after": {
                                    "path": "/home/zuul/.ssh"
                                },
                                "before": {
                                    "path": "/home/zuul/.ssh"
                                }
                            },
                            "gid": 1000,
                            "group": "zuul",
                            "invocation": {
                                "module_args": {
                                    "_diff_peek": null,
                                    "_original_basename": null,
                                    "access_time": null,
                                    "access_time_format": "%Y%m%d%H%M.%S",
                                    "attributes": null,
                                    "follow": true,
                                    "force": false,
                                    "group": "1000",
                                    "mode": 448,
                                    "modification_time": null,
                                    "modification_time_format": "%Y%m%d%H%M.%S",
                                    "owner": "1000",
                                    "path": "/home/zuul/.ssh",
                                    "recurse": false,
                                    "selevel": null,
                                    "serole": null,
                                    "setype": null,
                                    "seuser": null,
                                    "src": null,
                                    "state": "directory",
                                    "unsafe_writes": false
                                }
                            },
                            "mode": "0700",
                            "owner": "zuul",
                            "path": "/home/zuul/.ssh",
                            "size": 4096,
                            "state": "directory",
                            "uid": 1000
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-1b2c-89dc-00000000002f",
                        "name": "ensure-known-hosts",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_1/cc-github.bmwgroup.net/codecraft/cilib/roles/ensure-known-hosts"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:44:48.529672Z",
                            "start": "2024-04-21T00:44:48.240338Z"
                        },
                        "id": "ce4df5fb-964c-1b2c-89dc-0000000001be",
                        "name": "Ensure the known_hosts directory is present"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "known_hosts",
                            "changed": false,
                            "msg": "All items completed",
                            "results": [
                                {
                                    "ansible_loop_var": "item",
                                    "changed": false,
                                    "diff": {
                                        "after": "cc-github.bmwgroup.net ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBCOiBcTK5jsKgzWZKreE9Oz2alnNuMH+EjxV61P+ilJGeZ/liCBWbw4lxMXfECisemjh1PRIH8kDWMpUCnR/QLY=\nxpad-ci-dev.sign.extern.cc.bmwgroup.net ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBG1LwKnyuWY9mc0j2a+NLseH+io5tEYZGbdXONqMl2x2m3ObHjNrB9ugaPAnivYQQCEQD1+3oNC7lQRDP5hwUiA=\nxpad-ci-prod.sign.extern.cc.bmwgroup.net ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBAhs6Kotpb9A41YyjUBG51EKuZC6sTMXTcf3Zw0D6cGhdVprbdOcHE4WF/5cgHzo9WeWyvqCX5WFE6aLEEdo5Pw=\n|1|FJz9OYQQGFwSU4CIY+WEE9AI2Xw=|8Lo0kJiUDD9GRkaQLMmj0nQBWZs= ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCrHtFsVV0V5//DICJy5+3DGRuTCh4DhATaXyVaM4SEw50xizaAECs9vqb0SqSrHw5yWUP2GY2QTtwFL1t0CxWRqjtteUo9THZjxzvCYu1zM/vn9bC/+uzvIKfzXbk8FUEy1Ut7aGhtTYWCpcNkfGbP3HSYoj51R9UZ/2PVz9S9DFq+UtNTXEOdrrF6N3LLKtvcc6H6DPLXiDkrrwOi2sqkAznbg7SOADn71hcI0E9RhbgS57qlcSno6j8OOFlxYUdBhb1HjVS9obCkUUvmUvaqSl19uKtlideNGZjENishj+pKQiRevdknXdlT6YKLY0fqSEfK40Dygeu+8SKa+FV3\n|1|+vcqwCVem8EdeWhsmqn/dIuaajU=|1bbo57jlMWxhRtzI5cWSX+9Y/lw= ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAINg9g/bzeHeozOCvYWatmUFpxL3vCannONOaqRqCiGsD\n",
                                        "after_header": "/home/zuul/.ssh/known_hosts",
                                        "before": "cc-github.bmwgroup.net ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBCOiBcTK5jsKgzWZKreE9Oz2alnNuMH+EjxV61P+ilJGeZ/liCBWbw4lxMXfECisemjh1PRIH8kDWMpUCnR/QLY=\nxpad-ci-dev.sign.extern.cc.bmwgroup.net ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBG1LwKnyuWY9mc0j2a+NLseH+io5tEYZGbdXONqMl2x2m3ObHjNrB9ugaPAnivYQQCEQD1+3oNC7lQRDP5hwUiA=\nxpad-ci-prod.sign.extern.cc.bmwgroup.net ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBAhs6Kotpb9A41YyjUBG51EKuZC6sTMXTcf3Zw0D6cGhdVprbdOcHE4WF/5cgHzo9WeWyvqCX5WFE6aLEEdo5Pw=\n|1|FJz9OYQQGFwSU4CIY+WEE9AI2Xw=|8Lo0kJiUDD9GRkaQLMmj0nQBWZs= ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCrHtFsVV0V5//DICJy5+3DGRuTCh4DhATaXyVaM4SEw50xizaAECs9vqb0SqSrHw5yWUP2GY2QTtwFL1t0CxWRqjtteUo9THZjxzvCYu1zM/vn9bC/+uzvIKfzXbk8FUEy1Ut7aGhtTYWCpcNkfGbP3HSYoj51R9UZ/2PVz9S9DFq+UtNTXEOdrrF6N3LLKtvcc6H6DPLXiDkrrwOi2sqkAznbg7SOADn71hcI0E9RhbgS57qlcSno6j8OOFlxYUdBhb1HjVS9obCkUUvmUvaqSl19uKtlideNGZjENishj+pKQiRevdknXdlT6YKLY0fqSEfK40Dygeu+8SKa+FV3\n|1|+vcqwCVem8EdeWhsmqn/dIuaajU=|1bbo57jlMWxhRtzI5cWSX+9Y/lw= ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAINg9g/bzeHeozOCvYWatmUFpxL3vCannONOaqRqCiGsD\n",
                                        "before_header": "/home/zuul/.ssh/known_hosts"
                                    },
                                    "failed": false,
                                    "gid": 1000,
                                    "group": "zuul",
                                    "hash_host": false,
                                    "invocation": {
                                        "module_args": {
                                            "diff": {
                                                "after": "cc-github.bmwgroup.net ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBCOiBcTK5jsKgzWZKreE9Oz2alnNuMH+EjxV61P+ilJGeZ/liCBWbw4lxMXfECisemjh1PRIH8kDWMpUCnR/QLY=\nxpad-ci-dev.sign.extern.cc.bmwgroup.net ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBG1LwKnyuWY9mc0j2a+NLseH+io5tEYZGbdXONqMl2x2m3ObHjNrB9ugaPAnivYQQCEQD1+3oNC7lQRDP5hwUiA=\nxpad-ci-prod.sign.extern.cc.bmwgroup.net ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBAhs6Kotpb9A41YyjUBG51EKuZC6sTMXTcf3Zw0D6cGhdVprbdOcHE4WF/5cgHzo9WeWyvqCX5WFE6aLEEdo5Pw=\n|1|FJz9OYQQGFwSU4CIY+WEE9AI2Xw=|8Lo0kJiUDD9GRkaQLMmj0nQBWZs= ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCrHtFsVV0V5//DICJy5+3DGRuTCh4DhATaXyVaM4SEw50xizaAECs9vqb0SqSrHw5yWUP2GY2QTtwFL1t0CxWRqjtteUo9THZjxzvCYu1zM/vn9bC/+uzvIKfzXbk8FUEy1Ut7aGhtTYWCpcNkfGbP3HSYoj51R9UZ/2PVz9S9DFq+UtNTXEOdrrF6N3LLKtvcc6H6DPLXiDkrrwOi2sqkAznbg7SOADn71hcI0E9RhbgS57qlcSno6j8OOFlxYUdBhb1HjVS9obCkUUvmUvaqSl19uKtlideNGZjENishj+pKQiRevdknXdlT6YKLY0fqSEfK40Dygeu+8SKa+FV3\n|1|+vcqwCVem8EdeWhsmqn/dIuaajU=|1bbo57jlMWxhRtzI5cWSX+9Y/lw= ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAINg9g/bzeHeozOCvYWatmUFpxL3vCannONOaqRqCiGsD\n",
                                                "after_header": "/home/zuul/.ssh/known_hosts",
                                                "before": "cc-github.bmwgroup.net ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBCOiBcTK5jsKgzWZKreE9Oz2alnNuMH+EjxV61P+ilJGeZ/liCBWbw4lxMXfECisemjh1PRIH8kDWMpUCnR/QLY=\nxpad-ci-dev.sign.extern.cc.bmwgroup.net ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBG1LwKnyuWY9mc0j2a+NLseH+io5tEYZGbdXONqMl2x2m3ObHjNrB9ugaPAnivYQQCEQD1+3oNC7lQRDP5hwUiA=\nxpad-ci-prod.sign.extern.cc.bmwgroup.net ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBAhs6Kotpb9A41YyjUBG51EKuZC6sTMXTcf3Zw0D6cGhdVprbdOcHE4WF/5cgHzo9WeWyvqCX5WFE6aLEEdo5Pw=\n|1|FJz9OYQQGFwSU4CIY+WEE9AI2Xw=|8Lo0kJiUDD9GRkaQLMmj0nQBWZs= ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCrHtFsVV0V5//DICJy5+3DGRuTCh4DhATaXyVaM4SEw50xizaAECs9vqb0SqSrHw5yWUP2GY2QTtwFL1t0CxWRqjtteUo9THZjxzvCYu1zM/vn9bC/+uzvIKfzXbk8FUEy1Ut7aGhtTYWCpcNkfGbP3HSYoj51R9UZ/2PVz9S9DFq+UtNTXEOdrrF6N3LLKtvcc6H6DPLXiDkrrwOi2sqkAznbg7SOADn71hcI0E9RhbgS57qlcSno6j8OOFlxYUdBhb1HjVS9obCkUUvmUvaqSl19uKtlideNGZjENishj+pKQiRevdknXdlT6YKLY0fqSEfK40Dygeu+8SKa+FV3\n|1|+vcqwCVem8EdeWhsmqn/dIuaajU=|1bbo57jlMWxhRtzI5cWSX+9Y/lw= ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAINg9g/bzeHeozOCvYWatmUFpxL3vCannONOaqRqCiGsD\n",
                                                "before_header": "/home/zuul/.ssh/known_hosts"
                                            },
                                            "hash_host": false,
                                            "key": "xpad-ci-dev.sign.extern.cc.bmwgroup.net ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBG1LwKnyuWY9mc0j2a+NLseH+io5tEYZGbdXONqMl2x2m3ObHjNrB9ugaPAnivYQQCEQD1+3oNC7lQRDP5hwUiA=",
                                            "name": "xpad-ci-dev.sign.extern.cc.bmwgroup.net",
                                            "path": "/home/zuul/.ssh/known_hosts",
                                            "state": "present"
                                        }
                                    },
                                    "item": "xpad-ci-dev.sign.extern.cc.bmwgroup.net",
                                    "key": "xpad-ci-dev.sign.extern.cc.bmwgroup.net ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBG1LwKnyuWY9mc0j2a+NLseH+io5tEYZGbdXONqMl2x2m3ObHjNrB9ugaPAnivYQQCEQD1+3oNC7lQRDP5hwUiA=",
                                    "mode": "0600",
                                    "name": "xpad-ci-dev.sign.extern.cc.bmwgroup.net",
                                    "owner": "zuul",
                                    "path": "/home/zuul/.ssh/known_hosts",
                                    "size": 1171,
                                    "state": "file",
                                    "uid": 1000
                                },
                                {
                                    "ansible_loop_var": "item",
                                    "changed": false,
                                    "diff": {
                                        "after": "cc-github.bmwgroup.net ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBCOiBcTK5jsKgzWZKreE9Oz2alnNuMH+EjxV61P+ilJGeZ/liCBWbw4lxMXfECisemjh1PRIH8kDWMpUCnR/QLY=\nxpad-ci-dev.sign.extern.cc.bmwgroup.net ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBG1LwKnyuWY9mc0j2a+NLseH+io5tEYZGbdXONqMl2x2m3ObHjNrB9ugaPAnivYQQCEQD1+3oNC7lQRDP5hwUiA=\nxpad-ci-prod.sign.extern.cc.bmwgroup.net ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBAhs6Kotpb9A41YyjUBG51EKuZC6sTMXTcf3Zw0D6cGhdVprbdOcHE4WF/5cgHzo9WeWyvqCX5WFE6aLEEdo5Pw=\n|1|FJz9OYQQGFwSU4CIY+WEE9AI2Xw=|8Lo0kJiUDD9GRkaQLMmj0nQBWZs= ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCrHtFsVV0V5//DICJy5+3DGRuTCh4DhATaXyVaM4SEw50xizaAECs9vqb0SqSrHw5yWUP2GY2QTtwFL1t0CxWRqjtteUo9THZjxzvCYu1zM/vn9bC/+uzvIKfzXbk8FUEy1Ut7aGhtTYWCpcNkfGbP3HSYoj51R9UZ/2PVz9S9DFq+UtNTXEOdrrF6N3LLKtvcc6H6DPLXiDkrrwOi2sqkAznbg7SOADn71hcI0E9RhbgS57qlcSno6j8OOFlxYUdBhb1HjVS9obCkUUvmUvaqSl19uKtlideNGZjENishj+pKQiRevdknXdlT6YKLY0fqSEfK40Dygeu+8SKa+FV3\n|1|+vcqwCVem8EdeWhsmqn/dIuaajU=|1bbo57jlMWxhRtzI5cWSX+9Y/lw= ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAINg9g/bzeHeozOCvYWatmUFpxL3vCannONOaqRqCiGsD\n",
                                        "after_header": "/home/zuul/.ssh/known_hosts",
                                        "before": "cc-github.bmwgroup.net ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBCOiBcTK5jsKgzWZKreE9Oz2alnNuMH+EjxV61P+ilJGeZ/liCBWbw4lxMXfECisemjh1PRIH8kDWMpUCnR/QLY=\nxpad-ci-dev.sign.extern.cc.bmwgroup.net ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBG1LwKnyuWY9mc0j2a+NLseH+io5tEYZGbdXONqMl2x2m3ObHjNrB9ugaPAnivYQQCEQD1+3oNC7lQRDP5hwUiA=\nxpad-ci-prod.sign.extern.cc.bmwgroup.net ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBAhs6Kotpb9A41YyjUBG51EKuZC6sTMXTcf3Zw0D6cGhdVprbdOcHE4WF/5cgHzo9WeWyvqCX5WFE6aLEEdo5Pw=\n|1|FJz9OYQQGFwSU4CIY+WEE9AI2Xw=|8Lo0kJiUDD9GRkaQLMmj0nQBWZs= ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCrHtFsVV0V5//DICJy5+3DGRuTCh4DhATaXyVaM4SEw50xizaAECs9vqb0SqSrHw5yWUP2GY2QTtwFL1t0CxWRqjtteUo9THZjxzvCYu1zM/vn9bC/+uzvIKfzXbk8FUEy1Ut7aGhtTYWCpcNkfGbP3HSYoj51R9UZ/2PVz9S9DFq+UtNTXEOdrrF6N3LLKtvcc6H6DPLXiDkrrwOi2sqkAznbg7SOADn71hcI0E9RhbgS57qlcSno6j8OOFlxYUdBhb1HjVS9obCkUUvmUvaqSl19uKtlideNGZjENishj+pKQiRevdknXdlT6YKLY0fqSEfK40Dygeu+8SKa+FV3\n|1|+vcqwCVem8EdeWhsmqn/dIuaajU=|1bbo57jlMWxhRtzI5cWSX+9Y/lw= ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAINg9g/bzeHeozOCvYWatmUFpxL3vCannONOaqRqCiGsD\n",
                                        "before_header": "/home/zuul/.ssh/known_hosts"
                                    },
                                    "failed": false,
                                    "gid": 1000,
                                    "group": "zuul",
                                    "hash_host": false,
                                    "invocation": {
                                        "module_args": {
                                            "diff": {
                                                "after": "cc-github.bmwgroup.net ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBCOiBcTK5jsKgzWZKreE9Oz2alnNuMH+EjxV61P+ilJGeZ/liCBWbw4lxMXfECisemjh1PRIH8kDWMpUCnR/QLY=\nxpad-ci-dev.sign.extern.cc.bmwgroup.net ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBG1LwKnyuWY9mc0j2a+NLseH+io5tEYZGbdXONqMl2x2m3ObHjNrB9ugaPAnivYQQCEQD1+3oNC7lQRDP5hwUiA=\nxpad-ci-prod.sign.extern.cc.bmwgroup.net ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBAhs6Kotpb9A41YyjUBG51EKuZC6sTMXTcf3Zw0D6cGhdVprbdOcHE4WF/5cgHzo9WeWyvqCX5WFE6aLEEdo5Pw=\n|1|FJz9OYQQGFwSU4CIY+WEE9AI2Xw=|8Lo0kJiUDD9GRkaQLMmj0nQBWZs= ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCrHtFsVV0V5//DICJy5+3DGRuTCh4DhATaXyVaM4SEw50xizaAECs9vqb0SqSrHw5yWUP2GY2QTtwFL1t0CxWRqjtteUo9THZjxzvCYu1zM/vn9bC/+uzvIKfzXbk8FUEy1Ut7aGhtTYWCpcNkfGbP3HSYoj51R9UZ/2PVz9S9DFq+UtNTXEOdrrF6N3LLKtvcc6H6DPLXiDkrrwOi2sqkAznbg7SOADn71hcI0E9RhbgS57qlcSno6j8OOFlxYUdBhb1HjVS9obCkUUvmUvaqSl19uKtlideNGZjENishj+pKQiRevdknXdlT6YKLY0fqSEfK40Dygeu+8SKa+FV3\n|1|+vcqwCVem8EdeWhsmqn/dIuaajU=|1bbo57jlMWxhRtzI5cWSX+9Y/lw= ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAINg9g/bzeHeozOCvYWatmUFpxL3vCannONOaqRqCiGsD\n",
                                                "after_header": "/home/zuul/.ssh/known_hosts",
                                                "before": "cc-github.bmwgroup.net ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBCOiBcTK5jsKgzWZKreE9Oz2alnNuMH+EjxV61P+ilJGeZ/liCBWbw4lxMXfECisemjh1PRIH8kDWMpUCnR/QLY=\nxpad-ci-dev.sign.extern.cc.bmwgroup.net ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBG1LwKnyuWY9mc0j2a+NLseH+io5tEYZGbdXONqMl2x2m3ObHjNrB9ugaPAnivYQQCEQD1+3oNC7lQRDP5hwUiA=\nxpad-ci-prod.sign.extern.cc.bmwgroup.net ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBAhs6Kotpb9A41YyjUBG51EKuZC6sTMXTcf3Zw0D6cGhdVprbdOcHE4WF/5cgHzo9WeWyvqCX5WFE6aLEEdo5Pw=\n|1|FJz9OYQQGFwSU4CIY+WEE9AI2Xw=|8Lo0kJiUDD9GRkaQLMmj0nQBWZs= ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCrHtFsVV0V5//DICJy5+3DGRuTCh4DhATaXyVaM4SEw50xizaAECs9vqb0SqSrHw5yWUP2GY2QTtwFL1t0CxWRqjtteUo9THZjxzvCYu1zM/vn9bC/+uzvIKfzXbk8FUEy1Ut7aGhtTYWCpcNkfGbP3HSYoj51R9UZ/2PVz9S9DFq+UtNTXEOdrrF6N3LLKtvcc6H6DPLXiDkrrwOi2sqkAznbg7SOADn71hcI0E9RhbgS57qlcSno6j8OOFlxYUdBhb1HjVS9obCkUUvmUvaqSl19uKtlideNGZjENishj+pKQiRevdknXdlT6YKLY0fqSEfK40Dygeu+8SKa+FV3\n|1|+vcqwCVem8EdeWhsmqn/dIuaajU=|1bbo57jlMWxhRtzI5cWSX+9Y/lw= ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAINg9g/bzeHeozOCvYWatmUFpxL3vCannONOaqRqCiGsD\n",
                                                "before_header": "/home/zuul/.ssh/known_hosts"
                                            },
                                            "hash_host": false,
                                            "key": "xpad-ci-prod.sign.extern.cc.bmwgroup.net ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBAhs6Kotpb9A41YyjUBG51EKuZC6sTMXTcf3Zw0D6cGhdVprbdOcHE4WF/5cgHzo9WeWyvqCX5WFE6aLEEdo5Pw=",
                                            "name": "xpad-ci-prod.sign.extern.cc.bmwgroup.net",
                                            "path": "/home/zuul/.ssh/known_hosts",
                                            "state": "present"
                                        }
                                    },
                                    "item": "xpad-ci-prod.sign.extern.cc.bmwgroup.net",
                                    "key": "xpad-ci-prod.sign.extern.cc.bmwgroup.net ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBAhs6Kotpb9A41YyjUBG51EKuZC6sTMXTcf3Zw0D6cGhdVprbdOcHE4WF/5cgHzo9WeWyvqCX5WFE6aLEEdo5Pw=",
                                    "mode": "0600",
                                    "name": "xpad-ci-prod.sign.extern.cc.bmwgroup.net",
                                    "owner": "zuul",
                                    "path": "/home/zuul/.ssh/known_hosts",
                                    "size": 1171,
                                    "state": "file",
                                    "uid": 1000
                                }
                            ]
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-1b2c-89dc-00000000002f",
                        "name": "ensure-known-hosts",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_1/cc-github.bmwgroup.net/codecraft/cilib/roles/ensure-known-hosts"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:44:49.277182Z",
                            "start": "2024-04-21T00:44:48.543872Z"
                        },
                        "id": "ce4df5fb-964c-1b2c-89dc-0000000001bf",
                        "name": "Adding known SSH hosts"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "include_tasks",
                            "changed": false,
                            "false_condition": "ansible_os_family == \"Windows\"",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-1b2c-89dc-00000000002f",
                        "name": "ensure-known-hosts",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_1/cc-github.bmwgroup.net/codecraft/cilib/roles/ensure-known-hosts"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:44:49.317200Z",
                            "start": "2024-04-21T00:44:49.288703Z"
                        },
                        "id": "ce4df5fb-964c-1b2c-89dc-000000000032",
                        "name": ""
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "set_fact",
                            "ansible_facts": {
                                "platform": "linux"
                            },
                            "changed": false
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-1b2c-89dc-000000000034",
                        "name": "ensure-private-key",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_1/cc-github.bmwgroup.net/codecraft/cilib/roles/ensure-private-key"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:44:49.381863Z",
                            "start": "2024-04-21T00:44:49.335953Z"
                        },
                        "id": "ce4df5fb-964c-1b2c-89dc-000000000036",
                        "name": ""
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "set_fact",
                            "changed": false,
                            "false_condition": "ansible_os_family == \"Windows\"",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-1b2c-89dc-000000000034",
                        "name": "ensure-private-key",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_1/cc-github.bmwgroup.net/codecraft/cilib/roles/ensure-private-key"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:44:49.426725Z",
                            "start": "2024-04-21T00:44:49.390128Z"
                        },
                        "id": "ce4df5fb-964c-1b2c-89dc-000000000037",
                        "name": ""
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "include_tasks",
                            "changed": false,
                            "include": "linux/main.yaml",
                            "include_args": {}
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-1b2c-89dc-000000000034",
                        "name": "ensure-private-key",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_1/cc-github.bmwgroup.net/codecraft/cilib/roles/ensure-private-key"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:44:49.484490Z",
                            "start": "2024-04-21T00:44:49.436412Z"
                        },
                        "id": "ce4df5fb-964c-1b2c-89dc-000000000038",
                        "name": ""
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "file",
                            "changed": false,
                            "diff": {
                                "after": {
                                    "path": "/home/zuul/.ssh"
                                },
                                "before": {
                                    "path": "/home/zuul/.ssh"
                                }
                            },
                            "gid": 1000,
                            "group": "zuul",
                            "invocation": {
                                "module_args": {
                                    "_diff_peek": null,
                                    "_original_basename": null,
                                    "access_time": null,
                                    "access_time_format": "%Y%m%d%H%M.%S",
                                    "attributes": null,
                                    "follow": true,
                                    "force": false,
                                    "group": "1000",
                                    "mode": 448,
                                    "modification_time": null,
                                    "modification_time_format": "%Y%m%d%H%M.%S",
                                    "owner": "1000",
                                    "path": "/home/zuul/.ssh",
                                    "recurse": false,
                                    "selevel": null,
                                    "serole": null,
                                    "setype": null,
                                    "seuser": null,
                                    "src": null,
                                    "state": "directory",
                                    "unsafe_writes": false
                                }
                            },
                            "mode": "0700",
                            "owner": "zuul",
                            "path": "/home/zuul/.ssh",
                            "size": 4096,
                            "state": "directory",
                            "uid": 1000
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-1b2c-89dc-000000000034",
                        "name": "ensure-private-key",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_1/cc-github.bmwgroup.net/codecraft/cilib/roles/ensure-private-key"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:44:49.843630Z",
                            "start": "2024-04-21T00:44:49.505421Z"
                        },
                        "id": "ce4df5fb-964c-1b2c-89dc-0000000001df",
                        "name": "Ensure the .ssh directory is present"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "include_tasks",
                            "censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result",
                            "changed": false
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-1b2c-89dc-000000000034",
                        "name": "ensure-private-key",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_1/cc-github.bmwgroup.net/codecraft/cilib/roles/ensure-private-key"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:44:49.953750Z",
                            "start": "2024-04-21T00:44:49.861250Z"
                        },
                        "id": "ce4df5fb-964c-1b2c-89dc-000000000039",
                        "name": ""
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "set_fact",
                            "ansible_facts": {
                                "key_sha": "527cce9da43abc20302cd74d18dd220209553435"
                            },
                            "changed": false
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-1b2c-89dc-000000000034",
                        "name": "ensure-private-key",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_1/cc-github.bmwgroup.net/codecraft/cilib/roles/ensure-private-key"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:44:50.062395Z",
                            "start": "2024-04-21T00:44:49.981736Z"
                        },
                        "id": "ce4df5fb-964c-1b2c-89dc-0000000001f6",
                        "name": "Calculate SHA1 for private key"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "set_fact",
                            "ansible_facts": {
                                "key_file_path": "~/.ssh/id_rsa_527cce9da43abc20302cd74d18dd220209553435"
                            },
                            "changed": false
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-1b2c-89dc-000000000034",
                        "name": "ensure-private-key",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_1/cc-github.bmwgroup.net/codecraft/cilib/roles/ensure-private-key"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:44:50.121854Z",
                            "start": "2024-04-21T00:44:50.073563Z"
                        },
                        "id": "ce4df5fb-964c-1b2c-89dc-0000000001f7",
                        "name": "Define the private key file path"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "copy",
                            "changed": false,
                            "checksum": "527cce9da43abc20302cd74d18dd220209553435",
                            "dest": "/home/zuul/.ssh/id_rsa_527cce9da43abc20302cd74d18dd220209553435",
                            "diff": {
                                "after": {
                                    "path": "/home/zuul/.ssh/id_rsa_527cce9da43abc20302cd74d18dd220209553435"
                                },
                                "before": {
                                    "path": "/home/zuul/.ssh/id_rsa_527cce9da43abc20302cd74d18dd220209553435"
                                }
                            },
                            "gid": 1000,
                            "group": "zuul",
                            "invocation": {
                                "module_args": {
                                    "_diff_peek": null,
                                    "_original_basename": "tmp6ip_7tnx",
                                    "access_time": null,
                                    "access_time_format": "%Y%m%d%H%M.%S",
                                    "attributes": null,
                                    "dest": "/home/zuul/.ssh/id_rsa_527cce9da43abc20302cd74d18dd220209553435",
                                    "follow": true,
                                    "force": false,
                                    "group": "1000",
                                    "mode": 384,
                                    "modification_time": null,
                                    "modification_time_format": "%Y%m%d%H%M.%S",
                                    "owner": "1000",
                                    "path": "/home/zuul/.ssh/id_rsa_527cce9da43abc20302cd74d18dd220209553435",
                                    "recurse": false,
                                    "selevel": null,
                                    "serole": null,
                                    "setype": null,
                                    "seuser": null,
                                    "src": null,
                                    "state": "file",
                                    "unsafe_writes": false
                                }
                            },
                            "mode": "0600",
                            "owner": "zuul",
                            "path": "/home/zuul/.ssh/id_rsa_527cce9da43abc20302cd74d18dd220209553435",
                            "size": 3401,
                            "state": "file",
                            "uid": 1000
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-1b2c-89dc-000000000034",
                        "name": "ensure-private-key",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_1/cc-github.bmwgroup.net/codecraft/cilib/roles/ensure-private-key"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:44:50.875300Z",
                            "start": "2024-04-21T00:44:50.133297Z"
                        },
                        "id": "ce4df5fb-964c-1b2c-89dc-0000000001f8",
                        "name": "Write private key to file"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "lineinfile",
                            "backup": "",
                            "changed": false,
                            "diff": [
                                {
                                    "after": "",
                                    "after_header": "/home/zuul/.ssh/config (content)",
                                    "before": "",
                                    "before_header": "/home/zuul/.ssh/config (content)"
                                },
                                {
                                    "after_header": "/home/zuul/.ssh/config (file attributes)",
                                    "before_header": "/home/zuul/.ssh/config (file attributes)"
                                }
                            ],
                            "invocation": {
                                "module_args": {
                                    "attributes": null,
                                    "backrefs": false,
                                    "backup": false,
                                    "create": true,
                                    "firstmatch": false,
                                    "group": "1000",
                                    "insertafter": null,
                                    "insertbefore": "BOF",
                                    "line": "IdentityFile ~/.ssh/id_rsa_527cce9da43abc20302cd74d18dd220209553435",
                                    "mode": 384,
                                    "owner": "1000",
                                    "path": "/home/zuul/.ssh/config",
                                    "regexp": null,
                                    "search_string": null,
                                    "selevel": null,
                                    "serole": null,
                                    "setype": null,
                                    "seuser": null,
                                    "state": "present",
                                    "unsafe_writes": false,
                                    "validate": null
                                }
                            },
                            "msg": ""
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-1b2c-89dc-000000000034",
                        "name": "ensure-private-key",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_1/cc-github.bmwgroup.net/codecraft/cilib/roles/ensure-private-key"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:44:51.192094Z",
                            "start": "2024-04-21T00:44:50.885213Z"
                        },
                        "id": "ce4df5fb-964c-1b2c-89dc-0000000001f9",
                        "name": "Add the private key file to the ssh configuration"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "include_tasks",
                            "censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result",
                            "changed": false,
                            "skipped": true
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-1b2c-89dc-000000000034",
                        "name": "ensure-private-key",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_1/cc-github.bmwgroup.net/codecraft/cilib/roles/ensure-private-key"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:44:51.283833Z",
                            "start": "2024-04-21T00:44:51.205153Z"
                        },
                        "id": "ce4df5fb-964c-1b2c-89dc-00000000003a",
                        "name": ""
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "set_fact",
                            "changed": false,
                            "false_condition": "zuul.pipeline in [\"daily-snapshot\", \"manual-prod-build-pdx\", \"xpad-release\"]",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-1b2c-89dc-00000000003c",
                        "name": "ensure-private-key",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_1/cc-github.bmwgroup.net/codecraft/cilib/roles/ensure-private-key"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:44:51.340016Z",
                            "start": "2024-04-21T00:44:51.311220Z"
                        },
                        "id": "ce4df5fb-964c-1b2c-89dc-00000000003e",
                        "name": ""
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "set_fact",
                            "changed": false,
                            "false_condition": "zuul.pipeline in [\"daily-snapshot\", \"manual-prod-build-pdx\", \"xpad-release\"]",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-1b2c-89dc-00000000003c",
                        "name": "ensure-private-key",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_1/cc-github.bmwgroup.net/codecraft/cilib/roles/ensure-private-key"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:44:51.392929Z",
                            "start": "2024-04-21T00:44:51.353843Z"
                        },
                        "id": "ce4df5fb-964c-1b2c-89dc-00000000003f",
                        "name": ""
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "include_tasks",
                            "changed": false,
                            "false_condition": "zuul.pipeline in [\"daily-snapshot\", \"manual-prod-build-pdx\", \"xpad-release\"]",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-1b2c-89dc-00000000003c",
                        "name": "ensure-private-key",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_1/cc-github.bmwgroup.net/codecraft/cilib/roles/ensure-private-key"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:44:51.453218Z",
                            "start": "2024-04-21T00:44:51.406205Z"
                        },
                        "id": "ce4df5fb-964c-1b2c-89dc-000000000040",
                        "name": ""
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "include_tasks",
                            "censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result",
                            "changed": false,
                            "skipped": true
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-1b2c-89dc-00000000003c",
                        "name": "ensure-private-key",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_1/cc-github.bmwgroup.net/codecraft/cilib/roles/ensure-private-key"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:44:51.591662Z",
                            "start": "2024-04-21T00:44:51.553538Z"
                        },
                        "id": "ce4df5fb-964c-1b2c-89dc-000000000041",
                        "name": ""
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "include_tasks",
                            "censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result",
                            "changed": false,
                            "skipped": true
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-1b2c-89dc-00000000003c",
                        "name": "ensure-private-key",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_1/cc-github.bmwgroup.net/codecraft/cilib/roles/ensure-private-key"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:44:51.664310Z",
                            "start": "2024-04-21T00:44:51.605695Z"
                        },
                        "id": "ce4df5fb-964c-1b2c-89dc-000000000042",
                        "name": ""
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "file",
                            "changed": true,
                            "diff": {
                                "after": {
                                    "mode": "0700",
                                    "path": "/home/zuul/.patchr",
                                    "state": "directory"
                                },
                                "before": {
                                    "mode": "0775",
                                    "path": "/home/zuul/.patchr",
                                    "state": "absent"
                                }
                            },
                            "gid": 1000,
                            "group": "zuul",
                            "invocation": {
                                "module_args": {
                                    "_diff_peek": null,
                                    "_original_basename": null,
                                    "access_time": null,
                                    "access_time_format": "%Y%m%d%H%M.%S",
                                    "attributes": null,
                                    "dest": "~/.patchr",
                                    "follow": true,
                                    "force": false,
                                    "group": "1000",
                                    "mode": 448,
                                    "modification_time": null,
                                    "modification_time_format": "%Y%m%d%H%M.%S",
                                    "owner": "1000",
                                    "path": "/home/zuul/.patchr",
                                    "recurse": false,
                                    "selevel": null,
                                    "serole": null,
                                    "setype": null,
                                    "seuser": null,
                                    "src": null,
                                    "state": "directory",
                                    "unsafe_writes": false
                                }
                            },
                            "mode": "0700",
                            "owner": "zuul",
                            "path": "/home/zuul/.patchr",
                            "size": 4096,
                            "state": "directory",
                            "uid": 1000
                        }
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:44:51.977440Z",
                            "start": "2024-04-21T00:44:51.689595Z"
                        },
                        "id": "ce4df5fb-964c-1b2c-89dc-000000000044",
                        "name": ""
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "copy",
                            "censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result",
                            "changed": true
                        }
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:44:54.256792Z",
                            "start": "2024-04-21T00:44:51.991725Z"
                        },
                        "id": "ce4df5fb-964c-1b2c-89dc-000000000045",
                        "name": "Store versioning server certificates and keys"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "include_role",
                            "censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result",
                            "changed": false
                        }
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:44:54.299350Z",
                            "start": "2024-04-21T00:44:54.269425Z"
                        },
                        "id": "ce4df5fb-964c-1b2c-89dc-000000000046",
                        "name": "setup codebeamer tech_username"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "include_tasks",
                            "changed": false,
                            "include": "linux.yaml",
                            "include_args": {}
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-1b2c-89dc-00000000024f",
                        "name": "set-envvar",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_1/cc-github.bmwgroup.net/codecraft/cilib/roles/set-envvar"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:44:54.378132Z",
                            "start": "2024-04-21T00:44:54.335750Z"
                        },
                        "id": "ce4df5fb-964c-1b2c-89dc-000000000251",
                        "name": ""
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "lineinfile",
                            "backup": "",
                            "changed": true,
                            "diff": [
                                {
                                    "after": "",
                                    "after_header": "/home/zuul/.pam_environment (content)",
                                    "before": "",
                                    "before_header": "/home/zuul/.pam_environment (content)"
                                },
                                {
                                    "after_header": "/home/zuul/.pam_environment (file attributes)",
                                    "before_header": "/home/zuul/.pam_environment (file attributes)"
                                }
                            ],
                            "invocation": {
                                "module_args": {
                                    "attributes": null,
                                    "backrefs": false,
                                    "backup": false,
                                    "create": true,
                                    "firstmatch": false,
                                    "group": null,
                                    "insertafter": null,
                                    "insertbefore": null,
                                    "line": "codebeamer_tu_username DEFAULT=qqddadr",
                                    "mode": null,
                                    "owner": null,
                                    "path": "/home/zuul/.pam_environment",
                                    "regexp": "^codebeamer_tu_username\\s",
                                    "search_string": null,
                                    "selevel": null,
                                    "serole": null,
                                    "setype": null,
                                    "seuser": null,
                                    "state": "present",
                                    "unsafe_writes": false,
                                    "validate": null
                                }
                            },
                            "msg": "line added"
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-1b2c-89dc-00000000024f",
                        "name": "set-envvar",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_1/cc-github.bmwgroup.net/codecraft/cilib/roles/set-envvar"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:44:54.730345Z",
                            "start": "2024-04-21T00:44:54.404265Z"
                        },
                        "id": "ce4df5fb-964c-1b2c-89dc-00000000026d",
                        "name": "Set codebeamer_tu_username via ~/.pam_environment"
                    }
                },
                {
                    "hosts": {},
                    "role": {
                        "id": "ce4df5fb-964c-1b2c-89dc-00000000024f",
                        "name": "set-envvar",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_1/cc-github.bmwgroup.net/codecraft/cilib/roles/set-envvar"
                    },
                    "task": {
                        "duration": {
                            "start": "2024-04-21T00:44:54.739572Z"
                        },
                        "id": "ce4df5fb-964c-1b2c-89dc-00000000026e",
                        "name": "Reload environment variables (SSH only)"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "include_tasks",
                            "changed": false,
                            "false_condition": "ansible_connection == 'kubectl'",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-1b2c-89dc-00000000024f",
                        "name": "set-envvar",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_1/cc-github.bmwgroup.net/codecraft/cilib/roles/set-envvar"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:44:54.802664Z",
                            "start": "2024-04-21T00:44:54.776655Z"
                        },
                        "id": "ce4df5fb-964c-1b2c-89dc-000000000252",
                        "name": ""
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "include_tasks",
                            "changed": false,
                            "false_condition": "ansible_os_family == \"Windows\"",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-1b2c-89dc-00000000024f",
                        "name": "set-envvar",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_1/cc-github.bmwgroup.net/codecraft/cilib/roles/set-envvar"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:44:54.838120Z",
                            "start": "2024-04-21T00:44:54.812161Z"
                        },
                        "id": "ce4df5fb-964c-1b2c-89dc-000000000253",
                        "name": ""
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "include_role",
                            "censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result",
                            "changed": false
                        }
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:44:54.888133Z",
                            "start": "2024-04-21T00:44:54.857768Z"
                        },
                        "id": "ce4df5fb-964c-1b2c-89dc-000000000047",
                        "name": "setup codebeamer tech_user password"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "include_tasks",
                            "changed": false,
                            "include": "linux.yaml",
                            "include_args": {}
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-1b2c-89dc-0000000002b2",
                        "name": "set-envvar",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_1/cc-github.bmwgroup.net/codecraft/cilib/roles/set-envvar"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:44:54.977044Z",
                            "start": "2024-04-21T00:44:54.926072Z"
                        },
                        "id": "ce4df5fb-964c-1b2c-89dc-0000000002b4",
                        "name": ""
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "lineinfile",
                            "backup": "",
                            "changed": true,
                            "diff": [
                                {
                                    "after": "",
                                    "after_header": "/home/zuul/.pam_environment (content)",
                                    "before": "",
                                    "before_header": "/home/zuul/.pam_environment (content)"
                                },
                                {
                                    "after_header": "/home/zuul/.pam_environment (file attributes)",
                                    "before_header": "/home/zuul/.pam_environment (file attributes)"
                                }
                            ],
                            "invocation": {
                                "module_args": {
                                    "attributes": null,
                                    "backrefs": false,
                                    "backup": false,
                                    "create": true,
                                    "firstmatch": false,
                                    "group": null,
                                    "insertafter": null,
                                    "insertbefore": null,
                                    "line": "codebeamer_tu_pw DEFAULT=LeuteLadenLiebWolleBrutto1",
                                    "mode": null,
                                    "owner": null,
                                    "path": "/home/zuul/.pam_environment",
                                    "regexp": "^codebeamer_tu_pw\\s",
                                    "search_string": null,
                                    "selevel": null,
                                    "serole": null,
                                    "setype": null,
                                    "seuser": null,
                                    "state": "present",
                                    "unsafe_writes": false,
                                    "validate": null
                                }
                            },
                            "msg": "line added"
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-1b2c-89dc-0000000002b2",
                        "name": "set-envvar",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_1/cc-github.bmwgroup.net/codecraft/cilib/roles/set-envvar"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:44:56.364396Z",
                            "start": "2024-04-21T00:44:55.006395Z"
                        },
                        "id": "ce4df5fb-964c-1b2c-89dc-0000000002e6",
                        "name": "Set codebeamer_tu_pw via ~/.pam_environment"
                    }
                },
                {
                    "hosts": {},
                    "role": {
                        "id": "ce4df5fb-964c-1b2c-89dc-0000000002b2",
                        "name": "set-envvar",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_1/cc-github.bmwgroup.net/codecraft/cilib/roles/set-envvar"
                    },
                    "task": {
                        "duration": {
                            "start": "2024-04-21T00:44:56.377608Z"
                        },
                        "id": "ce4df5fb-964c-1b2c-89dc-0000000002e7",
                        "name": "Reload environment variables (SSH only)"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "include_tasks",
                            "changed": false,
                            "false_condition": "ansible_connection == 'kubectl'",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-1b2c-89dc-0000000002b2",
                        "name": "set-envvar",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_1/cc-github.bmwgroup.net/codecraft/cilib/roles/set-envvar"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:44:56.445944Z",
                            "start": "2024-04-21T00:44:56.418762Z"
                        },
                        "id": "ce4df5fb-964c-1b2c-89dc-0000000002b5",
                        "name": ""
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "include_tasks",
                            "changed": false,
                            "false_condition": "ansible_os_family == \"Windows\"",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-1b2c-89dc-0000000002b2",
                        "name": "set-envvar",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_1/cc-github.bmwgroup.net/codecraft/cilib/roles/set-envvar"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:44:56.497478Z",
                            "start": "2024-04-21T00:44:56.460026Z"
                        },
                        "id": "ce4df5fb-964c-1b2c-89dc-0000000002b6",
                        "name": ""
                    }
                }
            ]
        }
    ],
    "stats": {
        "node": {
            "changed": 9,
            "failures": 0,
            "ignored": 0,
            "ok": 43,
            "rescued": 0,
            "skipped": 18,
            "unreachable": 0
        }
    },
    "trusted": true
},
{
    "branch": "master",
    "index": "6",
    "phase": "pre",
    "playbook": "cc-github.bmwgroup.net/swh/zuul-trusted-ddad/playbooks/xpad-access-jfrog-cli.yaml",
    "plays": [
        {
            "play": {
                "duration": {
                    "end": "2024-04-21T00:45:02.107270Z",
                    "start": "2024-04-21T00:44:57.846788Z"
                },
                "id": "ce4df5fb-964c-07b1-c8d1-000000000002",
                "name": "Ensure jfrog cli and set up config."
            },
            "tasks": [
                {
                    "hosts": {
                        "node": {
                            "action": "include_tasks",
                            "changed": false,
                            "include": "linux.yaml",
                            "include_args": {}
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-07b1-c8d1-000000000006",
                        "name": "ensure-jfrog-cli",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_1/cc-github.bmwgroup.net/codecraft/cilib/roles/ensure-jfrog-cli"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:44:57.934546Z",
                            "start": "2024-04-21T00:44:57.896507Z"
                        },
                        "id": "ce4df5fb-964c-07b1-c8d1-000000000008",
                        "name": ""
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "file",
                            "changed": false,
                            "diff": {
                                "after": {
                                    "path": "/usr/local/bin"
                                },
                                "before": {
                                    "path": "/usr/local/bin"
                                }
                            },
                            "gid": 0,
                            "group": "root",
                            "invocation": {
                                "module_args": {
                                    "_diff_peek": null,
                                    "_original_basename": null,
                                    "access_time": null,
                                    "access_time_format": "%Y%m%d%H%M.%S",
                                    "attributes": null,
                                    "follow": true,
                                    "force": false,
                                    "group": null,
                                    "mode": 493,
                                    "modification_time": null,
                                    "modification_time_format": "%Y%m%d%H%M.%S",
                                    "owner": null,
                                    "path": "/usr/local/bin",
                                    "recurse": false,
                                    "selevel": null,
                                    "serole": null,
                                    "setype": null,
                                    "seuser": null,
                                    "src": null,
                                    "state": "directory",
                                    "unsafe_writes": false
                                }
                            },
                            "mode": "0755",
                            "owner": "root",
                            "path": "/usr/local/bin",
                            "size": 4096,
                            "state": "directory",
                            "uid": 0
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-07b1-c8d1-000000000006",
                        "name": "ensure-jfrog-cli",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_1/cc-github.bmwgroup.net/codecraft/cilib/roles/ensure-jfrog-cli"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:44:58.952596Z",
                            "start": "2024-04-21T00:44:57.959713Z"
                        },
                        "id": "ce4df5fb-964c-07b1-c8d1-00000000005e",
                        "name": "ensure folder for jfrog cli binary exists"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "get_url",
                            "changed": false,
                            "checksum_dest": null,
                            "checksum_src": null,
                            "dest": "/usr/local/bin/jfrog",
                            "elapsed": 0,
                            "gid": 0,
                            "group": "root",
                            "invocation": {
                                "module_args": {
                                    "attributes": null,
                                    "backup": false,
                                    "checksum": "sha256:2cb2fa070f2b377d37cd491b7e41e51560b9d808d7fcf04a80449078f2110a68",
                                    "ciphers": null,
                                    "client_cert": null,
                                    "client_key": null,
                                    "decompress": true,
                                    "dest": "/usr/local/bin/jfrog",
                                    "force": false,
                                    "force_basic_auth": false,
                                    "group": null,
                                    "headers": null,
                                    "http_agent": "ansible-httpget",
                                    "mode": 493,
                                    "owner": null,
                                    "selevel": null,
                                    "serole": null,
                                    "setype": null,
                                    "seuser": null,
                                    "timeout": 30,
                                    "tmp_dest": null,
                                    "unredirected_headers": [],
                                    "unsafe_writes": false,
                                    "url": "https://common.artifactory.cc.bmwgroup.net/artifactory/global-tools/jfrog/2.50.1/jfrog",
                                    "url_password": null,
                                    "url_username": null,
                                    "use_gssapi": false,
                                    "use_netrc": true,
                                    "use_proxy": true,
                                    "validate_certs": true
                                }
                            },
                            "mode": "0755",
                            "msg": "file already exists",
                            "owner": "root",
                            "size": 26812290,
                            "state": "file",
                            "uid": 0,
                            "url": "https://common.artifactory.cc.bmwgroup.net/artifactory/global-tools/jfrog/2.50.1/jfrog"
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-07b1-c8d1-000000000006",
                        "name": "ensure-jfrog-cli",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_1/cc-github.bmwgroup.net/codecraft/cilib/roles/ensure-jfrog-cli"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:45:00.170414Z",
                            "start": "2024-04-21T00:44:58.965119Z"
                        },
                        "id": "ce4df5fb-964c-07b1-c8d1-000000000060",
                        "name": "Fetch Jfrog command line interface"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "include_tasks",
                            "changed": false,
                            "false_condition": "ansible_os_family == \"Windows\"",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-07b1-c8d1-000000000006",
                        "name": "ensure-jfrog-cli",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_1/cc-github.bmwgroup.net/codecraft/cilib/roles/ensure-jfrog-cli"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:45:00.217366Z",
                            "start": "2024-04-21T00:45:00.180493Z"
                        },
                        "id": "ce4df5fb-964c-07b1-c8d1-000000000009",
                        "name": ""
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "shell",
                            "changed": true,
                            "cmd": "jfrog --version\n",
                            "delta": "0:00:00.020338",
                            "end": "2024-04-21 00:45:00.708184",
                            "invocation": {
                                "module_args": {
                                    "_raw_params": "jfrog --version\n",
                                    "_uses_shell": true,
                                    "argv": null,
                                    "chdir": null,
                                    "creates": null,
                                    "executable": null,
                                    "removes": null,
                                    "stdin": null,
                                    "stdin_add_newline": true,
                                    "strip_empty_ends": true,
                                    "warn": false,
                                    "zuul_ansible_split_streams": false,
                                    "zuul_log_id": "ce4df5fb-964c-07b1-c8d1-00000000000d-1-node"
                                }
                            },
                            "msg": "",
                            "rc": 0,
                            "start": "2024-04-21 00:45:00.687846",
                            "stderr": "",
                            "stderr_lines": [],
                            "stdout": "jf version 2.50.1",
                            "stdout_lines": [
                                "jf version 2.50.1"
                            ],
                            "zuul_log_id": "ce4df5fb-964c-07b1-c8d1-00000000000d-1-node"
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-07b1-c8d1-00000000000b",
                        "name": "ensure-jfrog-cli-config",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_1/cc-github.bmwgroup.net/codecraft/cilib/roles/ensure-jfrog-cli-config"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:45:00.792141Z",
                            "start": "2024-04-21T00:45:00.276604Z"
                        },
                        "id": "ce4df5fb-964c-07b1-c8d1-00000000000d",
                        "name": "Get jfrog-cli version linux"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "win_shell",
                            "changed": false,
                            "false_condition": "ansible_os_family == \"Windows\"",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-07b1-c8d1-00000000000b",
                        "name": "ensure-jfrog-cli-config",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_1/cc-github.bmwgroup.net/codecraft/cilib/roles/ensure-jfrog-cli-config"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:45:00.855519Z",
                            "start": "2024-04-21T00:45:00.812591Z"
                        },
                        "id": "ce4df5fb-964c-07b1-c8d1-00000000000e",
                        "name": "Get jfrog-cli version Windows"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "set_fact",
                            "ansible_facts": {
                                "jfrog_cli_version": "jf version 2.50.1"
                            },
                            "changed": false
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-07b1-c8d1-00000000000b",
                        "name": "ensure-jfrog-cli-config",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_1/cc-github.bmwgroup.net/codecraft/cilib/roles/ensure-jfrog-cli-config"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:45:00.938337Z",
                            "start": "2024-04-21T00:45:00.867046Z"
                        },
                        "id": "ce4df5fb-964c-07b1-c8d1-00000000000f",
                        "name": "Get jfrog-cli version from output"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "set_fact",
                            "ansible_facts": {
                                "jfrog_cli_version": "2"
                            },
                            "changed": false
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-07b1-c8d1-00000000000b",
                        "name": "ensure-jfrog-cli-config",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_1/cc-github.bmwgroup.net/codecraft/cilib/roles/ensure-jfrog-cli-config"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:45:01.082613Z",
                            "start": "2024-04-21T00:45:00.948128Z"
                        },
                        "id": "ce4df5fb-964c-07b1-c8d1-000000000010",
                        "name": "Set jfrog-cli version linux"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "debug",
                            "changed": false,
                            "jfrog_cli_version": "2"
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-07b1-c8d1-00000000000b",
                        "name": "ensure-jfrog-cli-config",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_1/cc-github.bmwgroup.net/codecraft/cilib/roles/ensure-jfrog-cli-config"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:45:01.143493Z",
                            "start": "2024-04-21T00:45:01.093217Z"
                        },
                        "id": "ce4df5fb-964c-07b1-c8d1-000000000011",
                        "name": "Print major jfrog cli version"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "assert",
                            "censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result",
                            "changed": false
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-07b1-c8d1-00000000000b",
                        "name": "ensure-jfrog-cli-config",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_1/cc-github.bmwgroup.net/codecraft/cilib/roles/ensure-jfrog-cli-config"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:45:01.275477Z",
                            "start": "2024-04-21T00:45:01.153045Z"
                        },
                        "id": "ce4df5fb-964c-07b1-c8d1-000000000015",
                        "name": "Ensure that all needed variables are set"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "set_fact",
                            "changed": false,
                            "false_condition": "jfrog_cli_version == \"1\"",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-07b1-c8d1-00000000000b",
                        "name": "ensure-jfrog-cli-config",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_1/cc-github.bmwgroup.net/codecraft/cilib/roles/ensure-jfrog-cli-config"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:45:01.322955Z",
                            "start": "2024-04-21T00:45:01.286224Z"
                        },
                        "id": "ce4df5fb-964c-07b1-c8d1-000000000017",
                        "name": "Count the number of Artifactory instances set as default"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "fail",
                            "changed": false,
                            "false_condition": "jfrog_cli_version == \"1\"",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-07b1-c8d1-00000000000b",
                        "name": "ensure-jfrog-cli-config",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_1/cc-github.bmwgroup.net/codecraft/cilib/roles/ensure-jfrog-cli-config"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:45:01.370829Z",
                            "start": "2024-04-21T00:45:01.333775Z"
                        },
                        "id": "ce4df5fb-964c-07b1-c8d1-000000000018",
                        "name": "Ensure that there is one Artifactory instance set as default"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "include_tasks",
                            "changed": false,
                            "false_condition": "jfrog_cli_version == \"1\"",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-07b1-c8d1-00000000000b",
                        "name": "ensure-jfrog-cli-config",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_1/cc-github.bmwgroup.net/codecraft/cilib/roles/ensure-jfrog-cli-config"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:45:01.416802Z",
                            "start": "2024-04-21T00:45:01.389819Z"
                        },
                        "id": "ce4df5fb-964c-07b1-c8d1-000000000019",
                        "name": ""
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "include_tasks",
                            "changed": false,
                            "false_condition": "jfrog_cli_version == \"1\"",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-07b1-c8d1-00000000000b",
                        "name": "ensure-jfrog-cli-config",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_1/cc-github.bmwgroup.net/codecraft/cilib/roles/ensure-jfrog-cli-config"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:45:01.455099Z",
                            "start": "2024-04-21T00:45:01.429610Z"
                        },
                        "id": "ce4df5fb-964c-07b1-c8d1-00000000001a",
                        "name": ""
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "include_tasks",
                            "changed": false,
                            "include": "linux_v2.yaml",
                            "include_args": {}
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-07b1-c8d1-00000000000b",
                        "name": "ensure-jfrog-cli-config",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_1/cc-github.bmwgroup.net/codecraft/cilib/roles/ensure-jfrog-cli-config"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:45:01.498869Z",
                            "start": "2024-04-21T00:45:01.465354Z"
                        },
                        "id": "ce4df5fb-964c-07b1-c8d1-00000000001c",
                        "name": ""
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "shell",
                            "censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result",
                            "changed": true
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-07b1-c8d1-00000000000b",
                        "name": "ensure-jfrog-cli-config",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_1/cc-github.bmwgroup.net/codecraft/cilib/roles/ensure-jfrog-cli-config"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:45:02.055098Z",
                            "start": "2024-04-21T00:45:01.518121Z"
                        },
                        "id": "ce4df5fb-964c-07b1-c8d1-000000000098",
                        "name": "create config for servers"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "include_tasks",
                            "changed": false,
                            "false_condition": "ansible_os_family == \"Windows\"",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-07b1-c8d1-00000000000b",
                        "name": "ensure-jfrog-cli-config",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_1/cc-github.bmwgroup.net/codecraft/cilib/roles/ensure-jfrog-cli-config"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:45:02.107270Z",
                            "start": "2024-04-21T00:45:02.068874Z"
                        },
                        "id": "ce4df5fb-964c-07b1-c8d1-00000000001d",
                        "name": ""
                    }
                }
            ]
        }
    ],
    "stats": {
        "node": {
            "changed": 2,
            "failures": 0,
            "ignored": 0,
            "ok": 10,
            "rescued": 0,
            "skipped": 7,
            "unreachable": 0
        }
    },
    "trusted": true
},
{
    "branch": "master",
    "index": "7",
    "phase": "pre",
    "playbook": "cc-github.bmwgroup.net/swh/zuul-trusted-ddad/playbooks/base-xpad-bazel/pre.yaml",
    "plays": [
        {
            "play": {
                "duration": {
                    "end": "2024-04-21T00:45:06.702823Z",
                    "start": "2024-04-21T00:45:03.518929Z"
                },
                "id": "ce4df5fb-964c-c1a0-01eb-000000000002",
                "name": "all"
            },
            "tasks": [
                {
                    "hosts": {
                        "node": {
                            "action": "file",
                            "changed": true,
                            "diff": {
                                "after": {
                                    "path": "/usr/local/flexlm/licenses/",
                                    "state": "directory"
                                },
                                "before": {
                                    "path": "/usr/local/flexlm/licenses/",
                                    "state": "absent"
                                }
                            },
                            "gid": 0,
                            "group": "root",
                            "invocation": {
                                "module_args": {
                                    "_diff_peek": null,
                                    "_original_basename": null,
                                    "access_time": null,
                                    "access_time_format": "%Y%m%d%H%M.%S",
                                    "attributes": null,
                                    "follow": true,
                                    "force": false,
                                    "group": null,
                                    "mode": null,
                                    "modification_time": null,
                                    "modification_time_format": "%Y%m%d%H%M.%S",
                                    "owner": null,
                                    "path": "/usr/local/flexlm/licenses/",
                                    "recurse": true,
                                    "selevel": null,
                                    "serole": null,
                                    "setype": null,
                                    "seuser": null,
                                    "src": null,
                                    "state": "directory",
                                    "unsafe_writes": false
                                }
                            },
                            "mode": "0755",
                            "owner": "root",
                            "path": "/usr/local/flexlm/licenses/",
                            "size": 4096,
                            "state": "directory",
                            "uid": 0
                        }
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:45:04.453371Z",
                            "start": "2024-04-21T00:45:03.552468Z"
                        },
                        "id": "ce4df5fb-964c-c1a0-01eb-000000000004",
                        "name": "Create directory for E.S.R Lab License"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "copy",
                            "changed": true,
                            "checksum": "e0f81b3b25bb24f1ff40896c9a1a1e49a0587e9b",
                            "dest": "/usr/local/flexlm/licenses/license.dat",
                            "diff": [],
                            "gid": 0,
                            "group": "root",
                            "invocation": {
                                "module_args": {
                                    "_original_basename": "tmp0sgdob1u",
                                    "attributes": null,
                                    "backup": false,
                                    "checksum": "e0f81b3b25bb24f1ff40896c9a1a1e49a0587e9b",
                                    "content": null,
                                    "dest": "/usr/local/flexlm/licenses/license.dat",
                                    "directory_mode": null,
                                    "follow": false,
                                    "force": true,
                                    "group": "root",
                                    "local_follow": null,
                                    "mode": 292,
                                    "owner": "root",
                                    "remote_src": null,
                                    "selevel": null,
                                    "serole": null,
                                    "setype": null,
                                    "seuser": null,
                                    "src": "/home/zuul/.ansible/tmp/ansible-tmp-1713660304.527045-12-263989880863598/source",
                                    "unsafe_writes": false,
                                    "validate": null
                                }
                            },
                            "md5sum": "945ae9a5e59ccf70187226ebce433e30",
                            "mode": "0444",
                            "owner": "root",
                            "size": 1669,
                            "src": "/home/zuul/.ansible/tmp/ansible-tmp-1713660304.527045-12-263989880863598/source",
                            "state": "file",
                            "uid": 0
                        }
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:45:05.610778Z",
                            "start": "2024-04-21T00:45:04.468378Z"
                        },
                        "id": "ce4df5fb-964c-c1a0-01eb-000000000005",
                        "name": "Write ESR Labs LIC"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "file",
                            "changed": true,
                            "diff": {
                                "after": {
                                    "path": "/opt/qnx/licenses",
                                    "state": "directory"
                                },
                                "before": {
                                    "path": "/opt/qnx/licenses",
                                    "state": "absent"
                                }
                            },
                            "gid": 0,
                            "group": "root",
                            "invocation": {
                                "module_args": {
                                    "_diff_peek": null,
                                    "_original_basename": null,
                                    "access_time": null,
                                    "access_time_format": "%Y%m%d%H%M.%S",
                                    "attributes": null,
                                    "follow": true,
                                    "force": false,
                                    "group": null,
                                    "mode": null,
                                    "modification_time": null,
                                    "modification_time_format": "%Y%m%d%H%M.%S",
                                    "owner": null,
                                    "path": "/opt/qnx/licenses",
                                    "recurse": true,
                                    "selevel": null,
                                    "serole": null,
                                    "setype": null,
                                    "seuser": null,
                                    "src": null,
                                    "state": "directory",
                                    "unsafe_writes": false
                                }
                            },
                            "mode": "0755",
                            "owner": "root",
                            "path": "/opt/qnx/licenses",
                            "size": 4096,
                            "state": "directory",
                            "uid": 0
                        }
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:45:06.040421Z",
                            "start": "2024-04-21T00:45:05.677347Z"
                        },
                        "id": "ce4df5fb-964c-c1a0-01eb-000000000006",
                        "name": "Create directory for QNX license"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "copy",
                            "changed": true,
                            "checksum": "1ed6ee3d5f3403fa1d69869d9acdbc0aa2a7898d",
                            "dest": "/opt/qnx/licenses/license.lic",
                            "diff": [],
                            "gid": 0,
                            "group": "root",
                            "invocation": {
                                "module_args": {
                                    "_original_basename": "tmp1_vugoxg",
                                    "attributes": null,
                                    "backup": false,
                                    "checksum": "1ed6ee3d5f3403fa1d69869d9acdbc0aa2a7898d",
                                    "content": null,
                                    "dest": "/opt/qnx/licenses/license.lic",
                                    "directory_mode": null,
                                    "follow": false,
                                    "force": true,
                                    "group": "root",
                                    "local_follow": null,
                                    "mode": 292,
                                    "owner": "root",
                                    "remote_src": null,
                                    "selevel": null,
                                    "serole": null,
                                    "setype": null,
                                    "seuser": null,
                                    "src": "/home/zuul/.ansible/tmp/ansible-tmp-1713660306.0824218-25-277237601869890/source",
                                    "unsafe_writes": false,
                                    "validate": null
                                }
                            },
                            "md5sum": "ce869b9df2317fdf7c920b3410c8db7b",
                            "mode": "0444",
                            "owner": "root",
                            "size": 152,
                            "src": "/home/zuul/.ansible/tmp/ansible-tmp-1713660306.0824218-25-277237601869890/source",
                            "state": "file",
                            "uid": 0
                        }
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:45:06.702823Z",
                            "start": "2024-04-21T00:45:06.048013Z"
                        },
                        "id": "ce4df5fb-964c-c1a0-01eb-000000000007",
                        "name": "Add FlexLM license for the QNX CI Floating License Server"
                    }
                }
            ]
        }
    ],
    "stats": {
        "node": {
            "changed": 4,
            "failures": 0,
            "ignored": 0,
            "ok": 4,
            "rescued": 0,
            "skipped": 0,
            "unreachable": 0
        }
    },
    "trusted": true
},
{
    "branch": "master",
    "index": "8",
    "phase": "pre",
    "playbook": "cc-github.bmwgroup.net/swh/zuul-trusted-ddad/playbooks/ensure-bazel-remote-cert.yaml",
    "plays": [
        {
            "play": {
                "duration": {
                    "end": "2024-04-21T00:45:11.150267Z",
                    "start": "2024-04-21T00:45:08.030698Z"
                },
                "id": "ce4df5fb-964c-b521-4f03-000000000002",
                "name": "Ensure CC remote cache authentication"
            },
            "tasks": [
                {
                    "hosts": {
                        "node": {
                            "action": "set_fact",
                            "changed": false,
                            "false_condition": "bazel_remote_cert_path is defined and bazel_remote_cert_path",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:45:08.095435Z",
                            "start": "2024-04-21T00:45:08.054576Z"
                        },
                        "id": "ce4df5fb-964c-b521-4f03-000000000012",
                        "name": "Override cc_buildbarn_cert_path default with bazel_remote_cert_path"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "set_fact",
                            "changed": false,
                            "false_condition": "remote_execution_credential_path is defined and remote_execution_credential_path",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:45:08.146106Z",
                            "start": "2024-04-21T00:45:08.108137Z"
                        },
                        "id": "ce4df5fb-964c-b521-4f03-000000000013",
                        "name": "Override engflow_credentials_directory default with remote_execution_credential_path"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "set_fact",
                            "changed": false,
                            "false_condition": "bazel_remote_cert_path is defined",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:45:08.214669Z",
                            "start": "2024-04-21T00:45:08.157365Z"
                        },
                        "id": "ce4df5fb-964c-b521-4f03-000000000014",
                        "name": "Override engflow_credentials_directory default with bazel_remote_cert_path"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "include_tasks",
                            "changed": false,
                            "include": "linux.yaml",
                            "include_args": {}
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-b521-4f03-000000000006",
                        "name": "ensure-cc-buildbarn-cert",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_3/cc-github.bmwgroup.net/swh/zuul-trusted-ddad/roles/ensure-cc-buildbarn-cert"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:45:08.320707Z",
                            "start": "2024-04-21T00:45:08.243978Z"
                        },
                        "id": "ce4df5fb-964c-b521-4f03-000000000008",
                        "name": ""
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "file",
                            "changed": true,
                            "diff": {
                                "after": {
                                    "group": 1000,
                                    "mode": "0700",
                                    "owner": 1000,
                                    "path": "/etc/buildbarn",
                                    "state": "directory"
                                },
                                "before": {
                                    "group": 0,
                                    "mode": "0755",
                                    "owner": 0,
                                    "path": "/etc/buildbarn",
                                    "state": "absent"
                                }
                            },
                            "gid": 1000,
                            "group": "zuul",
                            "invocation": {
                                "module_args": {
                                    "_diff_peek": null,
                                    "_original_basename": null,
                                    "access_time": null,
                                    "access_time_format": "%Y%m%d%H%M.%S",
                                    "attributes": null,
                                    "follow": true,
                                    "force": false,
                                    "group": "1000",
                                    "mode": 448,
                                    "modification_time": null,
                                    "modification_time_format": "%Y%m%d%H%M.%S",
                                    "owner": "1000",
                                    "path": "/etc/buildbarn",
                                    "recurse": false,
                                    "selevel": null,
                                    "serole": null,
                                    "setype": null,
                                    "seuser": null,
                                    "src": null,
                                    "state": "directory",
                                    "unsafe_writes": false
                                }
                            },
                            "mode": "0700",
                            "owner": "zuul",
                            "path": "/etc/buildbarn",
                            "size": 4096,
                            "state": "directory",
                            "uid": 1000
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-b521-4f03-000000000006",
                        "name": "ensure-cc-buildbarn-cert",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_3/cc-github.bmwgroup.net/swh/zuul-trusted-ddad/roles/ensure-cc-buildbarn-cert"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:45:09.360009Z",
                            "start": "2024-04-21T00:45:08.406951Z"
                        },
                        "id": "ce4df5fb-964c-b521-4f03-000000000045",
                        "name": "Create CC buildbarn cert directory"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "copy",
                            "censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result",
                            "changed": true
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-b521-4f03-000000000006",
                        "name": "ensure-cc-buildbarn-cert",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_3/cc-github.bmwgroup.net/swh/zuul-trusted-ddad/roles/ensure-cc-buildbarn-cert"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:45:10.649073Z",
                            "start": "2024-04-21T00:45:09.372368Z"
                        },
                        "id": "ce4df5fb-964c-b521-4f03-000000000046",
                        "name": "Deploy CC buildbarn cert"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "include_tasks",
                            "changed": false,
                            "false_condition": "ansible_os_family == \"Windows\"",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-b521-4f03-000000000006",
                        "name": "ensure-cc-buildbarn-cert",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_3/cc-github.bmwgroup.net/swh/zuul-trusted-ddad/roles/ensure-cc-buildbarn-cert"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:45:10.741361Z",
                            "start": "2024-04-21T00:45:10.659763Z"
                        },
                        "id": "ce4df5fb-964c-b521-4f03-000000000009",
                        "name": ""
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "set_fact",
                            "ansible_facts": {
                                "bazel_remote_cert_path": "/etc/buildbarn/client.pem"
                            },
                            "changed": false
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-b521-4f03-000000000006",
                        "name": "ensure-cc-buildbarn-cert",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_3/cc-github.bmwgroup.net/swh/zuul-trusted-ddad/roles/ensure-cc-buildbarn-cert"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:45:10.866112Z",
                            "start": "2024-04-21T00:45:10.756560Z"
                        },
                        "id": "ce4df5fb-964c-b521-4f03-00000000000a",
                        "name": "Export cc_buildbarn_cert_path as bazel_remote_cert_path"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "include_tasks",
                            "changed": false,
                            "false_condition": "( engflow_credentials is defined ) and ( ( (bazel_enable_remote_cache | default(true)) and (bazel_use_engflow_remote_cache | default(false)) ) or ( remote_execution_credential_path is defined and remote_execution_credential_path ) )",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-b521-4f03-00000000000c",
                        "name": "ensure-engflow-credentials",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_3/cc-github.bmwgroup.net/swh/zuul-trusted-ddad/roles/ensure-engflow-credentials"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:45:10.973345Z",
                            "start": "2024-04-21T00:45:10.892860Z"
                        },
                        "id": "ce4df5fb-964c-b521-4f03-00000000000e",
                        "name": ""
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "include_tasks",
                            "changed": false,
                            "false_condition": "( engflow_credentials is defined ) and ( ( (bazel_enable_remote_cache | default(true)) and (bazel_use_engflow_remote_cache | default(false)) ) or ( remote_execution_credential_path is defined and remote_execution_credential_path ) )",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-b521-4f03-00000000000c",
                        "name": "ensure-engflow-credentials",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_3/cc-github.bmwgroup.net/swh/zuul-trusted-ddad/roles/ensure-engflow-credentials"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:45:11.068135Z",
                            "start": "2024-04-21T00:45:10.987585Z"
                        },
                        "id": "ce4df5fb-964c-b521-4f03-00000000000f",
                        "name": ""
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "set_fact",
                            "changed": false,
                            "false_condition": "( engflow_credentials is defined ) and ( ( (bazel_enable_remote_cache | default(true)) and (bazel_use_engflow_remote_cache | default(false)) ) or ( remote_execution_credential_path is defined and remote_execution_credential_path ) )",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-b521-4f03-00000000000c",
                        "name": "ensure-engflow-credentials",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_3/cc-github.bmwgroup.net/swh/zuul-trusted-ddad/roles/ensure-engflow-credentials"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:45:11.150267Z",
                            "start": "2024-04-21T00:45:11.089981Z"
                        },
                        "id": "ce4df5fb-964c-b521-4f03-000000000010",
                        "name": "Export variables for engflow key and crt"
                    }
                }
            ]
        }
    ],
    "stats": {
        "node": {
            "changed": 2,
            "failures": 0,
            "ignored": 0,
            "ok": 4,
            "rescued": 0,
            "skipped": 7,
            "unreachable": 0
        }
    },
    "trusted": true
},
{
    "branch": "master",
    "index": "9",
    "phase": "pre",
    "playbook": "cc-github.bmwgroup.net/swh/ddad_ci_config/playbooks/ddad-prepare-workspace.yaml",
    "plays": [
        {
            "play": {
                "duration": {
                    "end": "2024-04-21T00:46:09.263274Z",
                    "start": "2024-04-21T00:45:12.679067Z"
                },
                "id": "ce4df5fb-964c-2caf-4d74-000000000002",
                "name": "Update submodules to the HEAD of the checked-out dependencies."
            },
            "tasks": [
                {
                    "hosts": {
                        "node": {
                            "action": "set_fact",
                            "changed": false,
                            "msg": "All items skipped",
                            "results": [
                                {
                                    "ansible_loop_var": "item",
                                    "changed": false,
                                    "false_condition": "zuul.tag is defined",
                                    "item": {
                                        "key": "trusted/project_0/cc-github.bmwgroup.net/codecraft/zuul-conf-global",
                                        "value": {
                                            "canonical_name": "cc-github.bmwgroup.net/codecraft/zuul-conf-global",
                                            "checkout": "master",
                                            "commit": "45b9de4d29f6f4037a00d88ec222181aef260fbd"
                                        }
                                    },
                                    "skip_reason": "Conditional result was False",
                                    "skipped": true
                                },
                                {
                                    "ansible_loop_var": "item",
                                    "changed": false,
                                    "false_condition": "zuul.tag is defined",
                                    "item": {
                                        "key": "trusted/project_1/cc-github.bmwgroup.net/codecraft/cilib",
                                        "value": {
                                            "canonical_name": "cc-github.bmwgroup.net/codecraft/cilib",
                                            "checkout": "master",
                                            "commit": "c0c222f8ecf6f6992a9dea9e4205213d92f68e6f"
                                        }
                                    },
                                    "skip_reason": "Conditional result was False",
                                    "skipped": true
                                },
                                {
                                    "ansible_loop_var": "item",
                                    "changed": false,
                                    "false_condition": "zuul.tag is defined",
                                    "item": {
                                        "key": "trusted/project_2/cc-github.bmwgroup.net/codecraft-oss/zuul-jobs",
                                        "value": {
                                            "canonical_name": "cc-github.bmwgroup.net/codecraft-oss/zuul-jobs",
                                            "checkout": "master",
                                            "commit": "39103d284132516ed03a608730cba5d7f7a00c76"
                                        }
                                    },
                                    "skip_reason": "Conditional result was False",
                                    "skipped": true
                                },
                                {
                                    "ansible_loop_var": "item",
                                    "changed": false,
                                    "false_condition": "zuul.tag is defined",
                                    "item": {
                                        "key": "trusted/project_3/cc-github.bmwgroup.net/swh/zuul-trusted-ddad",
                                        "value": {
                                            "canonical_name": "cc-github.bmwgroup.net/swh/zuul-trusted-ddad",
                                            "checkout": "master",
                                            "commit": "a22500345c4283b6add4f2a3c354c663a904d9d0"
                                        }
                                    },
                                    "skip_reason": "Conditional result was False",
                                    "skipped": true
                                },
                                {
                                    "ansible_loop_var": "item",
                                    "changed": false,
                                    "false_condition": "zuul.tag is defined",
                                    "item": {
                                        "key": "trusted/project_4/cc-github.bmwgroup.net/swh/ddad_ci_config",
                                        "value": {
                                            "canonical_name": "cc-github.bmwgroup.net/swh/ddad_ci_config",
                                            "checkout": "master",
                                            "commit": "a2ea1242739a7a16dba7d7781925949e31cfc29f"
                                        }
                                    },
                                    "skip_reason": "Conditional result was False",
                                    "skipped": true
                                },
                                {
                                    "ansible_loop_var": "item",
                                    "changed": false,
                                    "false_condition": "zuul.tag is defined",
                                    "item": {
                                        "key": "untrusted/project_0/cc-github.bmwgroup.net/swh/ddad_ci_config",
                                        "value": {
                                            "canonical_name": "cc-github.bmwgroup.net/swh/ddad_ci_config",
                                            "checkout": "master",
                                            "commit": "a2ea1242739a7a16dba7d7781925949e31cfc29f"
                                        }
                                    },
                                    "skip_reason": "Conditional result was False",
                                    "skipped": true
                                },
                                {
                                    "ansible_loop_var": "item",
                                    "changed": false,
                                    "false_condition": "zuul.tag is defined",
                                    "item": {
                                        "key": "untrusted/project_1/cc-github.bmwgroup.net/swh/zuul-trusted-ddad",
                                        "value": {
                                            "canonical_name": "cc-github.bmwgroup.net/swh/zuul-trusted-ddad",
                                            "checkout": "master",
                                            "commit": "a22500345c4283b6add4f2a3c354c663a904d9d0"
                                        }
                                    },
                                    "skip_reason": "Conditional result was False",
                                    "skipped": true
                                },
                                {
                                    "ansible_loop_var": "item",
                                    "changed": false,
                                    "false_condition": "zuul.tag is defined",
                                    "item": {
                                        "key": "untrusted/project_2/cc-github.bmwgroup.net/codecraft/cilib",
                                        "value": {
                                            "canonical_name": "cc-github.bmwgroup.net/codecraft/cilib",
                                            "checkout": "master",
                                            "commit": "c0c222f8ecf6f6992a9dea9e4205213d92f68e6f"
                                        }
                                    },
                                    "skip_reason": "Conditional result was False",
                                    "skipped": true
                                },
                                {
                                    "ansible_loop_var": "item",
                                    "changed": false,
                                    "false_condition": "zuul.tag is defined",
                                    "item": {
                                        "key": "untrusted/project_3/cc-github.bmwgroup.net/codecraft/zuul-conf-global",
                                        "value": {
                                            "canonical_name": "cc-github.bmwgroup.net/codecraft/zuul-conf-global",
                                            "checkout": "master",
                                            "commit": "45b9de4d29f6f4037a00d88ec222181aef260fbd"
                                        }
                                    },
                                    "skip_reason": "Conditional result was False",
                                    "skipped": true
                                },
                                {
                                    "ansible_loop_var": "item",
                                    "changed": false,
                                    "false_condition": "zuul.tag is defined",
                                    "item": {
                                        "key": "untrusted/project_4/cc-github.bmwgroup.net/codecraft-oss/zuul-jobs",
                                        "value": {
                                            "canonical_name": "cc-github.bmwgroup.net/codecraft-oss/zuul-jobs",
                                            "checkout": "master",
                                            "commit": "39103d284132516ed03a608730cba5d7f7a00c76"
                                        }
                                    },
                                    "skip_reason": "Conditional result was False",
                                    "skipped": true
                                }
                            ],
                            "skipped": true
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-2caf-4d74-000000000007",
                        "name": "release-reset-ddad-ci-config-to-tag",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/untrusted/project_0/cc-github.bmwgroup.net/swh/ddad_ci_config/roles/release-reset-ddad-ci-config-to-tag"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:45:12.875221Z",
                            "start": "2024-04-21T00:45:12.720872Z"
                        },
                        "id": "ce4df5fb-964c-2caf-4d74-000000000009",
                        "name": "Search for the branch to checkout 'ddad_ci_config'"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "command",
                            "changed": false,
                            "false_condition": "zuul.tag is defined",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-2caf-4d74-000000000007",
                        "name": "release-reset-ddad-ci-config-to-tag",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/untrusted/project_0/cc-github.bmwgroup.net/swh/ddad_ci_config/roles/release-reset-ddad-ci-config-to-tag"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:45:13.435745Z",
                            "start": "2024-04-21T00:45:12.925274Z"
                        },
                        "id": "ce4df5fb-964c-2caf-4d74-00000000000a",
                        "name": "Checkout 'ddad_ci_config' to '{{ ddad_ci_config_context.branch }}' branch"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "win_command",
                            "changed": false,
                            "false_condition": "zuul.tag is defined",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-2caf-4d74-000000000007",
                        "name": "release-reset-ddad-ci-config-to-tag",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/untrusted/project_0/cc-github.bmwgroup.net/swh/ddad_ci_config/roles/release-reset-ddad-ci-config-to-tag"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:45:13.496972Z",
                            "start": "2024-04-21T00:45:13.449157Z"
                        },
                        "id": "ce4df5fb-964c-2caf-4d74-00000000000b",
                        "name": "Checkout 'ddad_ci_config' to '{{ ddad_ci_config_context.branch }}' branch"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "win_copy",
                            "changed": false,
                            "false_condition": "ansible_os_family == \"Windows\"",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-2caf-4d74-00000000000d",
                        "name": "move-submodules",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/untrusted/project_0/cc-github.bmwgroup.net/swh/ddad_ci_config/roles/move-submodules"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:45:13.597877Z",
                            "start": "2024-04-21T00:45:13.571609Z"
                        },
                        "id": "ce4df5fb-964c-2caf-4d74-00000000000f",
                        "name": ""
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "win_shell",
                            "changed": false,
                            "false_condition": "ansible_os_family == \"Windows\"",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-2caf-4d74-00000000000d",
                        "name": "move-submodules",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/untrusted/project_0/cc-github.bmwgroup.net/swh/ddad_ci_config/roles/move-submodules"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:45:13.636329Z",
                            "start": "2024-04-21T00:45:13.608933Z"
                        },
                        "id": "ce4df5fb-964c-2caf-4d74-000000000010",
                        "name": ""
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "win_copy",
                            "changed": false,
                            "false_condition": "ansible_os_family == \"Windows\"",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-2caf-4d74-00000000000d",
                        "name": "move-submodules",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/untrusted/project_0/cc-github.bmwgroup.net/swh/ddad_ci_config/roles/move-submodules"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:45:13.673774Z",
                            "start": "2024-04-21T00:45:13.647643Z"
                        },
                        "id": "ce4df5fb-964c-2caf-4d74-000000000011",
                        "name": ""
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "win_shell",
                            "changed": false,
                            "false_condition": "ansible_os_family == \"Windows\"",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-2caf-4d74-00000000000d",
                        "name": "move-submodules",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/untrusted/project_0/cc-github.bmwgroup.net/swh/ddad_ci_config/roles/move-submodules"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:45:13.714051Z",
                            "start": "2024-04-21T00:45:13.686385Z"
                        },
                        "id": "ce4df5fb-964c-2caf-4d74-000000000012",
                        "name": ""
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "copy",
                            "changed": true,
                            "checksum": "172dfda9b73df5cb6210d28170b7f96eacd06fcd",
                            "dest": "/home/zuul/move_submodules.py",
                            "diff": [],
                            "gid": 1000,
                            "group": "zuul",
                            "invocation": {
                                "module_args": {
                                    "_original_basename": "move_submodules.py",
                                    "attributes": null,
                                    "backup": false,
                                    "checksum": "172dfda9b73df5cb6210d28170b7f96eacd06fcd",
                                    "content": null,
                                    "dest": "/home/zuul/move_submodules.py",
                                    "directory_mode": null,
                                    "follow": false,
                                    "force": true,
                                    "group": null,
                                    "local_follow": null,
                                    "mode": null,
                                    "owner": null,
                                    "remote_src": null,
                                    "selevel": null,
                                    "serole": null,
                                    "setype": null,
                                    "seuser": null,
                                    "src": "/home/zuul/.ansible/tmp/ansible-tmp-1713660314.2248468-21-251898618268135/source",
                                    "unsafe_writes": false,
                                    "validate": null
                                }
                            },
                            "md5sum": "f8433456ffb5cdb2ac26d2f9adaa97a8",
                            "mode": "0664",
                            "owner": "zuul",
                            "size": 5179,
                            "src": "/home/zuul/.ansible/tmp/ansible-tmp-1713660314.2248468-21-251898618268135/source",
                            "state": "file",
                            "uid": 1000
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-2caf-4d74-00000000000d",
                        "name": "move-submodules",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/untrusted/project_0/cc-github.bmwgroup.net/swh/ddad_ci_config/roles/move-submodules"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:45:15.193225Z",
                            "start": "2024-04-21T00:45:13.728149Z"
                        },
                        "id": "ce4df5fb-964c-2caf-4d74-000000000014",
                        "name": ""
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "shell",
                            "changed": true,
                            "cmd": "python3 /home/zuul/move_submodules.py src/cc-github.bmwgroup.net/swh/ddad link",
                            "delta": "0:00:03.339304",
                            "end": "2024-04-21 00:45:19.036156",
                            "invocation": {
                                "module_args": {
                                    "_raw_params": "python3 /home/zuul/move_submodules.py src/cc-github.bmwgroup.net/swh/ddad link",
                                    "_uses_shell": true,
                                    "argv": null,
                                    "chdir": null,
                                    "creates": null,
                                    "executable": "/bin/bash",
                                    "removes": null,
                                    "stdin": null,
                                    "stdin_add_newline": true,
                                    "strip_empty_ends": true,
                                    "warn": false,
                                    "zuul_ansible_split_streams": false,
                                    "zuul_log_id": "ce4df5fb-964c-2caf-4d74-000000000015-1-node"
                                }
                            },
                            "msg": "",
                            "rc": 0,
                            "start": "2024-04-21 00:45:15.696852",
                            "stderr": "",
                            "stderr_lines": [],
                            "stdout": "Moved [franky_ib] to [/home/zuul/src/cc-github.bmwgroup.net/swh/ddad/ecu/devel/franky_ib/franky]\nModule [booster] not found. Skipping.\nMoved [ib-vip] to [/home/zuul/src/cc-github.bmwgroup.net/swh/ddad/ecu/ib/ib_vip]\nModule [ddad-domains-driving] not found. Skipping.\nModule [ipnext_bsp_extensions] not found. Skipping.\nMoved [ltf-dlt] to [/home/zuul/src/cc-github.bmwgroup.net/swh/ddad/ecu/xpad/dlt-daemon]\nModule [xpad_gnss_system_china] not found. Skipping.\nMoved [xpad_xpc] to [/home/zuul/src/cc-github.bmwgroup.net/swh/ddad/third_party/xpad_xpc]\nModule [ddad-domains-automated-driving] not found. Skipping.\nMoved [gnss_common] to [/home/zuul/src/cc-github.bmwgroup.net/swh/ddad/application/gnss/common]\nModule [ddad-domains-energy] not found. Skipping.\nMoved [ddad-domains-fasinfo] to [/home/zuul/src/cc-github.bmwgroup.net/swh/ddad/domains/fasinfo]\nModule [abx-prototyping-config] not found. Skipping.\nMoved [foresight] to [/home/zuul/src/cc-github.bmwgroup.net/swh/ddad/application/foresight]\nModule [env_simulator] not found. Skipping.\nModule [orion_workstream_13] not found. Skipping.\nModule [parking] not found. Skipping.\nMoved [ufm] to [/home/zuul/src/cc-github.bmwgroup.net/swh/ddad/application/fasinfo/ufm]\nMoved [cvc] to [/home/zuul/src/cc-github.bmwgroup.net/swh/ddad/ecu/cvc/cvc]\nMoved [xpad-shared] to [/home/zuul/src/cc-github.bmwgroup.net/swh/ddad/ecu/xpad/xpad-shared]\nModule [ddad-domains-orion-driving] not found. Skipping.\nModule [ddad-domains-powertrain] not found. Skipping.\nModule [qdm] not found. Skipping.\nModule [ddad-ecu-qrp] not found. Skipping.\nModule [ddad-domains-reference-packages] not found. Skipping.\nMoved [system_description] to [/home/zuul/src/cc-github.bmwgroup.net/swh/ddad/system_description]\nModule [ddad-boardnet] not found. Skipping.\nMoved [ddad-domains-generic] to [/home/zuul/src/cc-github.bmwgroup.net/swh/ddad/domains/generic]\nModule [ddad-deployment] not found. Skipping.\nMoved [ddad-ecu-ipnext] to [/home/zuul/src/cc-github.bmwgroup.net/swh/ddad/ecu/ipnext]\nMoved [orion_aeb_temp] to [/home/zuul/src/cc-github.bmwgroup.net/swh/ddad/application/aeb]\nModule [vdm] not found. Skipping.\nMoved [xpad-ara] to [/home/zuul/src/cc-github.bmwgroup.net/swh/ddad/ecu/xpad/ara]\nModule [astas] not found. Skipping.\nMoved [ddad_ci_config] to [/home/zuul/src/cc-github.bmwgroup.net/swh/ddad/ci_config]\nMoved [domain-tools] to [/home/zuul/src/cc-github.bmwgroup.net/swh/ddad/tools/doto]\nMoved [ddad_platform] to [/home/zuul/src/cc-github.bmwgroup.net/swh/ddad/platform]\nMoved [adp] to [/home/zuul/src/cc-github.bmwgroup.net/swh/ddad/application/adp]\n19 elements moved. 19 skipped.",
                            "stdout_lines": [
                                "Moved [franky_ib] to [/home/zuul/src/cc-github.bmwgroup.net/swh/ddad/ecu/devel/franky_ib/franky]",
                                "Module [booster] not found. Skipping.",
                                "Moved [ib-vip] to [/home/zuul/src/cc-github.bmwgroup.net/swh/ddad/ecu/ib/ib_vip]",
                                "Module [ddad-domains-driving] not found. Skipping.",
                                "Module [ipnext_bsp_extensions] not found. Skipping.",
                                "Moved [ltf-dlt] to [/home/zuul/src/cc-github.bmwgroup.net/swh/ddad/ecu/xpad/dlt-daemon]",
                                "Module [xpad_gnss_system_china] not found. Skipping.",
                                "Moved [xpad_xpc] to [/home/zuul/src/cc-github.bmwgroup.net/swh/ddad/third_party/xpad_xpc]",
                                "Module [ddad-domains-automated-driving] not found. Skipping.",
                                "Moved [gnss_common] to [/home/zuul/src/cc-github.bmwgroup.net/swh/ddad/application/gnss/common]",
                                "Module [ddad-domains-energy] not found. Skipping.",
                                "Moved [ddad-domains-fasinfo] to [/home/zuul/src/cc-github.bmwgroup.net/swh/ddad/domains/fasinfo]",
                                "Module [abx-prototyping-config] not found. Skipping.",
                                "Moved [foresight] to [/home/zuul/src/cc-github.bmwgroup.net/swh/ddad/application/foresight]",
                                "Module [env_simulator] not found. Skipping.",
                                "Module [orion_workstream_13] not found. Skipping.",
                                "Module [parking] not found. Skipping.",
                                "Moved [ufm] to [/home/zuul/src/cc-github.bmwgroup.net/swh/ddad/application/fasinfo/ufm]",
                                "Moved [cvc] to [/home/zuul/src/cc-github.bmwgroup.net/swh/ddad/ecu/cvc/cvc]",
                                "Moved [xpad-shared] to [/home/zuul/src/cc-github.bmwgroup.net/swh/ddad/ecu/xpad/xpad-shared]",
                                "Module [ddad-domains-orion-driving] not found. Skipping.",
                                "Module [ddad-domains-powertrain] not found. Skipping.",
                                "Module [qdm] not found. Skipping.",
                                "Module [ddad-ecu-qrp] not found. Skipping.",
                                "Module [ddad-domains-reference-packages] not found. Skipping.",
                                "Moved [system_description] to [/home/zuul/src/cc-github.bmwgroup.net/swh/ddad/system_description]",
                                "Module [ddad-boardnet] not found. Skipping.",
                                "Moved [ddad-domains-generic] to [/home/zuul/src/cc-github.bmwgroup.net/swh/ddad/domains/generic]",
                                "Module [ddad-deployment] not found. Skipping.",
                                "Moved [ddad-ecu-ipnext] to [/home/zuul/src/cc-github.bmwgroup.net/swh/ddad/ecu/ipnext]",
                                "Moved [orion_aeb_temp] to [/home/zuul/src/cc-github.bmwgroup.net/swh/ddad/application/aeb]",
                                "Module [vdm] not found. Skipping.",
                                "Moved [xpad-ara] to [/home/zuul/src/cc-github.bmwgroup.net/swh/ddad/ecu/xpad/ara]",
                                "Module [astas] not found. Skipping.",
                                "Moved [ddad_ci_config] to [/home/zuul/src/cc-github.bmwgroup.net/swh/ddad/ci_config]",
                                "Moved [domain-tools] to [/home/zuul/src/cc-github.bmwgroup.net/swh/ddad/tools/doto]",
                                "Moved [ddad_platform] to [/home/zuul/src/cc-github.bmwgroup.net/swh/ddad/platform]",
                                "Moved [adp] to [/home/zuul/src/cc-github.bmwgroup.net/swh/ddad/application/adp]",
                                "19 elements moved. 19 skipped."
                            ],
                            "zuul_log_id": "ce4df5fb-964c-2caf-4d74-000000000015-1-node"
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-2caf-4d74-00000000000d",
                        "name": "move-submodules",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/untrusted/project_0/cc-github.bmwgroup.net/swh/ddad_ci_config/roles/move-submodules"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:45:19.319058Z",
                            "start": "2024-04-21T00:45:15.260674Z"
                        },
                        "id": "ce4df5fb-964c-2caf-4d74-000000000015",
                        "name": ""
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "command",
                            "changed": true,
                            "cmd": [
                                "git",
                                "submodule",
                                "foreach",
                                "git checkout -f \"${sha1}\" || true"
                            ],
                            "delta": "0:00:48.686059",
                            "end": "2024-04-21 00:46:08.562200",
                            "invocation": {
                                "module_args": {
                                    "_raw_params": "git submodule foreach 'git checkout -f \"${sha1}\" || true'",
                                    "_uses_shell": false,
                                    "argv": null,
                                    "chdir": "src/cc-github.bmwgroup.net/swh/ddad",
                                    "creates": null,
                                    "executable": null,
                                    "removes": null,
                                    "stdin": null,
                                    "stdin_add_newline": true,
                                    "strip_empty_ends": true,
                                    "warn": false,
                                    "zuul_ansible_split_streams": false,
                                    "zuul_log_id": "ce4df5fb-964c-2caf-4d74-000000000019-1-node"
                                }
                            },
                            "msg": "",
                            "rc": 0,
                            "start": "2024-04-21 00:45:19.876141",
                            "stderr": "",
                            "stderr_lines": [],
                            "stdout": "Entering 'application/adp'\nNote: switching to '8d83dea1d58bef901e97793e1c34ad57986fada1'.\n\nYou are in 'detached HEAD' state. You can look around, make experimental\nchanges and commit them, and you can discard any commits you make in this\nstate without impacting any branches by switching back to a branch.\n\nIf you want to create a new branch to retain commits you create, you may\ndo so (now or later) by using -c with the switch command. Example:\n\n  git switch -c <new-branch-name>\n\nOr undo this operation with:\n\n  git switch -\n\nTurn off this advice by setting config variable advice.detachedHead to false\n\nHEAD is now at 8d83dea1d58b Merge pull request #167730 from swh/mm/use_ros_without_aliases\nEntering 'application/aeb'\nNote: switching to 'b473c7ab8c70f69511aeff1374d70aef88f33d4a'.\n\nYou are in 'detached HEAD' state. You can look around, make experimental\nchanges and commit them, and you can discard any commits you make in this\nstate without impacting any branches by switching back to a branch.\n\nIf you want to create a new branch to retain commits you create, you may\ndo so (now or later) by using -c with the switch command. Example:\n\n  git switch -c <new-branch-name>\n\nOr undo this operation with:\n\n  git switch -\n\nTurn off this advice by setting config variable advice.detachedHead to false\n\nHEAD is now at b473c7ab Merge pull request #598 from swh/elsa_erase_aeb\nEntering 'application/fasinfo/ufm'\nNote: switching to '24d683807041b01ac000b8a6212ec6ad50e3b5e2'.\n\nYou are in 'detached HEAD' state. You can look around, make experimental\nchanges and commit them, and you can discard any commits you make in this\nstate without impacting any branches by switching back to a branch.\n\nIf you want to create a new branch to retain commits you create, you may\ndo so (now or later) by using -c with the switch command. Example:\n\n  git switch -c <new-branch-name>\n\nOr undo this operation with:\n\n  git switch -\n\nTurn off this advice by setting config variable advice.detachedHead to false\n\nHEAD is now at 24d683807 Merge pull request #1800 from swh/cbedda_update_hashes_490\nEntering 'application/foresight'\nNote: switching to '0961a62bed7ee412bf80fe5a9b879e5586964358'.\n\nYou are in 'detached HEAD' state. You can look around, make experimental\nchanges and commit them, and you can discard any commits you make in this\nstate without impacting any branches by switching back to a branch.\n\nIf you want to create a new branch to retain commits you create, you may\ndo so (now or later) by using -c with the switch command. Example:\n\n  git switch -c <new-branch-name>\n\nOr undo this operation with:\n\n  git switch -\n\nTurn off this advice by setting config variable advice.detachedHead to false\n\nHEAD is now at 0961a62bed Merge pull request #18874 from swh/mah/adbk25-5914/use_mapdalprovider_in_lanedata\nEntering 'application/gnss/common'\nNote: switching to '7aeb42bd9976938f99a41c088c70fe8af14ee8fc'.\n\nYou are in 'detached HEAD' state. You can look around, make experimental\nchanges and commit them, and you can discard any commits you make in this\nstate without impacting any branches by switching back to a branch.\n\nIf you want to create a new branch to retain commits you create, you may\ndo so (now or later) by using -c with the switch command. Example:\n\n  git switch -c <new-branch-name>\n\nOr undo this operation with:\n\n  git switch -\n\nTurn off this advice by setting config variable advice.detachedHead to false\n\nHEAD is now at 7aeb42bd Merge pull request #711 from swh/vlru/use_newer_coding_api\nEntering 'ci_config'\nNote: switching to 'a2ea1242739a7a16dba7d7781925949e31cfc29f'.\n\nYou are in 'detached HEAD' state. You can look around, make experimental\nchanges and commit them, and you can discard any commits you make in this\nstate without impacting any branches by switching back to a branch.\n\nIf you want to create a new branch to retain commits you create, you may\ndo so (now or later) by using -c with the switch command. Example:\n\n  git switch -c <new-branch-name>\n\nOr undo this operation with:\n\n  git switch -\n\nTurn off this advice by setting config variable advice.detachedHead to false\n\nHEAD is now at a2ea124273 Merge pull request #62209 from swh/ascott/fix_path_on_windows\nEntering 'domains/fasinfo'\nNote: switching to 'a5b41fd76a124026ff81320e27d5caa5a772f235'.\n\nYou are in 'detached HEAD' state. You can look around, make experimental\nchanges and commit them, and you can discard any commits you make in this\nstate without impacting any branches by switching back to a branch.\n\nIf you want to create a new branch to retain commits you create, you may\ndo so (now or later) by using -c with the switch command. Example:\n\n  git switch -c <new-branch-name>\n\nOr undo this operation with:\n\n  git switch -\n\nTurn off this advice by setting config variable advice.detachedHead to false\n\nHEAD is now at a5b41fd76a Merge pull request #964 from swh/csav/add_position_on_map_lane_position\nEntering 'domains/generic'\nNote: switching to '872e7456cf3b5838f30c47753e8187b8c62b636a'.\n\nYou are in 'detached HEAD' state. You can look around, make experimental\nchanges and commit them, and you can discard any commits you make in this\nstate without impacting any branches by switching back to a branch.\n\nIf you want to create a new branch to retain commits you create, you may\ndo so (now or later) by using -c with the switch command. Example:\n\n  git switch -c <new-branch-name>\n\nOr undo this operation with:\n\n  git switch -\n\nTurn off this advice by setting config variable advice.detachedHead to false\n\nHEAD is now at 872e7456 Merge pull request #901 from swh/lber-htcoreq2pm-new-su-soll-volf-wcc\nEntering 'ecu/cvc/cvc'\nNote: switching to 'dbf0e56926a6baad91df5b15b84746c66de73a47'.\n\nYou are in 'detached HEAD' state. You can look around, make experimental\nchanges and commit them, and you can discard any commits you make in this\nstate without impacting any branches by switching back to a branch.\n\nIf you want to create a new branch to retain commits you create, you may\ndo so (now or later) by using -c with the switch command. Example:\n\n  git switch -c <new-branch-name>\n\nOr undo this operation with:\n\n  git switch -\n\nTurn off this advice by setting config variable advice.detachedHead to false\n\nHEAD is now at dbf0e56 Merge pull request #762 from swh/ag-cvc02-pdx-logistic\nEntering 'ecu/devel/franky_ib/franky'\nNote: switching to '7a74d491251435e7b011e7010d11fbc9224b355c'.\n\nYou are in 'detached HEAD' state. You can look around, make experimental\nchanges and commit them, and you can discard any commits you make in this\nstate without impacting any branches by switching back to a branch.\n\nIf you want to create a new branch to retain commits you create, you may\ndo so (now or later) by using -c with the switch command. Example:\n\n  git switch -c <new-branch-name>\n\nOr undo this operation with:\n\n  git switch -\n\nTurn off this advice by setting config variable advice.detachedHead to false\n\nHEAD is now at 7a74d49 Merge pull request #28 from swh/mt/dcs2219/define_adp_std_types_for_franky_ib\nEntering 'ecu/ib/ib_vip'\nNote: switching to '77d3abe6f172efef2f93e6c3a61af0f3ee7d7967'.\n\nYou are in 'detached HEAD' state. You can look around, make experimental\nchanges and commit them, and you can discard any commits you make in this\nstate without impacting any branches by switching back to a branch.\n\nIf you want to create a new branch to retain commits you create, you may\ndo so (now or later) by using -c with the switch command. Example:\n\n  git switch -c <new-branch-name>\n\nOr undo this operation with:\n\n  git switch -\n\nTurn off this advice by setting config variable advice.detachedHead to false\n\nHEAD is now at 77d3abe6f Merge pull request #2123 from swh/autocherry_master_tc_9.2411.2404.2.0\nEntering 'ecu/ipnext'\nNote: switching to '4e0fd5384e92431311a139b52f3b191523237f3f'.\n\nYou are in 'detached HEAD' state. You can look around, make experimental\nchanges and commit them, and you can discard any commits you make in this\nstate without impacting any branches by switching back to a branch.\n\nIf you want to create a new branch to retain commits you create, you may\ndo so (now or later) by using -c with the switch command. Example:\n\n  git switch -c <new-branch-name>\n\nOr undo this operation with:\n\n  git switch -\n\nTurn off this advice by setting config variable advice.detachedHead to false\n\nHEAD is now at 4e0fd5384 Merge pull request #9524 from swh/feat_valeo_parking/parkingstack_i390_ffs_mailbox_change\nEntering 'ecu/xpad/ara'\nNote: switching to '591c4c708640423656b97148b3d5767a987d4818'.\n\nYou are in 'detached HEAD' state. You can look around, make experimental\nchanges and commit them, and you can discard any commits you make in this\nstate without impacting any branches by switching back to a branch.\n\nIf you want to create a new branch to retain commits you create, you may\ndo so (now or later) by using -c with the switch command. Example:\n\n  git switch -c <new-branch-name>\n\nOr undo this operation with:\n\n  git switch -\n\nTurn off this advice by setting config variable advice.detachedHead to false\n\nHEAD is now at 591c4c708 Merge pull request #2327 from swh/swp_109160_moving_pkcs11_test_app\nEntering 'ecu/xpad/dlt-daemon'\nNote: switching to '68fa15c725670a73c3c7f3566a99f38cd3a87ae5'.\n\nYou are in 'detached HEAD' state. You can look around, make experimental\nchanges and commit them, and you can discard any commits you make in this\nstate without impacting any branches by switching back to a branch.\n\nIf you want to create a new branch to retain commits you create, you may\ndo so (now or later) by using -c with the switch command. Example:\n\n  git switch -c <new-branch-name>\n\nOr undo this operation with:\n\n  git switch -\n\nTurn off this advice by setting config variable advice.detachedHead to false\n\nHEAD is now at 68fa15c Merge pull request #146 from swh/feature__swp_31496__simplified_gitlint\nEntering 'ecu/xpad/xpad-shared'\nNote: switching to '5fe3ea2c8e16591c6c11a5398c0fd866652ef652'.\n\nYou are in 'detached HEAD' state. You can look around, make experimental\nchanges and commit them, and you can discard any commits you make in this\nstate without impacting any branches by switching back to a branch.\n\nIf you want to create a new branch to retain commits you create, you may\ndo so (now or later) by using -c with the switch command. Example:\n\n  git switch -c <new-branch-name>\n\nOr undo this operation with:\n\n  git switch -\n\nTurn off this advice by setting config variable advice.detachedHead to false\n\nHEAD is now at 5fe3ea2c8e Merge pull request #22942 from swh/juwi_pas_calibration_integration_2024_cw16\nEntering 'platform'\nNote: switching to '0fc13c778f15b8def496ce821b67df115746cfb6'.\n\nYou are in 'detached HEAD' state. You can look around, make experimental\nchanges and commit them, and you can discard any commits you make in this\nstate without impacting any branches by switching back to a branch.\n\nIf you want to create a new branch to retain commits you create, you may\ndo so (now or later) by using -c with the switch command. Example:\n\n  git switch -c <new-branch-name>\n\nOr undo this operation with:\n\n  git switch -\n\nTurn off this advice by setting config variable advice.detachedHead to false\n\nHEAD is now at 0fc13c778f1 Merge pull request #45320 from swh/ssp_string_encoding_optional\nEntering 'system_description'\nNote: switching to '42dc122349acc14be41c1ebee15c7edff680fb79'.\n\nYou are in 'detached HEAD' state. You can look around, make experimental\nchanges and commit them, and you can discard any commits you make in this\nstate without impacting any branches by switching back to a branch.\n\nIf you want to create a new branch to retain commits you create, you may\ndo so (now or later) by using -c with the switch command. Example:\n\n  git switch -c <new-branch-name>\n\nOr undo this operation with:\n\n  git switch -\n\nTurn off this advice by setting config variable advice.detachedHead to false\n\nHEAD is now at 42dc12234 Merge pull request #2319 from swh/at_brcf\nEntering 'third_party/xpad_xpc'\nNote: switching to '9ce2131edf06568e92545d2f5d1464924b016780'.\n\nYou are in 'detached HEAD' state. You can look around, make experimental\nchanges and commit them, and you can discard any commits you make in this\nstate without impacting any branches by switching back to a branch.\n\nIf you want to create a new branch to retain commits you create, you may\ndo so (now or later) by using -c with the switch command. Example:\n\n  git switch -c <new-branch-name>\n\nOr undo this operation with:\n\n  git switch -\n\nTurn off this advice by setting config variable advice.detachedHead to false\n\nHEAD is now at 9ce2131 Merge pull request #212 from swh/anchana-enabling-buildifier\nEntering 'tools/doto'\nNote: switching to '22e48aea74d3e1a9d405529652492a0cfd84611a'.\n\nYou are in 'detached HEAD' state. You can look around, make experimental\nchanges and commit them, and you can discard any commits you make in this\nstate without impacting any branches by switching back to a branch.\n\nIf you want to create a new branch to retain commits you create, you may\ndo so (now or later) by using -c with the switch command. Example:\n\n  git switch -c <new-branch-name>\n\nOr undo this operation with:\n\n  git switch -\n\nTurn off this advice by setting config variable advice.detachedHead to false\n\nHEAD is now at 22e48aea7 Merge pull request #2382 from swh/codify/report_whitelistings",
                            "stdout_lines": [
                                "Entering 'application/adp'",
                                "Note: switching to '8d83dea1d58bef901e97793e1c34ad57986fada1'.",
                                "",
                                "You are in 'detached HEAD' state. You can look around, make experimental",
                                "changes and commit them, and you can discard any commits you make in this",
                                "state without impacting any branches by switching back to a branch.",
                                "",
                                "If you want to create a new branch to retain commits you create, you may",
                                "do so (now or later) by using -c with the switch command. Example:",
                                "",
                                "  git switch -c <new-branch-name>",
                                "",
                                "Or undo this operation with:",
                                "",
                                "  git switch -",
                                "",
                                "Turn off this advice by setting config variable advice.detachedHead to false",
                                "",
                                "HEAD is now at 8d83dea1d58b Merge pull request #167730 from swh/mm/use_ros_without_aliases",
                                "Entering 'application/aeb'",
                                "Note: switching to 'b473c7ab8c70f69511aeff1374d70aef88f33d4a'.",
                                "",
                                "You are in 'detached HEAD' state. You can look around, make experimental",
                                "changes and commit them, and you can discard any commits you make in this",
                                "state without impacting any branches by switching back to a branch.",
                                "",
                                "If you want to create a new branch to retain commits you create, you may",
                                "do so (now or later) by using -c with the switch command. Example:",
                                "",
                                "  git switch -c <new-branch-name>",
                                "",
                                "Or undo this operation with:",
                                "",
                                "  git switch -",
                                "",
                                "Turn off this advice by setting config variable advice.detachedHead to false",
                                "",
                                "HEAD is now at b473c7ab Merge pull request #598 from swh/elsa_erase_aeb",
                                "Entering 'application/fasinfo/ufm'",
                                "Note: switching to '24d683807041b01ac000b8a6212ec6ad50e3b5e2'.",
                                "",
                                "You are in 'detached HEAD' state. You can look around, make experimental",
                                "changes and commit them, and you can discard any commits you make in this",
                                "state without impacting any branches by switching back to a branch.",
                                "",
                                "If you want to create a new branch to retain commits you create, you may",
                                "do so (now or later) by using -c with the switch command. Example:",
                                "",
                                "  git switch -c <new-branch-name>",
                                "",
                                "Or undo this operation with:",
                                "",
                                "  git switch -",
                                "",
                                "Turn off this advice by setting config variable advice.detachedHead to false",
                                "",
                                "HEAD is now at 24d683807 Merge pull request #1800 from swh/cbedda_update_hashes_490",
                                "Entering 'application/foresight'",
                                "Note: switching to '0961a62bed7ee412bf80fe5a9b879e5586964358'.",
                                "",
                                "You are in 'detached HEAD' state. You can look around, make experimental",
                                "changes and commit them, and you can discard any commits you make in this",
                                "state without impacting any branches by switching back to a branch.",
                                "",
                                "If you want to create a new branch to retain commits you create, you may",
                                "do so (now or later) by using -c with the switch command. Example:",
                                "",
                                "  git switch -c <new-branch-name>",
                                "",
                                "Or undo this operation with:",
                                "",
                                "  git switch -",
                                "",
                                "Turn off this advice by setting config variable advice.detachedHead to false",
                                "",
                                "HEAD is now at 0961a62bed Merge pull request #18874 from swh/mah/adbk25-5914/use_mapdalprovider_in_lanedata",
                                "Entering 'application/gnss/common'",
                                "Note: switching to '7aeb42bd9976938f99a41c088c70fe8af14ee8fc'.",
                                "",
                                "You are in 'detached HEAD' state. You can look around, make experimental",
                                "changes and commit them, and you can discard any commits you make in this",
                                "state without impacting any branches by switching back to a branch.",
                                "",
                                "If you want to create a new branch to retain commits you create, you may",
                                "do so (now or later) by using -c with the switch command. Example:",
                                "",
                                "  git switch -c <new-branch-name>",
                                "",
                                "Or undo this operation with:",
                                "",
                                "  git switch -",
                                "",
                                "Turn off this advice by setting config variable advice.detachedHead to false",
                                "",
                                "HEAD is now at 7aeb42bd Merge pull request #711 from swh/vlru/use_newer_coding_api",
                                "Entering 'ci_config'",
                                "Note: switching to 'a2ea1242739a7a16dba7d7781925949e31cfc29f'.",
                                "",
                                "You are in 'detached HEAD' state. You can look around, make experimental",
                                "changes and commit them, and you can discard any commits you make in this",
                                "state without impacting any branches by switching back to a branch.",
                                "",
                                "If you want to create a new branch to retain commits you create, you may",
                                "do so (now or later) by using -c with the switch command. Example:",
                                "",
                                "  git switch -c <new-branch-name>",
                                "",
                                "Or undo this operation with:",
                                "",
                                "  git switch -",
                                "",
                                "Turn off this advice by setting config variable advice.detachedHead to false",
                                "",
                                "HEAD is now at a2ea124273 Merge pull request #62209 from swh/ascott/fix_path_on_windows",
                                "Entering 'domains/fasinfo'",
                                "Note: switching to 'a5b41fd76a124026ff81320e27d5caa5a772f235'.",
                                "",
                                "You are in 'detached HEAD' state. You can look around, make experimental",
                                "changes and commit them, and you can discard any commits you make in this",
                                "state without impacting any branches by switching back to a branch.",
                                "",
                                "If you want to create a new branch to retain commits you create, you may",
                                "do so (now or later) by using -c with the switch command. Example:",
                                "",
                                "  git switch -c <new-branch-name>",
                                "",
                                "Or undo this operation with:",
                                "",
                                "  git switch -",
                                "",
                                "Turn off this advice by setting config variable advice.detachedHead to false",
                                "",
                                "HEAD is now at a5b41fd76a Merge pull request #964 from swh/csav/add_position_on_map_lane_position",
                                "Entering 'domains/generic'",
                                "Note: switching to '872e7456cf3b5838f30c47753e8187b8c62b636a'.",
                                "",
                                "You are in 'detached HEAD' state. You can look around, make experimental",
                                "changes and commit them, and you can discard any commits you make in this",
                                "state without impacting any branches by switching back to a branch.",
                                "",
                                "If you want to create a new branch to retain commits you create, you may",
                                "do so (now or later) by using -c with the switch command. Example:",
                                "",
                                "  git switch -c <new-branch-name>",
                                "",
                                "Or undo this operation with:",
                                "",
                                "  git switch -",
                                "",
                                "Turn off this advice by setting config variable advice.detachedHead to false",
                                "",
                                "HEAD is now at 872e7456 Merge pull request #901 from swh/lber-htcoreq2pm-new-su-soll-volf-wcc",
                                "Entering 'ecu/cvc/cvc'",
                                "Note: switching to 'dbf0e56926a6baad91df5b15b84746c66de73a47'.",
                                "",
                                "You are in 'detached HEAD' state. You can look around, make experimental",
                                "changes and commit them, and you can discard any commits you make in this",
                                "state without impacting any branches by switching back to a branch.",
                                "",
                                "If you want to create a new branch to retain commits you create, you may",
                                "do so (now or later) by using -c with the switch command. Example:",
                                "",
                                "  git switch -c <new-branch-name>",
                                "",
                                "Or undo this operation with:",
                                "",
                                "  git switch -",
                                "",
                                "Turn off this advice by setting config variable advice.detachedHead to false",
                                "",
                                "HEAD is now at dbf0e56 Merge pull request #762 from swh/ag-cvc02-pdx-logistic",
                                "Entering 'ecu/devel/franky_ib/franky'",
                                "Note: switching to '7a74d491251435e7b011e7010d11fbc9224b355c'.",
                                "",
                                "You are in 'detached HEAD' state. You can look around, make experimental",
                                "changes and commit them, and you can discard any commits you make in this",
                                "state without impacting any branches by switching back to a branch.",
                                "",
                                "If you want to create a new branch to retain commits you create, you may",
                                "do so (now or later) by using -c with the switch command. Example:",
                                "",
                                "  git switch -c <new-branch-name>",
                                "",
                                "Or undo this operation with:",
                                "",
                                "  git switch -",
                                "",
                                "Turn off this advice by setting config variable advice.detachedHead to false",
                                "",
                                "HEAD is now at 7a74d49 Merge pull request #28 from swh/mt/dcs2219/define_adp_std_types_for_franky_ib",
                                "Entering 'ecu/ib/ib_vip'",
                                "Note: switching to '77d3abe6f172efef2f93e6c3a61af0f3ee7d7967'.",
                                "",
                                "You are in 'detached HEAD' state. You can look around, make experimental",
                                "changes and commit them, and you can discard any commits you make in this",
                                "state without impacting any branches by switching back to a branch.",
                                "",
                                "If you want to create a new branch to retain commits you create, you may",
                                "do so (now or later) by using -c with the switch command. Example:",
                                "",
                                "  git switch -c <new-branch-name>",
                                "",
                                "Or undo this operation with:",
                                "",
                                "  git switch -",
                                "",
                                "Turn off this advice by setting config variable advice.detachedHead to false",
                                "",
                                "HEAD is now at 77d3abe6f Merge pull request #2123 from swh/autocherry_master_tc_9.2411.2404.2.0",
                                "Entering 'ecu/ipnext'",
                                "Note: switching to '4e0fd5384e92431311a139b52f3b191523237f3f'.",
                                "",
                                "You are in 'detached HEAD' state. You can look around, make experimental",
                                "changes and commit them, and you can discard any commits you make in this",
                                "state without impacting any branches by switching back to a branch.",
                                "",
                                "If you want to create a new branch to retain commits you create, you may",
                                "do so (now or later) by using -c with the switch command. Example:",
                                "",
                                "  git switch -c <new-branch-name>",
                                "",
                                "Or undo this operation with:",
                                "",
                                "  git switch -",
                                "",
                                "Turn off this advice by setting config variable advice.detachedHead to false",
                                "",
                                "HEAD is now at 4e0fd5384 Merge pull request #9524 from swh/feat_valeo_parking/parkingstack_i390_ffs_mailbox_change",
                                "Entering 'ecu/xpad/ara'",
                                "Note: switching to '591c4c708640423656b97148b3d5767a987d4818'.",
                                "",
                                "You are in 'detached HEAD' state. You can look around, make experimental",
                                "changes and commit them, and you can discard any commits you make in this",
                                "state without impacting any branches by switching back to a branch.",
                                "",
                                "If you want to create a new branch to retain commits you create, you may",
                                "do so (now or later) by using -c with the switch command. Example:",
                                "",
                                "  git switch -c <new-branch-name>",
                                "",
                                "Or undo this operation with:",
                                "",
                                "  git switch -",
                                "",
                                "Turn off this advice by setting config variable advice.detachedHead to false",
                                "",
                                "HEAD is now at 591c4c708 Merge pull request #2327 from swh/swp_109160_moving_pkcs11_test_app",
                                "Entering 'ecu/xpad/dlt-daemon'",
                                "Note: switching to '68fa15c725670a73c3c7f3566a99f38cd3a87ae5'.",
                                "",
                                "You are in 'detached HEAD' state. You can look around, make experimental",
                                "changes and commit them, and you can discard any commits you make in this",
                                "state without impacting any branches by switching back to a branch.",
                                "",
                                "If you want to create a new branch to retain commits you create, you may",
                                "do so (now or later) by using -c with the switch command. Example:",
                                "",
                                "  git switch -c <new-branch-name>",
                                "",
                                "Or undo this operation with:",
                                "",
                                "  git switch -",
                                "",
                                "Turn off this advice by setting config variable advice.detachedHead to false",
                                "",
                                "HEAD is now at 68fa15c Merge pull request #146 from swh/feature__swp_31496__simplified_gitlint",
                                "Entering 'ecu/xpad/xpad-shared'",
                                "Note: switching to '5fe3ea2c8e16591c6c11a5398c0fd866652ef652'.",
                                "",
                                "You are in 'detached HEAD' state. You can look around, make experimental",
                                "changes and commit them, and you can discard any commits you make in this",
                                "state without impacting any branches by switching back to a branch.",
                                "",
                                "If you want to create a new branch to retain commits you create, you may",
                                "do so (now or later) by using -c with the switch command. Example:",
                                "",
                                "  git switch -c <new-branch-name>",
                                "",
                                "Or undo this operation with:",
                                "",
                                "  git switch -",
                                "",
                                "Turn off this advice by setting config variable advice.detachedHead to false",
                                "",
                                "HEAD is now at 5fe3ea2c8e Merge pull request #22942 from swh/juwi_pas_calibration_integration_2024_cw16",
                                "Entering 'platform'",
                                "Note: switching to '0fc13c778f15b8def496ce821b67df115746cfb6'.",
                                "",
                                "You are in 'detached HEAD' state. You can look around, make experimental",
                                "changes and commit them, and you can discard any commits you make in this",
                                "state without impacting any branches by switching back to a branch.",
                                "",
                                "If you want to create a new branch to retain commits you create, you may",
                                "do so (now or later) by using -c with the switch command. Example:",
                                "",
                                "  git switch -c <new-branch-name>",
                                "",
                                "Or undo this operation with:",
                                "",
                                "  git switch -",
                                "",
                                "Turn off this advice by setting config variable advice.detachedHead to false",
                                "",
                                "HEAD is now at 0fc13c778f1 Merge pull request #45320 from swh/ssp_string_encoding_optional",
                                "Entering 'system_description'",
                                "Note: switching to '42dc122349acc14be41c1ebee15c7edff680fb79'.",
                                "",
                                "You are in 'detached HEAD' state. You can look around, make experimental",
                                "changes and commit them, and you can discard any commits you make in this",
                                "state without impacting any branches by switching back to a branch.",
                                "",
                                "If you want to create a new branch to retain commits you create, you may",
                                "do so (now or later) by using -c with the switch command. Example:",
                                "",
                                "  git switch -c <new-branch-name>",
                                "",
                                "Or undo this operation with:",
                                "",
                                "  git switch -",
                                "",
                                "Turn off this advice by setting config variable advice.detachedHead to false",
                                "",
                                "HEAD is now at 42dc12234 Merge pull request #2319 from swh/at_brcf",
                                "Entering 'third_party/xpad_xpc'",
                                "Note: switching to '9ce2131edf06568e92545d2f5d1464924b016780'.",
                                "",
                                "You are in 'detached HEAD' state. You can look around, make experimental",
                                "changes and commit them, and you can discard any commits you make in this",
                                "state without impacting any branches by switching back to a branch.",
                                "",
                                "If you want to create a new branch to retain commits you create, you may",
                                "do so (now or later) by using -c with the switch command. Example:",
                                "",
                                "  git switch -c <new-branch-name>",
                                "",
                                "Or undo this operation with:",
                                "",
                                "  git switch -",
                                "",
                                "Turn off this advice by setting config variable advice.detachedHead to false",
                                "",
                                "HEAD is now at 9ce2131 Merge pull request #212 from swh/anchana-enabling-buildifier",
                                "Entering 'tools/doto'",
                                "Note: switching to '22e48aea74d3e1a9d405529652492a0cfd84611a'.",
                                "",
                                "You are in 'detached HEAD' state. You can look around, make experimental",
                                "changes and commit them, and you can discard any commits you make in this",
                                "state without impacting any branches by switching back to a branch.",
                                "",
                                "If you want to create a new branch to retain commits you create, you may",
                                "do so (now or later) by using -c with the switch command. Example:",
                                "",
                                "  git switch -c <new-branch-name>",
                                "",
                                "Or undo this operation with:",
                                "",
                                "  git switch -",
                                "",
                                "Turn off this advice by setting config variable advice.detachedHead to false",
                                "",
                                "HEAD is now at 22e48aea7 Merge pull request #2382 from swh/codify/report_whitelistings"
                            ],
                            "zuul_log_id": "ce4df5fb-964c-2caf-4d74-000000000019-1-node"
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-2caf-4d74-000000000017",
                        "name": "release-reset-submodules",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/untrusted/project_0/cc-github.bmwgroup.net/swh/ddad_ci_config/roles/release-reset-submodules"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:46:09.008675Z",
                            "start": "2024-04-21T00:45:19.383334Z"
                        },
                        "id": "ce4df5fb-964c-2caf-4d74-000000000019",
                        "name": "Reset submodules (Linux)"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "win_command",
                            "changed": false,
                            "false_condition": "use_gitrefs and ansible_os_family == \"Windows\"",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-2caf-4d74-000000000017",
                        "name": "release-reset-submodules",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/untrusted/project_0/cc-github.bmwgroup.net/swh/ddad_ci_config/roles/release-reset-submodules"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:46:09.061325Z",
                            "start": "2024-04-21T00:46:09.020999Z"
                        },
                        "id": "ce4df5fb-964c-2caf-4d74-00000000001a",
                        "name": "Reset submodules (Windows)"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "win_command",
                            "changed": false,
                            "false_condition": "use_gitrefs and ansible_os_family == \"Windows\"",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-2caf-4d74-000000000017",
                        "name": "release-reset-submodules",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/untrusted/project_0/cc-github.bmwgroup.net/swh/ddad_ci_config/roles/release-reset-submodules"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:46:09.116418Z",
                            "start": "2024-04-21T00:46:09.076756Z"
                        },
                        "id": "ce4df5fb-964c-2caf-4d74-00000000001b",
                        "name": "Reset submodules (Windows) / workaround to ensure everything is clean"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "win_shell",
                            "changed": false,
                            "false_condition": "ansible_os_family == \"Windows\"",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:46:09.168275Z",
                            "start": "2024-04-21T00:46:09.140587Z"
                        },
                        "id": "ce4df5fb-964c-2caf-4d74-00000000001d",
                        "name": ""
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "win_shell",
                            "changed": false,
                            "false_condition": "ansible_os_family == \"Windows\"",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:46:09.217025Z",
                            "start": "2024-04-21T00:46:09.188191Z"
                        },
                        "id": "ce4df5fb-964c-2caf-4d74-00000000001e",
                        "name": ""
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "win_command",
                            "changed": false,
                            "false_condition": "ansible_os_family == \"Windows\"",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:46:09.263274Z",
                            "start": "2024-04-21T00:46:09.228942Z"
                        },
                        "id": "ce4df5fb-964c-2caf-4d74-00000000001f",
                        "name": "Install wheel python package"
                    }
                }
            ]
        }
    ],
    "stats": {
        "node": {
            "changed": 3,
            "failures": 0,
            "ignored": 0,
            "ok": 3,
            "rescued": 0,
            "skipped": 12,
            "unreachable": 0
        }
    },
    "trusted": false
},
{
    "branch": "master",
    "index": "10",
    "phase": "pre",
    "playbook": "cc-github.bmwgroup.net/swh/zuul-trusted-ddad/playbooks/adp-klocwork/base-adp-klocwork-credentials.yaml",
    "plays": [
        {
            "play": {
                "duration": {
                    "end": "2024-04-21T00:46:14.716953Z",
                    "start": "2024-04-21T00:46:10.974993Z"
                },
                "id": "ce4df5fb-964c-4479-7ec3-000000000002",
                "name": "all"
            },
            "tasks": [
                {
                    "hosts": {
                        "node": {
                            "action": "file",
                            "changed": true,
                            "diff": {
                                "after": {
                                    "path": "/usr/local/klocwork/access/",
                                    "state": "directory"
                                },
                                "before": {
                                    "path": "/usr/local/klocwork/access/",
                                    "state": "absent"
                                }
                            },
                            "gid": 0,
                            "group": "root",
                            "invocation": {
                                "module_args": {
                                    "_diff_peek": null,
                                    "_original_basename": null,
                                    "access_time": null,
                                    "access_time_format": "%Y%m%d%H%M.%S",
                                    "attributes": null,
                                    "follow": true,
                                    "force": false,
                                    "group": null,
                                    "mode": null,
                                    "modification_time": null,
                                    "modification_time_format": "%Y%m%d%H%M.%S",
                                    "owner": null,
                                    "path": "/usr/local/klocwork/access/",
                                    "recurse": true,
                                    "selevel": null,
                                    "serole": null,
                                    "setype": null,
                                    "seuser": null,
                                    "src": null,
                                    "state": "directory",
                                    "unsafe_writes": false
                                }
                            },
                            "mode": "0755",
                            "owner": "root",
                            "path": "/usr/local/klocwork/access/",
                            "size": 4096,
                            "state": "directory",
                            "uid": 0
                        }
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:46:12.586857Z",
                            "start": "2024-04-21T00:46:11.017296Z"
                        },
                        "id": "ce4df5fb-964c-4479-7ec3-000000000004",
                        "name": "Creates token file for authorization to the Klocwork server"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "copy",
                            "changed": true,
                            "checksum": "5c679b4fa23e6df13cc78a40a6b22ba9c9d3fbed",
                            "dest": "/usr/local/klocwork/access/ltoken",
                            "diff": [],
                            "gid": 0,
                            "group": "root",
                            "invocation": {
                                "module_args": {
                                    "_original_basename": "tmp_8o8thr0",
                                    "attributes": null,
                                    "backup": false,
                                    "checksum": "5c679b4fa23e6df13cc78a40a6b22ba9c9d3fbed",
                                    "content": null,
                                    "dest": "/usr/local/klocwork/access/ltoken",
                                    "directory_mode": null,
                                    "follow": false,
                                    "force": true,
                                    "group": "root",
                                    "local_follow": null,
                                    "mode": 292,
                                    "owner": "root",
                                    "remote_src": null,
                                    "selevel": null,
                                    "serole": null,
                                    "setype": null,
                                    "seuser": null,
                                    "src": "/home/zuul/.ansible/tmp/ansible-tmp-1713660372.6693542-12-258452979937640/source",
                                    "unsafe_writes": false,
                                    "validate": null
                                }
                            },
                            "md5sum": "50c593a890362167e98c0cc5724856c0",
                            "mode": "0444",
                            "owner": "root",
                            "size": 383,
                            "src": "/home/zuul/.ansible/tmp/ansible-tmp-1713660372.6693542-12-258452979937640/source",
                            "state": "file",
                            "uid": 0
                        }
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:46:13.917641Z",
                            "start": "2024-04-21T00:46:12.602910Z"
                        },
                        "id": "ce4df5fb-964c-4479-7ec3-000000000005",
                        "name": "Create Klocwork token file (full access)"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "copy",
                            "changed": true,
                            "checksum": "e8ff1cbd671763de2242466ef52172aff11418b9",
                            "dest": "/usr/local/klocwork/access/ltoken",
                            "diff": [],
                            "gid": 0,
                            "group": "root",
                            "invocation": {
                                "module_args": {
                                    "_original_basename": "tmprqs_h_iz",
                                    "attributes": null,
                                    "backup": false,
                                    "checksum": "e8ff1cbd671763de2242466ef52172aff11418b9",
                                    "content": null,
                                    "dest": "/usr/local/klocwork/access/ltoken",
                                    "directory_mode": null,
                                    "follow": false,
                                    "force": true,
                                    "group": "root",
                                    "local_follow": null,
                                    "mode": 292,
                                    "owner": "root",
                                    "remote_src": null,
                                    "selevel": null,
                                    "serole": null,
                                    "setype": null,
                                    "seuser": null,
                                    "src": "/home/zuul/.ansible/tmp/ansible-tmp-1713660374.006684-22-153284177614994/source",
                                    "unsafe_writes": false,
                                    "validate": null
                                }
                            },
                            "md5sum": "18a3e40274964aeff6c1a2cd108b66e3",
                            "mode": "0444",
                            "owner": "root",
                            "size": 383,
                            "src": "/home/zuul/.ansible/tmp/ansible-tmp-1713660374.006684-22-153284177614994/source",
                            "state": "file",
                            "uid": 0
                        }
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:46:14.716953Z",
                            "start": "2024-04-21T00:46:13.929800Z"
                        },
                        "id": "ce4df5fb-964c-4479-7ec3-000000000006",
                        "name": "Create Klocwork token file (readonly)"
                    }
                }
            ]
        }
    ],
    "stats": {
        "node": {
            "changed": 3,
            "failures": 0,
            "ignored": 0,
            "ok": 3,
            "rescued": 0,
            "skipped": 0,
            "unreachable": 0
        }
    },
    "trusted": true
},
{
    "branch": "master",
    "index": "11",
    "phase": "pre",
    "playbook": "cc-github.bmwgroup.net/swh/zuul-trusted-ddad/playbooks/adp-teamscale/base-adp-teamscale-credentials.yaml",
    "plays": [
        {
            "play": {
                "duration": {
                    "end": "2024-04-21T00:46:17.374277Z",
                    "start": "2024-04-21T00:46:16.194373Z"
                },
                "id": "ce4df5fb-964c-9483-34cd-000000000002",
                "name": "all"
            },
            "tasks": [
                {
                    "hosts": {
                        "node": {
                            "action": "file",
                            "changed": true,
                            "diff": {
                                "after": {
                                    "path": "/usr/local/teamscale/credentials",
                                    "state": "directory"
                                },
                                "before": {
                                    "path": "/usr/local/teamscale/credentials",
                                    "state": "absent"
                                }
                            },
                            "gid": 0,
                            "group": "root",
                            "invocation": {
                                "module_args": {
                                    "_diff_peek": null,
                                    "_original_basename": null,
                                    "access_time": null,
                                    "access_time_format": "%Y%m%d%H%M.%S",
                                    "attributes": null,
                                    "follow": true,
                                    "force": false,
                                    "group": null,
                                    "mode": null,
                                    "modification_time": null,
                                    "modification_time_format": "%Y%m%d%H%M.%S",
                                    "owner": null,
                                    "path": "/usr/local/teamscale/credentials",
                                    "recurse": true,
                                    "selevel": null,
                                    "serole": null,
                                    "setype": null,
                                    "seuser": null,
                                    "src": null,
                                    "state": "directory",
                                    "unsafe_writes": false
                                }
                            },
                            "mode": "0755",
                            "owner": "root",
                            "path": "/usr/local/teamscale/credentials",
                            "size": 4096,
                            "state": "directory",
                            "uid": 0
                        }
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:46:17.214632Z",
                            "start": "2024-04-21T00:46:16.241118Z"
                        },
                        "id": "ce4df5fb-964c-9483-34cd-000000000004",
                        "name": "Creates a teamscale credentials file for authorization to the Teamscale server"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "copy",
                            "changed": false,
                            "false_condition": "zuul.pipeline in [\"adp-quality-metrics\", \"adp-quality-metrics-manual\", \"periodic-nightly\", \"generate-driving-approval-items\"]",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:46:17.268593Z",
                            "start": "2024-04-21T00:46:17.227493Z"
                        },
                        "id": "ce4df5fb-964c-9483-34cd-000000000005",
                        "name": "Create a Teamscale credentials file for adp-quality-metrics pipeline."
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "copy",
                            "changed": false,
                            "false_condition": "zuul.pipeline == \"test\"\n",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:46:17.317086Z",
                            "start": "2024-04-21T00:46:17.284612Z"
                        },
                        "id": "ce4df5fb-964c-9483-34cd-000000000006",
                        "name": "Create a Teamscale credentials file for test pipeline."
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "copy",
                            "changed": false,
                            "false_condition": "zuul.pipeline == \"adp-quality-metrics-release\"",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:46:17.374277Z",
                            "start": "2024-04-21T00:46:17.335651Z"
                        },
                        "id": "ce4df5fb-964c-9483-34cd-000000000007",
                        "name": "Create a Teamscale credentials file for tag-triggered and manually triggered pipeline."
                    }
                }
            ]
        }
    ],
    "stats": {
        "node": {
            "changed": 1,
            "failures": 0,
            "ignored": 0,
            "ok": 1,
            "rescued": 0,
            "skipped": 3,
            "unreachable": 0
        }
    },
    "trusted": true
},
{
    "branch": "master",
    "index": "12",
    "phase": "pre",
    "playbook": "cc-github.bmwgroup.net/swh/zuul-trusted-ddad/playbooks/adp-metrics/base-adp-metrics-credentials.yaml",
    "plays": [
        {
            "play": {
                "duration": {
                    "end": "2024-04-21T00:46:22.009562Z",
                    "start": "2024-04-21T00:46:19.229267Z"
                },
                "id": "ce4df5fb-964c-bc28-551d-000000000002",
                "name": "all"
            },
            "tasks": [
                {
                    "hosts": {
                        "node": {
                            "action": "file",
                            "changed": true,
                            "diff": {
                                "after": {
                                    "path": "/usr/local/codecraft_logs/credentials",
                                    "state": "directory"
                                },
                                "before": {
                                    "path": "/usr/local/codecraft_logs/credentials",
                                    "state": "absent"
                                }
                            },
                            "gid": 0,
                            "group": "root",
                            "invocation": {
                                "module_args": {
                                    "_diff_peek": null,
                                    "_original_basename": null,
                                    "access_time": null,
                                    "access_time_format": "%Y%m%d%H%M.%S",
                                    "attributes": null,
                                    "follow": true,
                                    "force": false,
                                    "group": null,
                                    "mode": null,
                                    "modification_time": null,
                                    "modification_time_format": "%Y%m%d%H%M.%S",
                                    "owner": null,
                                    "path": "/usr/local/codecraft_logs/credentials",
                                    "recurse": true,
                                    "selevel": null,
                                    "serole": null,
                                    "setype": null,
                                    "seuser": null,
                                    "src": null,
                                    "state": "directory",
                                    "unsafe_writes": false
                                }
                            },
                            "mode": "0755",
                            "owner": "root",
                            "path": "/usr/local/codecraft_logs/credentials",
                            "size": 4096,
                            "state": "directory",
                            "uid": 0
                        }
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:46:20.571927Z",
                            "start": "2024-04-21T00:46:19.282995Z"
                        },
                        "id": "ce4df5fb-964c-bc28-551d-000000000004",
                        "name": "Creates a credentials file for authorization to metrics servers"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "copy",
                            "changed": true,
                            "checksum": "a82f867d843ca9e9aa86cc702fa00befa55e99b2",
                            "dest": "/usr/local/codecraft_logs/credentials/access_key",
                            "diff": [],
                            "gid": 0,
                            "group": "root",
                            "invocation": {
                                "module_args": {
                                    "_original_basename": "tmpmmdaezkg",
                                    "attributes": null,
                                    "backup": false,
                                    "checksum": "a82f867d843ca9e9aa86cc702fa00befa55e99b2",
                                    "content": null,
                                    "dest": "/usr/local/codecraft_logs/credentials/access_key",
                                    "directory_mode": null,
                                    "follow": false,
                                    "force": true,
                                    "group": "root",
                                    "local_follow": null,
                                    "mode": 292,
                                    "owner": "root",
                                    "remote_src": null,
                                    "selevel": null,
                                    "serole": null,
                                    "setype": null,
                                    "seuser": null,
                                    "src": "/home/zuul/.ansible/tmp/ansible-tmp-1713660380.6615808-12-41124123288354/source",
                                    "unsafe_writes": false,
                                    "validate": null
                                }
                            },
                            "md5sum": "55a0c90e089b7b50d18ec54642a3801a",
                            "mode": "0444",
                            "owner": "root",
                            "size": 40,
                            "src": "/home/zuul/.ansible/tmp/ansible-tmp-1713660380.6615808-12-41124123288354/source",
                            "state": "file",
                            "uid": 0
                        }
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:46:22.009562Z",
                            "start": "2024-04-21T00:46:20.585429Z"
                        },
                        "id": "ce4df5fb-964c-bc28-551d-000000000005",
                        "name": "Create metrics credentials file"
                    }
                }
            ]
        }
    ],
    "stats": {
        "node": {
            "changed": 2,
            "failures": 0,
            "ignored": 0,
            "ok": 2,
            "rescued": 0,
            "skipped": 0,
            "unreachable": 0
        }
    },
    "trusted": true
},
{
    "branch": "master",
    "index": "13",
    "phase": "pre",
    "playbook": "cc-github.bmwgroup.net/swh/zuul-trusted-ddad/playbooks/adp-metrics/base-adp-codebeamer-credentials.yaml",
    "plays": [
        {
            "play": {
                "duration": {
                    "end": "2024-04-21T00:46:23.895888Z",
                    "start": "2024-04-21T00:46:23.609765Z"
                },
                "id": "ce4df5fb-964c-1c18-d7ec-000000000002",
                "name": "all"
            },
            "tasks": [
                {
                    "hosts": {
                        "node": {
                            "action": "include_tasks",
                            "changed": false,
                            "false_condition": "zuul.pipeline == \"adp-quality-metrics\" or zuul.pipeline == \"adp-quality-metrics-release\" or zuul.pipeline == \"adp-quality-metrics-manual\" or zuul.pipeline == \"periodic_12_hour\" or zuul.pipeline == \"generate-driving-approval-items\" or zuul.pipeline == \"qasc-driving-approval-generator\"\n",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-1c18-d7ec-000000000006",
                        "name": "ensure-netrc",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_1/cc-github.bmwgroup.net/codecraft/cilib/roles/ensure-netrc"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:46:23.702964Z",
                            "start": "2024-04-21T00:46:23.662512Z"
                        },
                        "id": "ce4df5fb-964c-1c18-d7ec-000000000008",
                        "name": ""
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "include_tasks",
                            "changed": false,
                            "false_condition": "zuul.pipeline == \"adp-quality-metrics\" or zuul.pipeline == \"adp-quality-metrics-release\" or zuul.pipeline == \"adp-quality-metrics-manual\" or zuul.pipeline == \"periodic_12_hour\" or zuul.pipeline == \"generate-driving-approval-items\" or zuul.pipeline == \"qasc-driving-approval-generator\"\n",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-1c18-d7ec-000000000006",
                        "name": "ensure-netrc",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_1/cc-github.bmwgroup.net/codecraft/cilib/roles/ensure-netrc"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:46:23.758938Z",
                            "start": "2024-04-21T00:46:23.718922Z"
                        },
                        "id": "ce4df5fb-964c-1c18-d7ec-000000000009",
                        "name": ""
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "include_tasks",
                            "changed": false,
                            "false_condition": "zuul.pipeline == \"test\" or zuul.pipeline == \"periodic_check_1\" or zuul.pipeline == \"periodic_check_0\" or zuul.pipeline == \"generate-driving-approval-items\" or zuul.pipeline == \"qasc-driving-approval-generator\"\n",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-1c18-d7ec-00000000000b",
                        "name": "ensure-netrc",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_1/cc-github.bmwgroup.net/codecraft/cilib/roles/ensure-netrc"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:46:23.834621Z",
                            "start": "2024-04-21T00:46:23.786118Z"
                        },
                        "id": "ce4df5fb-964c-1c18-d7ec-00000000000d",
                        "name": ""
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "include_tasks",
                            "changed": false,
                            "false_condition": "zuul.pipeline == \"test\" or zuul.pipeline == \"periodic_check_1\" or zuul.pipeline == \"periodic_check_0\" or zuul.pipeline == \"generate-driving-approval-items\" or zuul.pipeline == \"qasc-driving-approval-generator\"\n",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-1c18-d7ec-00000000000b",
                        "name": "ensure-netrc",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_1/cc-github.bmwgroup.net/codecraft/cilib/roles/ensure-netrc"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:46:23.895888Z",
                            "start": "2024-04-21T00:46:23.847586Z"
                        },
                        "id": "ce4df5fb-964c-1c18-d7ec-00000000000e",
                        "name": ""
                    }
                }
            ]
        }
    ],
    "stats": {
        "node": {
            "changed": 0,
            "failures": 0,
            "ignored": 0,
            "ok": 0,
            "rescued": 0,
            "skipped": 4,
            "unreachable": 0
        }
    },
    "trusted": true
},
{
    "branch": "master",
    "index": "14",
    "phase": "pre",
    "playbook": "cc-github.bmwgroup.net/swh/zuul-trusted-ddad/playbooks/adp-sonarqube/base-adp-sonarqube-credentials.yaml",
    "plays": [
        {
            "play": {
                "duration": {
                    "end": "2024-04-21T00:46:27.802233Z",
                    "start": "2024-04-21T00:46:25.273949Z"
                },
                "id": "ce4df5fb-964c-5ede-c944-000000000002",
                "name": "all"
            },
            "tasks": [
                {
                    "hosts": {
                        "node": {
                            "action": "file",
                            "changed": true,
                            "diff": {
                                "after": {
                                    "path": "/usr/local/sonarqube/access/",
                                    "state": "directory"
                                },
                                "before": {
                                    "path": "/usr/local/sonarqube/access/",
                                    "state": "absent"
                                }
                            },
                            "gid": 0,
                            "group": "root",
                            "invocation": {
                                "module_args": {
                                    "_diff_peek": null,
                                    "_original_basename": null,
                                    "access_time": null,
                                    "access_time_format": "%Y%m%d%H%M.%S",
                                    "attributes": null,
                                    "follow": true,
                                    "force": false,
                                    "group": null,
                                    "mode": null,
                                    "modification_time": null,
                                    "modification_time_format": "%Y%m%d%H%M.%S",
                                    "owner": null,
                                    "path": "/usr/local/sonarqube/access/",
                                    "recurse": true,
                                    "selevel": null,
                                    "serole": null,
                                    "setype": null,
                                    "seuser": null,
                                    "src": null,
                                    "state": "directory",
                                    "unsafe_writes": false
                                }
                            },
                            "mode": "0755",
                            "owner": "root",
                            "path": "/usr/local/sonarqube/access/",
                            "size": 4096,
                            "state": "directory",
                            "uid": 0
                        }
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:46:26.385030Z",
                            "start": "2024-04-21T00:46:25.324009Z"
                        },
                        "id": "ce4df5fb-964c-5ede-c944-000000000004",
                        "name": "Create a token file for authorization to the SonarQube server"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "copy",
                            "changed": true,
                            "checksum": "3713901ef0b55c2dae1b98e87fbfab3b820d9043",
                            "dest": "/usr/local/sonarqube/access/token",
                            "diff": [],
                            "gid": 0,
                            "group": "root",
                            "invocation": {
                                "module_args": {
                                    "_original_basename": "tmph6kjkcuh",
                                    "attributes": null,
                                    "backup": false,
                                    "checksum": "3713901ef0b55c2dae1b98e87fbfab3b820d9043",
                                    "content": null,
                                    "dest": "/usr/local/sonarqube/access/token",
                                    "directory_mode": null,
                                    "follow": false,
                                    "force": true,
                                    "group": "root",
                                    "local_follow": null,
                                    "mode": 292,
                                    "owner": "root",
                                    "remote_src": null,
                                    "selevel": null,
                                    "serole": null,
                                    "setype": null,
                                    "seuser": null,
                                    "src": "/home/zuul/.ansible/tmp/ansible-tmp-1713660386.4444013-12-14720466263565/source",
                                    "unsafe_writes": false,
                                    "validate": null
                                }
                            },
                            "md5sum": "3c8558741f2781d7d5a83f99d1f96f19",
                            "mode": "0444",
                            "owner": "root",
                            "size": 45,
                            "src": "/home/zuul/.ansible/tmp/ansible-tmp-1713660386.4444013-12-14720466263565/source",
                            "state": "file",
                            "uid": 0
                        }
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:46:27.752543Z",
                            "start": "2024-04-21T00:46:26.394980Z"
                        },
                        "id": "ce4df5fb-964c-5ede-c944-000000000005",
                        "name": "Create a SonarQube token file (production)"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "copy",
                            "changed": false,
                            "false_condition": "zuul.pipeline == \"test\"\n",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:46:27.802233Z",
                            "start": "2024-04-21T00:46:27.762504Z"
                        },
                        "id": "ce4df5fb-964c-5ede-c944-000000000006",
                        "name": "Create a SonarQube token file (testing)"
                    }
                }
            ]
        }
    ],
    "stats": {
        "node": {
            "changed": 2,
            "failures": 0,
            "ignored": 0,
            "ok": 2,
            "rescued": 0,
            "skipped": 1,
            "unreachable": 0
        }
    },
    "trusted": true
},
{
    "branch": "master",
    "index": "15",
    "phase": "pre",
    "playbook": "cc-github.bmwgroup.net/swh/zuul-trusted-ddad/playbooks/create-ci-kpis-directory.yaml",
    "plays": [
        {
            "play": {
                "duration": {
                    "end": "2024-04-21T00:46:30.214376Z",
                    "start": "2024-04-21T00:46:29.295901Z"
                },
                "id": "ce4df5fb-964c-12d2-2cce-000000000002",
                "name": "Export duration summary of log files"
            },
            "tasks": [
                {
                    "hosts": {
                        "node": {
                            "action": "file",
                            "changed": true,
                            "diff": {
                                "after": {
                                    "path": "/home/zuul/ci_kpis",
                                    "state": "directory"
                                },
                                "before": {
                                    "path": "/home/zuul/ci_kpis",
                                    "state": "absent"
                                }
                            },
                            "gid": 1000,
                            "group": "zuul",
                            "invocation": {
                                "module_args": {
                                    "_diff_peek": null,
                                    "_original_basename": null,
                                    "access_time": null,
                                    "access_time_format": "%Y%m%d%H%M.%S",
                                    "attributes": null,
                                    "follow": true,
                                    "force": false,
                                    "group": null,
                                    "mode": null,
                                    "modification_time": null,
                                    "modification_time_format": "%Y%m%d%H%M.%S",
                                    "owner": null,
                                    "path": "/home/zuul/ci_kpis",
                                    "recurse": false,
                                    "selevel": null,
                                    "serole": null,
                                    "setype": null,
                                    "seuser": null,
                                    "src": null,
                                    "state": "directory",
                                    "unsafe_writes": false
                                }
                            },
                            "mode": "0775",
                            "owner": "zuul",
                            "path": "/home/zuul/ci_kpis",
                            "size": 4096,
                            "state": "directory",
                            "uid": 1000
                        }
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:46:30.214376Z",
                            "start": "2024-04-21T00:46:29.328460Z"
                        },
                        "id": "ce4df5fb-964c-12d2-2cce-000000000004",
                        "name": "Ensure ci_kpis directory exists"
                    }
                }
            ]
        }
    ],
    "stats": {
        "node": {
            "changed": 1,
            "failures": 0,
            "ignored": 0,
            "ok": 1,
            "rescued": 0,
            "skipped": 0,
            "unreachable": 0
        }
    },
    "trusted": true
},
{
    "branch": "master",
    "index": "16",
    "phase": "pre",
    "playbook": "cc-github.bmwgroup.net/swh/zuul-trusted-ddad/playbooks/ensure-ci-kpis-data-directory-exists.yaml",
    "plays": [
        {
            "play": {
                "duration": {
                    "end": "2024-04-21T00:46:32.537191Z",
                    "start": "2024-04-21T00:46:31.628000Z"
                },
                "id": "ce4df5fb-964c-50e7-4551-000000000002",
                "name": "Export duration summary of log files"
            },
            "tasks": [
                {
                    "hosts": {
                        "node": {
                            "action": "file",
                            "changed": true,
                            "diff": {
                                "after": {
                                    "path": "/home/zuul/ci_kpis_data",
                                    "state": "directory"
                                },
                                "before": {
                                    "path": "/home/zuul/ci_kpis_data",
                                    "state": "absent"
                                }
                            },
                            "gid": 1000,
                            "group": "zuul",
                            "invocation": {
                                "module_args": {
                                    "_diff_peek": null,
                                    "_original_basename": null,
                                    "access_time": null,
                                    "access_time_format": "%Y%m%d%H%M.%S",
                                    "attributes": null,
                                    "follow": true,
                                    "force": false,
                                    "group": null,
                                    "mode": null,
                                    "modification_time": null,
                                    "modification_time_format": "%Y%m%d%H%M.%S",
                                    "owner": null,
                                    "path": "/home/zuul/ci_kpis_data",
                                    "recurse": false,
                                    "selevel": null,
                                    "serole": null,
                                    "setype": null,
                                    "seuser": null,
                                    "src": null,
                                    "state": "directory",
                                    "unsafe_writes": false
                                }
                            },
                            "mode": "0775",
                            "owner": "zuul",
                            "path": "/home/zuul/ci_kpis_data",
                            "size": 4096,
                            "state": "directory",
                            "uid": 1000
                        }
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:46:32.537191Z",
                            "start": "2024-04-21T00:46:31.654720Z"
                        },
                        "id": "ce4df5fb-964c-50e7-4551-000000000004",
                        "name": "Ensure ci_kpis_data directory exists"
                    }
                }
            ]
        }
    ],
    "stats": {
        "node": {
            "changed": 1,
            "failures": 0,
            "ignored": 0,
            "ok": 1,
            "rescued": 0,
            "skipped": 0,
            "unreachable": 0
        }
    },
    "trusted": true
},
{
    "branch": "master",
    "index": "17",
    "phase": "pre",
    "playbook": "cc-github.bmwgroup.net/swh/ddad_ci_config/playbooks/helper/remove-cached-git-folder.yaml",
    "plays": [
        {
            "play": {
                "duration": {
                    "end": "2024-04-21T00:46:38.795915Z",
                    "start": "2024-04-21T00:46:34.153006Z"
                },
                "id": "ce4df5fb-964c-3074-9840-000000000002",
                "name": "all"
            },
            "tasks": [
                {
                    "hosts": {
                        "node": {
                            "action": "shell",
                            "changed": true,
                            "cmd": "set -eu\n\necho \"Removing cached git folder\"\n\nrm -rf /var/cache/git\n",
                            "delta": "0:00:03.119532",
                            "end": "2024-04-21 00:46:38.313884",
                            "invocation": {
                                "module_args": {
                                    "_raw_params": "set -eu\n\necho \"Removing cached git folder\"\n\nrm -rf /var/cache/git\n",
                                    "_uses_shell": true,
                                    "argv": null,
                                    "chdir": null,
                                    "creates": null,
                                    "executable": "/bin/bash",
                                    "removes": null,
                                    "stdin": null,
                                    "stdin_add_newline": true,
                                    "strip_empty_ends": true,
                                    "warn": false,
                                    "zuul_ansible_split_streams": false,
                                    "zuul_log_id": "ce4df5fb-964c-3074-9840-000000000004-1-node"
                                }
                            },
                            "msg": "",
                            "rc": 0,
                            "start": "2024-04-21 00:46:35.194352",
                            "stderr": "",
                            "stderr_lines": [],
                            "stdout": "Removing cached git folder",
                            "stdout_lines": [
                                "Removing cached git folder"
                            ],
                            "zuul_log_id": "ce4df5fb-964c-3074-9840-000000000004-1-node"
                        }
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:46:38.795915Z",
                            "start": "2024-04-21T00:46:34.285291Z"
                        },
                        "id": "ce4df5fb-964c-3074-9840-000000000004",
                        "name": "Remove cached git folder"
                    }
                }
            ]
        }
    ],
    "stats": {
        "node": {
            "changed": 1,
            "failures": 0,
            "ignored": 0,
            "ok": 1,
            "rescued": 0,
            "skipped": 0,
            "unreachable": 0
        }
    },
    "trusted": false
},
{
    "branch": "master",
    "index": "18",
    "phase": "pre",
    "playbook": "cc-github.bmwgroup.net/swh/zuul-trusted-ddad/playbooks/ensure-bazel-remote-cert.yaml",
    "plays": [
        {
            "play": {
                "duration": {
                    "end": "2024-04-21T00:46:42.671718Z",
                    "start": "2024-04-21T00:46:40.051104Z"
                },
                "id": "ce4df5fb-964c-0bc3-dba2-000000000002",
                "name": "Ensure CC remote cache authentication"
            },
            "tasks": [
                {
                    "hosts": {
                        "node": {
                            "action": "set_fact",
                            "ansible_facts": {
                                "cc_buildbarn_cert_path": "/etc/buildbarn/client.pem"
                            },
                            "changed": false
                        }
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:46:40.117674Z",
                            "start": "2024-04-21T00:46:40.071093Z"
                        },
                        "id": "ce4df5fb-964c-0bc3-dba2-000000000012",
                        "name": "Override cc_buildbarn_cert_path default with bazel_remote_cert_path"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "set_fact",
                            "changed": false,
                            "false_condition": "remote_execution_credential_path is defined and remote_execution_credential_path",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:46:40.162716Z",
                            "start": "2024-04-21T00:46:40.126538Z"
                        },
                        "id": "ce4df5fb-964c-0bc3-dba2-000000000013",
                        "name": "Override engflow_credentials_directory default with remote_execution_credential_path"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "set_fact",
                            "changed": false,
                            "false_condition": "bazel_use_engflow_remote_cache | default(false)",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:46:40.233386Z",
                            "start": "2024-04-21T00:46:40.175707Z"
                        },
                        "id": "ce4df5fb-964c-0bc3-dba2-000000000014",
                        "name": "Override engflow_credentials_directory default with bazel_remote_cert_path"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "include_tasks",
                            "changed": false,
                            "include": "linux.yaml",
                            "include_args": {}
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-0bc3-dba2-000000000006",
                        "name": "ensure-cc-buildbarn-cert",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_3/cc-github.bmwgroup.net/swh/zuul-trusted-ddad/roles/ensure-cc-buildbarn-cert"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:46:40.403225Z",
                            "start": "2024-04-21T00:46:40.261729Z"
                        },
                        "id": "ce4df5fb-964c-0bc3-dba2-000000000008",
                        "name": ""
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "file",
                            "changed": false,
                            "diff": {
                                "after": {
                                    "path": "/etc/buildbarn"
                                },
                                "before": {
                                    "path": "/etc/buildbarn"
                                }
                            },
                            "gid": 1000,
                            "group": "zuul",
                            "invocation": {
                                "module_args": {
                                    "_diff_peek": null,
                                    "_original_basename": null,
                                    "access_time": null,
                                    "access_time_format": "%Y%m%d%H%M.%S",
                                    "attributes": null,
                                    "follow": true,
                                    "force": false,
                                    "group": "1000",
                                    "mode": 448,
                                    "modification_time": null,
                                    "modification_time_format": "%Y%m%d%H%M.%S",
                                    "owner": "1000",
                                    "path": "/etc/buildbarn",
                                    "recurse": false,
                                    "selevel": null,
                                    "serole": null,
                                    "setype": null,
                                    "seuser": null,
                                    "src": null,
                                    "state": "directory",
                                    "unsafe_writes": false
                                }
                            },
                            "mode": "0700",
                            "owner": "zuul",
                            "path": "/etc/buildbarn",
                            "size": 4096,
                            "state": "directory",
                            "uid": 1000
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-0bc3-dba2-000000000006",
                        "name": "ensure-cc-buildbarn-cert",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_3/cc-github.bmwgroup.net/swh/zuul-trusted-ddad/roles/ensure-cc-buildbarn-cert"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:46:41.278599Z",
                            "start": "2024-04-21T00:46:40.487587Z"
                        },
                        "id": "ce4df5fb-964c-0bc3-dba2-000000000045",
                        "name": "Create CC buildbarn cert directory"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "copy",
                            "censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result",
                            "changed": false
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-0bc3-dba2-000000000006",
                        "name": "ensure-cc-buildbarn-cert",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_3/cc-github.bmwgroup.net/swh/zuul-trusted-ddad/roles/ensure-cc-buildbarn-cert"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:46:42.164476Z",
                            "start": "2024-04-21T00:46:41.289002Z"
                        },
                        "id": "ce4df5fb-964c-0bc3-dba2-000000000046",
                        "name": "Deploy CC buildbarn cert"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "include_tasks",
                            "changed": false,
                            "false_condition": "ansible_os_family == \"Windows\"",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-0bc3-dba2-000000000006",
                        "name": "ensure-cc-buildbarn-cert",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_3/cc-github.bmwgroup.net/swh/zuul-trusted-ddad/roles/ensure-cc-buildbarn-cert"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:46:42.279800Z",
                            "start": "2024-04-21T00:46:42.178469Z"
                        },
                        "id": "ce4df5fb-964c-0bc3-dba2-000000000009",
                        "name": ""
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "set_fact",
                            "changed": false,
                            "false_condition": "bazel_remote_cert_path is undefined",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-0bc3-dba2-000000000006",
                        "name": "ensure-cc-buildbarn-cert",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_3/cc-github.bmwgroup.net/swh/zuul-trusted-ddad/roles/ensure-cc-buildbarn-cert"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:46:42.368384Z",
                            "start": "2024-04-21T00:46:42.290083Z"
                        },
                        "id": "ce4df5fb-964c-0bc3-dba2-00000000000a",
                        "name": "Export cc_buildbarn_cert_path as bazel_remote_cert_path"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "include_tasks",
                            "changed": false,
                            "false_condition": "( engflow_credentials is defined ) and ( ( (bazel_enable_remote_cache | default(true)) and (bazel_use_engflow_remote_cache | default(false)) ) or ( remote_execution_credential_path is defined and remote_execution_credential_path ) )",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-0bc3-dba2-00000000000c",
                        "name": "ensure-engflow-credentials",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_3/cc-github.bmwgroup.net/swh/zuul-trusted-ddad/roles/ensure-engflow-credentials"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:46:42.453465Z",
                            "start": "2024-04-21T00:46:42.385804Z"
                        },
                        "id": "ce4df5fb-964c-0bc3-dba2-00000000000e",
                        "name": ""
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "include_tasks",
                            "changed": false,
                            "false_condition": "( engflow_credentials is defined ) and ( ( (bazel_enable_remote_cache | default(true)) and (bazel_use_engflow_remote_cache | default(false)) ) or ( remote_execution_credential_path is defined and remote_execution_credential_path ) )",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-0bc3-dba2-00000000000c",
                        "name": "ensure-engflow-credentials",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_3/cc-github.bmwgroup.net/swh/zuul-trusted-ddad/roles/ensure-engflow-credentials"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:46:42.566236Z",
                            "start": "2024-04-21T00:46:42.466585Z"
                        },
                        "id": "ce4df5fb-964c-0bc3-dba2-00000000000f",
                        "name": ""
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "set_fact",
                            "changed": false,
                            "false_condition": "( engflow_credentials is defined ) and ( ( (bazel_enable_remote_cache | default(true)) and (bazel_use_engflow_remote_cache | default(false)) ) or ( remote_execution_credential_path is defined and remote_execution_credential_path ) )",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-0bc3-dba2-00000000000c",
                        "name": "ensure-engflow-credentials",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_3/cc-github.bmwgroup.net/swh/zuul-trusted-ddad/roles/ensure-engflow-credentials"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:46:42.671718Z",
                            "start": "2024-04-21T00:46:42.582747Z"
                        },
                        "id": "ce4df5fb-964c-0bc3-dba2-000000000010",
                        "name": "Export variables for engflow key and crt"
                    }
                }
            ]
        }
    ],
    "stats": {
        "node": {
            "changed": 0,
            "failures": 0,
            "ignored": 0,
            "ok": 4,
            "rescued": 0,
            "skipped": 7,
            "unreachable": 0
        }
    },
    "trusted": true
},
{
    "branch": "master",
    "index": "19",
    "phase": "pre",
    "playbook": "cc-github.bmwgroup.net/swh/zuul-trusted-ddad/playbooks/print-free-disk-space.yaml",
    "plays": [
        {
            "play": {
                "duration": {
                    "end": "2024-04-21T00:46:45.147104Z",
                    "start": "2024-04-21T00:46:43.941965Z"
                },
                "id": "ce4df5fb-964c-bf14-d27c-000000000002",
                "name": "all"
            },
            "tasks": [
                {
                    "hosts": {
                        "node": {
                            "action": "shell",
                            "changed": true,
                            "cmd": "set -o nounset\nset -o errexit\nset -o pipefail\ndf --human-readable\ndf --inodes\n",
                            "delta": "0:00:00.012641",
                            "end": "2024-04-21 00:46:44.976407",
                            "invocation": {
                                "module_args": {
                                    "_raw_params": "set -o nounset\nset -o errexit\nset -o pipefail\ndf --human-readable\ndf --inodes\n",
                                    "_uses_shell": true,
                                    "argv": null,
                                    "chdir": null,
                                    "creates": null,
                                    "executable": "/bin/bash",
                                    "removes": null,
                                    "stdin": null,
                                    "stdin_add_newline": true,
                                    "strip_empty_ends": true,
                                    "warn": false,
                                    "zuul_ansible_split_streams": false,
                                    "zuul_log_id": "ce4df5fb-964c-bf14-d27c-000000000004-1-node"
                                }
                            },
                            "msg": "",
                            "rc": 0,
                            "start": "2024-04-21 00:46:44.963766",
                            "stderr": "",
                            "stderr_lines": [],
                            "stdout": "Filesystem      Size  Used Avail Use% Mounted on\ntmpfs           6.3G  2.5M  6.3G   1% /run\n/dev/vda1       300G   54G  233G  19% /\ntmpfs            32G     0   32G   0% /dev/shm\ntmpfs           5.0M     0  5.0M   0% /run/lock\ntmpfs           6.3G  4.0K  6.3G   1% /run/user/1000\nFilesystem       Inodes   IUsed    IFree IUse% Mounted on\ntmpfs           8230202     757  8229445    1% /run\n/dev/vda1      83804160 1119630 82684530    2% /\ntmpfs           8230202       1  8230201    1% /dev/shm\ntmpfs           8230202       3  8230199    1% /run/lock\ntmpfs           1646040      25  1646015    1% /run/user/1000",
                            "stdout_lines": [
                                "Filesystem      Size  Used Avail Use% Mounted on",
                                "tmpfs           6.3G  2.5M  6.3G   1% /run",
                                "/dev/vda1       300G   54G  233G  19% /",
                                "tmpfs            32G     0   32G   0% /dev/shm",
                                "tmpfs           5.0M     0  5.0M   0% /run/lock",
                                "tmpfs           6.3G  4.0K  6.3G   1% /run/user/1000",
                                "Filesystem       Inodes   IUsed    IFree IUse% Mounted on",
                                "tmpfs           8230202     757  8229445    1% /run",
                                "/dev/vda1      83804160 1119630 82684530    2% /",
                                "tmpfs           8230202       1  8230201    1% /dev/shm",
                                "tmpfs           8230202       3  8230199    1% /run/lock",
                                "tmpfs           1646040      25  1646015    1% /run/user/1000"
                            ],
                            "zuul_log_id": "ce4df5fb-964c-bf14-d27c-000000000004-1-node"
                        }
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:46:45.147104Z",
                            "start": "2024-04-21T00:46:44.008503Z"
                        },
                        "id": "ce4df5fb-964c-bf14-d27c-000000000004",
                        "name": "Print disk usage"
                    }
                }
            ]
        }
    ],
    "stats": {
        "node": {
            "changed": 1,
            "failures": 0,
            "ignored": 0,
            "ok": 1,
            "rescued": 0,
            "skipped": 0,
            "unreachable": 0
        }
    },
    "trusted": true
},
{
    "branch": "master",
    "index": "20",
    "phase": "pre",
    "playbook": "cc-github.bmwgroup.net/swh/zuul-trusted-ddad/playbooks/pre-add-credentials.yaml",
    "plays": [
        {
            "play": {
                "duration": {
                    "end": "2024-04-21T00:47:04.313232Z",
                    "start": "2024-04-21T00:46:46.470017Z"
                },
                "id": "ce4df5fb-964c-c459-cd8b-000000000003",
                "name": "all"
            },
            "tasks": [
                {
                    "hosts": {
                        "node": {
                            "action": "include_role",
                            "changed": false,
                            "include_args": {
                                "name": "artifactory-token"
                            }
                        }
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:46:46.585100Z",
                            "start": "2024-04-21T00:46:46.497098Z"
                        },
                        "id": "ce4df5fb-964c-c459-cd8b-000000000049",
                        "name": "Generate artifactory token"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "assert",
                            "changed": false,
                            "msg": "All assertions passed"
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-c459-cd8b-0000000000d1",
                        "name": "artifactory-token",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_1/cc-github.bmwgroup.net/codecraft/cilib/roles/artifactory-token"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:46:46.834693Z",
                            "start": "2024-04-21T00:46:46.625437Z"
                        },
                        "id": "ce4df5fb-964c-c459-cd8b-0000000000d3",
                        "name": "Ensure all mandatory variables are defined"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "include_tasks",
                            "changed": false,
                            "include": "linux.yaml",
                            "include_args": {}
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-c459-cd8b-0000000000d1",
                        "name": "artifactory-token",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_1/cc-github.bmwgroup.net/codecraft/cilib/roles/artifactory-token"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:46:47.012186Z",
                            "start": "2024-04-21T00:46:46.930021Z"
                        },
                        "id": "ce4df5fb-964c-c459-cd8b-0000000000d4",
                        "name": ""
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "tempfile",
                            "changed": true,
                            "gid": 1000,
                            "group": "zuul",
                            "invocation": {
                                "module_args": {
                                    "path": null,
                                    "prefix": "ansible.",
                                    "state": "file",
                                    "suffix": ""
                                }
                            },
                            "mode": "0600",
                            "owner": "zuul",
                            "path": "/tmp/ansible.h0xbj3or",
                            "size": 0,
                            "state": "file",
                            "uid": 1000
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-c459-cd8b-0000000000d1",
                        "name": "artifactory-token",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_1/cc-github.bmwgroup.net/codecraft/cilib/roles/artifactory-token"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:46:47.975765Z",
                            "start": "2024-04-21T00:46:47.054038Z"
                        },
                        "id": "ce4df5fb-964c-c459-cd8b-0000000000ec",
                        "name": "Create temporary file for tokens"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "shell",
                            "censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result",
                            "changed": true
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-c459-cd8b-0000000000d1",
                        "name": "artifactory-token",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_1/cc-github.bmwgroup.net/codecraft/cilib/roles/artifactory-token"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:46:49.109680Z",
                            "start": "2024-04-21T00:46:47.985475Z"
                        },
                        "id": "ce4df5fb-964c-c459-cd8b-0000000000ee",
                        "name": "Create artifactory tokens"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "slurp",
                            "censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result",
                            "changed": false
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-c459-cd8b-0000000000d1",
                        "name": "artifactory-token",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_1/cc-github.bmwgroup.net/codecraft/cilib/roles/artifactory-token"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:46:49.525173Z",
                            "start": "2024-04-21T00:46:49.123509Z"
                        },
                        "id": "ce4df5fb-964c-c459-cd8b-0000000000ef",
                        "name": "Get the tokens"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "set_fact",
                            "censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result",
                            "changed": false
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-c459-cd8b-0000000000d1",
                        "name": "artifactory-token",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_1/cc-github.bmwgroup.net/codecraft/cilib/roles/artifactory-token"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:46:49.665498Z",
                            "start": "2024-04-21T00:46:49.538841Z"
                        },
                        "id": "ce4df5fb-964c-c459-cd8b-0000000000f0",
                        "name": ""
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "include_tasks",
                            "censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result",
                            "changed": false
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-c459-cd8b-0000000000d1",
                        "name": "artifactory-token",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_1/cc-github.bmwgroup.net/codecraft/cilib/roles/artifactory-token"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:46:49.781553Z",
                            "start": "2024-04-21T00:46:49.679416Z"
                        },
                        "id": "ce4df5fb-964c-c459-cd8b-0000000000f1",
                        "name": ""
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "set_fact",
                            "censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result",
                            "changed": false
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-c459-cd8b-0000000000d1",
                        "name": "artifactory-token",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_1/cc-github.bmwgroup.net/codecraft/cilib/roles/artifactory-token"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:46:49.879750Z",
                            "start": "2024-04-21T00:46:49.806217Z"
                        },
                        "id": "ce4df5fb-964c-c459-cd8b-000000000119",
                        "name": ""
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "set_fact",
                            "censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result",
                            "changed": false
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-c459-cd8b-0000000000d1",
                        "name": "artifactory-token",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_1/cc-github.bmwgroup.net/codecraft/cilib/roles/artifactory-token"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:46:49.997560Z",
                            "start": "2024-04-21T00:46:49.897516Z"
                        },
                        "id": "ce4df5fb-964c-c459-cd8b-00000000011a",
                        "name": ""
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "file",
                            "censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result",
                            "changed": true
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-c459-cd8b-0000000000d1",
                        "name": "artifactory-token",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_1/cc-github.bmwgroup.net/codecraft/cilib/roles/artifactory-token"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:46:50.752536Z",
                            "start": "2024-04-21T00:46:50.007570Z"
                        },
                        "id": "ce4df5fb-964c-c459-cd8b-0000000000f2",
                        "name": ""
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "include_tasks",
                            "changed": false,
                            "false_condition": "ansible_os_family == \"Windows\"",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-c459-cd8b-0000000000d1",
                        "name": "artifactory-token",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_1/cc-github.bmwgroup.net/codecraft/cilib/roles/artifactory-token"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:46:50.845716Z",
                            "start": "2024-04-21T00:46:50.766157Z"
                        },
                        "id": "ce4df5fb-964c-c459-cd8b-0000000000d5",
                        "name": ""
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "set_fact",
                            "ansible_facts": {
                                "cilib_artifactory_url": "https://common.artifactory.cc.bmwgroup.net/artifactory",
                                "cilib_docker_registry": "common.artifactory.cc.bmwgroup.net",
                                "cilib_patterns": {
                                    "file_comments": {
                                        "ansiblelint": "^\\s*(?P<file_path>.*):(?P<start_line>\\d+): (?P<message>.*)$",
                                        "hadolint": "^(?P<file_path>.*):(?P<start_line>\\d+) (?P<message>.*)$",
                                        "labellint": "^(?P<file_path>.*):(?P<start_line>\\d+):(?P<message>.*)$",
                                        "oelint": "^(?P<file_path>.*):(?P<start_line>\\d+):(?P<log_level>.*?):(?P<message>.*)$",
                                        "pipelinelint": "^(?P<file_path>.*):(?P<start_line>\\d+):\\d+\\s(?P<log_level>\\S*)\\s(?P<rule_name>\\b(?!parser\\b)\\S*)\\s\\\"(?P<message>.*)\\\"$",
                                        "shellcheck": "^(?P<file_path>.*):(?P<start_line>\\d+):\\d+: (?P<message>.*)$",
                                        "yamllint": "^\\s*(?P<file_path>.*):(?P<start_line>\\d+):\\d+: \\[(?P<log_level>.*)\\] (?P<message>.*)$"
                                    }
                                },
                                "cilib_pypi_url": "https://common.artifactory.cc.bmwgroup.net/artifactory/api/pypi/codecraft-pypi-public/simple"
                            },
                            "changed": false
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-c459-cd8b-000000000010",
                        "name": "cilib-defaults",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_1/cc-github.bmwgroup.net/codecraft/cilib/roles/cilib-defaults"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:46:50.983128Z",
                            "start": "2024-04-21T00:46:50.891882Z"
                        },
                        "id": "ce4df5fb-964c-c459-cd8b-000000000012",
                        "name": "Set cilib defaults"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "assert",
                            "changed": false,
                            "msg": "All assertions passed"
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-c459-cd8b-00000000000c",
                        "name": "docker-login",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_1/cc-github.bmwgroup.net/codecraft/cilib/roles/docker-login"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:46:51.099133Z",
                            "start": "2024-04-21T00:46:51.007655Z"
                        },
                        "id": "ce4df5fb-964c-c459-cd8b-000000000014",
                        "name": "Ensure all mandatory variables are defined"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "shell",
                            "attempts": 1,
                            "changed": true,
                            "cmd": "echo \"${DOCKER_LOGIN_PASSWORD}\" | docker login  --username \"tu-cc-ci-adp-upload\"  --password-stdin  \"ddad.artifactory.cc.bmwgroup.net\"\n",
                            "delta": "0:00:00.208025",
                            "end": "2024-04-21 00:46:51.761962",
                            "invocation": {
                                "module_args": {
                                    "_raw_params": "echo \"${DOCKER_LOGIN_PASSWORD}\" | docker login  --username \"tu-cc-ci-adp-upload\"  --password-stdin  \"ddad.artifactory.cc.bmwgroup.net\"\n",
                                    "_uses_shell": true,
                                    "argv": null,
                                    "chdir": null,
                                    "creates": null,
                                    "executable": null,
                                    "removes": null,
                                    "stdin": null,
                                    "stdin_add_newline": true,
                                    "strip_empty_ends": true,
                                    "warn": false,
                                    "zuul_ansible_split_streams": false,
                                    "zuul_log_id": "ce4df5fb-964c-c459-cd8b-000000000015-1-node"
                                }
                            },
                            "msg": "",
                            "rc": 0,
                            "start": "2024-04-21 00:46:51.553937",
                            "stderr": "",
                            "stderr_lines": [],
                            "stdout": "WARNING! Your password will be stored unencrypted in /home/zuul/.docker/config.json.\nConfigure a credential helper to remove this warning. See\nhttps://docs.docker.com/engine/reference/commandline/login/#credentials-store\n\nLogin Succeeded",
                            "stdout_lines": [
                                "WARNING! Your password will be stored unencrypted in /home/zuul/.docker/config.json.",
                                "Configure a credential helper to remove this warning. See",
                                "https://docs.docker.com/engine/reference/commandline/login/#credentials-store",
                                "",
                                "Login Succeeded"
                            ],
                            "zuul_log_id": "ce4df5fb-964c-c459-cd8b-000000000015-1-node"
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-c459-cd8b-00000000000c",
                        "name": "docker-login",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_1/cc-github.bmwgroup.net/codecraft/cilib/roles/docker-login"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:46:52.181093Z",
                            "start": "2024-04-21T00:46:51.152811Z"
                        },
                        "id": "ce4df5fb-964c-c459-cd8b-000000000015",
                        "name": "Login to Docker registry"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "include_tasks",
                            "changed": false,
                            "include": "linux.yaml",
                            "include_args": {}
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-c459-cd8b-000000000017",
                        "name": "ensure-netrc",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_1/cc-github.bmwgroup.net/codecraft/cilib/roles/ensure-netrc"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:46:52.288491Z",
                            "start": "2024-04-21T00:46:52.207395Z"
                        },
                        "id": "ce4df5fb-964c-c459-cd8b-000000000019",
                        "name": ""
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "lineinfile",
                            "censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result",
                            "changed": true
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-c459-cd8b-000000000017",
                        "name": "ensure-netrc",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_1/cc-github.bmwgroup.net/codecraft/cilib/roles/ensure-netrc"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:46:53.822696Z",
                            "start": "2024-04-21T00:46:52.313853Z"
                        },
                        "id": "ce4df5fb-964c-c459-cd8b-00000000015d",
                        "name": "Ensure netrc entries"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "fail",
                            "changed": false,
                            "false_condition": "command_result.failed is defined",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-c459-cd8b-000000000017",
                        "name": "ensure-netrc",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_1/cc-github.bmwgroup.net/codecraft/cilib/roles/ensure-netrc"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:46:53.916875Z",
                            "start": "2024-04-21T00:46:53.834746Z"
                        },
                        "id": "ce4df5fb-964c-c459-cd8b-00000000015e",
                        "name": "fail if Ensure netrc entries not succeed"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "include_tasks",
                            "changed": false,
                            "false_condition": "ansible_os_family == \"Windows\"",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-c459-cd8b-000000000017",
                        "name": "ensure-netrc",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_1/cc-github.bmwgroup.net/codecraft/cilib/roles/ensure-netrc"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:46:53.995280Z",
                            "start": "2024-04-21T00:46:53.936137Z"
                        },
                        "id": "ce4df5fb-964c-c459-cd8b-00000000001a",
                        "name": ""
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "set_fact",
                            "ansible_facts": {
                                "platform": "linux"
                            },
                            "changed": false
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-c459-cd8b-00000000001c",
                        "name": "ensure-private-key",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_1/cc-github.bmwgroup.net/codecraft/cilib/roles/ensure-private-key"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:46:54.098456Z",
                            "start": "2024-04-21T00:46:54.017211Z"
                        },
                        "id": "ce4df5fb-964c-c459-cd8b-00000000001e",
                        "name": ""
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "set_fact",
                            "changed": false,
                            "false_condition": "ansible_os_family == \"Windows\"",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-c459-cd8b-00000000001c",
                        "name": "ensure-private-key",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_1/cc-github.bmwgroup.net/codecraft/cilib/roles/ensure-private-key"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:46:54.199915Z",
                            "start": "2024-04-21T00:46:54.107719Z"
                        },
                        "id": "ce4df5fb-964c-c459-cd8b-00000000001f",
                        "name": ""
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "include_tasks",
                            "changed": false,
                            "include": "linux/main.yaml",
                            "include_args": {}
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-c459-cd8b-00000000001c",
                        "name": "ensure-private-key",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_1/cc-github.bmwgroup.net/codecraft/cilib/roles/ensure-private-key"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:46:54.338095Z",
                            "start": "2024-04-21T00:46:54.226767Z"
                        },
                        "id": "ce4df5fb-964c-c459-cd8b-000000000020",
                        "name": ""
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "file",
                            "changed": false,
                            "diff": {
                                "after": {
                                    "path": "/home/zuul/.ssh"
                                },
                                "before": {
                                    "path": "/home/zuul/.ssh"
                                }
                            },
                            "gid": 1000,
                            "group": "zuul",
                            "invocation": {
                                "module_args": {
                                    "_diff_peek": null,
                                    "_original_basename": null,
                                    "access_time": null,
                                    "access_time_format": "%Y%m%d%H%M.%S",
                                    "attributes": null,
                                    "follow": true,
                                    "force": false,
                                    "group": "1000",
                                    "mode": 448,
                                    "modification_time": null,
                                    "modification_time_format": "%Y%m%d%H%M.%S",
                                    "owner": "1000",
                                    "path": "/home/zuul/.ssh",
                                    "recurse": false,
                                    "selevel": null,
                                    "serole": null,
                                    "setype": null,
                                    "seuser": null,
                                    "src": null,
                                    "state": "directory",
                                    "unsafe_writes": false
                                }
                            },
                            "mode": "0700",
                            "owner": "zuul",
                            "path": "/home/zuul/.ssh",
                            "size": 4096,
                            "state": "directory",
                            "uid": 1000
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-c459-cd8b-00000000001c",
                        "name": "ensure-private-key",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_1/cc-github.bmwgroup.net/codecraft/cilib/roles/ensure-private-key"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:46:54.809873Z",
                            "start": "2024-04-21T00:46:54.376902Z"
                        },
                        "id": "ce4df5fb-964c-c459-cd8b-000000000182",
                        "name": "Ensure the .ssh directory is present"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "include_tasks",
                            "censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result",
                            "changed": false
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-c459-cd8b-00000000001c",
                        "name": "ensure-private-key",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_1/cc-github.bmwgroup.net/codecraft/cilib/roles/ensure-private-key"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:46:54.935895Z",
                            "start": "2024-04-21T00:46:54.826624Z"
                        },
                        "id": "ce4df5fb-964c-c459-cd8b-000000000021",
                        "name": ""
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "set_fact",
                            "ansible_facts": {
                                "key_sha": "e8b67d26231ae2ac23fe87fc5f32bcd84c97d5ba"
                            },
                            "changed": false
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-c459-cd8b-00000000001c",
                        "name": "ensure-private-key",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_1/cc-github.bmwgroup.net/codecraft/cilib/roles/ensure-private-key"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:46:55.065186Z",
                            "start": "2024-04-21T00:46:54.977355Z"
                        },
                        "id": "ce4df5fb-964c-c459-cd8b-000000000199",
                        "name": "Calculate SHA1 for private key"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "set_fact",
                            "ansible_facts": {
                                "key_file_path": "~/.ssh/id_rsa_e8b67d26231ae2ac23fe87fc5f32bcd84c97d5ba"
                            },
                            "changed": false
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-c459-cd8b-00000000001c",
                        "name": "ensure-private-key",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_1/cc-github.bmwgroup.net/codecraft/cilib/roles/ensure-private-key"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:46:55.154515Z",
                            "start": "2024-04-21T00:46:55.077339Z"
                        },
                        "id": "ce4df5fb-964c-c459-cd8b-00000000019a",
                        "name": "Define the private key file path"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "copy",
                            "changed": false,
                            "checksum": "e8b67d26231ae2ac23fe87fc5f32bcd84c97d5ba",
                            "dest": "/home/zuul/.ssh/id_rsa_e8b67d26231ae2ac23fe87fc5f32bcd84c97d5ba",
                            "diff": {
                                "after": {
                                    "path": "/home/zuul/.ssh/id_rsa_e8b67d26231ae2ac23fe87fc5f32bcd84c97d5ba"
                                },
                                "before": {
                                    "path": "/home/zuul/.ssh/id_rsa_e8b67d26231ae2ac23fe87fc5f32bcd84c97d5ba"
                                }
                            },
                            "gid": 1000,
                            "group": "zuul",
                            "invocation": {
                                "module_args": {
                                    "_diff_peek": null,
                                    "_original_basename": "tmpob38rjhe",
                                    "access_time": null,
                                    "access_time_format": "%Y%m%d%H%M.%S",
                                    "attributes": null,
                                    "dest": "/home/zuul/.ssh/id_rsa_e8b67d26231ae2ac23fe87fc5f32bcd84c97d5ba",
                                    "follow": true,
                                    "force": false,
                                    "group": "1000",
                                    "mode": 384,
                                    "modification_time": null,
                                    "modification_time_format": "%Y%m%d%H%M.%S",
                                    "owner": "1000",
                                    "path": "/home/zuul/.ssh/id_rsa_e8b67d26231ae2ac23fe87fc5f32bcd84c97d5ba",
                                    "recurse": false,
                                    "selevel": null,
                                    "serole": null,
                                    "setype": null,
                                    "seuser": null,
                                    "src": null,
                                    "state": "file",
                                    "unsafe_writes": false
                                }
                            },
                            "mode": "0600",
                            "owner": "zuul",
                            "path": "/home/zuul/.ssh/id_rsa_e8b67d26231ae2ac23fe87fc5f32bcd84c97d5ba",
                            "size": 3246,
                            "state": "file",
                            "uid": 1000
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-c459-cd8b-00000000001c",
                        "name": "ensure-private-key",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_1/cc-github.bmwgroup.net/codecraft/cilib/roles/ensure-private-key"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:46:56.057896Z",
                            "start": "2024-04-21T00:46:55.165757Z"
                        },
                        "id": "ce4df5fb-964c-c459-cd8b-00000000019b",
                        "name": "Write private key to file"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "lineinfile",
                            "backup": "",
                            "changed": false,
                            "diff": [
                                {
                                    "after": "",
                                    "after_header": "/home/zuul/.ssh/config (content)",
                                    "before": "",
                                    "before_header": "/home/zuul/.ssh/config (content)"
                                },
                                {
                                    "after_header": "/home/zuul/.ssh/config (file attributes)",
                                    "before_header": "/home/zuul/.ssh/config (file attributes)"
                                }
                            ],
                            "invocation": {
                                "module_args": {
                                    "attributes": null,
                                    "backrefs": false,
                                    "backup": false,
                                    "create": true,
                                    "firstmatch": false,
                                    "group": "1000",
                                    "insertafter": null,
                                    "insertbefore": "BOF",
                                    "line": "IdentityFile ~/.ssh/id_rsa_e8b67d26231ae2ac23fe87fc5f32bcd84c97d5ba",
                                    "mode": 384,
                                    "owner": "1000",
                                    "path": "/home/zuul/.ssh/config",
                                    "regexp": null,
                                    "search_string": null,
                                    "selevel": null,
                                    "serole": null,
                                    "setype": null,
                                    "seuser": null,
                                    "state": "present",
                                    "unsafe_writes": false,
                                    "validate": null
                                }
                            },
                            "msg": ""
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-c459-cd8b-00000000001c",
                        "name": "ensure-private-key",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_1/cc-github.bmwgroup.net/codecraft/cilib/roles/ensure-private-key"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:46:56.433199Z",
                            "start": "2024-04-21T00:46:56.066294Z"
                        },
                        "id": "ce4df5fb-964c-c459-cd8b-00000000019c",
                        "name": "Add the private key file to the ssh configuration"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "include_tasks",
                            "censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result",
                            "changed": false,
                            "skipped": true
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-c459-cd8b-00000000001c",
                        "name": "ensure-private-key",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_1/cc-github.bmwgroup.net/codecraft/cilib/roles/ensure-private-key"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:46:56.519204Z",
                            "start": "2024-04-21T00:46:56.441560Z"
                        },
                        "id": "ce4df5fb-964c-c459-cd8b-000000000022",
                        "name": ""
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "set_fact",
                            "ansible_facts": {
                                "platform": "linux"
                            },
                            "changed": false
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-c459-cd8b-000000000024",
                        "name": "ensure-private-key",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_1/cc-github.bmwgroup.net/codecraft/cilib/roles/ensure-private-key"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:46:56.619462Z",
                            "start": "2024-04-21T00:46:56.536461Z"
                        },
                        "id": "ce4df5fb-964c-c459-cd8b-000000000026",
                        "name": ""
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "set_fact",
                            "changed": false,
                            "false_condition": "ansible_os_family == \"Windows\"",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-c459-cd8b-000000000024",
                        "name": "ensure-private-key",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_1/cc-github.bmwgroup.net/codecraft/cilib/roles/ensure-private-key"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:46:56.714582Z",
                            "start": "2024-04-21T00:46:56.633661Z"
                        },
                        "id": "ce4df5fb-964c-c459-cd8b-000000000027",
                        "name": ""
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "include_tasks",
                            "changed": false,
                            "include": "linux/main.yaml",
                            "include_args": {}
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-c459-cd8b-000000000024",
                        "name": "ensure-private-key",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_1/cc-github.bmwgroup.net/codecraft/cilib/roles/ensure-private-key"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:46:56.814563Z",
                            "start": "2024-04-21T00:46:56.728365Z"
                        },
                        "id": "ce4df5fb-964c-c459-cd8b-000000000028",
                        "name": ""
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "file",
                            "changed": false,
                            "diff": {
                                "after": {
                                    "path": "/home/zuul/.ssh"
                                },
                                "before": {
                                    "path": "/home/zuul/.ssh"
                                }
                            },
                            "gid": 1000,
                            "group": "zuul",
                            "invocation": {
                                "module_args": {
                                    "_diff_peek": null,
                                    "_original_basename": null,
                                    "access_time": null,
                                    "access_time_format": "%Y%m%d%H%M.%S",
                                    "attributes": null,
                                    "follow": true,
                                    "force": false,
                                    "group": "1000",
                                    "mode": 448,
                                    "modification_time": null,
                                    "modification_time_format": "%Y%m%d%H%M.%S",
                                    "owner": "1000",
                                    "path": "/home/zuul/.ssh",
                                    "recurse": false,
                                    "selevel": null,
                                    "serole": null,
                                    "setype": null,
                                    "seuser": null,
                                    "src": null,
                                    "state": "directory",
                                    "unsafe_writes": false
                                }
                            },
                            "mode": "0700",
                            "owner": "zuul",
                            "path": "/home/zuul/.ssh",
                            "size": 4096,
                            "state": "directory",
                            "uid": 1000
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-c459-cd8b-000000000024",
                        "name": "ensure-private-key",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_1/cc-github.bmwgroup.net/codecraft/cilib/roles/ensure-private-key"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:46:57.181732Z",
                            "start": "2024-04-21T00:46:56.833850Z"
                        },
                        "id": "ce4df5fb-964c-c459-cd8b-0000000001cd",
                        "name": "Ensure the .ssh directory is present"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "include_tasks",
                            "censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result",
                            "changed": false
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-c459-cd8b-000000000024",
                        "name": "ensure-private-key",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_1/cc-github.bmwgroup.net/codecraft/cilib/roles/ensure-private-key"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:46:57.296364Z",
                            "start": "2024-04-21T00:46:57.193846Z"
                        },
                        "id": "ce4df5fb-964c-c459-cd8b-000000000029",
                        "name": ""
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "set_fact",
                            "ansible_facts": {
                                "key_sha": "e30432c274a4af7006c145fa15bacb098b8ab268"
                            },
                            "changed": false
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-c459-cd8b-000000000024",
                        "name": "ensure-private-key",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_1/cc-github.bmwgroup.net/codecraft/cilib/roles/ensure-private-key"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:46:57.403552Z",
                            "start": "2024-04-21T00:46:57.323727Z"
                        },
                        "id": "ce4df5fb-964c-c459-cd8b-0000000001e4",
                        "name": "Calculate SHA1 for private key"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "set_fact",
                            "ansible_facts": {
                                "key_file_path": "~/.ssh/id_rsa_e30432c274a4af7006c145fa15bacb098b8ab268"
                            },
                            "changed": false
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-c459-cd8b-000000000024",
                        "name": "ensure-private-key",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_1/cc-github.bmwgroup.net/codecraft/cilib/roles/ensure-private-key"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:46:57.493683Z",
                            "start": "2024-04-21T00:46:57.415489Z"
                        },
                        "id": "ce4df5fb-964c-c459-cd8b-0000000001e5",
                        "name": "Define the private key file path"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "copy",
                            "changed": false,
                            "checksum": "e30432c274a4af7006c145fa15bacb098b8ab268",
                            "dest": "/home/zuul/.ssh/id_rsa_e30432c274a4af7006c145fa15bacb098b8ab268",
                            "diff": {
                                "after": {
                                    "path": "/home/zuul/.ssh/id_rsa_e30432c274a4af7006c145fa15bacb098b8ab268"
                                },
                                "before": {
                                    "path": "/home/zuul/.ssh/id_rsa_e30432c274a4af7006c145fa15bacb098b8ab268"
                                }
                            },
                            "gid": 1000,
                            "group": "zuul",
                            "invocation": {
                                "module_args": {
                                    "_diff_peek": null,
                                    "_original_basename": "tmp69m5oni3",
                                    "access_time": null,
                                    "access_time_format": "%Y%m%d%H%M.%S",
                                    "attributes": null,
                                    "dest": "/home/zuul/.ssh/id_rsa_e30432c274a4af7006c145fa15bacb098b8ab268",
                                    "follow": true,
                                    "force": false,
                                    "group": "1000",
                                    "mode": 384,
                                    "modification_time": null,
                                    "modification_time_format": "%Y%m%d%H%M.%S",
                                    "owner": "1000",
                                    "path": "/home/zuul/.ssh/id_rsa_e30432c274a4af7006c145fa15bacb098b8ab268",
                                    "recurse": false,
                                    "selevel": null,
                                    "serole": null,
                                    "setype": null,
                                    "seuser": null,
                                    "src": null,
                                    "state": "file",
                                    "unsafe_writes": false
                                }
                            },
                            "mode": "0600",
                            "owner": "zuul",
                            "path": "/home/zuul/.ssh/id_rsa_e30432c274a4af7006c145fa15bacb098b8ab268",
                            "size": 3242,
                            "state": "file",
                            "uid": 1000
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-c459-cd8b-000000000024",
                        "name": "ensure-private-key",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_1/cc-github.bmwgroup.net/codecraft/cilib/roles/ensure-private-key"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:46:58.329646Z",
                            "start": "2024-04-21T00:46:57.502592Z"
                        },
                        "id": "ce4df5fb-964c-c459-cd8b-0000000001e6",
                        "name": "Write private key to file"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "lineinfile",
                            "backup": "",
                            "changed": false,
                            "diff": [
                                {
                                    "after": "",
                                    "after_header": "/home/zuul/.ssh/config (content)",
                                    "before": "",
                                    "before_header": "/home/zuul/.ssh/config (content)"
                                },
                                {
                                    "after_header": "/home/zuul/.ssh/config (file attributes)",
                                    "before_header": "/home/zuul/.ssh/config (file attributes)"
                                }
                            ],
                            "invocation": {
                                "module_args": {
                                    "attributes": null,
                                    "backrefs": false,
                                    "backup": false,
                                    "create": true,
                                    "firstmatch": false,
                                    "group": "1000",
                                    "insertafter": null,
                                    "insertbefore": "BOF",
                                    "line": "IdentityFile ~/.ssh/id_rsa_e30432c274a4af7006c145fa15bacb098b8ab268",
                                    "mode": 384,
                                    "owner": "1000",
                                    "path": "/home/zuul/.ssh/config",
                                    "regexp": null,
                                    "search_string": null,
                                    "selevel": null,
                                    "serole": null,
                                    "setype": null,
                                    "seuser": null,
                                    "state": "present",
                                    "unsafe_writes": false,
                                    "validate": null
                                }
                            },
                            "msg": ""
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-c459-cd8b-000000000024",
                        "name": "ensure-private-key",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_1/cc-github.bmwgroup.net/codecraft/cilib/roles/ensure-private-key"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:46:58.816048Z",
                            "start": "2024-04-21T00:46:58.451456Z"
                        },
                        "id": "ce4df5fb-964c-c459-cd8b-0000000001e7",
                        "name": "Add the private key file to the ssh configuration"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "include_tasks",
                            "censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result",
                            "changed": false,
                            "skipped": true
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-c459-cd8b-000000000024",
                        "name": "ensure-private-key",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_1/cc-github.bmwgroup.net/codecraft/cilib/roles/ensure-private-key"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:46:58.933155Z",
                            "start": "2024-04-21T00:46:58.830571Z"
                        },
                        "id": "ce4df5fb-964c-c459-cd8b-00000000002a",
                        "name": ""
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "include_tasks",
                            "changed": false,
                            "include": "linux.yaml",
                            "include_args": {}
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-c459-cd8b-00000000002c",
                        "name": "ensure-known-hosts",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_1/cc-github.bmwgroup.net/codecraft/cilib/roles/ensure-known-hosts"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:46:59.037667Z",
                            "start": "2024-04-21T00:46:58.961973Z"
                        },
                        "id": "ce4df5fb-964c-c459-cd8b-00000000002e",
                        "name": ""
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "file",
                            "changed": false,
                            "diff": {
                                "after": {
                                    "path": "/home/zuul/.ssh"
                                },
                                "before": {
                                    "path": "/home/zuul/.ssh"
                                }
                            },
                            "gid": 1000,
                            "group": "zuul",
                            "invocation": {
                                "module_args": {
                                    "_diff_peek": null,
                                    "_original_basename": null,
                                    "access_time": null,
                                    "access_time_format": "%Y%m%d%H%M.%S",
                                    "attributes": null,
                                    "follow": true,
                                    "force": false,
                                    "group": "1000",
                                    "mode": 448,
                                    "modification_time": null,
                                    "modification_time_format": "%Y%m%d%H%M.%S",
                                    "owner": "1000",
                                    "path": "/home/zuul/.ssh",
                                    "recurse": false,
                                    "selevel": null,
                                    "serole": null,
                                    "setype": null,
                                    "seuser": null,
                                    "src": null,
                                    "state": "directory",
                                    "unsafe_writes": false
                                }
                            },
                            "mode": "0700",
                            "owner": "zuul",
                            "path": "/home/zuul/.ssh",
                            "size": 4096,
                            "state": "directory",
                            "uid": 1000
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-c459-cd8b-00000000002c",
                        "name": "ensure-known-hosts",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_1/cc-github.bmwgroup.net/codecraft/cilib/roles/ensure-known-hosts"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:46:59.391016Z",
                            "start": "2024-04-21T00:46:59.087908Z"
                        },
                        "id": "ce4df5fb-964c-c459-cd8b-000000000212",
                        "name": "Ensure the known_hosts directory is present"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "known_hosts",
                            "changed": false,
                            "msg": "All items completed",
                            "results": [
                                {
                                    "ansible_loop_var": "item",
                                    "changed": false,
                                    "diff": {
                                        "after": "cc-github.bmwgroup.net ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBCOiBcTK5jsKgzWZKreE9Oz2alnNuMH+EjxV61P+ilJGeZ/liCBWbw4lxMXfECisemjh1PRIH8kDWMpUCnR/QLY=\nxpad-ci-dev.sign.extern.cc.bmwgroup.net ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBG1LwKnyuWY9mc0j2a+NLseH+io5tEYZGbdXONqMl2x2m3ObHjNrB9ugaPAnivYQQCEQD1+3oNC7lQRDP5hwUiA=\nxpad-ci-prod.sign.extern.cc.bmwgroup.net ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBAhs6Kotpb9A41YyjUBG51EKuZC6sTMXTcf3Zw0D6cGhdVprbdOcHE4WF/5cgHzo9WeWyvqCX5WFE6aLEEdo5Pw=\n|1|FJz9OYQQGFwSU4CIY+WEE9AI2Xw=|8Lo0kJiUDD9GRkaQLMmj0nQBWZs= ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCrHtFsVV0V5//DICJy5+3DGRuTCh4DhATaXyVaM4SEw50xizaAECs9vqb0SqSrHw5yWUP2GY2QTtwFL1t0CxWRqjtteUo9THZjxzvCYu1zM/vn9bC/+uzvIKfzXbk8FUEy1Ut7aGhtTYWCpcNkfGbP3HSYoj51R9UZ/2PVz9S9DFq+UtNTXEOdrrF6N3LLKtvcc6H6DPLXiDkrrwOi2sqkAznbg7SOADn71hcI0E9RhbgS57qlcSno6j8OOFlxYUdBhb1HjVS9obCkUUvmUvaqSl19uKtlideNGZjENishj+pKQiRevdknXdlT6YKLY0fqSEfK40Dygeu+8SKa+FV3\n|1|+vcqwCVem8EdeWhsmqn/dIuaajU=|1bbo57jlMWxhRtzI5cWSX+9Y/lw= ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAINg9g/bzeHeozOCvYWatmUFpxL3vCannONOaqRqCiGsD\n",
                                        "after_header": "/home/zuul/.ssh/known_hosts",
                                        "before": "cc-github.bmwgroup.net ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBCOiBcTK5jsKgzWZKreE9Oz2alnNuMH+EjxV61P+ilJGeZ/liCBWbw4lxMXfECisemjh1PRIH8kDWMpUCnR/QLY=\nxpad-ci-dev.sign.extern.cc.bmwgroup.net ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBG1LwKnyuWY9mc0j2a+NLseH+io5tEYZGbdXONqMl2x2m3ObHjNrB9ugaPAnivYQQCEQD1+3oNC7lQRDP5hwUiA=\nxpad-ci-prod.sign.extern.cc.bmwgroup.net ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBAhs6Kotpb9A41YyjUBG51EKuZC6sTMXTcf3Zw0D6cGhdVprbdOcHE4WF/5cgHzo9WeWyvqCX5WFE6aLEEdo5Pw=\n|1|FJz9OYQQGFwSU4CIY+WEE9AI2Xw=|8Lo0kJiUDD9GRkaQLMmj0nQBWZs= ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCrHtFsVV0V5//DICJy5+3DGRuTCh4DhATaXyVaM4SEw50xizaAECs9vqb0SqSrHw5yWUP2GY2QTtwFL1t0CxWRqjtteUo9THZjxzvCYu1zM/vn9bC/+uzvIKfzXbk8FUEy1Ut7aGhtTYWCpcNkfGbP3HSYoj51R9UZ/2PVz9S9DFq+UtNTXEOdrrF6N3LLKtvcc6H6DPLXiDkrrwOi2sqkAznbg7SOADn71hcI0E9RhbgS57qlcSno6j8OOFlxYUdBhb1HjVS9obCkUUvmUvaqSl19uKtlideNGZjENishj+pKQiRevdknXdlT6YKLY0fqSEfK40Dygeu+8SKa+FV3\n|1|+vcqwCVem8EdeWhsmqn/dIuaajU=|1bbo57jlMWxhRtzI5cWSX+9Y/lw= ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAINg9g/bzeHeozOCvYWatmUFpxL3vCannONOaqRqCiGsD\n",
                                        "before_header": "/home/zuul/.ssh/known_hosts"
                                    },
                                    "failed": false,
                                    "gid": 1000,
                                    "group": "zuul",
                                    "hash_host": false,
                                    "invocation": {
                                        "module_args": {
                                            "diff": {
                                                "after": "cc-github.bmwgroup.net ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBCOiBcTK5jsKgzWZKreE9Oz2alnNuMH+EjxV61P+ilJGeZ/liCBWbw4lxMXfECisemjh1PRIH8kDWMpUCnR/QLY=\nxpad-ci-dev.sign.extern.cc.bmwgroup.net ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBG1LwKnyuWY9mc0j2a+NLseH+io5tEYZGbdXONqMl2x2m3ObHjNrB9ugaPAnivYQQCEQD1+3oNC7lQRDP5hwUiA=\nxpad-ci-prod.sign.extern.cc.bmwgroup.net ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBAhs6Kotpb9A41YyjUBG51EKuZC6sTMXTcf3Zw0D6cGhdVprbdOcHE4WF/5cgHzo9WeWyvqCX5WFE6aLEEdo5Pw=\n|1|FJz9OYQQGFwSU4CIY+WEE9AI2Xw=|8Lo0kJiUDD9GRkaQLMmj0nQBWZs= ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCrHtFsVV0V5//DICJy5+3DGRuTCh4DhATaXyVaM4SEw50xizaAECs9vqb0SqSrHw5yWUP2GY2QTtwFL1t0CxWRqjtteUo9THZjxzvCYu1zM/vn9bC/+uzvIKfzXbk8FUEy1Ut7aGhtTYWCpcNkfGbP3HSYoj51R9UZ/2PVz9S9DFq+UtNTXEOdrrF6N3LLKtvcc6H6DPLXiDkrrwOi2sqkAznbg7SOADn71hcI0E9RhbgS57qlcSno6j8OOFlxYUdBhb1HjVS9obCkUUvmUvaqSl19uKtlideNGZjENishj+pKQiRevdknXdlT6YKLY0fqSEfK40Dygeu+8SKa+FV3\n|1|+vcqwCVem8EdeWhsmqn/dIuaajU=|1bbo57jlMWxhRtzI5cWSX+9Y/lw= ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAINg9g/bzeHeozOCvYWatmUFpxL3vCannONOaqRqCiGsD\n",
                                                "after_header": "/home/zuul/.ssh/known_hosts",
                                                "before": "cc-github.bmwgroup.net ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBCOiBcTK5jsKgzWZKreE9Oz2alnNuMH+EjxV61P+ilJGeZ/liCBWbw4lxMXfECisemjh1PRIH8kDWMpUCnR/QLY=\nxpad-ci-dev.sign.extern.cc.bmwgroup.net ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBG1LwKnyuWY9mc0j2a+NLseH+io5tEYZGbdXONqMl2x2m3ObHjNrB9ugaPAnivYQQCEQD1+3oNC7lQRDP5hwUiA=\nxpad-ci-prod.sign.extern.cc.bmwgroup.net ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBAhs6Kotpb9A41YyjUBG51EKuZC6sTMXTcf3Zw0D6cGhdVprbdOcHE4WF/5cgHzo9WeWyvqCX5WFE6aLEEdo5Pw=\n|1|FJz9OYQQGFwSU4CIY+WEE9AI2Xw=|8Lo0kJiUDD9GRkaQLMmj0nQBWZs= ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCrHtFsVV0V5//DICJy5+3DGRuTCh4DhATaXyVaM4SEw50xizaAECs9vqb0SqSrHw5yWUP2GY2QTtwFL1t0CxWRqjtteUo9THZjxzvCYu1zM/vn9bC/+uzvIKfzXbk8FUEy1Ut7aGhtTYWCpcNkfGbP3HSYoj51R9UZ/2PVz9S9DFq+UtNTXEOdrrF6N3LLKtvcc6H6DPLXiDkrrwOi2sqkAznbg7SOADn71hcI0E9RhbgS57qlcSno6j8OOFlxYUdBhb1HjVS9obCkUUvmUvaqSl19uKtlideNGZjENishj+pKQiRevdknXdlT6YKLY0fqSEfK40Dygeu+8SKa+FV3\n|1|+vcqwCVem8EdeWhsmqn/dIuaajU=|1bbo57jlMWxhRtzI5cWSX+9Y/lw= ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAINg9g/bzeHeozOCvYWatmUFpxL3vCannONOaqRqCiGsD\n",
                                                "before_header": "/home/zuul/.ssh/known_hosts"
                                            },
                                            "hash_host": false,
                                            "key": "cc-github.bmwgroup.net ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBCOiBcTK5jsKgzWZKreE9Oz2alnNuMH+EjxV61P+ilJGeZ/liCBWbw4lxMXfECisemjh1PRIH8kDWMpUCnR/QLY=",
                                            "name": "cc-github.bmwgroup.net",
                                            "path": "/home/zuul/.ssh/known_hosts",
                                            "state": "present"
                                        }
                                    },
                                    "item": "cc-github.bmwgroup.net",
                                    "key": "cc-github.bmwgroup.net ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBCOiBcTK5jsKgzWZKreE9Oz2alnNuMH+EjxV61P+ilJGeZ/liCBWbw4lxMXfECisemjh1PRIH8kDWMpUCnR/QLY=",
                                    "mode": "0600",
                                    "name": "cc-github.bmwgroup.net",
                                    "owner": "zuul",
                                    "path": "/home/zuul/.ssh/known_hosts",
                                    "size": 1171,
                                    "state": "file",
                                    "uid": 1000
                                }
                            ]
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-c459-cd8b-00000000002c",
                        "name": "ensure-known-hosts",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_1/cc-github.bmwgroup.net/codecraft/cilib/roles/ensure-known-hosts"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:46:59.887664Z",
                            "start": "2024-04-21T00:46:59.400046Z"
                        },
                        "id": "ce4df5fb-964c-c459-cd8b-000000000213",
                        "name": "Adding known SSH hosts"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "include_tasks",
                            "changed": false,
                            "false_condition": "ansible_os_family == \"Windows\"",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-c459-cd8b-00000000002c",
                        "name": "ensure-known-hosts",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_1/cc-github.bmwgroup.net/codecraft/cilib/roles/ensure-known-hosts"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:46:59.965917Z",
                            "start": "2024-04-21T00:46:59.903871Z"
                        },
                        "id": "ce4df5fb-964c-c459-cd8b-00000000002f",
                        "name": ""
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "template",
                            "censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result",
                            "changed": true
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-c459-cd8b-000000000031",
                        "name": "ensure-pypirc",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_1/cc-github.bmwgroup.net/codecraft/cilib/roles/ensure-pypirc"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:47:00.809582Z",
                            "start": "2024-04-21T00:46:59.999727Z"
                        },
                        "id": "ce4df5fb-964c-c459-cd8b-000000000033",
                        "name": "Create pypirc file"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "shell",
                            "changed": true,
                            "cmd": "jfrog --version\n",
                            "delta": "0:00:00.018035",
                            "end": "2024-04-21 00:47:01.202086",
                            "invocation": {
                                "module_args": {
                                    "_raw_params": "jfrog --version\n",
                                    "_uses_shell": true,
                                    "argv": null,
                                    "chdir": null,
                                    "creates": null,
                                    "executable": null,
                                    "removes": null,
                                    "stdin": null,
                                    "stdin_add_newline": true,
                                    "strip_empty_ends": true,
                                    "warn": false,
                                    "zuul_ansible_split_streams": false,
                                    "zuul_log_id": "ce4df5fb-964c-c459-cd8b-000000000037-1-node"
                                }
                            },
                            "msg": "",
                            "rc": 0,
                            "start": "2024-04-21 00:47:01.184051",
                            "stderr": "",
                            "stderr_lines": [],
                            "stdout": "jf version 2.50.1",
                            "stdout_lines": [
                                "jf version 2.50.1"
                            ],
                            "zuul_log_id": "ce4df5fb-964c-c459-cd8b-000000000037-1-node"
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-c459-cd8b-000000000035",
                        "name": "ensure-jfrog-cli-config",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_1/cc-github.bmwgroup.net/codecraft/cilib/roles/ensure-jfrog-cli-config"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:47:01.402745Z",
                            "start": "2024-04-21T00:47:00.897046Z"
                        },
                        "id": "ce4df5fb-964c-c459-cd8b-000000000037",
                        "name": "Get jfrog-cli version linux"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "win_shell",
                            "changed": false,
                            "false_condition": "ansible_os_family == \"Windows\"",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-c459-cd8b-000000000035",
                        "name": "ensure-jfrog-cli-config",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_1/cc-github.bmwgroup.net/codecraft/cilib/roles/ensure-jfrog-cli-config"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:47:01.480822Z",
                            "start": "2024-04-21T00:47:01.412705Z"
                        },
                        "id": "ce4df5fb-964c-c459-cd8b-000000000038",
                        "name": "Get jfrog-cli version Windows"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "set_fact",
                            "ansible_facts": {
                                "jfrog_cli_version": "jf version 2.50.1"
                            },
                            "changed": false
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-c459-cd8b-000000000035",
                        "name": "ensure-jfrog-cli-config",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_1/cc-github.bmwgroup.net/codecraft/cilib/roles/ensure-jfrog-cli-config"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:47:01.609325Z",
                            "start": "2024-04-21T00:47:01.497516Z"
                        },
                        "id": "ce4df5fb-964c-c459-cd8b-000000000039",
                        "name": "Get jfrog-cli version from output"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "set_fact",
                            "ansible_facts": {
                                "jfrog_cli_version": "2"
                            },
                            "changed": false
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-c459-cd8b-000000000035",
                        "name": "ensure-jfrog-cli-config",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_1/cc-github.bmwgroup.net/codecraft/cilib/roles/ensure-jfrog-cli-config"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:47:01.738499Z",
                            "start": "2024-04-21T00:47:01.620431Z"
                        },
                        "id": "ce4df5fb-964c-c459-cd8b-00000000003a",
                        "name": "Set jfrog-cli version linux"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "debug",
                            "changed": false,
                            "jfrog_cli_version": "2"
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-c459-cd8b-000000000035",
                        "name": "ensure-jfrog-cli-config",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_1/cc-github.bmwgroup.net/codecraft/cilib/roles/ensure-jfrog-cli-config"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:47:01.855684Z",
                            "start": "2024-04-21T00:47:01.750335Z"
                        },
                        "id": "ce4df5fb-964c-c459-cd8b-00000000003b",
                        "name": "Print major jfrog cli version"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "assert",
                            "censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result",
                            "changed": false
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-c459-cd8b-000000000035",
                        "name": "ensure-jfrog-cli-config",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_1/cc-github.bmwgroup.net/codecraft/cilib/roles/ensure-jfrog-cli-config"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:47:02.045292Z",
                            "start": "2024-04-21T00:47:01.867202Z"
                        },
                        "id": "ce4df5fb-964c-c459-cd8b-00000000003f",
                        "name": "Ensure that all needed variables are set"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "set_fact",
                            "changed": false,
                            "false_condition": "jfrog_cli_version == \"1\"",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-c459-cd8b-000000000035",
                        "name": "ensure-jfrog-cli-config",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_1/cc-github.bmwgroup.net/codecraft/cilib/roles/ensure-jfrog-cli-config"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:47:02.141068Z",
                            "start": "2024-04-21T00:47:02.059480Z"
                        },
                        "id": "ce4df5fb-964c-c459-cd8b-000000000041",
                        "name": "Count the number of Artifactory instances set as default"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "fail",
                            "changed": false,
                            "false_condition": "jfrog_cli_version == \"1\"",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-c459-cd8b-000000000035",
                        "name": "ensure-jfrog-cli-config",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_1/cc-github.bmwgroup.net/codecraft/cilib/roles/ensure-jfrog-cli-config"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:47:02.239133Z",
                            "start": "2024-04-21T00:47:02.157671Z"
                        },
                        "id": "ce4df5fb-964c-c459-cd8b-000000000042",
                        "name": "Ensure that there is one Artifactory instance set as default"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "include_tasks",
                            "changed": false,
                            "false_condition": "jfrog_cli_version == \"1\"",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-c459-cd8b-000000000035",
                        "name": "ensure-jfrog-cli-config",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_1/cc-github.bmwgroup.net/codecraft/cilib/roles/ensure-jfrog-cli-config"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:47:02.336717Z",
                            "start": "2024-04-21T00:47:02.250954Z"
                        },
                        "id": "ce4df5fb-964c-c459-cd8b-000000000043",
                        "name": ""
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "include_tasks",
                            "changed": false,
                            "false_condition": "jfrog_cli_version == \"1\"",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-c459-cd8b-000000000035",
                        "name": "ensure-jfrog-cli-config",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_1/cc-github.bmwgroup.net/codecraft/cilib/roles/ensure-jfrog-cli-config"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:47:02.433559Z",
                            "start": "2024-04-21T00:47:02.352384Z"
                        },
                        "id": "ce4df5fb-964c-c459-cd8b-000000000044",
                        "name": ""
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "include_tasks",
                            "changed": false,
                            "include": "linux_v2.yaml",
                            "include_args": {}
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-c459-cd8b-000000000035",
                        "name": "ensure-jfrog-cli-config",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_1/cc-github.bmwgroup.net/codecraft/cilib/roles/ensure-jfrog-cli-config"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:47:02.551500Z",
                            "start": "2024-04-21T00:47:02.447050Z"
                        },
                        "id": "ce4df5fb-964c-c459-cd8b-000000000046",
                        "name": ""
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "shell",
                            "censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result",
                            "changed": true
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-c459-cd8b-000000000035",
                        "name": "ensure-jfrog-cli-config",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_1/cc-github.bmwgroup.net/codecraft/cilib/roles/ensure-jfrog-cli-config"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:47:03.259983Z",
                            "start": "2024-04-21T00:47:02.581965Z"
                        },
                        "id": "ce4df5fb-964c-c459-cd8b-000000000251",
                        "name": "create config for servers"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "include_tasks",
                            "changed": false,
                            "false_condition": "ansible_os_family == \"Windows\"",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-c459-cd8b-000000000035",
                        "name": "ensure-jfrog-cli-config",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_1/cc-github.bmwgroup.net/codecraft/cilib/roles/ensure-jfrog-cli-config"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:47:03.511100Z",
                            "start": "2024-04-21T00:47:03.274714Z"
                        },
                        "id": "ce4df5fb-964c-c459-cd8b-000000000047",
                        "name": ""
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "lineinfile",
                            "censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result",
                            "changed": true
                        }
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:47:04.184392Z",
                            "start": "2024-04-21T00:47:03.601462Z"
                        },
                        "id": "ce4df5fb-964c-c459-cd8b-00000000004b",
                        "name": "add apt authentication for Artifactory"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "debug",
                            "changed": false,
                            "msg": "zuul"
                        }
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:47:04.313232Z",
                            "start": "2024-04-21T00:47:04.199510Z"
                        },
                        "id": "ce4df5fb-964c-c459-cd8b-00000000004c",
                        "name": "Show remote user"
                    }
                }
            ]
        }
    ],
    "stats": {
        "node": {
            "changed": 9,
            "failures": 0,
            "ignored": 0,
            "ok": 44,
            "rescued": 0,
            "skipped": 14,
            "unreachable": 0
        }
    },
    "trusted": true
},
{
    "branch": "master",
    "index": "21",
    "phase": "pre",
    "playbook": "cc-github.bmwgroup.net/swh/zuul-trusted-ddad/playbooks/base-xpad-bazel/pre.yaml",
    "plays": [
        {
            "play": {
                "duration": {
                    "end": "2024-04-21T00:47:08.887201Z",
                    "start": "2024-04-21T00:47:06.003993Z"
                },
                "id": "ce4df5fb-964c-8b3a-ffa2-000000000002",
                "name": "all"
            },
            "tasks": [
                {
                    "hosts": {
                        "node": {
                            "action": "file",
                            "changed": false,
                            "diff": {
                                "after": {
                                    "path": "/usr/local/flexlm/licenses/"
                                },
                                "before": {
                                    "path": "/usr/local/flexlm/licenses/"
                                }
                            },
                            "gid": 0,
                            "group": "root",
                            "invocation": {
                                "module_args": {
                                    "_diff_peek": null,
                                    "_original_basename": null,
                                    "access_time": null,
                                    "access_time_format": "%Y%m%d%H%M.%S",
                                    "attributes": null,
                                    "follow": true,
                                    "force": false,
                                    "group": null,
                                    "mode": null,
                                    "modification_time": null,
                                    "modification_time_format": "%Y%m%d%H%M.%S",
                                    "owner": null,
                                    "path": "/usr/local/flexlm/licenses/",
                                    "recurse": true,
                                    "selevel": null,
                                    "serole": null,
                                    "setype": null,
                                    "seuser": null,
                                    "src": null,
                                    "state": "directory",
                                    "unsafe_writes": false
                                }
                            },
                            "mode": "0755",
                            "owner": "root",
                            "path": "/usr/local/flexlm/licenses/",
                            "size": 4096,
                            "state": "directory",
                            "uid": 0
                        }
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:47:06.983723Z",
                            "start": "2024-04-21T00:47:06.061071Z"
                        },
                        "id": "ce4df5fb-964c-8b3a-ffa2-000000000004",
                        "name": "Create directory for E.S.R Lab License"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "copy",
                            "changed": false,
                            "checksum": "e0f81b3b25bb24f1ff40896c9a1a1e49a0587e9b",
                            "dest": "/usr/local/flexlm/licenses/license.dat",
                            "diff": {
                                "after": {
                                    "path": "/usr/local/flexlm/licenses/license.dat"
                                },
                                "before": {
                                    "path": "/usr/local/flexlm/licenses/license.dat"
                                }
                            },
                            "gid": 0,
                            "group": "root",
                            "invocation": {
                                "module_args": {
                                    "_diff_peek": null,
                                    "_original_basename": "tmp0o_fd74k",
                                    "access_time": null,
                                    "access_time_format": "%Y%m%d%H%M.%S",
                                    "attributes": null,
                                    "dest": "/usr/local/flexlm/licenses/license.dat",
                                    "follow": true,
                                    "force": false,
                                    "group": "root",
                                    "mode": 292,
                                    "modification_time": null,
                                    "modification_time_format": "%Y%m%d%H%M.%S",
                                    "owner": "root",
                                    "path": "/usr/local/flexlm/licenses/license.dat",
                                    "recurse": false,
                                    "selevel": null,
                                    "serole": null,
                                    "setype": null,
                                    "seuser": null,
                                    "src": null,
                                    "state": "file",
                                    "unsafe_writes": false
                                }
                            },
                            "mode": "0444",
                            "owner": "root",
                            "path": "/usr/local/flexlm/licenses/license.dat",
                            "size": 1669,
                            "state": "file",
                            "uid": 0
                        }
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:47:07.817116Z",
                            "start": "2024-04-21T00:47:06.998328Z"
                        },
                        "id": "ce4df5fb-964c-8b3a-ffa2-000000000005",
                        "name": "Write ESR Labs LIC"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "file",
                            "changed": false,
                            "diff": {
                                "after": {
                                    "path": "/opt/qnx/licenses"
                                },
                                "before": {
                                    "path": "/opt/qnx/licenses"
                                }
                            },
                            "gid": 0,
                            "group": "root",
                            "invocation": {
                                "module_args": {
                                    "_diff_peek": null,
                                    "_original_basename": null,
                                    "access_time": null,
                                    "access_time_format": "%Y%m%d%H%M.%S",
                                    "attributes": null,
                                    "follow": true,
                                    "force": false,
                                    "group": null,
                                    "mode": null,
                                    "modification_time": null,
                                    "modification_time_format": "%Y%m%d%H%M.%S",
                                    "owner": null,
                                    "path": "/opt/qnx/licenses",
                                    "recurse": true,
                                    "selevel": null,
                                    "serole": null,
                                    "setype": null,
                                    "seuser": null,
                                    "src": null,
                                    "state": "directory",
                                    "unsafe_writes": false
                                }
                            },
                            "mode": "0755",
                            "owner": "root",
                            "path": "/opt/qnx/licenses",
                            "size": 4096,
                            "state": "directory",
                            "uid": 0
                        }
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:47:08.179735Z",
                            "start": "2024-04-21T00:47:07.886462Z"
                        },
                        "id": "ce4df5fb-964c-8b3a-ffa2-000000000006",
                        "name": "Create directory for QNX license"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "copy",
                            "changed": false,
                            "checksum": "1ed6ee3d5f3403fa1d69869d9acdbc0aa2a7898d",
                            "dest": "/opt/qnx/licenses/license.lic",
                            "diff": {
                                "after": {
                                    "path": "/opt/qnx/licenses/license.lic"
                                },
                                "before": {
                                    "path": "/opt/qnx/licenses/license.lic"
                                }
                            },
                            "gid": 0,
                            "group": "root",
                            "invocation": {
                                "module_args": {
                                    "_diff_peek": null,
                                    "_original_basename": "tmp2tht49ly",
                                    "access_time": null,
                                    "access_time_format": "%Y%m%d%H%M.%S",
                                    "attributes": null,
                                    "dest": "/opt/qnx/licenses/license.lic",
                                    "follow": true,
                                    "force": false,
                                    "group": "root",
                                    "mode": 292,
                                    "modification_time": null,
                                    "modification_time_format": "%Y%m%d%H%M.%S",
                                    "owner": "root",
                                    "path": "/opt/qnx/licenses/license.lic",
                                    "recurse": false,
                                    "selevel": null,
                                    "serole": null,
                                    "setype": null,
                                    "seuser": null,
                                    "src": null,
                                    "state": "file",
                                    "unsafe_writes": false
                                }
                            },
                            "mode": "0444",
                            "owner": "root",
                            "path": "/opt/qnx/licenses/license.lic",
                            "size": 152,
                            "state": "file",
                            "uid": 0
                        }
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:47:08.887201Z",
                            "start": "2024-04-21T00:47:08.191089Z"
                        },
                        "id": "ce4df5fb-964c-8b3a-ffa2-000000000007",
                        "name": "Add FlexLM license for the QNX CI Floating License Server"
                    }
                }
            ]
        }
    ],
    "stats": {
        "node": {
            "changed": 0,
            "failures": 0,
            "ignored": 0,
            "ok": 4,
            "rescued": 0,
            "skipped": 0,
            "unreachable": 0
        }
    },
    "trusted": true
},
{
    "branch": "master",
    "index": "22",
    "phase": "pre",
    "playbook": "cc-github.bmwgroup.net/swh/ddad_ci_config/playbooks/helper/disk-usage-pre.yaml",
    "plays": [
        {
            "play": {
                "duration": {
                    "end": "2024-04-21T00:47:11.739800Z",
                    "start": "2024-04-21T00:47:10.552994Z"
                },
                "id": "ce4df5fb-964c-daf5-d83d-000000000002",
                "name": "all"
            },
            "tasks": [
                {
                    "hosts": {
                        "node": {
                            "action": "shell",
                            "changed": true,
                            "cmd": "cd \"src/cc-github.bmwgroup.net/swh/ddad_ci_config\" || exit 1\npython3 scripts/build_metrics/src/main_disk_usage.py    \"/home/zuul/ci_kpis/pre_disk_usage.json\" || exit 1\n",
                            "delta": "0:00:00.068230",
                            "end": "2024-04-21 00:47:11.586178",
                            "invocation": {
                                "module_args": {
                                    "_raw_params": "cd \"src/cc-github.bmwgroup.net/swh/ddad_ci_config\" || exit 1\npython3 scripts/build_metrics/src/main_disk_usage.py    \"/home/zuul/ci_kpis/pre_disk_usage.json\" || exit 1\n",
                                    "_uses_shell": true,
                                    "argv": null,
                                    "chdir": null,
                                    "creates": null,
                                    "executable": null,
                                    "removes": null,
                                    "stdin": null,
                                    "stdin_add_newline": true,
                                    "strip_empty_ends": true,
                                    "warn": false,
                                    "zuul_ansible_split_streams": false,
                                    "zuul_log_id": "ce4df5fb-964c-daf5-d83d-000000000004-1-node"
                                }
                            },
                            "msg": "",
                            "rc": 0,
                            "start": "2024-04-21 00:47:11.517948",
                            "stderr": "",
                            "stderr_lines": [],
                            "stdout": "",
                            "stdout_lines": [],
                            "zuul_log_id": "ce4df5fb-964c-daf5-d83d-000000000004-1-node"
                        }
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:47:11.739800Z",
                            "start": "2024-04-21T00:47:10.672408Z"
                        },
                        "id": "ce4df5fb-964c-daf5-d83d-000000000004",
                        "name": "Calculate disk usage and write it to file"
                    }
                }
            ]
        }
    ],
    "stats": {
        "node": {
            "changed": 1,
            "failures": 0,
            "ignored": 0,
            "ok": 1,
            "rescued": 0,
            "skipped": 0,
            "unreachable": 0
        }
    },
    "trusted": false
},
{
    "branch": "master",
    "index": "23",
    "phase": "pre",
    "playbook": "cc-github.bmwgroup.net/swh/ddad_ci_config/playbooks/helper/remove-unused-docker-images.yaml",
    "plays": [
        {
            "play": {
                "duration": {
                    "end": "2024-04-21T00:47:18.430873Z",
                    "start": "2024-04-21T00:47:13.221151Z"
                },
                "id": "ce4df5fb-964c-3aa2-1b11-000000000002",
                "name": "all"
            },
            "tasks": [
                {
                    "hosts": {
                        "node": {
                            "action": "shell",
                            "changed": true,
                            "cmd": "docker images",
                            "delta": "0:00:00.037732",
                            "end": "2024-04-21 00:47:14.902726",
                            "invocation": {
                                "module_args": {
                                    "_raw_params": "docker images",
                                    "_uses_shell": true,
                                    "argv": null,
                                    "chdir": null,
                                    "creates": null,
                                    "executable": null,
                                    "removes": null,
                                    "stdin": null,
                                    "stdin_add_newline": true,
                                    "strip_empty_ends": true,
                                    "warn": false,
                                    "zuul_ansible_split_streams": false,
                                    "zuul_log_id": "ce4df5fb-964c-3aa2-1b11-000000000004-1-node"
                                }
                            },
                            "msg": "",
                            "rc": 0,
                            "start": "2024-04-21 00:47:14.864994",
                            "stderr": "",
                            "stderr_lines": [],
                            "stdout": "REPOSITORY                                               TAG                IMAGE ID       CREATED       SIZE\nddad.artifactory.cc.bmwgroup.net/adp-docker/ros-noetic   2022.02.17.06.31   bf7a8dacdef5   2 years ago   4.13GB",
                            "stdout_lines": [
                                "REPOSITORY                                               TAG                IMAGE ID       CREATED       SIZE",
                                "ddad.artifactory.cc.bmwgroup.net/adp-docker/ros-noetic   2022.02.17.06.31   bf7a8dacdef5   2 years ago   4.13GB"
                            ],
                            "zuul_log_id": "ce4df5fb-964c-3aa2-1b11-000000000004-1-node"
                        }
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:47:15.359614Z",
                            "start": "2024-04-21T00:47:13.341733Z"
                        },
                        "id": "ce4df5fb-964c-3aa2-1b11-000000000004",
                        "name": "Display docker images before removal"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "shell",
                            "changed": true,
                            "cmd": "docker_image_name=\"adp-docker/ros-noetic\"\ndocker_image_tag=\"2022.02.17.06.31\"\n\n\ndocker images --format \"{{.Repository}}:{{.Tag}}\" |\n  grep \"${docker_image_name}\" |\n  grep -v \"${docker_image_name}:${docker_image_tag}\" |\n  xargs --no-run-if-empty docker image rm\n",
                            "delta": "0:00:00.029518",
                            "end": "2024-04-21 00:47:15.864392",
                            "invocation": {
                                "module_args": {
                                    "_raw_params": "docker_image_name=\"adp-docker/ros-noetic\"\ndocker_image_tag=\"2022.02.17.06.31\"\n\n\ndocker images --format \"{{.Repository}}:{{.Tag}}\" |\n  grep \"${docker_image_name}\" |\n  grep -v \"${docker_image_name}:${docker_image_tag}\" |\n  xargs --no-run-if-empty docker image rm\n",
                                    "_uses_shell": true,
                                    "argv": null,
                                    "chdir": null,
                                    "creates": null,
                                    "executable": null,
                                    "removes": null,
                                    "stdin": null,
                                    "stdin_add_newline": true,
                                    "strip_empty_ends": true,
                                    "warn": false,
                                    "zuul_ansible_split_streams": false,
                                    "zuul_log_id": "ce4df5fb-964c-3aa2-1b11-000000000006-1-node"
                                }
                            },
                            "msg": "",
                            "rc": 0,
                            "start": "2024-04-21 00:47:15.834874",
                            "stderr": "",
                            "stderr_lines": [],
                            "stdout": "",
                            "stdout_lines": [],
                            "zuul_log_id": "ce4df5fb-964c-3aa2-1b11-000000000006-1-node"
                        }
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:47:16.033708Z",
                            "start": "2024-04-21T00:47:15.506212Z"
                        },
                        "id": "ce4df5fb-964c-3aa2-1b11-000000000006",
                        "name": "Remove image(s)"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "shell",
                            "changed": true,
                            "cmd": "docker images -q  \"ddad.artifactory.cc.bmwgroup.net/adp-docker/ros-noetic:2022.02.17.06.31\"\n",
                            "delta": "0:00:00.034433",
                            "end": "2024-04-21 00:47:16.435064",
                            "invocation": {
                                "module_args": {
                                    "_raw_params": "docker images -q  \"ddad.artifactory.cc.bmwgroup.net/adp-docker/ros-noetic:2022.02.17.06.31\"\n",
                                    "_uses_shell": true,
                                    "argv": null,
                                    "chdir": null,
                                    "creates": null,
                                    "executable": null,
                                    "removes": null,
                                    "stdin": null,
                                    "stdin_add_newline": true,
                                    "strip_empty_ends": true,
                                    "warn": false,
                                    "zuul_ansible_split_streams": false,
                                    "zuul_log_id": "ce4df5fb-964c-3aa2-1b11-000000000007-1-node"
                                }
                            },
                            "msg": "",
                            "rc": 0,
                            "start": "2024-04-21 00:47:16.400631",
                            "stderr": "",
                            "stderr_lines": [],
                            "stdout": "bf7a8dacdef5",
                            "stdout_lines": [
                                "bf7a8dacdef5"
                            ],
                            "zuul_log_id": "ce4df5fb-964c-3aa2-1b11-000000000007-1-node"
                        }
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:47:16.625751Z",
                            "start": "2024-04-21T00:47:16.111453Z"
                        },
                        "id": "ce4df5fb-964c-3aa2-1b11-000000000007",
                        "name": "Check whether required docker adp-docker/ros-noetic:2022.02.17.06.31 is present\n"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "include_role",
                            "changed": false,
                            "false_condition": "docker_info.stdout == \"\"",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:47:16.677667Z",
                            "start": "2024-04-21T00:47:16.638591Z"
                        },
                        "id": "ce4df5fb-964c-3aa2-1b11-000000000008",
                        "name": "Pull docker if it is not present"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "shell",
                            "changed": true,
                            "cmd": "docker images",
                            "delta": "0:00:00.031842",
                            "end": "2024-04-21 00:47:17.096349",
                            "invocation": {
                                "module_args": {
                                    "_raw_params": "docker images",
                                    "_uses_shell": true,
                                    "argv": null,
                                    "chdir": null,
                                    "creates": null,
                                    "executable": null,
                                    "removes": null,
                                    "stdin": null,
                                    "stdin_add_newline": true,
                                    "strip_empty_ends": true,
                                    "warn": false,
                                    "zuul_ansible_split_streams": false,
                                    "zuul_log_id": "ce4df5fb-964c-3aa2-1b11-000000000009-1-node"
                                }
                            },
                            "msg": "",
                            "rc": 0,
                            "start": "2024-04-21 00:47:17.064507",
                            "stderr": "",
                            "stderr_lines": [],
                            "stdout": "REPOSITORY                                               TAG                IMAGE ID       CREATED       SIZE\nddad.artifactory.cc.bmwgroup.net/adp-docker/ros-noetic   2022.02.17.06.31   bf7a8dacdef5   2 years ago   4.13GB",
                            "stdout_lines": [
                                "REPOSITORY                                               TAG                IMAGE ID       CREATED       SIZE",
                                "ddad.artifactory.cc.bmwgroup.net/adp-docker/ros-noetic   2022.02.17.06.31   bf7a8dacdef5   2 years ago   4.13GB"
                            ],
                            "zuul_log_id": "ce4df5fb-964c-3aa2-1b11-000000000009-1-node"
                        }
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:47:17.257700Z",
                            "start": "2024-04-21T00:47:16.740852Z"
                        },
                        "id": "ce4df5fb-964c-3aa2-1b11-000000000009",
                        "name": "Display docker images after updating of docker images"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "shell",
                            "changed": false,
                            "false_condition": "docker_image_to_delete is defined",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:47:17.857023Z",
                            "start": "2024-04-21T00:47:17.334273Z"
                        },
                        "id": "ce4df5fb-964c-3aa2-1b11-00000000000b",
                        "name": "Remove image"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "shell",
                            "changed": false,
                            "false_condition": "docker_image_to_delete is defined",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:47:18.430873Z",
                            "start": "2024-04-21T00:47:17.917468Z"
                        },
                        "id": "ce4df5fb-964c-3aa2-1b11-00000000000c",
                        "name": "Display docker images after removal"
                    }
                }
            ]
        }
    ],
    "stats": {
        "node": {
            "changed": 4,
            "failures": 0,
            "ignored": 0,
            "ok": 4,
            "rescued": 0,
            "skipped": 3,
            "unreachable": 0
        }
    },
    "trusted": false
},
{
    "branch": "master",
    "index": "24",
    "phase": "pre",
    "playbook": "cc-github.bmwgroup.net/swh/ddad_ci_config/playbooks/helper/print-free-disk-space.yaml",
    "plays": [
        {
            "play": {
                "duration": {
                    "end": "2024-04-21T00:47:20.700719Z",
                    "start": "2024-04-21T00:47:19.585178Z"
                },
                "id": "ce4df5fb-964c-8d3a-55fa-000000000002",
                "name": "all:!zuul_unreachable"
            },
            "tasks": [
                {
                    "hosts": {
                        "node": {
                            "action": "shell",
                            "changed": true,
                            "cmd": "set -o nounset\nset -o errexit\nset -o pipefail\ndf --human-readable\ndf --inodes\n",
                            "delta": "0:00:00.009386",
                            "end": "2024-04-21 00:47:20.494453",
                            "invocation": {
                                "module_args": {
                                    "_raw_params": "set -o nounset\nset -o errexit\nset -o pipefail\ndf --human-readable\ndf --inodes\n",
                                    "_uses_shell": true,
                                    "argv": null,
                                    "chdir": null,
                                    "creates": null,
                                    "executable": "/bin/bash",
                                    "removes": null,
                                    "stdin": null,
                                    "stdin_add_newline": true,
                                    "strip_empty_ends": true,
                                    "warn": false,
                                    "zuul_ansible_split_streams": false,
                                    "zuul_log_id": "ce4df5fb-964c-8d3a-55fa-000000000004-1-node"
                                }
                            },
                            "msg": "",
                            "rc": 0,
                            "start": "2024-04-21 00:47:20.485067",
                            "stderr": "",
                            "stderr_lines": [],
                            "stdout": "Filesystem      Size  Used Avail Use% Mounted on\ntmpfs           6.3G  2.5M  6.3G   1% /run\n/dev/vda1       300G   54G  233G  19% /\ntmpfs            32G     0   32G   0% /dev/shm\ntmpfs           5.0M     0  5.0M   0% /run/lock\ntmpfs           6.3G  4.0K  6.3G   1% /run/user/1000\nFilesystem       Inodes   IUsed    IFree IUse% Mounted on\ntmpfs           8230202     757  8229445    1% /run\n/dev/vda1      83804160 1119635 82684525    2% /\ntmpfs           8230202       1  8230201    1% /dev/shm\ntmpfs           8230202       3  8230199    1% /run/lock\ntmpfs           1646040      25  1646015    1% /run/user/1000",
                            "stdout_lines": [
                                "Filesystem      Size  Used Avail Use% Mounted on",
                                "tmpfs           6.3G  2.5M  6.3G   1% /run",
                                "/dev/vda1       300G   54G  233G  19% /",
                                "tmpfs            32G     0   32G   0% /dev/shm",
                                "tmpfs           5.0M     0  5.0M   0% /run/lock",
                                "tmpfs           6.3G  4.0K  6.3G   1% /run/user/1000",
                                "Filesystem       Inodes   IUsed    IFree IUse% Mounted on",
                                "tmpfs           8230202     757  8229445    1% /run",
                                "/dev/vda1      83804160 1119635 82684525    2% /",
                                "tmpfs           8230202       1  8230201    1% /dev/shm",
                                "tmpfs           8230202       3  8230199    1% /run/lock",
                                "tmpfs           1646040      25  1646015    1% /run/user/1000"
                            ],
                            "zuul_log_id": "ce4df5fb-964c-8d3a-55fa-000000000004-1-node"
                        }
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:47:20.700719Z",
                            "start": "2024-04-21T00:47:19.658209Z"
                        },
                        "id": "ce4df5fb-964c-8d3a-55fa-000000000004",
                        "name": "Print disk usage"
                    }
                }
            ]
        }
    ],
    "stats": {
        "node": {
            "changed": 1,
            "failures": 0,
            "ignored": 0,
            "ok": 1,
            "rescued": 0,
            "skipped": 0,
            "unreachable": 0
        }
    },
    "trusted": false
},
{
    "branch": "master",
    "index": "25",
    "phase": "pre",
    "playbook": "cc-github.bmwgroup.net/swh/ddad_ci_config/playbooks/helper/reset-zuul-projects-to-pr-merge-date-time.yaml",
    "plays": [
        {
            "play": {
                "duration": {
                    "end": "2024-04-21T00:47:22.979266Z",
                    "start": "2024-04-21T00:47:22.218826Z"
                },
                "id": "ce4df5fb-964c-413e-4457-000000000002",
                "name": "all"
            },
            "tasks": [
                {
                    "hosts": {
                        "node": {
                            "action": "uri",
                            "changed": false,
                            "false_condition": "zuul.pipeline in [\"post-independent\", \"post-independent-test\"]",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:47:22.300868Z",
                            "start": "2024-04-21T00:47:22.270628Z"
                        },
                        "id": "ce4df5fb-964c-413e-4457-000000000004",
                        "name": "Fetch the time when the PR was merged from Github"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "set_fact",
                            "changed": false,
                            "false_condition": "zuul.pipeline in [\"post-independent\", \"post-independent-test\"]",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:47:22.346445Z",
                            "start": "2024-04-21T00:47:22.310328Z"
                        },
                        "id": "ce4df5fb-964c-413e-4457-000000000005",
                        "name": "Save the time when the pr was merged to a fact"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "debug",
                            "changed": false,
                            "false_condition": "zuul.pipeline in [\"post-independent\", \"post-independent-test\"]",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:47:22.392925Z",
                            "start": "2024-04-21T00:47:22.356066Z"
                        },
                        "id": "ce4df5fb-964c-413e-4457-000000000006",
                        "name": "Print the time when a PR was merged for debug reasons"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "shell",
                            "changed": false,
                            "false_condition": "zuul.pipeline in [\"post-independent\", \"post-independent-test\"]",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:47:22.979266Z",
                            "start": "2024-04-21T00:47:22.458950Z"
                        },
                        "id": "ce4df5fb-964c-413e-4457-000000000007",
                        "name": "Checkout all Zuul projects at a given datetime"
                    }
                }
            ]
        }
    ],
    "stats": {
        "node": {
            "changed": 0,
            "failures": 0,
            "ignored": 0,
            "ok": 0,
            "rescued": 0,
            "skipped": 4,
            "unreachable": 0
        }
    },
    "trusted": false
},
{
    "branch": "master",
    "index": "26",
    "phase": "pre",
    "playbook": "cc-github.bmwgroup.net/swh/ddad_ci_config/playbooks/ddad-prepare-workspace.yaml",
    "plays": [
        {
            "play": {
                "duration": {
                    "end": "2024-04-21T00:48:24.691624Z",
                    "start": "2024-04-21T00:47:24.589038Z"
                },
                "id": "ce4df5fb-964c-7bec-725a-000000000002",
                "name": "Update submodules to the HEAD of the checked-out dependencies."
            },
            "tasks": [
                {
                    "hosts": {
                        "node": {
                            "action": "set_fact",
                            "changed": false,
                            "msg": "All items skipped",
                            "results": [
                                {
                                    "ansible_loop_var": "item",
                                    "changed": false,
                                    "false_condition": "zuul.tag is defined",
                                    "item": {
                                        "key": "trusted/project_0/cc-github.bmwgroup.net/codecraft/zuul-conf-global",
                                        "value": {
                                            "canonical_name": "cc-github.bmwgroup.net/codecraft/zuul-conf-global",
                                            "checkout": "master",
                                            "commit": "45b9de4d29f6f4037a00d88ec222181aef260fbd"
                                        }
                                    },
                                    "skip_reason": "Conditional result was False",
                                    "skipped": true
                                },
                                {
                                    "ansible_loop_var": "item",
                                    "changed": false,
                                    "false_condition": "zuul.tag is defined",
                                    "item": {
                                        "key": "trusted/project_1/cc-github.bmwgroup.net/codecraft/cilib",
                                        "value": {
                                            "canonical_name": "cc-github.bmwgroup.net/codecraft/cilib",
                                            "checkout": "master",
                                            "commit": "c0c222f8ecf6f6992a9dea9e4205213d92f68e6f"
                                        }
                                    },
                                    "skip_reason": "Conditional result was False",
                                    "skipped": true
                                },
                                {
                                    "ansible_loop_var": "item",
                                    "changed": false,
                                    "false_condition": "zuul.tag is defined",
                                    "item": {
                                        "key": "trusted/project_2/cc-github.bmwgroup.net/codecraft-oss/zuul-jobs",
                                        "value": {
                                            "canonical_name": "cc-github.bmwgroup.net/codecraft-oss/zuul-jobs",
                                            "checkout": "master",
                                            "commit": "39103d284132516ed03a608730cba5d7f7a00c76"
                                        }
                                    },
                                    "skip_reason": "Conditional result was False",
                                    "skipped": true
                                },
                                {
                                    "ansible_loop_var": "item",
                                    "changed": false,
                                    "false_condition": "zuul.tag is defined",
                                    "item": {
                                        "key": "trusted/project_3/cc-github.bmwgroup.net/swh/zuul-trusted-ddad",
                                        "value": {
                                            "canonical_name": "cc-github.bmwgroup.net/swh/zuul-trusted-ddad",
                                            "checkout": "master",
                                            "commit": "a22500345c4283b6add4f2a3c354c663a904d9d0"
                                        }
                                    },
                                    "skip_reason": "Conditional result was False",
                                    "skipped": true
                                },
                                {
                                    "ansible_loop_var": "item",
                                    "changed": false,
                                    "false_condition": "zuul.tag is defined",
                                    "item": {
                                        "key": "trusted/project_4/cc-github.bmwgroup.net/swh/ddad_ci_config",
                                        "value": {
                                            "canonical_name": "cc-github.bmwgroup.net/swh/ddad_ci_config",
                                            "checkout": "master",
                                            "commit": "a2ea1242739a7a16dba7d7781925949e31cfc29f"
                                        }
                                    },
                                    "skip_reason": "Conditional result was False",
                                    "skipped": true
                                },
                                {
                                    "ansible_loop_var": "item",
                                    "changed": false,
                                    "false_condition": "zuul.tag is defined",
                                    "item": {
                                        "key": "untrusted/project_0/cc-github.bmwgroup.net/swh/ddad_ci_config",
                                        "value": {
                                            "canonical_name": "cc-github.bmwgroup.net/swh/ddad_ci_config",
                                            "checkout": "master",
                                            "commit": "a2ea1242739a7a16dba7d7781925949e31cfc29f"
                                        }
                                    },
                                    "skip_reason": "Conditional result was False",
                                    "skipped": true
                                },
                                {
                                    "ansible_loop_var": "item",
                                    "changed": false,
                                    "false_condition": "zuul.tag is defined",
                                    "item": {
                                        "key": "untrusted/project_1/cc-github.bmwgroup.net/swh/zuul-trusted-ddad",
                                        "value": {
                                            "canonical_name": "cc-github.bmwgroup.net/swh/zuul-trusted-ddad",
                                            "checkout": "master",
                                            "commit": "a22500345c4283b6add4f2a3c354c663a904d9d0"
                                        }
                                    },
                                    "skip_reason": "Conditional result was False",
                                    "skipped": true
                                },
                                {
                                    "ansible_loop_var": "item",
                                    "changed": false,
                                    "false_condition": "zuul.tag is defined",
                                    "item": {
                                        "key": "untrusted/project_2/cc-github.bmwgroup.net/codecraft/cilib",
                                        "value": {
                                            "canonical_name": "cc-github.bmwgroup.net/codecraft/cilib",
                                            "checkout": "master",
                                            "commit": "c0c222f8ecf6f6992a9dea9e4205213d92f68e6f"
                                        }
                                    },
                                    "skip_reason": "Conditional result was False",
                                    "skipped": true
                                },
                                {
                                    "ansible_loop_var": "item",
                                    "changed": false,
                                    "false_condition": "zuul.tag is defined",
                                    "item": {
                                        "key": "untrusted/project_3/cc-github.bmwgroup.net/codecraft/zuul-conf-global",
                                        "value": {
                                            "canonical_name": "cc-github.bmwgroup.net/codecraft/zuul-conf-global",
                                            "checkout": "master",
                                            "commit": "45b9de4d29f6f4037a00d88ec222181aef260fbd"
                                        }
                                    },
                                    "skip_reason": "Conditional result was False",
                                    "skipped": true
                                },
                                {
                                    "ansible_loop_var": "item",
                                    "changed": false,
                                    "false_condition": "zuul.tag is defined",
                                    "item": {
                                        "key": "untrusted/project_4/cc-github.bmwgroup.net/codecraft-oss/zuul-jobs",
                                        "value": {
                                            "canonical_name": "cc-github.bmwgroup.net/codecraft-oss/zuul-jobs",
                                            "checkout": "master",
                                            "commit": "39103d284132516ed03a608730cba5d7f7a00c76"
                                        }
                                    },
                                    "skip_reason": "Conditional result was False",
                                    "skipped": true
                                }
                            ],
                            "skipped": true
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-7bec-725a-000000000007",
                        "name": "release-reset-ddad-ci-config-to-tag",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/untrusted/project_0/cc-github.bmwgroup.net/swh/ddad_ci_config/roles/release-reset-ddad-ci-config-to-tag"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:47:24.780926Z",
                            "start": "2024-04-21T00:47:24.644199Z"
                        },
                        "id": "ce4df5fb-964c-7bec-725a-000000000009",
                        "name": "Search for the branch to checkout 'ddad_ci_config'"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "command",
                            "changed": false,
                            "false_condition": "zuul.tag is defined",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-7bec-725a-000000000007",
                        "name": "release-reset-ddad-ci-config-to-tag",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/untrusted/project_0/cc-github.bmwgroup.net/swh/ddad_ci_config/roles/release-reset-ddad-ci-config-to-tag"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:47:25.357524Z",
                            "start": "2024-04-21T00:47:24.842458Z"
                        },
                        "id": "ce4df5fb-964c-7bec-725a-00000000000a",
                        "name": "Checkout 'ddad_ci_config' to '{{ ddad_ci_config_context.branch }}' branch"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "win_command",
                            "changed": false,
                            "false_condition": "zuul.tag is defined",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-7bec-725a-000000000007",
                        "name": "release-reset-ddad-ci-config-to-tag",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/untrusted/project_0/cc-github.bmwgroup.net/swh/ddad_ci_config/roles/release-reset-ddad-ci-config-to-tag"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:47:25.411692Z",
                            "start": "2024-04-21T00:47:25.370128Z"
                        },
                        "id": "ce4df5fb-964c-7bec-725a-00000000000b",
                        "name": "Checkout 'ddad_ci_config' to '{{ ddad_ci_config_context.branch }}' branch"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "win_copy",
                            "changed": false,
                            "false_condition": "ansible_os_family == \"Windows\"",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-7bec-725a-00000000000d",
                        "name": "move-submodules",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/untrusted/project_0/cc-github.bmwgroup.net/swh/ddad_ci_config/roles/move-submodules"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:47:25.525545Z",
                            "start": "2024-04-21T00:47:25.498723Z"
                        },
                        "id": "ce4df5fb-964c-7bec-725a-00000000000f",
                        "name": ""
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "win_shell",
                            "changed": false,
                            "false_condition": "ansible_os_family == \"Windows\"",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-7bec-725a-00000000000d",
                        "name": "move-submodules",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/untrusted/project_0/cc-github.bmwgroup.net/swh/ddad_ci_config/roles/move-submodules"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:47:25.569443Z",
                            "start": "2024-04-21T00:47:25.539309Z"
                        },
                        "id": "ce4df5fb-964c-7bec-725a-000000000010",
                        "name": ""
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "win_copy",
                            "changed": false,
                            "false_condition": "ansible_os_family == \"Windows\"",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-7bec-725a-00000000000d",
                        "name": "move-submodules",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/untrusted/project_0/cc-github.bmwgroup.net/swh/ddad_ci_config/roles/move-submodules"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:47:25.611873Z",
                            "start": "2024-04-21T00:47:25.583986Z"
                        },
                        "id": "ce4df5fb-964c-7bec-725a-000000000011",
                        "name": ""
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "win_shell",
                            "changed": false,
                            "false_condition": "ansible_os_family == \"Windows\"",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-7bec-725a-00000000000d",
                        "name": "move-submodules",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/untrusted/project_0/cc-github.bmwgroup.net/swh/ddad_ci_config/roles/move-submodules"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:47:25.648067Z",
                            "start": "2024-04-21T00:47:25.621125Z"
                        },
                        "id": "ce4df5fb-964c-7bec-725a-000000000012",
                        "name": ""
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "copy",
                            "changed": false,
                            "checksum": "172dfda9b73df5cb6210d28170b7f96eacd06fcd",
                            "dest": "/home/zuul/move_submodules.py",
                            "diff": {
                                "after": {
                                    "path": "/home/zuul/move_submodules.py"
                                },
                                "before": {
                                    "path": "/home/zuul/move_submodules.py"
                                }
                            },
                            "gid": 1000,
                            "group": "zuul",
                            "invocation": {
                                "module_args": {
                                    "_diff_peek": null,
                                    "_original_basename": "move_submodules.py",
                                    "access_time": null,
                                    "access_time_format": "%Y%m%d%H%M.%S",
                                    "attributes": null,
                                    "dest": "/home/zuul/move_submodules.py",
                                    "follow": true,
                                    "force": true,
                                    "group": null,
                                    "mode": null,
                                    "modification_time": null,
                                    "modification_time_format": "%Y%m%d%H%M.%S",
                                    "owner": null,
                                    "path": "/home/zuul/move_submodules.py",
                                    "recurse": false,
                                    "selevel": null,
                                    "serole": null,
                                    "setype": null,
                                    "seuser": null,
                                    "src": null,
                                    "state": "file",
                                    "unsafe_writes": false
                                }
                            },
                            "mode": "0664",
                            "owner": "zuul",
                            "path": "/home/zuul/move_submodules.py",
                            "size": 5179,
                            "state": "file",
                            "uid": 1000
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-7bec-725a-00000000000d",
                        "name": "move-submodules",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/untrusted/project_0/cc-github.bmwgroup.net/swh/ddad_ci_config/roles/move-submodules"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:47:27.142195Z",
                            "start": "2024-04-21T00:47:25.668045Z"
                        },
                        "id": "ce4df5fb-964c-7bec-725a-000000000014",
                        "name": ""
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "shell",
                            "changed": true,
                            "cmd": "python3 /home/zuul/move_submodules.py src/cc-github.bmwgroup.net/swh/ddad link",
                            "delta": "0:00:07.116998",
                            "end": "2024-04-21 00:47:34.655754",
                            "invocation": {
                                "module_args": {
                                    "_raw_params": "python3 /home/zuul/move_submodules.py src/cc-github.bmwgroup.net/swh/ddad link",
                                    "_uses_shell": true,
                                    "argv": null,
                                    "chdir": null,
                                    "creates": null,
                                    "executable": "/bin/bash",
                                    "removes": null,
                                    "stdin": null,
                                    "stdin_add_newline": true,
                                    "strip_empty_ends": true,
                                    "warn": false,
                                    "zuul_ansible_split_streams": false,
                                    "zuul_log_id": "ce4df5fb-964c-7bec-725a-000000000015-1-node"
                                }
                            },
                            "msg": "",
                            "rc": 0,
                            "start": "2024-04-21 00:47:27.538756",
                            "stderr": "",
                            "stderr_lines": [],
                            "stdout": "Module [astas] not found. Skipping.\nMoved [franky_ib] to [/home/zuul/src/cc-github.bmwgroup.net/swh/ddad/ecu/devel/franky_ib/franky]\nMoved [cvc] to [/home/zuul/src/cc-github.bmwgroup.net/swh/ddad/ecu/cvc/cvc]\nModule [xpad_gnss_system_china] not found. Skipping.\nMoved [xpad_xpc] to [/home/zuul/src/cc-github.bmwgroup.net/swh/ddad/third_party/xpad_xpc]\nModule [ddad-boardnet] not found. Skipping.\nMoved [gnss_common] to [/home/zuul/src/cc-github.bmwgroup.net/swh/ddad/application/gnss/common]\nModule [abx-prototyping-config] not found. Skipping.\nMoved [foresight] to [/home/zuul/src/cc-github.bmwgroup.net/swh/ddad/application/foresight]\nModule [ddad-domains-automated-driving] not found. Skipping.\nMoved [ddad_ci_config] to [/home/zuul/src/cc-github.bmwgroup.net/swh/ddad/ci_config]\nMoved [ddad-domains-fasinfo] to [/home/zuul/src/cc-github.bmwgroup.net/swh/ddad/domains/fasinfo]\nMoved [ddad-domains-generic] to [/home/zuul/src/cc-github.bmwgroup.net/swh/ddad/domains/generic]\nModule [ddad-domains-energy] not found. Skipping.\nModule [ddad-domains-orion-driving] not found. Skipping.\nModule [orion_workstream_13] not found. Skipping.\nModule [ddad-ecu-qrp] not found. Skipping.\nMoved [ufm] to [/home/zuul/src/cc-github.bmwgroup.net/swh/ddad/application/fasinfo/ufm]\nModule [ddad-deployment] not found. Skipping.\nModule [ipnext_bsp_extensions] not found. Skipping.\nMoved [ltf-dlt] to [/home/zuul/src/cc-github.bmwgroup.net/swh/ddad/ecu/xpad/dlt-daemon]\nMoved [xpad-shared] to [/home/zuul/src/cc-github.bmwgroup.net/swh/ddad/ecu/xpad/xpad-shared]\nModule [booster] not found. Skipping.\nMoved [ib-vip] to [/home/zuul/src/cc-github.bmwgroup.net/swh/ddad/ecu/ib/ib_vip]\nModule [env_simulator] not found. Skipping.\nModule [parking] not found. Skipping.\nModule [ddad-domains-powertrain] not found. Skipping.\nModule [qdm] not found. Skipping.\nModule [ddad-domains-reference-packages] not found. Skipping.\nMoved [system_description] to [/home/zuul/src/cc-github.bmwgroup.net/swh/ddad/system_description]\nModule [ddad-domains-driving] not found. Skipping.\nMoved [ddad-ecu-ipnext] to [/home/zuul/src/cc-github.bmwgroup.net/swh/ddad/ecu/ipnext]\nMoved [domain-tools] to [/home/zuul/src/cc-github.bmwgroup.net/swh/ddad/tools/doto]\nMoved [ddad_platform] to [/home/zuul/src/cc-github.bmwgroup.net/swh/ddad/platform]\nMoved [adp] to [/home/zuul/src/cc-github.bmwgroup.net/swh/ddad/application/adp]\n19 elements moved. 19 skipped.",
                            "stdout_lines": [
                                "Module [astas] not found. Skipping.",
                                "Moved [franky_ib] to [/home/zuul/src/cc-github.bmwgroup.net/swh/ddad/ecu/devel/franky_ib/franky]",
                                "Moved [cvc] to [/home/zuul/src/cc-github.bmwgroup.net/swh/ddad/ecu/cvc/cvc]",
                                "Module [xpad_gnss_system_china] not found. Skipping.",
                                "Moved [xpad_xpc] to [/home/zuul/src/cc-github.bmwgroup.net/swh/ddad/third_party/xpad_xpc]",
                                "Module [ddad-boardnet] not found. Skipping.",
                                "Moved [gnss_common] to [/home/zuul/src/cc-github.bmwgroup.net/swh/ddad/application/gnss/common]",
                                "Module [abx-prototyping-config] not found. Skipping.",
                                "Moved [foresight] to [/home/zuul/src/cc-github.bmwgroup.net/swh/ddad/application/foresight]",
                                "Module [ddad-domains-automated-driving] not found. Skipping.",
                                "Moved [ddad_ci_config] to [/home/zuul/src/cc-github.bmwgroup.net/swh/ddad/ci_config]",
                                "Moved [ddad-domains-fasinfo] to [/home/zuul/src/cc-github.bmwgroup.net/swh/ddad/domains/fasinfo]",
                                "Moved [ddad-domains-generic] to [/home/zuul/src/cc-github.bmwgroup.net/swh/ddad/domains/generic]",
                                "Module [ddad-domains-energy] not found. Skipping.",
                                "Module [ddad-domains-orion-driving] not found. Skipping.",
                                "Module [orion_workstream_13] not found. Skipping.",
                                "Module [ddad-ecu-qrp] not found. Skipping.",
                                "Moved [ufm] to [/home/zuul/src/cc-github.bmwgroup.net/swh/ddad/application/fasinfo/ufm]",
                                "Module [ddad-deployment] not found. Skipping.",
                                "Module [ipnext_bsp_extensions] not found. Skipping.",
                                "Moved [ltf-dlt] to [/home/zuul/src/cc-github.bmwgroup.net/swh/ddad/ecu/xpad/dlt-daemon]",
                                "Moved [xpad-shared] to [/home/zuul/src/cc-github.bmwgroup.net/swh/ddad/ecu/xpad/xpad-shared]",
                                "Module [booster] not found. Skipping.",
                                "Moved [ib-vip] to [/home/zuul/src/cc-github.bmwgroup.net/swh/ddad/ecu/ib/ib_vip]",
                                "Module [env_simulator] not found. Skipping.",
                                "Module [parking] not found. Skipping.",
                                "Module [ddad-domains-powertrain] not found. Skipping.",
                                "Module [qdm] not found. Skipping.",
                                "Module [ddad-domains-reference-packages] not found. Skipping.",
                                "Moved [system_description] to [/home/zuul/src/cc-github.bmwgroup.net/swh/ddad/system_description]",
                                "Module [ddad-domains-driving] not found. Skipping.",
                                "Moved [ddad-ecu-ipnext] to [/home/zuul/src/cc-github.bmwgroup.net/swh/ddad/ecu/ipnext]",
                                "Moved [domain-tools] to [/home/zuul/src/cc-github.bmwgroup.net/swh/ddad/tools/doto]",
                                "Moved [ddad_platform] to [/home/zuul/src/cc-github.bmwgroup.net/swh/ddad/platform]",
                                "Moved [adp] to [/home/zuul/src/cc-github.bmwgroup.net/swh/ddad/application/adp]",
                                "19 elements moved. 19 skipped."
                            ],
                            "zuul_log_id": "ce4df5fb-964c-7bec-725a-000000000015-1-node"
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-7bec-725a-00000000000d",
                        "name": "move-submodules",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/untrusted/project_0/cc-github.bmwgroup.net/swh/ddad_ci_config/roles/move-submodules"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:47:34.758093Z",
                            "start": "2024-04-21T00:47:27.202324Z"
                        },
                        "id": "ce4df5fb-964c-7bec-725a-000000000015",
                        "name": ""
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "command",
                            "changed": true,
                            "cmd": [
                                "git",
                                "submodule",
                                "foreach",
                                "git checkout -f \"${sha1}\" || true"
                            ],
                            "delta": "0:00:48.895499",
                            "end": "2024-04-21 00:48:24.072998",
                            "invocation": {
                                "module_args": {
                                    "_raw_params": "git submodule foreach 'git checkout -f \"${sha1}\" || true'",
                                    "_uses_shell": false,
                                    "argv": null,
                                    "chdir": "src/cc-github.bmwgroup.net/swh/ddad",
                                    "creates": null,
                                    "executable": null,
                                    "removes": null,
                                    "stdin": null,
                                    "stdin_add_newline": true,
                                    "strip_empty_ends": true,
                                    "warn": false,
                                    "zuul_ansible_split_streams": false,
                                    "zuul_log_id": "ce4df5fb-964c-7bec-725a-000000000019-1-node"
                                }
                            },
                            "msg": "",
                            "rc": 0,
                            "start": "2024-04-21 00:47:35.177499",
                            "stderr": "",
                            "stderr_lines": [],
                            "stdout": "Entering 'application/adp'\nNote: switching to '8d83dea1d58bef901e97793e1c34ad57986fada1'.\n\nYou are in 'detached HEAD' state. You can look around, make experimental\nchanges and commit them, and you can discard any commits you make in this\nstate without impacting any branches by switching back to a branch.\n\nIf you want to create a new branch to retain commits you create, you may\ndo so (now or later) by using -c with the switch command. Example:\n\n  git switch -c <new-branch-name>\n\nOr undo this operation with:\n\n  git switch -\n\nTurn off this advice by setting config variable advice.detachedHead to false\n\nHEAD is now at 8d83dea1d58b Merge pull request #167730 from swh/mm/use_ros_without_aliases\nEntering 'application/aeb'\nNote: switching to 'b473c7ab8c70f69511aeff1374d70aef88f33d4a'.\n\nYou are in 'detached HEAD' state. You can look around, make experimental\nchanges and commit them, and you can discard any commits you make in this\nstate without impacting any branches by switching back to a branch.\n\nIf you want to create a new branch to retain commits you create, you may\ndo so (now or later) by using -c with the switch command. Example:\n\n  git switch -c <new-branch-name>\n\nOr undo this operation with:\n\n  git switch -\n\nTurn off this advice by setting config variable advice.detachedHead to false\n\nHEAD is now at b473c7ab Merge pull request #598 from swh/elsa_erase_aeb\nEntering 'application/fasinfo/ufm'\nNote: switching to '24d683807041b01ac000b8a6212ec6ad50e3b5e2'.\n\nYou are in 'detached HEAD' state. You can look around, make experimental\nchanges and commit them, and you can discard any commits you make in this\nstate without impacting any branches by switching back to a branch.\n\nIf you want to create a new branch to retain commits you create, you may\ndo so (now or later) by using -c with the switch command. Example:\n\n  git switch -c <new-branch-name>\n\nOr undo this operation with:\n\n  git switch -\n\nTurn off this advice by setting config variable advice.detachedHead to false\n\nHEAD is now at 24d683807 Merge pull request #1800 from swh/cbedda_update_hashes_490\nEntering 'application/foresight'\nNote: switching to '0961a62bed7ee412bf80fe5a9b879e5586964358'.\n\nYou are in 'detached HEAD' state. You can look around, make experimental\nchanges and commit them, and you can discard any commits you make in this\nstate without impacting any branches by switching back to a branch.\n\nIf you want to create a new branch to retain commits you create, you may\ndo so (now or later) by using -c with the switch command. Example:\n\n  git switch -c <new-branch-name>\n\nOr undo this operation with:\n\n  git switch -\n\nTurn off this advice by setting config variable advice.detachedHead to false\n\nHEAD is now at 0961a62bed Merge pull request #18874 from swh/mah/adbk25-5914/use_mapdalprovider_in_lanedata\nEntering 'application/gnss/common'\nNote: switching to '7aeb42bd9976938f99a41c088c70fe8af14ee8fc'.\n\nYou are in 'detached HEAD' state. You can look around, make experimental\nchanges and commit them, and you can discard any commits you make in this\nstate without impacting any branches by switching back to a branch.\n\nIf you want to create a new branch to retain commits you create, you may\ndo so (now or later) by using -c with the switch command. Example:\n\n  git switch -c <new-branch-name>\n\nOr undo this operation with:\n\n  git switch -\n\nTurn off this advice by setting config variable advice.detachedHead to false\n\nHEAD is now at 7aeb42bd Merge pull request #711 from swh/vlru/use_newer_coding_api\nEntering 'ci_config'\nNote: switching to 'a2ea1242739a7a16dba7d7781925949e31cfc29f'.\n\nYou are in 'detached HEAD' state. You can look around, make experimental\nchanges and commit them, and you can discard any commits you make in this\nstate without impacting any branches by switching back to a branch.\n\nIf you want to create a new branch to retain commits you create, you may\ndo so (now or later) by using -c with the switch command. Example:\n\n  git switch -c <new-branch-name>\n\nOr undo this operation with:\n\n  git switch -\n\nTurn off this advice by setting config variable advice.detachedHead to false\n\nHEAD is now at a2ea124273 Merge pull request #62209 from swh/ascott/fix_path_on_windows\nEntering 'domains/fasinfo'\nNote: switching to 'a5b41fd76a124026ff81320e27d5caa5a772f235'.\n\nYou are in 'detached HEAD' state. You can look around, make experimental\nchanges and commit them, and you can discard any commits you make in this\nstate without impacting any branches by switching back to a branch.\n\nIf you want to create a new branch to retain commits you create, you may\ndo so (now or later) by using -c with the switch command. Example:\n\n  git switch -c <new-branch-name>\n\nOr undo this operation with:\n\n  git switch -\n\nTurn off this advice by setting config variable advice.detachedHead to false\n\nHEAD is now at a5b41fd76a Merge pull request #964 from swh/csav/add_position_on_map_lane_position\nEntering 'domains/generic'\nNote: switching to '872e7456cf3b5838f30c47753e8187b8c62b636a'.\n\nYou are in 'detached HEAD' state. You can look around, make experimental\nchanges and commit them, and you can discard any commits you make in this\nstate without impacting any branches by switching back to a branch.\n\nIf you want to create a new branch to retain commits you create, you may\ndo so (now or later) by using -c with the switch command. Example:\n\n  git switch -c <new-branch-name>\n\nOr undo this operation with:\n\n  git switch -\n\nTurn off this advice by setting config variable advice.detachedHead to false\n\nHEAD is now at 872e7456 Merge pull request #901 from swh/lber-htcoreq2pm-new-su-soll-volf-wcc\nEntering 'ecu/cvc/cvc'\nNote: switching to 'dbf0e56926a6baad91df5b15b84746c66de73a47'.\n\nYou are in 'detached HEAD' state. You can look around, make experimental\nchanges and commit them, and you can discard any commits you make in this\nstate without impacting any branches by switching back to a branch.\n\nIf you want to create a new branch to retain commits you create, you may\ndo so (now or later) by using -c with the switch command. Example:\n\n  git switch -c <new-branch-name>\n\nOr undo this operation with:\n\n  git switch -\n\nTurn off this advice by setting config variable advice.detachedHead to false\n\nHEAD is now at dbf0e56 Merge pull request #762 from swh/ag-cvc02-pdx-logistic\nEntering 'ecu/devel/franky_ib/franky'\nNote: switching to '7a74d491251435e7b011e7010d11fbc9224b355c'.\n\nYou are in 'detached HEAD' state. You can look around, make experimental\nchanges and commit them, and you can discard any commits you make in this\nstate without impacting any branches by switching back to a branch.\n\nIf you want to create a new branch to retain commits you create, you may\ndo so (now or later) by using -c with the switch command. Example:\n\n  git switch -c <new-branch-name>\n\nOr undo this operation with:\n\n  git switch -\n\nTurn off this advice by setting config variable advice.detachedHead to false\n\nHEAD is now at 7a74d49 Merge pull request #28 from swh/mt/dcs2219/define_adp_std_types_for_franky_ib\nEntering 'ecu/ib/ib_vip'\nNote: switching to '77d3abe6f172efef2f93e6c3a61af0f3ee7d7967'.\n\nYou are in 'detached HEAD' state. You can look around, make experimental\nchanges and commit them, and you can discard any commits you make in this\nstate without impacting any branches by switching back to a branch.\n\nIf you want to create a new branch to retain commits you create, you may\ndo so (now or later) by using -c with the switch command. Example:\n\n  git switch -c <new-branch-name>\n\nOr undo this operation with:\n\n  git switch -\n\nTurn off this advice by setting config variable advice.detachedHead to false\n\nHEAD is now at 77d3abe6f Merge pull request #2123 from swh/autocherry_master_tc_9.2411.2404.2.0\nEntering 'ecu/ipnext'\nNote: switching to '4e0fd5384e92431311a139b52f3b191523237f3f'.\n\nYou are in 'detached HEAD' state. You can look around, make experimental\nchanges and commit them, and you can discard any commits you make in this\nstate without impacting any branches by switching back to a branch.\n\nIf you want to create a new branch to retain commits you create, you may\ndo so (now or later) by using -c with the switch command. Example:\n\n  git switch -c <new-branch-name>\n\nOr undo this operation with:\n\n  git switch -\n\nTurn off this advice by setting config variable advice.detachedHead to false\n\nHEAD is now at 4e0fd5384 Merge pull request #9524 from swh/feat_valeo_parking/parkingstack_i390_ffs_mailbox_change\nEntering 'ecu/xpad/ara'\nNote: switching to '591c4c708640423656b97148b3d5767a987d4818'.\n\nYou are in 'detached HEAD' state. You can look around, make experimental\nchanges and commit them, and you can discard any commits you make in this\nstate without impacting any branches by switching back to a branch.\n\nIf you want to create a new branch to retain commits you create, you may\ndo so (now or later) by using -c with the switch command. Example:\n\n  git switch -c <new-branch-name>\n\nOr undo this operation with:\n\n  git switch -\n\nTurn off this advice by setting config variable advice.detachedHead to false\n\nHEAD is now at 591c4c708 Merge pull request #2327 from swh/swp_109160_moving_pkcs11_test_app\nEntering 'ecu/xpad/dlt-daemon'\nNote: switching to '68fa15c725670a73c3c7f3566a99f38cd3a87ae5'.\n\nYou are in 'detached HEAD' state. You can look around, make experimental\nchanges and commit them, and you can discard any commits you make in this\nstate without impacting any branches by switching back to a branch.\n\nIf you want to create a new branch to retain commits you create, you may\ndo so (now or later) by using -c with the switch command. Example:\n\n  git switch -c <new-branch-name>\n\nOr undo this operation with:\n\n  git switch -\n\nTurn off this advice by setting config variable advice.detachedHead to false\n\nHEAD is now at 68fa15c Merge pull request #146 from swh/feature__swp_31496__simplified_gitlint\nEntering 'ecu/xpad/xpad-shared'\nNote: switching to '5fe3ea2c8e16591c6c11a5398c0fd866652ef652'.\n\nYou are in 'detached HEAD' state. You can look around, make experimental\nchanges and commit them, and you can discard any commits you make in this\nstate without impacting any branches by switching back to a branch.\n\nIf you want to create a new branch to retain commits you create, you may\ndo so (now or later) by using -c with the switch command. Example:\n\n  git switch -c <new-branch-name>\n\nOr undo this operation with:\n\n  git switch -\n\nTurn off this advice by setting config variable advice.detachedHead to false\n\nHEAD is now at 5fe3ea2c8e Merge pull request #22942 from swh/juwi_pas_calibration_integration_2024_cw16\nEntering 'platform'\nNote: switching to '0fc13c778f15b8def496ce821b67df115746cfb6'.\n\nYou are in 'detached HEAD' state. You can look around, make experimental\nchanges and commit them, and you can discard any commits you make in this\nstate without impacting any branches by switching back to a branch.\n\nIf you want to create a new branch to retain commits you create, you may\ndo so (now or later) by using -c with the switch command. Example:\n\n  git switch -c <new-branch-name>\n\nOr undo this operation with:\n\n  git switch -\n\nTurn off this advice by setting config variable advice.detachedHead to false\n\nHEAD is now at 0fc13c778f1 Merge pull request #45320 from swh/ssp_string_encoding_optional\nEntering 'system_description'\nNote: switching to '42dc122349acc14be41c1ebee15c7edff680fb79'.\n\nYou are in 'detached HEAD' state. You can look around, make experimental\nchanges and commit them, and you can discard any commits you make in this\nstate without impacting any branches by switching back to a branch.\n\nIf you want to create a new branch to retain commits you create, you may\ndo so (now or later) by using -c with the switch command. Example:\n\n  git switch -c <new-branch-name>\n\nOr undo this operation with:\n\n  git switch -\n\nTurn off this advice by setting config variable advice.detachedHead to false\n\nHEAD is now at 42dc12234 Merge pull request #2319 from swh/at_brcf\nEntering 'third_party/xpad_xpc'\nNote: switching to '9ce2131edf06568e92545d2f5d1464924b016780'.\n\nYou are in 'detached HEAD' state. You can look around, make experimental\nchanges and commit them, and you can discard any commits you make in this\nstate without impacting any branches by switching back to a branch.\n\nIf you want to create a new branch to retain commits you create, you may\ndo so (now or later) by using -c with the switch command. Example:\n\n  git switch -c <new-branch-name>\n\nOr undo this operation with:\n\n  git switch -\n\nTurn off this advice by setting config variable advice.detachedHead to false\n\nHEAD is now at 9ce2131 Merge pull request #212 from swh/anchana-enabling-buildifier\nEntering 'tools/doto'\nNote: switching to '22e48aea74d3e1a9d405529652492a0cfd84611a'.\n\nYou are in 'detached HEAD' state. You can look around, make experimental\nchanges and commit them, and you can discard any commits you make in this\nstate without impacting any branches by switching back to a branch.\n\nIf you want to create a new branch to retain commits you create, you may\ndo so (now or later) by using -c with the switch command. Example:\n\n  git switch -c <new-branch-name>\n\nOr undo this operation with:\n\n  git switch -\n\nTurn off this advice by setting config variable advice.detachedHead to false\n\nHEAD is now at 22e48aea7 Merge pull request #2382 from swh/codify/report_whitelistings",
                            "stdout_lines": [
                                "Entering 'application/adp'",
                                "Note: switching to '8d83dea1d58bef901e97793e1c34ad57986fada1'.",
                                "",
                                "You are in 'detached HEAD' state. You can look around, make experimental",
                                "changes and commit them, and you can discard any commits you make in this",
                                "state without impacting any branches by switching back to a branch.",
                                "",
                                "If you want to create a new branch to retain commits you create, you may",
                                "do so (now or later) by using -c with the switch command. Example:",
                                "",
                                "  git switch -c <new-branch-name>",
                                "",
                                "Or undo this operation with:",
                                "",
                                "  git switch -",
                                "",
                                "Turn off this advice by setting config variable advice.detachedHead to false",
                                "",
                                "HEAD is now at 8d83dea1d58b Merge pull request #167730 from swh/mm/use_ros_without_aliases",
                                "Entering 'application/aeb'",
                                "Note: switching to 'b473c7ab8c70f69511aeff1374d70aef88f33d4a'.",
                                "",
                                "You are in 'detached HEAD' state. You can look around, make experimental",
                                "changes and commit them, and you can discard any commits you make in this",
                                "state without impacting any branches by switching back to a branch.",
                                "",
                                "If you want to create a new branch to retain commits you create, you may",
                                "do so (now or later) by using -c with the switch command. Example:",
                                "",
                                "  git switch -c <new-branch-name>",
                                "",
                                "Or undo this operation with:",
                                "",
                                "  git switch -",
                                "",
                                "Turn off this advice by setting config variable advice.detachedHead to false",
                                "",
                                "HEAD is now at b473c7ab Merge pull request #598 from swh/elsa_erase_aeb",
                                "Entering 'application/fasinfo/ufm'",
                                "Note: switching to '24d683807041b01ac000b8a6212ec6ad50e3b5e2'.",
                                "",
                                "You are in 'detached HEAD' state. You can look around, make experimental",
                                "changes and commit them, and you can discard any commits you make in this",
                                "state without impacting any branches by switching back to a branch.",
                                "",
                                "If you want to create a new branch to retain commits you create, you may",
                                "do so (now or later) by using -c with the switch command. Example:",
                                "",
                                "  git switch -c <new-branch-name>",
                                "",
                                "Or undo this operation with:",
                                "",
                                "  git switch -",
                                "",
                                "Turn off this advice by setting config variable advice.detachedHead to false",
                                "",
                                "HEAD is now at 24d683807 Merge pull request #1800 from swh/cbedda_update_hashes_490",
                                "Entering 'application/foresight'",
                                "Note: switching to '0961a62bed7ee412bf80fe5a9b879e5586964358'.",
                                "",
                                "You are in 'detached HEAD' state. You can look around, make experimental",
                                "changes and commit them, and you can discard any commits you make in this",
                                "state without impacting any branches by switching back to a branch.",
                                "",
                                "If you want to create a new branch to retain commits you create, you may",
                                "do so (now or later) by using -c with the switch command. Example:",
                                "",
                                "  git switch -c <new-branch-name>",
                                "",
                                "Or undo this operation with:",
                                "",
                                "  git switch -",
                                "",
                                "Turn off this advice by setting config variable advice.detachedHead to false",
                                "",
                                "HEAD is now at 0961a62bed Merge pull request #18874 from swh/mah/adbk25-5914/use_mapdalprovider_in_lanedata",
                                "Entering 'application/gnss/common'",
                                "Note: switching to '7aeb42bd9976938f99a41c088c70fe8af14ee8fc'.",
                                "",
                                "You are in 'detached HEAD' state. You can look around, make experimental",
                                "changes and commit them, and you can discard any commits you make in this",
                                "state without impacting any branches by switching back to a branch.",
                                "",
                                "If you want to create a new branch to retain commits you create, you may",
                                "do so (now or later) by using -c with the switch command. Example:",
                                "",
                                "  git switch -c <new-branch-name>",
                                "",
                                "Or undo this operation with:",
                                "",
                                "  git switch -",
                                "",
                                "Turn off this advice by setting config variable advice.detachedHead to false",
                                "",
                                "HEAD is now at 7aeb42bd Merge pull request #711 from swh/vlru/use_newer_coding_api",
                                "Entering 'ci_config'",
                                "Note: switching to 'a2ea1242739a7a16dba7d7781925949e31cfc29f'.",
                                "",
                                "You are in 'detached HEAD' state. You can look around, make experimental",
                                "changes and commit them, and you can discard any commits you make in this",
                                "state without impacting any branches by switching back to a branch.",
                                "",
                                "If you want to create a new branch to retain commits you create, you may",
                                "do so (now or later) by using -c with the switch command. Example:",
                                "",
                                "  git switch -c <new-branch-name>",
                                "",
                                "Or undo this operation with:",
                                "",
                                "  git switch -",
                                "",
                                "Turn off this advice by setting config variable advice.detachedHead to false",
                                "",
                                "HEAD is now at a2ea124273 Merge pull request #62209 from swh/ascott/fix_path_on_windows",
                                "Entering 'domains/fasinfo'",
                                "Note: switching to 'a5b41fd76a124026ff81320e27d5caa5a772f235'.",
                                "",
                                "You are in 'detached HEAD' state. You can look around, make experimental",
                                "changes and commit them, and you can discard any commits you make in this",
                                "state without impacting any branches by switching back to a branch.",
                                "",
                                "If you want to create a new branch to retain commits you create, you may",
                                "do so (now or later) by using -c with the switch command. Example:",
                                "",
                                "  git switch -c <new-branch-name>",
                                "",
                                "Or undo this operation with:",
                                "",
                                "  git switch -",
                                "",
                                "Turn off this advice by setting config variable advice.detachedHead to false",
                                "",
                                "HEAD is now at a5b41fd76a Merge pull request #964 from swh/csav/add_position_on_map_lane_position",
                                "Entering 'domains/generic'",
                                "Note: switching to '872e7456cf3b5838f30c47753e8187b8c62b636a'.",
                                "",
                                "You are in 'detached HEAD' state. You can look around, make experimental",
                                "changes and commit them, and you can discard any commits you make in this",
                                "state without impacting any branches by switching back to a branch.",
                                "",
                                "If you want to create a new branch to retain commits you create, you may",
                                "do so (now or later) by using -c with the switch command. Example:",
                                "",
                                "  git switch -c <new-branch-name>",
                                "",
                                "Or undo this operation with:",
                                "",
                                "  git switch -",
                                "",
                                "Turn off this advice by setting config variable advice.detachedHead to false",
                                "",
                                "HEAD is now at 872e7456 Merge pull request #901 from swh/lber-htcoreq2pm-new-su-soll-volf-wcc",
                                "Entering 'ecu/cvc/cvc'",
                                "Note: switching to 'dbf0e56926a6baad91df5b15b84746c66de73a47'.",
                                "",
                                "You are in 'detached HEAD' state. You can look around, make experimental",
                                "changes and commit them, and you can discard any commits you make in this",
                                "state without impacting any branches by switching back to a branch.",
                                "",
                                "If you want to create a new branch to retain commits you create, you may",
                                "do so (now or later) by using -c with the switch command. Example:",
                                "",
                                "  git switch -c <new-branch-name>",
                                "",
                                "Or undo this operation with:",
                                "",
                                "  git switch -",
                                "",
                                "Turn off this advice by setting config variable advice.detachedHead to false",
                                "",
                                "HEAD is now at dbf0e56 Merge pull request #762 from swh/ag-cvc02-pdx-logistic",
                                "Entering 'ecu/devel/franky_ib/franky'",
                                "Note: switching to '7a74d491251435e7b011e7010d11fbc9224b355c'.",
                                "",
                                "You are in 'detached HEAD' state. You can look around, make experimental",
                                "changes and commit them, and you can discard any commits you make in this",
                                "state without impacting any branches by switching back to a branch.",
                                "",
                                "If you want to create a new branch to retain commits you create, you may",
                                "do so (now or later) by using -c with the switch command. Example:",
                                "",
                                "  git switch -c <new-branch-name>",
                                "",
                                "Or undo this operation with:",
                                "",
                                "  git switch -",
                                "",
                                "Turn off this advice by setting config variable advice.detachedHead to false",
                                "",
                                "HEAD is now at 7a74d49 Merge pull request #28 from swh/mt/dcs2219/define_adp_std_types_for_franky_ib",
                                "Entering 'ecu/ib/ib_vip'",
                                "Note: switching to '77d3abe6f172efef2f93e6c3a61af0f3ee7d7967'.",
                                "",
                                "You are in 'detached HEAD' state. You can look around, make experimental",
                                "changes and commit them, and you can discard any commits you make in this",
                                "state without impacting any branches by switching back to a branch.",
                                "",
                                "If you want to create a new branch to retain commits you create, you may",
                                "do so (now or later) by using -c with the switch command. Example:",
                                "",
                                "  git switch -c <new-branch-name>",
                                "",
                                "Or undo this operation with:",
                                "",
                                "  git switch -",
                                "",
                                "Turn off this advice by setting config variable advice.detachedHead to false",
                                "",
                                "HEAD is now at 77d3abe6f Merge pull request #2123 from swh/autocherry_master_tc_9.2411.2404.2.0",
                                "Entering 'ecu/ipnext'",
                                "Note: switching to '4e0fd5384e92431311a139b52f3b191523237f3f'.",
                                "",
                                "You are in 'detached HEAD' state. You can look around, make experimental",
                                "changes and commit them, and you can discard any commits you make in this",
                                "state without impacting any branches by switching back to a branch.",
                                "",
                                "If you want to create a new branch to retain commits you create, you may",
                                "do so (now or later) by using -c with the switch command. Example:",
                                "",
                                "  git switch -c <new-branch-name>",
                                "",
                                "Or undo this operation with:",
                                "",
                                "  git switch -",
                                "",
                                "Turn off this advice by setting config variable advice.detachedHead to false",
                                "",
                                "HEAD is now at 4e0fd5384 Merge pull request #9524 from swh/feat_valeo_parking/parkingstack_i390_ffs_mailbox_change",
                                "Entering 'ecu/xpad/ara'",
                                "Note: switching to '591c4c708640423656b97148b3d5767a987d4818'.",
                                "",
                                "You are in 'detached HEAD' state. You can look around, make experimental",
                                "changes and commit them, and you can discard any commits you make in this",
                                "state without impacting any branches by switching back to a branch.",
                                "",
                                "If you want to create a new branch to retain commits you create, you may",
                                "do so (now or later) by using -c with the switch command. Example:",
                                "",
                                "  git switch -c <new-branch-name>",
                                "",
                                "Or undo this operation with:",
                                "",
                                "  git switch -",
                                "",
                                "Turn off this advice by setting config variable advice.detachedHead to false",
                                "",
                                "HEAD is now at 591c4c708 Merge pull request #2327 from swh/swp_109160_moving_pkcs11_test_app",
                                "Entering 'ecu/xpad/dlt-daemon'",
                                "Note: switching to '68fa15c725670a73c3c7f3566a99f38cd3a87ae5'.",
                                "",
                                "You are in 'detached HEAD' state. You can look around, make experimental",
                                "changes and commit them, and you can discard any commits you make in this",
                                "state without impacting any branches by switching back to a branch.",
                                "",
                                "If you want to create a new branch to retain commits you create, you may",
                                "do so (now or later) by using -c with the switch command. Example:",
                                "",
                                "  git switch -c <new-branch-name>",
                                "",
                                "Or undo this operation with:",
                                "",
                                "  git switch -",
                                "",
                                "Turn off this advice by setting config variable advice.detachedHead to false",
                                "",
                                "HEAD is now at 68fa15c Merge pull request #146 from swh/feature__swp_31496__simplified_gitlint",
                                "Entering 'ecu/xpad/xpad-shared'",
                                "Note: switching to '5fe3ea2c8e16591c6c11a5398c0fd866652ef652'.",
                                "",
                                "You are in 'detached HEAD' state. You can look around, make experimental",
                                "changes and commit them, and you can discard any commits you make in this",
                                "state without impacting any branches by switching back to a branch.",
                                "",
                                "If you want to create a new branch to retain commits you create, you may",
                                "do so (now or later) by using -c with the switch command. Example:",
                                "",
                                "  git switch -c <new-branch-name>",
                                "",
                                "Or undo this operation with:",
                                "",
                                "  git switch -",
                                "",
                                "Turn off this advice by setting config variable advice.detachedHead to false",
                                "",
                                "HEAD is now at 5fe3ea2c8e Merge pull request #22942 from swh/juwi_pas_calibration_integration_2024_cw16",
                                "Entering 'platform'",
                                "Note: switching to '0fc13c778f15b8def496ce821b67df115746cfb6'.",
                                "",
                                "You are in 'detached HEAD' state. You can look around, make experimental",
                                "changes and commit them, and you can discard any commits you make in this",
                                "state without impacting any branches by switching back to a branch.",
                                "",
                                "If you want to create a new branch to retain commits you create, you may",
                                "do so (now or later) by using -c with the switch command. Example:",
                                "",
                                "  git switch -c <new-branch-name>",
                                "",
                                "Or undo this operation with:",
                                "",
                                "  git switch -",
                                "",
                                "Turn off this advice by setting config variable advice.detachedHead to false",
                                "",
                                "HEAD is now at 0fc13c778f1 Merge pull request #45320 from swh/ssp_string_encoding_optional",
                                "Entering 'system_description'",
                                "Note: switching to '42dc122349acc14be41c1ebee15c7edff680fb79'.",
                                "",
                                "You are in 'detached HEAD' state. You can look around, make experimental",
                                "changes and commit them, and you can discard any commits you make in this",
                                "state without impacting any branches by switching back to a branch.",
                                "",
                                "If you want to create a new branch to retain commits you create, you may",
                                "do so (now or later) by using -c with the switch command. Example:",
                                "",
                                "  git switch -c <new-branch-name>",
                                "",
                                "Or undo this operation with:",
                                "",
                                "  git switch -",
                                "",
                                "Turn off this advice by setting config variable advice.detachedHead to false",
                                "",
                                "HEAD is now at 42dc12234 Merge pull request #2319 from swh/at_brcf",
                                "Entering 'third_party/xpad_xpc'",
                                "Note: switching to '9ce2131edf06568e92545d2f5d1464924b016780'.",
                                "",
                                "You are in 'detached HEAD' state. You can look around, make experimental",
                                "changes and commit them, and you can discard any commits you make in this",
                                "state without impacting any branches by switching back to a branch.",
                                "",
                                "If you want to create a new branch to retain commits you create, you may",
                                "do so (now or later) by using -c with the switch command. Example:",
                                "",
                                "  git switch -c <new-branch-name>",
                                "",
                                "Or undo this operation with:",
                                "",
                                "  git switch -",
                                "",
                                "Turn off this advice by setting config variable advice.detachedHead to false",
                                "",
                                "HEAD is now at 9ce2131 Merge pull request #212 from swh/anchana-enabling-buildifier",
                                "Entering 'tools/doto'",
                                "Note: switching to '22e48aea74d3e1a9d405529652492a0cfd84611a'.",
                                "",
                                "You are in 'detached HEAD' state. You can look around, make experimental",
                                "changes and commit them, and you can discard any commits you make in this",
                                "state without impacting any branches by switching back to a branch.",
                                "",
                                "If you want to create a new branch to retain commits you create, you may",
                                "do so (now or later) by using -c with the switch command. Example:",
                                "",
                                "  git switch -c <new-branch-name>",
                                "",
                                "Or undo this operation with:",
                                "",
                                "  git switch -",
                                "",
                                "Turn off this advice by setting config variable advice.detachedHead to false",
                                "",
                                "HEAD is now at 22e48aea7 Merge pull request #2382 from swh/codify/report_whitelistings"
                            ],
                            "zuul_log_id": "ce4df5fb-964c-7bec-725a-000000000019-1-node"
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-7bec-725a-000000000017",
                        "name": "release-reset-submodules",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/untrusted/project_0/cc-github.bmwgroup.net/swh/ddad_ci_config/roles/release-reset-submodules"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:48:24.453120Z",
                            "start": "2024-04-21T00:47:34.840330Z"
                        },
                        "id": "ce4df5fb-964c-7bec-725a-000000000019",
                        "name": "Reset submodules (Linux)"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "win_command",
                            "changed": false,
                            "false_condition": "use_gitrefs and ansible_os_family == \"Windows\"",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-7bec-725a-000000000017",
                        "name": "release-reset-submodules",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/untrusted/project_0/cc-github.bmwgroup.net/swh/ddad_ci_config/roles/release-reset-submodules"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:48:24.506389Z",
                            "start": "2024-04-21T00:48:24.468096Z"
                        },
                        "id": "ce4df5fb-964c-7bec-725a-00000000001a",
                        "name": "Reset submodules (Windows)"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "win_command",
                            "changed": false,
                            "false_condition": "use_gitrefs and ansible_os_family == \"Windows\"",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-7bec-725a-000000000017",
                        "name": "release-reset-submodules",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/untrusted/project_0/cc-github.bmwgroup.net/swh/ddad_ci_config/roles/release-reset-submodules"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:48:24.550748Z",
                            "start": "2024-04-21T00:48:24.521808Z"
                        },
                        "id": "ce4df5fb-964c-7bec-725a-00000000001b",
                        "name": "Reset submodules (Windows) / workaround to ensure everything is clean"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "win_shell",
                            "changed": false,
                            "false_condition": "ansible_os_family == \"Windows\"",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:48:24.609916Z",
                            "start": "2024-04-21T00:48:24.581863Z"
                        },
                        "id": "ce4df5fb-964c-7bec-725a-00000000001d",
                        "name": ""
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "win_shell",
                            "changed": false,
                            "false_condition": "ansible_os_family == \"Windows\"",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:48:24.651747Z",
                            "start": "2024-04-21T00:48:24.624289Z"
                        },
                        "id": "ce4df5fb-964c-7bec-725a-00000000001e",
                        "name": ""
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "win_command",
                            "changed": false,
                            "false_condition": "ansible_os_family == \"Windows\"",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:48:24.691624Z",
                            "start": "2024-04-21T00:48:24.664399Z"
                        },
                        "id": "ce4df5fb-964c-7bec-725a-00000000001f",
                        "name": "Install wheel python package"
                    }
                }
            ]
        }
    ],
    "stats": {
        "node": {
            "changed": 2,
            "failures": 0,
            "ignored": 0,
            "ok": 3,
            "rescued": 0,
            "skipped": 12,
            "unreachable": 0
        }
    },
    "trusted": false
},
{
    "branch": "master",
    "index": "27",
    "phase": "pre",
    "playbook": "cc-github.bmwgroup.net/swh/zuul-trusted-ddad/playbooks/checkout-correct-change.yaml",
    "plays": [
        {
            "play": {
                "duration": {
                    "end": "2024-04-21T00:48:26.688265Z",
                    "start": "2024-04-21T00:48:26.105006Z"
                },
                "id": "ce4df5fb-964c-f03e-5cd9-000000000002",
                "name": "all"
            },
            "tasks": [
                {
                    "hosts": {
                        "node": {
                            "action": "shell",
                            "changed": false,
                            "false_condition": "zuul.pipeline == \"post-independent\" and zuul.change is defined",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:48:26.688265Z",
                            "start": "2024-04-21T00:48:26.177044Z"
                        },
                        "id": "ce4df5fb-964c-f03e-5cd9-000000000004",
                        "name": "checkout-correct-commit"
                    }
                }
            ]
        }
    ],
    "stats": {
        "node": {
            "changed": 0,
            "failures": 0,
            "ignored": 0,
            "ok": 0,
            "rescued": 0,
            "skipped": 1,
            "unreachable": 0
        }
    },
    "trusted": true
},
{
    "branch": "master",
    "index": "28",
    "phase": "pre",
    "playbook": "cc-github.bmwgroup.net/swh/zuul-trusted-ddad/playbooks/get-time-when-pr-was-merged.yaml",
    "plays": [
        {
            "play": {
                "duration": {
                    "end": "2024-04-21T00:48:28.954712Z",
                    "start": "2024-04-21T00:48:28.791146Z"
                },
                "id": "ce4df5fb-964c-18a8-880a-000000000002",
                "name": "all"
            },
            "tasks": [
                {
                    "hosts": {
                        "node": {
                            "action": "uri",
                            "changed": false,
                            "false_condition": "zuul.pipeline == \"post-independent\"",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:48:28.871301Z",
                            "start": "2024-04-21T00:48:28.841439Z"
                        },
                        "id": "ce4df5fb-964c-18a8-880a-000000000004",
                        "name": "Fetch the time when the PR was merged from Github"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "set_fact",
                            "changed": false,
                            "false_condition": "zuul.pipeline == \"post-independent\"",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:48:28.913925Z",
                            "start": "2024-04-21T00:48:28.886234Z"
                        },
                        "id": "ce4df5fb-964c-18a8-880a-000000000005",
                        "name": "Save the time when the pr was merged to a variable as a fact"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "debug",
                            "changed": false,
                            "false_condition": "zuul.pipeline == \"post-independent\"",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:48:28.954712Z",
                            "start": "2024-04-21T00:48:28.927115Z"
                        },
                        "id": "ce4df5fb-964c-18a8-880a-000000000006",
                        "name": "Print the time when a PR was merged for debug reasons"
                    }
                }
            ]
        }
    ],
    "stats": {
        "node": {
            "changed": 0,
            "failures": 0,
            "ignored": 0,
            "ok": 0,
            "rescued": 0,
            "skipped": 3,
            "unreachable": 0
        }
    },
    "trusted": true
},
{
    "branch": "master",
    "index": "29",
    "phase": "pre",
    "playbook": "cc-github.bmwgroup.net/swh/ddad_ci_config/playbooks/helper/generate-adp-build-metadata-file.yaml",
    "plays": [
        {
            "play": {
                "duration": {
                    "end": "2024-04-21T00:48:38.813486Z",
                    "start": "2024-04-21T00:48:30.476580Z"
                },
                "id": "ce4df5fb-964c-c1f1-2ae2-000000000002",
                "name": "Create the 'adpbuild_<datetime>.yaml' metadata file with information about the ADP build"
            },
            "tasks": [
                {
                    "hosts": {
                        "node": {
                            "action": "debug",
                            "changed": false,
                            "msg": "Start buildset cache upload to: /mnt/cache/f5c48694b22b48c9b5ae47af5c895c47"
                        }
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:48:30.548655Z",
                            "start": "2024-04-21T00:48:30.498770Z"
                        },
                        "id": "ce4df5fb-964c-c1f1-2ae2-000000000025",
                        "name": ""
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "include_tasks",
                            "changed": false,
                            "include": "linux.yaml",
                            "include_args": {}
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-c1f1-2ae2-000000000008",
                        "name": "ensure-pypi-mirror",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/untrusted/project_2/cc-github.bmwgroup.net/codecraft/cilib/roles/ensure-pypi-mirror"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:48:30.642039Z",
                            "start": "2024-04-21T00:48:30.585829Z"
                        },
                        "id": "ce4df5fb-964c-c1f1-2ae2-00000000000a",
                        "name": ""
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "file",
                            "changed": false,
                            "diff": {
                                "after": {
                                    "path": "/home/zuul/.config/pip"
                                },
                                "before": {
                                    "path": "/home/zuul/.config/pip"
                                }
                            },
                            "gid": 1000,
                            "group": "zuul",
                            "invocation": {
                                "module_args": {
                                    "_diff_peek": null,
                                    "_original_basename": null,
                                    "access_time": null,
                                    "access_time_format": "%Y%m%d%H%M.%S",
                                    "attributes": null,
                                    "follow": true,
                                    "force": false,
                                    "group": null,
                                    "mode": 493,
                                    "modification_time": null,
                                    "modification_time_format": "%Y%m%d%H%M.%S",
                                    "owner": null,
                                    "path": "/home/zuul/.config/pip",
                                    "recurse": false,
                                    "selevel": null,
                                    "serole": null,
                                    "setype": null,
                                    "seuser": null,
                                    "src": null,
                                    "state": "directory",
                                    "unsafe_writes": false
                                }
                            },
                            "mode": "0755",
                            "owner": "zuul",
                            "path": "/home/zuul/.config/pip",
                            "size": 4096,
                            "state": "directory",
                            "uid": 1000
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-c1f1-2ae2-000000000008",
                        "name": "ensure-pypi-mirror",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/untrusted/project_2/cc-github.bmwgroup.net/codecraft/cilib/roles/ensure-pypi-mirror"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:48:32.121284Z",
                            "start": "2024-04-21T00:48:30.666187Z"
                        },
                        "id": "ce4df5fb-964c-c1f1-2ae2-000000000070",
                        "name": "Ensure config path exists"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "template",
                            "changed": false,
                            "checksum": "1d4933b949a5d6f1d4143d36db29f03a903107c9",
                            "dest": "/home/zuul/.config/pip/pip.conf",
                            "diff": {
                                "after": {
                                    "path": "/home/zuul/.config/pip/pip.conf"
                                },
                                "before": {
                                    "path": "/home/zuul/.config/pip/pip.conf"
                                }
                            },
                            "gid": 1000,
                            "group": "zuul",
                            "invocation": {
                                "module_args": {
                                    "_diff_peek": null,
                                    "_original_basename": "pip.conf.j2",
                                    "access_time": null,
                                    "access_time_format": "%Y%m%d%H%M.%S",
                                    "attributes": null,
                                    "dest": "/home/zuul/.config/pip/pip.conf",
                                    "follow": true,
                                    "force": false,
                                    "group": null,
                                    "mode": 420,
                                    "modification_time": null,
                                    "modification_time_format": "%Y%m%d%H%M.%S",
                                    "owner": null,
                                    "path": "/home/zuul/.config/pip/pip.conf",
                                    "recurse": false,
                                    "selevel": null,
                                    "serole": null,
                                    "setype": null,
                                    "seuser": null,
                                    "src": null,
                                    "state": "file",
                                    "unsafe_writes": false
                                }
                            },
                            "mode": "0644",
                            "owner": "zuul",
                            "path": "/home/zuul/.config/pip/pip.conf",
                            "size": 114,
                            "state": "file",
                            "uid": 1000
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-c1f1-2ae2-000000000008",
                        "name": "ensure-pypi-mirror",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/untrusted/project_2/cc-github.bmwgroup.net/codecraft/cilib/roles/ensure-pypi-mirror"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:48:33.041805Z",
                            "start": "2024-04-21T00:48:32.207823Z"
                        },
                        "id": "ce4df5fb-964c-c1f1-2ae2-000000000071",
                        "name": "Ensure CodeCraft PyPI mirror in /home/zuul/.config/pip/pip.conf"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "template",
                            "changed": false,
                            "checksum": "228ca72eacf9dce65c5d7ebfebbab36f1dc71efc",
                            "dest": "/home/zuul/.pydistutils.cfg",
                            "diff": {
                                "after": {
                                    "path": "/home/zuul/.pydistutils.cfg"
                                },
                                "before": {
                                    "path": "/home/zuul/.pydistutils.cfg"
                                }
                            },
                            "gid": 1000,
                            "group": "zuul",
                            "invocation": {
                                "module_args": {
                                    "_diff_peek": null,
                                    "_original_basename": "distutils.cfg.j2",
                                    "access_time": null,
                                    "access_time_format": "%Y%m%d%H%M.%S",
                                    "attributes": null,
                                    "dest": "/home/zuul/.pydistutils.cfg",
                                    "follow": true,
                                    "force": false,
                                    "group": null,
                                    "mode": 420,
                                    "modification_time": null,
                                    "modification_time_format": "%Y%m%d%H%M.%S",
                                    "owner": null,
                                    "path": "/home/zuul/.pydistutils.cfg",
                                    "recurse": false,
                                    "selevel": null,
                                    "serole": null,
                                    "setype": null,
                                    "seuser": null,
                                    "src": null,
                                    "state": "file",
                                    "unsafe_writes": false
                                }
                            },
                            "mode": "0644",
                            "owner": "zuul",
                            "path": "/home/zuul/.pydistutils.cfg",
                            "size": 120,
                            "state": "file",
                            "uid": 1000
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-c1f1-2ae2-000000000008",
                        "name": "ensure-pypi-mirror",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/untrusted/project_2/cc-github.bmwgroup.net/codecraft/cilib/roles/ensure-pypi-mirror"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:48:33.793750Z",
                            "start": "2024-04-21T00:48:33.054246Z"
                        },
                        "id": "ce4df5fb-964c-c1f1-2ae2-000000000072",
                        "name": "Ensure CodeCraft PyPI mirror in ~/.pydistutils.cfg"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "include_tasks",
                            "changed": false,
                            "false_condition": "ansible_os_family == \"Windows\"",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-c1f1-2ae2-000000000008",
                        "name": "ensure-pypi-mirror",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/untrusted/project_2/cc-github.bmwgroup.net/codecraft/cilib/roles/ensure-pypi-mirror"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:48:33.843038Z",
                            "start": "2024-04-21T00:48:33.804969Z"
                        },
                        "id": "ce4df5fb-964c-c1f1-2ae2-00000000000b",
                        "name": ""
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "include_role",
                            "changed": false,
                            "include_args": {
                                "name": "zuul-set-log-path"
                            }
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-c1f1-2ae2-00000000000d",
                        "name": "zuul-set-log-url",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/untrusted/project_3/cc-github.bmwgroup.net/codecraft/zuul-conf-global/roles/zuul-set-log-url"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:48:33.932294Z",
                            "start": "2024-04-21T00:48:33.869178Z"
                        },
                        "id": "ce4df5fb-964c-c1f1-2ae2-00000000000f",
                        "name": "Get zuul_log_path"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "set_fact",
                            "changed": false,
                            "false_condition": "codecraft.region not in on_prem_regions",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-c1f1-2ae2-000000000096",
                        "name": "zuul-set-log-path",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/untrusted/project_3/cc-github.bmwgroup.net/codecraft/zuul-conf-global/roles/zuul-set-log-path"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:48:34.019108Z",
                            "start": "2024-04-21T00:48:33.970537Z"
                        },
                        "id": "ce4df5fb-964c-c1f1-2ae2-000000000098",
                        "name": "Set log path prefix (AWS)"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "set_fact",
                            "ansible_facts": {
                                "zuul_log_path_prefix": "swh/ddad"
                            },
                            "changed": false
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-c1f1-2ae2-000000000096",
                        "name": "zuul-set-log-path",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/untrusted/project_3/cc-github.bmwgroup.net/codecraft/zuul-conf-global/roles/zuul-set-log-path"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:48:34.089793Z",
                            "start": "2024-04-21T00:48:34.032389Z"
                        },
                        "id": "ce4df5fb-964c-c1f1-2ae2-000000000099",
                        "name": "Set log path prefix (on-prem)"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "set_fact",
                            "ansible_facts": {
                                "zuul_log_path_suffix": "swf-quality-metrics/swf-metrics-check-nautilus-lifecycle/5025843"
                            },
                            "changed": false
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-c1f1-2ae2-000000000096",
                        "name": "zuul-set-log-path",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/untrusted/project_3/cc-github.bmwgroup.net/codecraft/zuul-conf-global/roles/zuul-set-log-path"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:48:34.172411Z",
                            "start": "2024-04-21T00:48:34.100845Z"
                        },
                        "id": "ce4df5fb-964c-c1f1-2ae2-00000000009a",
                        "name": "Set log path suffix"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "set_fact",
                            "changed": false,
                            "false_condition": "zuul.change is defined",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-c1f1-2ae2-000000000096",
                        "name": "zuul-set-log-path",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/untrusted/project_3/cc-github.bmwgroup.net/codecraft/zuul-conf-global/roles/zuul-set-log-path"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:48:34.222594Z",
                            "start": "2024-04-21T00:48:34.184716Z"
                        },
                        "id": "ce4df5fb-964c-c1f1-2ae2-00000000009b",
                        "name": "Set log path for a change"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "set_fact",
                            "changed": false,
                            "false_condition": "zuul.newrev is defined",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-c1f1-2ae2-000000000096",
                        "name": "zuul-set-log-path",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/untrusted/project_3/cc-github.bmwgroup.net/codecraft/zuul-conf-global/roles/zuul-set-log-path"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:48:34.280742Z",
                            "start": "2024-04-21T00:48:34.232918Z"
                        },
                        "id": "ce4df5fb-964c-c1f1-2ae2-00000000009c",
                        "name": "Set log path for a ref update"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "set_fact",
                            "ansible_facts": {
                                "zuul_log_path_custom": "47/f5c48694b22b48c9b5ae47af5c895c47"
                            },
                            "changed": false
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-c1f1-2ae2-000000000096",
                        "name": "zuul-set-log-path",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/untrusted/project_3/cc-github.bmwgroup.net/codecraft/zuul-conf-global/roles/zuul-set-log-path"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:48:34.349949Z",
                            "start": "2024-04-21T00:48:34.290577Z"
                        },
                        "id": "ce4df5fb-964c-c1f1-2ae2-00000000009d",
                        "name": "Set log path for time triggered pipeline run"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "set_fact",
                            "ansible_facts": {
                                "zuul_log_path": "swh/ddad/47/f5c48694b22b48c9b5ae47af5c895c47/swf-quality-metrics/swf-metrics-check-nautilus-lifecycle/5025843"
                            },
                            "changed": false
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-c1f1-2ae2-000000000096",
                        "name": "zuul-set-log-path",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/untrusted/project_3/cc-github.bmwgroup.net/codecraft/zuul-conf-global/roles/zuul-set-log-path"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:48:34.425374Z",
                            "start": "2024-04-21T00:48:34.362679Z"
                        },
                        "id": "ce4df5fb-964c-c1f1-2ae2-00000000009e",
                        "name": "Set zuul_log_path"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "set_fact",
                            "changed": false,
                            "false_condition": "codecraft.region not in on_prem_regions",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-c1f1-2ae2-00000000000d",
                        "name": "zuul-set-log-url",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/untrusted/project_3/cc-github.bmwgroup.net/codecraft/zuul-conf-global/roles/zuul-set-log-url"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:48:34.491017Z",
                            "start": "2024-04-21T00:48:34.451915Z"
                        },
                        "id": "ce4df5fb-964c-c1f1-2ae2-000000000010",
                        "name": "Set log URL (AWS)"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "set_fact",
                            "ansible_facts": {
                                "zuul_log_url": "https://cc-ci.bmwgroup.net/logs/t/ddad/swh/ddad/47/f5c48694b22b48c9b5ae47af5c895c47/swf-quality-metrics/swf-metrics-check-nautilus-lifecycle/5025843/"
                            },
                            "changed": false
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-c1f1-2ae2-00000000000d",
                        "name": "zuul-set-log-url",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/untrusted/project_3/cc-github.bmwgroup.net/codecraft/zuul-conf-global/roles/zuul-set-log-url"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:48:34.554060Z",
                            "start": "2024-04-21T00:48:34.500254Z"
                        },
                        "id": "ce4df5fb-964c-c1f1-2ae2-000000000011",
                        "name": "Set log URL (on-prem)"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "debug",
                            "changed": false,
                            "zuul_log_url": "https://cc-ci.bmwgroup.net/logs/t/ddad/swh/ddad/47/f5c48694b22b48c9b5ae47af5c895c47/swf-quality-metrics/swf-metrics-check-nautilus-lifecycle/5025843/"
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-c1f1-2ae2-00000000000d",
                        "name": "zuul-set-log-url",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/untrusted/project_3/cc-github.bmwgroup.net/codecraft/zuul-conf-global/roles/zuul-set-log-url"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:48:34.613803Z",
                            "start": "2024-04-21T00:48:34.565544Z"
                        },
                        "id": "ce4df5fb-964c-c1f1-2ae2-000000000012",
                        "name": "URL where zuul logs are stored"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "shell",
                            "changed": true,
                            "cmd": "docker images\n",
                            "delta": "0:00:00.037561",
                            "end": "2024-04-21 00:48:35.137971",
                            "invocation": {
                                "module_args": {
                                    "_raw_params": "docker images\n",
                                    "_uses_shell": true,
                                    "argv": null,
                                    "chdir": "/home/zuul",
                                    "creates": null,
                                    "executable": "/bin/bash",
                                    "removes": null,
                                    "stdin": null,
                                    "stdin_add_newline": true,
                                    "strip_empty_ends": true,
                                    "warn": false,
                                    "zuul_ansible_split_streams": false,
                                    "zuul_log_id": "ce4df5fb-964c-c1f1-2ae2-000000000016-1-node"
                                }
                            },
                            "msg": "",
                            "rc": 0,
                            "start": "2024-04-21 00:48:35.100410",
                            "stderr": "",
                            "stderr_lines": [],
                            "stdout": "REPOSITORY                                               TAG                IMAGE ID       CREATED       SIZE\nddad.artifactory.cc.bmwgroup.net/adp-docker/ros-noetic   2022.02.17.06.31   bf7a8dacdef5   2 years ago   4.13GB",
                            "stdout_lines": [
                                "REPOSITORY                                               TAG                IMAGE ID       CREATED       SIZE",
                                "ddad.artifactory.cc.bmwgroup.net/adp-docker/ros-noetic   2022.02.17.06.31   bf7a8dacdef5   2 years ago   4.13GB"
                            ],
                            "zuul_log_id": "ce4df5fb-964c-c1f1-2ae2-000000000016-1-node"
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-c1f1-2ae2-000000000014",
                        "name": "docker-image-facts",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/untrusted/project_0/cc-github.bmwgroup.net/swh/ddad_ci_config/roles/docker-image-facts"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:48:35.198785Z",
                            "start": "2024-04-21T00:48:34.667790Z"
                        },
                        "id": "ce4df5fb-964c-c1f1-2ae2-000000000016",
                        "name": "List all docker images of the node image"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "docker_image_info",
                            "changed": false,
                            "images": [
                                {
                                    "Architecture": "amd64",
                                    "Author": "",
                                    "Comment": "buildkit.dockerfile.v0",
                                    "Config": {
                                        "ArgsEscaped": true,
                                        "AttachStderr": false,
                                        "AttachStdin": false,
                                        "AttachStdout": false,
                                        "Cmd": [
                                            "bash"
                                        ],
                                        "Domainname": "",
                                        "Entrypoint": [
                                            "/bin/entrypoint.sh"
                                        ],
                                        "Env": [
                                            "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                                            "WORKDIR=/workspace",
                                            "JAVA_TOOL_OPTIONS= -XX:-UsePerfData",
                                            "LANG=C.UTF-8",
                                            "LANGUAGE=C.UTF-8",
                                            "LC_ALL=C.UTF-8"
                                        ],
                                        "Hostname": "",
                                        "Image": "",
                                        "Labels": null,
                                        "OnBuild": null,
                                        "OpenStdin": false,
                                        "StdinOnce": false,
                                        "Tty": false,
                                        "User": "",
                                        "Volumes": {
                                            "/workspace": {}
                                        },
                                        "WorkingDir": ""
                                    },
                                    "Container": "",
                                    "ContainerConfig": {
                                        "AttachStderr": false,
                                        "AttachStdin": false,
                                        "AttachStdout": false,
                                        "Cmd": null,
                                        "Domainname": "",
                                        "Entrypoint": null,
                                        "Env": null,
                                        "Hostname": "",
                                        "Image": "",
                                        "Labels": null,
                                        "OnBuild": null,
                                        "OpenStdin": false,
                                        "StdinOnce": false,
                                        "Tty": false,
                                        "User": "",
                                        "Volumes": null,
                                        "WorkingDir": ""
                                    },
                                    "Created": "2022-02-17T06:39:35.510866711Z",
                                    "DockerVersion": "",
                                    "GraphDriver": {
                                        "Data": {
                                            "LowerDir": "/var/lib/docker/overlay2/2d0c908485379c5cc161fd6a4b41f7d6776689efb537a79f0227ea36e1d24bc3/diff:/var/lib/docker/overlay2/41f8da58bc8012b2442cf96c717be70f4334eb7e73de2c0e474623ccaf2abc1d/diff:/var/lib/docker/overlay2/450bfb590a73fcce86a3b59abe5e4169e398e6348ead9369beae034219895c10/diff:/var/lib/docker/overlay2/4ae8c78a5eb33cf04387a2e9e4928ea35f4e26b163270c703781d9d88c87d7f7/diff:/var/lib/docker/overlay2/5bd00db4b3e2a8ba7ffa4995853f2f51fc0c7cd468a27ecf58cb0076998912d7/diff:/var/lib/docker/overlay2/df192cf29809b844d7497dc5af29cb546ed1b5df13257d1d6f2cd7e276bb1197/diff:/var/lib/docker/overlay2/b4af3a0eadfe3221d9b72f94d71698daa6494714d5135c6c0c30f35b9ba38d4c/diff:/var/lib/docker/overlay2/c53723500bef77e8e613eb638131086e7ded941b02ed7108595b6608d7d49873/diff:/var/lib/docker/overlay2/0c267b9824ac6481a1f2412f9dcff8e6c232fcebeb3644d89cb0910c6196b407/diff:/var/lib/docker/overlay2/b94bb561b512198da0be8d2ab0940f04c7ada0ae4a0a65689a8c7d47a1b0a8a0/diff:/var/lib/docker/overlay2/7373006fe0bf2049f9fffca2cf36700f9b202d3d4a269df53191b4a8aa3fda27/diff:/var/lib/docker/overlay2/415bf2bc0d58f128d58a3ceed86513e39add59e3d5b490c47d5efbee8f41d02b/diff:/var/lib/docker/overlay2/fc2e3e77cbd6381996a99f253cd062a7f59e4756f063237dd24e54d1075e4d45/diff:/var/lib/docker/overlay2/6e11e7dfc3535b398d3fe9e2b9e60fc949d833503711107b0d20cf92148e192c/diff",
                                            "MergedDir": "/var/lib/docker/overlay2/bc5a841b6d498c993fd1547dcb181a67b2f01cf41e9d5e949bcdcce6c9cbfce5/merged",
                                            "UpperDir": "/var/lib/docker/overlay2/bc5a841b6d498c993fd1547dcb181a67b2f01cf41e9d5e949bcdcce6c9cbfce5/diff",
                                            "WorkDir": "/var/lib/docker/overlay2/bc5a841b6d498c993fd1547dcb181a67b2f01cf41e9d5e949bcdcce6c9cbfce5/work"
                                        },
                                        "Name": "overlay2"
                                    },
                                    "Id": "sha256:bf7a8dacdef57330c84ce2fc7d32f28f904709d70f3e4cd3ddedfacbeeb63694",
                                    "Metadata": {
                                        "LastTagTime": "0001-01-01T00:00:00Z"
                                    },
                                    "Os": "linux",
                                    "Parent": "",
                                    "RepoDigests": [
                                        "ddad.artifactory.cc.bmwgroup.net/adp-docker/ros-noetic@sha256:50aad994b796d798fbf6b6631cf35039cb2df42d1ffb9645552be417aa947319"
                                    ],
                                    "RepoTags": [
                                        "ddad.artifactory.cc.bmwgroup.net/adp-docker/ros-noetic:2022.02.17.06.31"
                                    ],
                                    "RootFS": {
                                        "Layers": [
                                            "sha256:36ffdceb4c77bf34325fb695e64ea447f688797f2f1e3af224c29593310578d2",
                                            "sha256:ef1ede20ef2cbb57925f02c93b39f8f02769f46f3a42923632cf07ac9e6c4830",
                                            "sha256:ab0dee5deeb48565459ddec328e28cece0af382aa15d154a57b25f1481446b81",
                                            "sha256:0d66604a52564301aabe9029504f59aa46b15f6489857ec534b840a12ff05ed6",
                                            "sha256:4a2375129f8bfebebf9bb32619dd82d0cfaf1075b373fcfe5c59222165c7555d",
                                            "sha256:ac78ee88478c806bf216f6ffae40e8c2254da7cf9e605523ff933203c7c52b09",
                                            "sha256:f6b3531cfa7fd76bc61cee841eb2d7d0c5261adc7a4cddb52d4d95b9ec4d48b8",
                                            "sha256:338ce7b2e957f2b1453645f381b187348701384c370b1157bcaed0bc5b178a3e",
                                            "sha256:1da53ef726b8ffaeb04a76f2a41419ca38ba7b819b9814a636f7a7aefae9d210",
                                            "sha256:1718e21b75abe2c8008e5dacda5a93f14dc2a07ef8849a7510320991e5ca2418",
                                            "sha256:82ad365cfc5d413c6bd9a9ae4313e0ded8a7ff300905eae79bdf5d9e703e5318",
                                            "sha256:7f135e6ab4b75b034f8fc1de8629bd500299a5cb67a592aeb3a2655d88c58d75",
                                            "sha256:c917f96144143b5f67dbe743abab8db25ef8c5fd636511fcaae49bfdf15ff046",
                                            "sha256:18208f62b1ad076068c887118af4c8c4986ab20946979cb817e12ed9d507b50c",
                                            "sha256:18208f62b1ad076068c887118af4c8c4986ab20946979cb817e12ed9d507b50c"
                                        ],
                                        "Type": "layers"
                                    },
                                    "Size": 4129971152
                                }
                            ],
                            "invocation": {
                                "module_args": {
                                    "api_version": "auto",
                                    "ca_cert": null,
                                    "client_cert": null,
                                    "client_key": null,
                                    "debug": false,
                                    "docker_host": "unix://var/run/docker.sock",
                                    "name": [
                                        "ddad.artifactory.cc.bmwgroup.net/adp-docker/ros-noetic:2022.02.17.06.31"
                                    ],
                                    "ssl_version": null,
                                    "timeout": 60,
                                    "tls": false,
                                    "tls_hostname": null,
                                    "use_ssh_client": false,
                                    "validate_certs": false
                                }
                            }
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-c1f1-2ae2-000000000014",
                        "name": "docker-image-facts",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/untrusted/project_0/cc-github.bmwgroup.net/swh/ddad_ci_config/roles/docker-image-facts"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:48:35.973528Z",
                            "start": "2024-04-21T00:48:35.209471Z"
                        },
                        "id": "ce4df5fb-964c-c1f1-2ae2-000000000017",
                        "name": "Get docker image facts for adp-docker/ros-noetic"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "set_fact",
                            "ansible_facts": {
                                "docker_image_digest": "ddad.artifactory.cc.bmwgroup.net/adp-docker/ros-noetic@sha256:50aad994b796d798fbf6b6631cf35039cb2df42d1ffb9645552be417aa947319"
                            },
                            "changed": false
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-c1f1-2ae2-000000000014",
                        "name": "docker-image-facts",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/untrusted/project_0/cc-github.bmwgroup.net/swh/ddad_ci_config/roles/docker-image-facts"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:48:36.062228Z",
                            "start": "2024-04-21T00:48:35.989714Z"
                        },
                        "id": "ce4df5fb-964c-c1f1-2ae2-000000000018",
                        "name": "Set Docker image digest fact"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "set_fact",
                            "ansible_facts": {
                                "docker_image_tag": "ddad.artifactory.cc.bmwgroup.net/adp-docker/ros-noetic:2022.02.17.06.31"
                            },
                            "changed": false
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-c1f1-2ae2-000000000014",
                        "name": "docker-image-facts",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/untrusted/project_0/cc-github.bmwgroup.net/swh/ddad_ci_config/roles/docker-image-facts"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:48:36.139054Z",
                            "start": "2024-04-21T00:48:36.076777Z"
                        },
                        "id": "ce4df5fb-964c-c1f1-2ae2-000000000019",
                        "name": "Set Docker image tag fact"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "debug",
                            "changed": false,
                            "msg": "Used docker image digest is: ddad.artifactory.cc.bmwgroup.net/adp-docker/ros-noetic@sha256:50aad994b796d798fbf6b6631cf35039cb2df42d1ffb9645552be417aa947319"
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-c1f1-2ae2-000000000014",
                        "name": "docker-image-facts",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/untrusted/project_0/cc-github.bmwgroup.net/swh/ddad_ci_config/roles/docker-image-facts"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:48:36.210095Z",
                            "start": "2024-04-21T00:48:36.147920Z"
                        },
                        "id": "ce4df5fb-964c-c1f1-2ae2-00000000001a",
                        "name": ""
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "debug",
                            "changed": false,
                            "msg": "Used docker image tag is: ddad.artifactory.cc.bmwgroup.net/adp-docker/ros-noetic:2022.02.17.06.31"
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-c1f1-2ae2-000000000014",
                        "name": "docker-image-facts",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/untrusted/project_0/cc-github.bmwgroup.net/swh/ddad_ci_config/roles/docker-image-facts"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:48:36.276077Z",
                            "start": "2024-04-21T00:48:36.224191Z"
                        },
                        "id": "ce4df5fb-964c-c1f1-2ae2-00000000001b",
                        "name": ""
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "set_fact",
                            "changed": false,
                            "msg": "All items completed",
                            "results": [
                                {
                                    "ansible_facts": {
                                        "metadata_build_githash": {
                                            "adp": "8d83dea1d58bef901e97793e1c34ad57986fada1"
                                        }
                                    },
                                    "ansible_loop_var": "item",
                                    "changed": false,
                                    "failed": false,
                                    "item": {
                                        "canonical_hostname": "cc-github.bmwgroup.net",
                                        "canonical_name": "cc-github.bmwgroup.net/swh/adp",
                                        "checkout": "master",
                                        "checkout_description": "zuul branch",
                                        "commit": "8d83dea1d58bef901e97793e1c34ad57986fada1",
                                        "name": "swh/adp",
                                        "required": true,
                                        "short_name": "adp",
                                        "src_dir": "src/cc-github.bmwgroup.net/swh/adp"
                                    }
                                },
                                {
                                    "ansible_facts": {
                                        "metadata_build_githash": {
                                            "adp": "8d83dea1d58bef901e97793e1c34ad57986fada1",
                                            "cvc": "dbf0e56926a6baad91df5b15b84746c66de73a47"
                                        }
                                    },
                                    "ansible_loop_var": "item",
                                    "changed": false,
                                    "failed": false,
                                    "item": {
                                        "canonical_hostname": "cc-github.bmwgroup.net",
                                        "canonical_name": "cc-github.bmwgroup.net/swh/cvc",
                                        "checkout": "master",
                                        "checkout_description": "zuul branch",
                                        "commit": "dbf0e56926a6baad91df5b15b84746c66de73a47",
                                        "name": "swh/cvc",
                                        "required": true,
                                        "short_name": "cvc",
                                        "src_dir": "src/cc-github.bmwgroup.net/swh/cvc"
                                    }
                                },
                                {
                                    "ansible_facts": {
                                        "metadata_build_githash": {
                                            "adp": "8d83dea1d58bef901e97793e1c34ad57986fada1",
                                            "cvc": "dbf0e56926a6baad91df5b15b84746c66de73a47",
                                            "ddad": "32fe27876b12e612823c5f9cfd63b2cc1eaa68c1"
                                        }
                                    },
                                    "ansible_loop_var": "item",
                                    "changed": false,
                                    "failed": false,
                                    "item": {
                                        "canonical_hostname": "cc-github.bmwgroup.net",
                                        "canonical_name": "cc-github.bmwgroup.net/swh/ddad",
                                        "checkout": "master",
                                        "checkout_description": "zuul branch",
                                        "commit": "32fe27876b12e612823c5f9cfd63b2cc1eaa68c1",
                                        "name": "swh/ddad",
                                        "required": true,
                                        "short_name": "ddad",
                                        "src_dir": "src/cc-github.bmwgroup.net/swh/ddad"
                                    }
                                },
                                {
                                    "ansible_facts": {
                                        "metadata_build_githash": {
                                            "adp": "8d83dea1d58bef901e97793e1c34ad57986fada1",
                                            "cvc": "dbf0e56926a6baad91df5b15b84746c66de73a47",
                                            "ddad": "32fe27876b12e612823c5f9cfd63b2cc1eaa68c1",
                                            "ddad-domains-fasinfo": "a5b41fd76a124026ff81320e27d5caa5a772f235"
                                        }
                                    },
                                    "ansible_loop_var": "item",
                                    "changed": false,
                                    "failed": false,
                                    "item": {
                                        "canonical_hostname": "cc-github.bmwgroup.net",
                                        "canonical_name": "cc-github.bmwgroup.net/swh/ddad-domains-fasinfo",
                                        "checkout": "master",
                                        "checkout_description": "zuul branch",
                                        "commit": "a5b41fd76a124026ff81320e27d5caa5a772f235",
                                        "name": "swh/ddad-domains-fasinfo",
                                        "required": true,
                                        "short_name": "ddad-domains-fasinfo",
                                        "src_dir": "src/cc-github.bmwgroup.net/swh/ddad-domains-fasinfo"
                                    }
                                },
                                {
                                    "ansible_facts": {
                                        "metadata_build_githash": {
                                            "adp": "8d83dea1d58bef901e97793e1c34ad57986fada1",
                                            "cvc": "dbf0e56926a6baad91df5b15b84746c66de73a47",
                                            "ddad": "32fe27876b12e612823c5f9cfd63b2cc1eaa68c1",
                                            "ddad-domains-fasinfo": "a5b41fd76a124026ff81320e27d5caa5a772f235",
                                            "ddad-domains-generic": "872e7456cf3b5838f30c47753e8187b8c62b636a"
                                        }
                                    },
                                    "ansible_loop_var": "item",
                                    "changed": false,
                                    "failed": false,
                                    "item": {
                                        "canonical_hostname": "cc-github.bmwgroup.net",
                                        "canonical_name": "cc-github.bmwgroup.net/swh/ddad-domains-generic",
                                        "checkout": "master",
                                        "checkout_description": "zuul branch",
                                        "commit": "872e7456cf3b5838f30c47753e8187b8c62b636a",
                                        "name": "swh/ddad-domains-generic",
                                        "required": true,
                                        "short_name": "ddad-domains-generic",
                                        "src_dir": "src/cc-github.bmwgroup.net/swh/ddad-domains-generic"
                                    }
                                },
                                {
                                    "ansible_facts": {
                                        "metadata_build_githash": {
                                            "adp": "8d83dea1d58bef901e97793e1c34ad57986fada1",
                                            "cvc": "dbf0e56926a6baad91df5b15b84746c66de73a47",
                                            "ddad": "32fe27876b12e612823c5f9cfd63b2cc1eaa68c1",
                                            "ddad-domains-fasinfo": "a5b41fd76a124026ff81320e27d5caa5a772f235",
                                            "ddad-domains-generic": "872e7456cf3b5838f30c47753e8187b8c62b636a",
                                            "ddad-ecu-ipnext": "4e0fd5384e92431311a139b52f3b191523237f3f"
                                        }
                                    },
                                    "ansible_loop_var": "item",
                                    "changed": false,
                                    "failed": false,
                                    "item": {
                                        "canonical_hostname": "cc-github.bmwgroup.net",
                                        "canonical_name": "cc-github.bmwgroup.net/swh/ddad-ecu-ipnext",
                                        "checkout": "master",
                                        "checkout_description": "zuul branch",
                                        "commit": "4e0fd5384e92431311a139b52f3b191523237f3f",
                                        "name": "swh/ddad-ecu-ipnext",
                                        "required": true,
                                        "short_name": "ddad-ecu-ipnext",
                                        "src_dir": "src/cc-github.bmwgroup.net/swh/ddad-ecu-ipnext"
                                    }
                                },
                                {
                                    "ansible_facts": {
                                        "metadata_build_githash": {
                                            "adp": "8d83dea1d58bef901e97793e1c34ad57986fada1",
                                            "cvc": "dbf0e56926a6baad91df5b15b84746c66de73a47",
                                            "ddad": "32fe27876b12e612823c5f9cfd63b2cc1eaa68c1",
                                            "ddad-domains-fasinfo": "a5b41fd76a124026ff81320e27d5caa5a772f235",
                                            "ddad-domains-generic": "872e7456cf3b5838f30c47753e8187b8c62b636a",
                                            "ddad-ecu-ipnext": "4e0fd5384e92431311a139b52f3b191523237f3f",
                                            "ddad_ci_config": "a2ea1242739a7a16dba7d7781925949e31cfc29f"
                                        }
                                    },
                                    "ansible_loop_var": "item",
                                    "changed": false,
                                    "failed": false,
                                    "item": {
                                        "canonical_hostname": "cc-github.bmwgroup.net",
                                        "canonical_name": "cc-github.bmwgroup.net/swh/ddad_ci_config",
                                        "checkout": "master",
                                        "checkout_description": "zuul branch",
                                        "commit": "a2ea1242739a7a16dba7d7781925949e31cfc29f",
                                        "name": "swh/ddad_ci_config",
                                        "required": true,
                                        "short_name": "ddad_ci_config",
                                        "src_dir": "src/cc-github.bmwgroup.net/swh/ddad_ci_config"
                                    }
                                },
                                {
                                    "ansible_facts": {
                                        "metadata_build_githash": {
                                            "adp": "8d83dea1d58bef901e97793e1c34ad57986fada1",
                                            "cvc": "dbf0e56926a6baad91df5b15b84746c66de73a47",
                                            "ddad": "32fe27876b12e612823c5f9cfd63b2cc1eaa68c1",
                                            "ddad-domains-fasinfo": "a5b41fd76a124026ff81320e27d5caa5a772f235",
                                            "ddad-domains-generic": "872e7456cf3b5838f30c47753e8187b8c62b636a",
                                            "ddad-ecu-ipnext": "4e0fd5384e92431311a139b52f3b191523237f3f",
                                            "ddad_ci_config": "a2ea1242739a7a16dba7d7781925949e31cfc29f",
                                            "ddad_platform": "0fc13c778f15b8def496ce821b67df115746cfb6"
                                        }
                                    },
                                    "ansible_loop_var": "item",
                                    "changed": false,
                                    "failed": false,
                                    "item": {
                                        "canonical_hostname": "cc-github.bmwgroup.net",
                                        "canonical_name": "cc-github.bmwgroup.net/swh/ddad_platform",
                                        "checkout": "master",
                                        "checkout_description": "zuul branch",
                                        "commit": "0fc13c778f15b8def496ce821b67df115746cfb6",
                                        "name": "swh/ddad_platform",
                                        "required": true,
                                        "short_name": "ddad_platform",
                                        "src_dir": "src/cc-github.bmwgroup.net/swh/ddad_platform"
                                    }
                                },
                                {
                                    "ansible_facts": {
                                        "metadata_build_githash": {
                                            "adp": "8d83dea1d58bef901e97793e1c34ad57986fada1",
                                            "cvc": "dbf0e56926a6baad91df5b15b84746c66de73a47",
                                            "ddad": "32fe27876b12e612823c5f9cfd63b2cc1eaa68c1",
                                            "ddad-domains-fasinfo": "a5b41fd76a124026ff81320e27d5caa5a772f235",
                                            "ddad-domains-generic": "872e7456cf3b5838f30c47753e8187b8c62b636a",
                                            "ddad-ecu-ipnext": "4e0fd5384e92431311a139b52f3b191523237f3f",
                                            "ddad_ci_config": "a2ea1242739a7a16dba7d7781925949e31cfc29f",
                                            "ddad_platform": "0fc13c778f15b8def496ce821b67df115746cfb6",
                                            "domain-tools": "22e48aea74d3e1a9d405529652492a0cfd84611a"
                                        }
                                    },
                                    "ansible_loop_var": "item",
                                    "changed": false,
                                    "failed": false,
                                    "item": {
                                        "canonical_hostname": "cc-github.bmwgroup.net",
                                        "canonical_name": "cc-github.bmwgroup.net/swh/domain-tools",
                                        "checkout": "master",
                                        "checkout_description": "zuul branch",
                                        "commit": "22e48aea74d3e1a9d405529652492a0cfd84611a",
                                        "name": "swh/domain-tools",
                                        "required": true,
                                        "short_name": "domain-tools",
                                        "src_dir": "src/cc-github.bmwgroup.net/swh/domain-tools"
                                    }
                                },
                                {
                                    "ansible_facts": {
                                        "metadata_build_githash": {
                                            "adp": "8d83dea1d58bef901e97793e1c34ad57986fada1",
                                            "cvc": "dbf0e56926a6baad91df5b15b84746c66de73a47",
                                            "ddad": "32fe27876b12e612823c5f9cfd63b2cc1eaa68c1",
                                            "ddad-domains-fasinfo": "a5b41fd76a124026ff81320e27d5caa5a772f235",
                                            "ddad-domains-generic": "872e7456cf3b5838f30c47753e8187b8c62b636a",
                                            "ddad-ecu-ipnext": "4e0fd5384e92431311a139b52f3b191523237f3f",
                                            "ddad_ci_config": "a2ea1242739a7a16dba7d7781925949e31cfc29f",
                                            "ddad_platform": "0fc13c778f15b8def496ce821b67df115746cfb6",
                                            "domain-tools": "22e48aea74d3e1a9d405529652492a0cfd84611a",
                                            "ecu_xpad_sc_mpad": "9f275d5b9f924de72632bda96690327fccdd5ff5"
                                        }
                                    },
                                    "ansible_loop_var": "item",
                                    "changed": false,
                                    "failed": false,
                                    "item": {
                                        "canonical_hostname": "cc-github.bmwgroup.net",
                                        "canonical_name": "cc-github.bmwgroup.net/swh/ecu_xpad_sc_mpad",
                                        "checkout": "master",
                                        "checkout_description": "zuul branch",
                                        "commit": "9f275d5b9f924de72632bda96690327fccdd5ff5",
                                        "name": "swh/ecu_xpad_sc_mpad",
                                        "required": true,
                                        "short_name": "ecu_xpad_sc_mpad",
                                        "src_dir": "src/cc-github.bmwgroup.net/swh/ecu_xpad_sc_mpad"
                                    }
                                },
                                {
                                    "ansible_facts": {
                                        "metadata_build_githash": {
                                            "adp": "8d83dea1d58bef901e97793e1c34ad57986fada1",
                                            "cvc": "dbf0e56926a6baad91df5b15b84746c66de73a47",
                                            "ddad": "32fe27876b12e612823c5f9cfd63b2cc1eaa68c1",
                                            "ddad-domains-fasinfo": "a5b41fd76a124026ff81320e27d5caa5a772f235",
                                            "ddad-domains-generic": "872e7456cf3b5838f30c47753e8187b8c62b636a",
                                            "ddad-ecu-ipnext": "4e0fd5384e92431311a139b52f3b191523237f3f",
                                            "ddad_ci_config": "a2ea1242739a7a16dba7d7781925949e31cfc29f",
                                            "ddad_platform": "0fc13c778f15b8def496ce821b67df115746cfb6",
                                            "domain-tools": "22e48aea74d3e1a9d405529652492a0cfd84611a",
                                            "ecu_xpad_sc_mpad": "9f275d5b9f924de72632bda96690327fccdd5ff5",
                                            "foresight": "0961a62bed7ee412bf80fe5a9b879e5586964358"
                                        }
                                    },
                                    "ansible_loop_var": "item",
                                    "changed": false,
                                    "failed": false,
                                    "item": {
                                        "canonical_hostname": "cc-github.bmwgroup.net",
                                        "canonical_name": "cc-github.bmwgroup.net/swh/foresight",
                                        "checkout": "master",
                                        "checkout_description": "zuul branch",
                                        "commit": "0961a62bed7ee412bf80fe5a9b879e5586964358",
                                        "name": "swh/foresight",
                                        "required": true,
                                        "short_name": "foresight",
                                        "src_dir": "src/cc-github.bmwgroup.net/swh/foresight"
                                    }
                                },
                                {
                                    "ansible_facts": {
                                        "metadata_build_githash": {
                                            "adp": "8d83dea1d58bef901e97793e1c34ad57986fada1",
                                            "cvc": "dbf0e56926a6baad91df5b15b84746c66de73a47",
                                            "ddad": "32fe27876b12e612823c5f9cfd63b2cc1eaa68c1",
                                            "ddad-domains-fasinfo": "a5b41fd76a124026ff81320e27d5caa5a772f235",
                                            "ddad-domains-generic": "872e7456cf3b5838f30c47753e8187b8c62b636a",
                                            "ddad-ecu-ipnext": "4e0fd5384e92431311a139b52f3b191523237f3f",
                                            "ddad_ci_config": "a2ea1242739a7a16dba7d7781925949e31cfc29f",
                                            "ddad_platform": "0fc13c778f15b8def496ce821b67df115746cfb6",
                                            "domain-tools": "22e48aea74d3e1a9d405529652492a0cfd84611a",
                                            "ecu_xpad_sc_mpad": "9f275d5b9f924de72632bda96690327fccdd5ff5",
                                            "foresight": "0961a62bed7ee412bf80fe5a9b879e5586964358",
                                            "franky_ib": "7a74d491251435e7b011e7010d11fbc9224b355c"
                                        }
                                    },
                                    "ansible_loop_var": "item",
                                    "changed": false,
                                    "failed": false,
                                    "item": {
                                        "canonical_hostname": "cc-github.bmwgroup.net",
                                        "canonical_name": "cc-github.bmwgroup.net/swh/franky_ib",
                                        "checkout": "master",
                                        "checkout_description": "zuul branch",
                                        "commit": "7a74d491251435e7b011e7010d11fbc9224b355c",
                                        "name": "swh/franky_ib",
                                        "required": true,
                                        "short_name": "franky_ib",
                                        "src_dir": "src/cc-github.bmwgroup.net/swh/franky_ib"
                                    }
                                },
                                {
                                    "ansible_facts": {
                                        "metadata_build_githash": {
                                            "adp": "8d83dea1d58bef901e97793e1c34ad57986fada1",
                                            "cvc": "dbf0e56926a6baad91df5b15b84746c66de73a47",
                                            "ddad": "32fe27876b12e612823c5f9cfd63b2cc1eaa68c1",
                                            "ddad-domains-fasinfo": "a5b41fd76a124026ff81320e27d5caa5a772f235",
                                            "ddad-domains-generic": "872e7456cf3b5838f30c47753e8187b8c62b636a",
                                            "ddad-ecu-ipnext": "4e0fd5384e92431311a139b52f3b191523237f3f",
                                            "ddad_ci_config": "a2ea1242739a7a16dba7d7781925949e31cfc29f",
                                            "ddad_platform": "0fc13c778f15b8def496ce821b67df115746cfb6",
                                            "domain-tools": "22e48aea74d3e1a9d405529652492a0cfd84611a",
                                            "ecu_xpad_sc_mpad": "9f275d5b9f924de72632bda96690327fccdd5ff5",
                                            "foresight": "0961a62bed7ee412bf80fe5a9b879e5586964358",
                                            "franky_ib": "7a74d491251435e7b011e7010d11fbc9224b355c",
                                            "gnss_common": "7aeb42bd9976938f99a41c088c70fe8af14ee8fc"
                                        }
                                    },
                                    "ansible_loop_var": "item",
                                    "changed": false,
                                    "failed": false,
                                    "item": {
                                        "canonical_hostname": "cc-github.bmwgroup.net",
                                        "canonical_name": "cc-github.bmwgroup.net/swh/gnss_common",
                                        "checkout": "master",
                                        "checkout_description": "zuul branch",
                                        "commit": "7aeb42bd9976938f99a41c088c70fe8af14ee8fc",
                                        "name": "swh/gnss_common",
                                        "required": true,
                                        "short_name": "gnss_common",
                                        "src_dir": "src/cc-github.bmwgroup.net/swh/gnss_common"
                                    }
                                },
                                {
                                    "ansible_facts": {
                                        "metadata_build_githash": {
                                            "adp": "8d83dea1d58bef901e97793e1c34ad57986fada1",
                                            "cvc": "dbf0e56926a6baad91df5b15b84746c66de73a47",
                                            "ddad": "32fe27876b12e612823c5f9cfd63b2cc1eaa68c1",
                                            "ddad-domains-fasinfo": "a5b41fd76a124026ff81320e27d5caa5a772f235",
                                            "ddad-domains-generic": "872e7456cf3b5838f30c47753e8187b8c62b636a",
                                            "ddad-ecu-ipnext": "4e0fd5384e92431311a139b52f3b191523237f3f",
                                            "ddad_ci_config": "a2ea1242739a7a16dba7d7781925949e31cfc29f",
                                            "ddad_platform": "0fc13c778f15b8def496ce821b67df115746cfb6",
                                            "domain-tools": "22e48aea74d3e1a9d405529652492a0cfd84611a",
                                            "ecu_xpad_sc_mpad": "9f275d5b9f924de72632bda96690327fccdd5ff5",
                                            "foresight": "0961a62bed7ee412bf80fe5a9b879e5586964358",
                                            "franky_ib": "7a74d491251435e7b011e7010d11fbc9224b355c",
                                            "gnss_common": "7aeb42bd9976938f99a41c088c70fe8af14ee8fc",
                                            "ib-vip": "77d3abe6f172efef2f93e6c3a61af0f3ee7d7967"
                                        }
                                    },
                                    "ansible_loop_var": "item",
                                    "changed": false,
                                    "failed": false,
                                    "item": {
                                        "canonical_hostname": "cc-github.bmwgroup.net",
                                        "canonical_name": "cc-github.bmwgroup.net/swh/ib-vip",
                                        "checkout": "master",
                                        "checkout_description": "zuul branch",
                                        "commit": "77d3abe6f172efef2f93e6c3a61af0f3ee7d7967",
                                        "name": "swh/ib-vip",
                                        "required": true,
                                        "short_name": "ib-vip",
                                        "src_dir": "src/cc-github.bmwgroup.net/swh/ib-vip"
                                    }
                                },
                                {
                                    "ansible_facts": {
                                        "metadata_build_githash": {
                                            "adp": "8d83dea1d58bef901e97793e1c34ad57986fada1",
                                            "cvc": "dbf0e56926a6baad91df5b15b84746c66de73a47",
                                            "ddad": "32fe27876b12e612823c5f9cfd63b2cc1eaa68c1",
                                            "ddad-domains-fasinfo": "a5b41fd76a124026ff81320e27d5caa5a772f235",
                                            "ddad-domains-generic": "872e7456cf3b5838f30c47753e8187b8c62b636a",
                                            "ddad-ecu-ipnext": "4e0fd5384e92431311a139b52f3b191523237f3f",
                                            "ddad_ci_config": "a2ea1242739a7a16dba7d7781925949e31cfc29f",
                                            "ddad_platform": "0fc13c778f15b8def496ce821b67df115746cfb6",
                                            "domain-tools": "22e48aea74d3e1a9d405529652492a0cfd84611a",
                                            "ecu_xpad_sc_mpad": "9f275d5b9f924de72632bda96690327fccdd5ff5",
                                            "foresight": "0961a62bed7ee412bf80fe5a9b879e5586964358",
                                            "franky_ib": "7a74d491251435e7b011e7010d11fbc9224b355c",
                                            "gnss_common": "7aeb42bd9976938f99a41c088c70fe8af14ee8fc",
                                            "ib-vip": "77d3abe6f172efef2f93e6c3a61af0f3ee7d7967",
                                            "ltf-dlt": "68fa15c725670a73c3c7f3566a99f38cd3a87ae5"
                                        }
                                    },
                                    "ansible_loop_var": "item",
                                    "changed": false,
                                    "failed": false,
                                    "item": {
                                        "canonical_hostname": "cc-github.bmwgroup.net",
                                        "canonical_name": "cc-github.bmwgroup.net/swh/ltf-dlt",
                                        "checkout": "master",
                                        "checkout_description": "zuul branch",
                                        "commit": "68fa15c725670a73c3c7f3566a99f38cd3a87ae5",
                                        "name": "swh/ltf-dlt",
                                        "required": true,
                                        "short_name": "ltf-dlt",
                                        "src_dir": "src/cc-github.bmwgroup.net/swh/ltf-dlt"
                                    }
                                },
                                {
                                    "ansible_facts": {
                                        "metadata_build_githash": {
                                            "adp": "8d83dea1d58bef901e97793e1c34ad57986fada1",
                                            "cvc": "dbf0e56926a6baad91df5b15b84746c66de73a47",
                                            "ddad": "32fe27876b12e612823c5f9cfd63b2cc1eaa68c1",
                                            "ddad-domains-fasinfo": "a5b41fd76a124026ff81320e27d5caa5a772f235",
                                            "ddad-domains-generic": "872e7456cf3b5838f30c47753e8187b8c62b636a",
                                            "ddad-ecu-ipnext": "4e0fd5384e92431311a139b52f3b191523237f3f",
                                            "ddad_ci_config": "a2ea1242739a7a16dba7d7781925949e31cfc29f",
                                            "ddad_platform": "0fc13c778f15b8def496ce821b67df115746cfb6",
                                            "domain-tools": "22e48aea74d3e1a9d405529652492a0cfd84611a",
                                            "ecu_xpad_sc_mpad": "9f275d5b9f924de72632bda96690327fccdd5ff5",
                                            "foresight": "0961a62bed7ee412bf80fe5a9b879e5586964358",
                                            "franky_ib": "7a74d491251435e7b011e7010d11fbc9224b355c",
                                            "gnss_common": "7aeb42bd9976938f99a41c088c70fe8af14ee8fc",
                                            "ib-vip": "77d3abe6f172efef2f93e6c3a61af0f3ee7d7967",
                                            "ltf-dlt": "68fa15c725670a73c3c7f3566a99f38cd3a87ae5",
                                            "orion": "72eb2c62dc7bccf336d71917365610e01f7b7512"
                                        }
                                    },
                                    "ansible_loop_var": "item",
                                    "changed": false,
                                    "failed": false,
                                    "item": {
                                        "canonical_hostname": "cc-github.bmwgroup.net",
                                        "canonical_name": "cc-github.bmwgroup.net/swh/orion",
                                        "checkout": "master",
                                        "checkout_description": "zuul branch",
                                        "commit": "72eb2c62dc7bccf336d71917365610e01f7b7512",
                                        "name": "swh/orion",
                                        "required": true,
                                        "short_name": "orion",
                                        "src_dir": "src/cc-github.bmwgroup.net/swh/orion"
                                    }
                                },
                                {
                                    "ansible_facts": {
                                        "metadata_build_githash": {
                                            "adp": "8d83dea1d58bef901e97793e1c34ad57986fada1",
                                            "cvc": "dbf0e56926a6baad91df5b15b84746c66de73a47",
                                            "ddad": "32fe27876b12e612823c5f9cfd63b2cc1eaa68c1",
                                            "ddad-domains-fasinfo": "a5b41fd76a124026ff81320e27d5caa5a772f235",
                                            "ddad-domains-generic": "872e7456cf3b5838f30c47753e8187b8c62b636a",
                                            "ddad-ecu-ipnext": "4e0fd5384e92431311a139b52f3b191523237f3f",
                                            "ddad_ci_config": "a2ea1242739a7a16dba7d7781925949e31cfc29f",
                                            "ddad_platform": "0fc13c778f15b8def496ce821b67df115746cfb6",
                                            "domain-tools": "22e48aea74d3e1a9d405529652492a0cfd84611a",
                                            "ecu_xpad_sc_mpad": "9f275d5b9f924de72632bda96690327fccdd5ff5",
                                            "foresight": "0961a62bed7ee412bf80fe5a9b879e5586964358",
                                            "franky_ib": "7a74d491251435e7b011e7010d11fbc9224b355c",
                                            "gnss_common": "7aeb42bd9976938f99a41c088c70fe8af14ee8fc",
                                            "ib-vip": "77d3abe6f172efef2f93e6c3a61af0f3ee7d7967",
                                            "ltf-dlt": "68fa15c725670a73c3c7f3566a99f38cd3a87ae5",
                                            "orion": "72eb2c62dc7bccf336d71917365610e01f7b7512",
                                            "orion_aeb_temp": "b473c7ab8c70f69511aeff1374d70aef88f33d4a"
                                        }
                                    },
                                    "ansible_loop_var": "item",
                                    "changed": false,
                                    "failed": false,
                                    "item": {
                                        "canonical_hostname": "cc-github.bmwgroup.net",
                                        "canonical_name": "cc-github.bmwgroup.net/swh/orion_aeb_temp",
                                        "checkout": "master",
                                        "checkout_description": "zuul branch",
                                        "commit": "b473c7ab8c70f69511aeff1374d70aef88f33d4a",
                                        "name": "swh/orion_aeb_temp",
                                        "required": true,
                                        "short_name": "orion_aeb_temp",
                                        "src_dir": "src/cc-github.bmwgroup.net/swh/orion_aeb_temp"
                                    }
                                },
                                {
                                    "ansible_facts": {
                                        "metadata_build_githash": {
                                            "adp": "8d83dea1d58bef901e97793e1c34ad57986fada1",
                                            "cvc": "dbf0e56926a6baad91df5b15b84746c66de73a47",
                                            "ddad": "32fe27876b12e612823c5f9cfd63b2cc1eaa68c1",
                                            "ddad-domains-fasinfo": "a5b41fd76a124026ff81320e27d5caa5a772f235",
                                            "ddad-domains-generic": "872e7456cf3b5838f30c47753e8187b8c62b636a",
                                            "ddad-ecu-ipnext": "4e0fd5384e92431311a139b52f3b191523237f3f",
                                            "ddad_ci_config": "a2ea1242739a7a16dba7d7781925949e31cfc29f",
                                            "ddad_platform": "0fc13c778f15b8def496ce821b67df115746cfb6",
                                            "domain-tools": "22e48aea74d3e1a9d405529652492a0cfd84611a",
                                            "ecu_xpad_sc_mpad": "9f275d5b9f924de72632bda96690327fccdd5ff5",
                                            "foresight": "0961a62bed7ee412bf80fe5a9b879e5586964358",
                                            "franky_ib": "7a74d491251435e7b011e7010d11fbc9224b355c",
                                            "gnss_common": "7aeb42bd9976938f99a41c088c70fe8af14ee8fc",
                                            "ib-vip": "77d3abe6f172efef2f93e6c3a61af0f3ee7d7967",
                                            "ltf-dlt": "68fa15c725670a73c3c7f3566a99f38cd3a87ae5",
                                            "orion": "72eb2c62dc7bccf336d71917365610e01f7b7512",
                                            "orion_aeb_temp": "b473c7ab8c70f69511aeff1374d70aef88f33d4a",
                                            "system_description": "42dc122349acc14be41c1ebee15c7edff680fb79"
                                        }
                                    },
                                    "ansible_loop_var": "item",
                                    "changed": false,
                                    "failed": false,
                                    "item": {
                                        "canonical_hostname": "cc-github.bmwgroup.net",
                                        "canonical_name": "cc-github.bmwgroup.net/swh/system_description",
                                        "checkout": "master",
                                        "checkout_description": "zuul branch",
                                        "commit": "42dc122349acc14be41c1ebee15c7edff680fb79",
                                        "name": "swh/system_description",
                                        "required": true,
                                        "short_name": "system_description",
                                        "src_dir": "src/cc-github.bmwgroup.net/swh/system_description"
                                    }
                                },
                                {
                                    "ansible_facts": {
                                        "metadata_build_githash": {
                                            "adp": "8d83dea1d58bef901e97793e1c34ad57986fada1",
                                            "cvc": "dbf0e56926a6baad91df5b15b84746c66de73a47",
                                            "ddad": "32fe27876b12e612823c5f9cfd63b2cc1eaa68c1",
                                            "ddad-domains-fasinfo": "a5b41fd76a124026ff81320e27d5caa5a772f235",
                                            "ddad-domains-generic": "872e7456cf3b5838f30c47753e8187b8c62b636a",
                                            "ddad-ecu-ipnext": "4e0fd5384e92431311a139b52f3b191523237f3f",
                                            "ddad_ci_config": "a2ea1242739a7a16dba7d7781925949e31cfc29f",
                                            "ddad_platform": "0fc13c778f15b8def496ce821b67df115746cfb6",
                                            "domain-tools": "22e48aea74d3e1a9d405529652492a0cfd84611a",
                                            "ecu_xpad_sc_mpad": "9f275d5b9f924de72632bda96690327fccdd5ff5",
                                            "foresight": "0961a62bed7ee412bf80fe5a9b879e5586964358",
                                            "franky_ib": "7a74d491251435e7b011e7010d11fbc9224b355c",
                                            "gnss_common": "7aeb42bd9976938f99a41c088c70fe8af14ee8fc",
                                            "ib-vip": "77d3abe6f172efef2f93e6c3a61af0f3ee7d7967",
                                            "ltf-dlt": "68fa15c725670a73c3c7f3566a99f38cd3a87ae5",
                                            "orion": "72eb2c62dc7bccf336d71917365610e01f7b7512",
                                            "orion_aeb_temp": "b473c7ab8c70f69511aeff1374d70aef88f33d4a",
                                            "system_description": "42dc122349acc14be41c1ebee15c7edff680fb79",
                                            "ufm": "24d683807041b01ac000b8a6212ec6ad50e3b5e2"
                                        }
                                    },
                                    "ansible_loop_var": "item",
                                    "changed": false,
                                    "failed": false,
                                    "item": {
                                        "canonical_hostname": "cc-github.bmwgroup.net",
                                        "canonical_name": "cc-github.bmwgroup.net/swh/ufm",
                                        "checkout": "master",
                                        "checkout_description": "zuul branch",
                                        "commit": "24d683807041b01ac000b8a6212ec6ad50e3b5e2",
                                        "name": "swh/ufm",
                                        "required": true,
                                        "short_name": "ufm",
                                        "src_dir": "src/cc-github.bmwgroup.net/swh/ufm"
                                    }
                                },
                                {
                                    "ansible_facts": {
                                        "metadata_build_githash": {
                                            "adp": "8d83dea1d58bef901e97793e1c34ad57986fada1",
                                            "cvc": "dbf0e56926a6baad91df5b15b84746c66de73a47",
                                            "ddad": "32fe27876b12e612823c5f9cfd63b2cc1eaa68c1",
                                            "ddad-domains-fasinfo": "a5b41fd76a124026ff81320e27d5caa5a772f235",
                                            "ddad-domains-generic": "872e7456cf3b5838f30c47753e8187b8c62b636a",
                                            "ddad-ecu-ipnext": "4e0fd5384e92431311a139b52f3b191523237f3f",
                                            "ddad_ci_config": "a2ea1242739a7a16dba7d7781925949e31cfc29f",
                                            "ddad_platform": "0fc13c778f15b8def496ce821b67df115746cfb6",
                                            "domain-tools": "22e48aea74d3e1a9d405529652492a0cfd84611a",
                                            "ecu_xpad_sc_mpad": "9f275d5b9f924de72632bda96690327fccdd5ff5",
                                            "foresight": "0961a62bed7ee412bf80fe5a9b879e5586964358",
                                            "franky_ib": "7a74d491251435e7b011e7010d11fbc9224b355c",
                                            "gnss_common": "7aeb42bd9976938f99a41c088c70fe8af14ee8fc",
                                            "ib-vip": "77d3abe6f172efef2f93e6c3a61af0f3ee7d7967",
                                            "ltf-dlt": "68fa15c725670a73c3c7f3566a99f38cd3a87ae5",
                                            "orion": "72eb2c62dc7bccf336d71917365610e01f7b7512",
                                            "orion_aeb_temp": "b473c7ab8c70f69511aeff1374d70aef88f33d4a",
                                            "system_description": "42dc122349acc14be41c1ebee15c7edff680fb79",
                                            "ufm": "24d683807041b01ac000b8a6212ec6ad50e3b5e2",
                                            "xpad-ara": "591c4c708640423656b97148b3d5767a987d4818"
                                        }
                                    },
                                    "ansible_loop_var": "item",
                                    "changed": false,
                                    "failed": false,
                                    "item": {
                                        "canonical_hostname": "cc-github.bmwgroup.net",
                                        "canonical_name": "cc-github.bmwgroup.net/swh/xpad-ara",
                                        "checkout": "master",
                                        "checkout_description": "zuul branch",
                                        "commit": "591c4c708640423656b97148b3d5767a987d4818",
                                        "name": "swh/xpad-ara",
                                        "required": true,
                                        "short_name": "xpad-ara",
                                        "src_dir": "src/cc-github.bmwgroup.net/swh/xpad-ara"
                                    }
                                },
                                {
                                    "ansible_facts": {
                                        "metadata_build_githash": {
                                            "adp": "8d83dea1d58bef901e97793e1c34ad57986fada1",
                                            "cvc": "dbf0e56926a6baad91df5b15b84746c66de73a47",
                                            "ddad": "32fe27876b12e612823c5f9cfd63b2cc1eaa68c1",
                                            "ddad-domains-fasinfo": "a5b41fd76a124026ff81320e27d5caa5a772f235",
                                            "ddad-domains-generic": "872e7456cf3b5838f30c47753e8187b8c62b636a",
                                            "ddad-ecu-ipnext": "4e0fd5384e92431311a139b52f3b191523237f3f",
                                            "ddad_ci_config": "a2ea1242739a7a16dba7d7781925949e31cfc29f",
                                            "ddad_platform": "0fc13c778f15b8def496ce821b67df115746cfb6",
                                            "domain-tools": "22e48aea74d3e1a9d405529652492a0cfd84611a",
                                            "ecu_xpad_sc_mpad": "9f275d5b9f924de72632bda96690327fccdd5ff5",
                                            "foresight": "0961a62bed7ee412bf80fe5a9b879e5586964358",
                                            "franky_ib": "7a74d491251435e7b011e7010d11fbc9224b355c",
                                            "gnss_common": "7aeb42bd9976938f99a41c088c70fe8af14ee8fc",
                                            "ib-vip": "77d3abe6f172efef2f93e6c3a61af0f3ee7d7967",
                                            "ltf-dlt": "68fa15c725670a73c3c7f3566a99f38cd3a87ae5",
                                            "orion": "72eb2c62dc7bccf336d71917365610e01f7b7512",
                                            "orion_aeb_temp": "b473c7ab8c70f69511aeff1374d70aef88f33d4a",
                                            "system_description": "42dc122349acc14be41c1ebee15c7edff680fb79",
                                            "ufm": "24d683807041b01ac000b8a6212ec6ad50e3b5e2",
                                            "xpad-ara": "591c4c708640423656b97148b3d5767a987d4818",
                                            "xpad-shared": "5fe3ea2c8e16591c6c11a5398c0fd866652ef652"
                                        }
                                    },
                                    "ansible_loop_var": "item",
                                    "changed": false,
                                    "failed": false,
                                    "item": {
                                        "canonical_hostname": "cc-github.bmwgroup.net",
                                        "canonical_name": "cc-github.bmwgroup.net/swh/xpad-shared",
                                        "checkout": "master",
                                        "checkout_description": "zuul branch",
                                        "commit": "5fe3ea2c8e16591c6c11a5398c0fd866652ef652",
                                        "name": "swh/xpad-shared",
                                        "required": true,
                                        "short_name": "xpad-shared",
                                        "src_dir": "src/cc-github.bmwgroup.net/swh/xpad-shared"
                                    }
                                },
                                {
                                    "ansible_facts": {
                                        "metadata_build_githash": {
                                            "adp": "8d83dea1d58bef901e97793e1c34ad57986fada1",
                                            "cvc": "dbf0e56926a6baad91df5b15b84746c66de73a47",
                                            "ddad": "32fe27876b12e612823c5f9cfd63b2cc1eaa68c1",
                                            "ddad-domains-fasinfo": "a5b41fd76a124026ff81320e27d5caa5a772f235",
                                            "ddad-domains-generic": "872e7456cf3b5838f30c47753e8187b8c62b636a",
                                            "ddad-ecu-ipnext": "4e0fd5384e92431311a139b52f3b191523237f3f",
                                            "ddad_ci_config": "a2ea1242739a7a16dba7d7781925949e31cfc29f",
                                            "ddad_platform": "0fc13c778f15b8def496ce821b67df115746cfb6",
                                            "domain-tools": "22e48aea74d3e1a9d405529652492a0cfd84611a",
                                            "ecu_xpad_sc_mpad": "9f275d5b9f924de72632bda96690327fccdd5ff5",
                                            "foresight": "0961a62bed7ee412bf80fe5a9b879e5586964358",
                                            "franky_ib": "7a74d491251435e7b011e7010d11fbc9224b355c",
                                            "gnss_common": "7aeb42bd9976938f99a41c088c70fe8af14ee8fc",
                                            "ib-vip": "77d3abe6f172efef2f93e6c3a61af0f3ee7d7967",
                                            "ltf-dlt": "68fa15c725670a73c3c7f3566a99f38cd3a87ae5",
                                            "orion": "72eb2c62dc7bccf336d71917365610e01f7b7512",
                                            "orion_aeb_temp": "b473c7ab8c70f69511aeff1374d70aef88f33d4a",
                                            "system_description": "42dc122349acc14be41c1ebee15c7edff680fb79",
                                            "ufm": "24d683807041b01ac000b8a6212ec6ad50e3b5e2",
                                            "xpad-ara": "591c4c708640423656b97148b3d5767a987d4818",
                                            "xpad-shared": "5fe3ea2c8e16591c6c11a5398c0fd866652ef652",
                                            "xpad_xpc": "9ce2131edf06568e92545d2f5d1464924b016780"
                                        }
                                    },
                                    "ansible_loop_var": "item",
                                    "changed": false,
                                    "failed": false,
                                    "item": {
                                        "canonical_hostname": "cc-github.bmwgroup.net",
                                        "canonical_name": "cc-github.bmwgroup.net/swh/xpad_xpc",
                                        "checkout": "master",
                                        "checkout_description": "zuul branch",
                                        "commit": "9ce2131edf06568e92545d2f5d1464924b016780",
                                        "name": "swh/xpad_xpc",
                                        "required": true,
                                        "short_name": "xpad_xpc",
                                        "src_dir": "src/cc-github.bmwgroup.net/swh/xpad_xpc"
                                    }
                                },
                                {
                                    "ansible_facts": {
                                        "metadata_build_githash": {
                                            "adp": "8d83dea1d58bef901e97793e1c34ad57986fada1",
                                            "cvc": "dbf0e56926a6baad91df5b15b84746c66de73a47",
                                            "ddad": "32fe27876b12e612823c5f9cfd63b2cc1eaa68c1",
                                            "ddad-domains-fasinfo": "a5b41fd76a124026ff81320e27d5caa5a772f235",
                                            "ddad-domains-generic": "872e7456cf3b5838f30c47753e8187b8c62b636a",
                                            "ddad-ecu-ipnext": "4e0fd5384e92431311a139b52f3b191523237f3f",
                                            "ddad_ci_config": "a2ea1242739a7a16dba7d7781925949e31cfc29f",
                                            "ddad_platform": "0fc13c778f15b8def496ce821b67df115746cfb6",
                                            "domain-tools": "22e48aea74d3e1a9d405529652492a0cfd84611a",
                                            "ecu_xpad_sc_mpad": "9f275d5b9f924de72632bda96690327fccdd5ff5",
                                            "foresight": "0961a62bed7ee412bf80fe5a9b879e5586964358",
                                            "franky_ib": "7a74d491251435e7b011e7010d11fbc9224b355c",
                                            "gnss_common": "7aeb42bd9976938f99a41c088c70fe8af14ee8fc",
                                            "ib-vip": "77d3abe6f172efef2f93e6c3a61af0f3ee7d7967",
                                            "ltf-dlt": "68fa15c725670a73c3c7f3566a99f38cd3a87ae5",
                                            "orion": "72eb2c62dc7bccf336d71917365610e01f7b7512",
                                            "orion_aeb_temp": "b473c7ab8c70f69511aeff1374d70aef88f33d4a",
                                            "system_description": "42dc122349acc14be41c1ebee15c7edff680fb79",
                                            "ufm": "24d683807041b01ac000b8a6212ec6ad50e3b5e2",
                                            "xpad-ara": "591c4c708640423656b97148b3d5767a987d4818",
                                            "xpad-shared": "5fe3ea2c8e16591c6c11a5398c0fd866652ef652",
                                            "xpad_xpc": "9ce2131edf06568e92545d2f5d1464924b016780",
                                            "zuul-trusted-ddad": "a22500345c4283b6add4f2a3c354c663a904d9d0"
                                        }
                                    },
                                    "ansible_loop_var": "item",
                                    "changed": false,
                                    "failed": false,
                                    "item": {
                                        "canonical_hostname": "cc-github.bmwgroup.net",
                                        "canonical_name": "cc-github.bmwgroup.net/swh/zuul-trusted-ddad",
                                        "checkout": "master",
                                        "checkout_description": "zuul branch",
                                        "commit": "a22500345c4283b6add4f2a3c354c663a904d9d0",
                                        "name": "swh/zuul-trusted-ddad",
                                        "required": true,
                                        "short_name": "zuul-trusted-ddad",
                                        "src_dir": "src/cc-github.bmwgroup.net/swh/zuul-trusted-ddad"
                                    }
                                }
                            ]
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-c1f1-2ae2-00000000001d",
                        "name": "adp-build-metadata",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/untrusted/project_0/cc-github.bmwgroup.net/swh/ddad_ci_config/roles/adp-build-metadata"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:48:36.818512Z",
                            "start": "2024-04-21T00:48:36.383023Z"
                        },
                        "id": "ce4df5fb-964c-c1f1-2ae2-00000000001f",
                        "name": "Set Git hash for all projects using information from Zuul"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "set_fact",
                            "ansible_facts": {
                                "metadata_destination": "/home/zuul/logs/adpbuild_20240421T003920585957.yaml"
                            },
                            "changed": false
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-c1f1-2ae2-00000000001d",
                        "name": "adp-build-metadata",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/untrusted/project_0/cc-github.bmwgroup.net/swh/ddad_ci_config/roles/adp-build-metadata"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:48:36.898324Z",
                            "start": "2024-04-21T00:48:36.834847Z"
                        },
                        "id": "ce4df5fb-964c-c1f1-2ae2-000000000020",
                        "name": ""
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "debug",
                            "changed": false,
                            "msg": "metadata_docker_image_digest: ddad.artifactory.cc.bmwgroup.net/adp-docker/ros-noetic@sha256:50aad994b796d798fbf6b6631cf35039cb2df42d1ffb9645552be417aa947319\nmetadata_docker_image_tag: ddad.artifactory.cc.bmwgroup.net/adp-docker/ros-noetic:2022.02.17.06.31\nmetadata_bmwrpp_rosversion: melodic\nmetadata_build_date: 20240421T003920585957\nmetadata_build_githash: {'adp': '8d83dea1d58bef901e97793e1c34ad57986fada1', 'cvc': 'dbf0e56926a6baad91df5b15b84746c66de73a47', 'ddad': '32fe27876b12e612823c5f9cfd63b2cc1eaa68c1', 'ddad-domains-fasinfo': 'a5b41fd76a124026ff81320e27d5caa5a772f235', 'ddad-domains-generic': '872e7456cf3b5838f30c47753e8187b8c62b636a', 'ddad-ecu-ipnext': '4e0fd5384e92431311a139b52f3b191523237f3f', 'ddad_ci_config': 'a2ea1242739a7a16dba7d7781925949e31cfc29f', 'ddad_platform': '0fc13c778f15b8def496ce821b67df115746cfb6', 'domain-tools': '22e48aea74d3e1a9d405529652492a0cfd84611a', 'ecu_xpad_sc_mpad': '9f275d5b9f924de72632bda96690327fccdd5ff5', 'foresight': '0961a62bed7ee412bf80fe5a9b879e5586964358', 'franky_ib': '7a74d491251435e7b011e7010d11fbc9224b355c', 'gnss_common': '7aeb42bd9976938f99a41c088c70fe8af14ee8fc', 'ib-vip': '77d3abe6f172efef2f93e6c3a61af0f3ee7d7967', 'ltf-dlt': '68fa15c725670a73c3c7f3566a99f38cd3a87ae5', 'orion': '72eb2c62dc7bccf336d71917365610e01f7b7512', 'orion_aeb_temp': 'b473c7ab8c70f69511aeff1374d70aef88f33d4a', 'system_description': '42dc122349acc14be41c1ebee15c7edff680fb79', 'ufm': '24d683807041b01ac000b8a6212ec6ad50e3b5e2', 'xpad-ara': '591c4c708640423656b97148b3d5767a987d4818', 'xpad-shared': '5fe3ea2c8e16591c6c11a5398c0fd866652ef652', 'xpad_xpc': '9ce2131edf06568e92545d2f5d1464924b016780', 'zuul-trusted-ddad': 'a22500345c4283b6add4f2a3c354c663a904d9d0'}\nmetadata_build_id: 5025843e7b0949e8ab5d90b1424cab55\nmetadata_build_log_url: https://cc-ci.bmwgroup.net/logs/t/ddad/swh/ddad/47/f5c48694b22b48c9b5ae47af5c895c47/swf-quality-metrics/swf-metrics-check-nautilus-lifecycle/5025843/\nmetadata_build_node_name: zuul-executor-partition-0-4.zuul-executor-partition-0-eu-ash-16.ci.svc.cluster.local\nmetadata_destination: /home/zuul/logs/adpbuild_20240421T003920585957.yaml\n"
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-c1f1-2ae2-00000000001d",
                        "name": "adp-build-metadata",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/untrusted/project_0/cc-github.bmwgroup.net/swh/ddad_ci_config/roles/adp-build-metadata"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:48:36.993511Z",
                            "start": "2024-04-21T00:48:36.914989Z"
                        },
                        "id": "ce4df5fb-964c-c1f1-2ae2-000000000021",
                        "name": "Print collected ADP build metadata"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "template",
                            "changed": true,
                            "checksum": "820deee3d42456130cce9c2b66b322f968b1bdcc",
                            "dest": "/home/zuul/logs/adpbuild_20240421T003920585957.yaml",
                            "diff": [],
                            "gid": 1000,
                            "group": "zuul",
                            "invocation": {
                                "module_args": {
                                    "_original_basename": "adpbuild.yaml.j2",
                                    "attributes": null,
                                    "backup": false,
                                    "checksum": "820deee3d42456130cce9c2b66b322f968b1bdcc",
                                    "content": null,
                                    "dest": "/home/zuul/logs/adpbuild_20240421T003920585957.yaml",
                                    "directory_mode": null,
                                    "follow": false,
                                    "force": true,
                                    "group": null,
                                    "local_follow": null,
                                    "mode": null,
                                    "owner": null,
                                    "remote_src": null,
                                    "selevel": null,
                                    "serole": null,
                                    "setype": null,
                                    "seuser": null,
                                    "src": "/home/zuul/.ansible/tmp/ansible-tmp-1713660517.0718277-75-646486490273/source",
                                    "unsafe_writes": false,
                                    "validate": null
                                }
                            },
                            "md5sum": "4f4edb4dac872b17028efefd619354ee",
                            "mode": "0664",
                            "owner": "zuul",
                            "size": 2149,
                            "src": "/home/zuul/.ansible/tmp/ansible-tmp-1713660517.0718277-75-646486490273/source",
                            "state": "file",
                            "uid": 1000
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-c1f1-2ae2-00000000001d",
                        "name": "adp-build-metadata",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/untrusted/project_0/cc-github.bmwgroup.net/swh/ddad_ci_config/roles/adp-build-metadata"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:48:38.248061Z",
                            "start": "2024-04-21T00:48:37.009751Z"
                        },
                        "id": "ce4df5fb-964c-c1f1-2ae2-000000000022",
                        "name": "Copy ADP build metadata file to: /home/zuul/logs/adpbuild_20240421T003920585957.yaml"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "shell",
                            "changed": true,
                            "cmd": "set -eu\nchmod -R a+rx /home/zuul/logs\n",
                            "delta": "0:00:00.008252",
                            "end": "2024-04-21 00:48:38.692655",
                            "invocation": {
                                "module_args": {
                                    "_raw_params": "set -eu\nchmod -R a+rx /home/zuul/logs\n",
                                    "_uses_shell": true,
                                    "argv": null,
                                    "chdir": "/home/zuul",
                                    "creates": null,
                                    "executable": "/bin/bash",
                                    "removes": null,
                                    "stdin": null,
                                    "stdin_add_newline": true,
                                    "strip_empty_ends": true,
                                    "warn": false,
                                    "zuul_ansible_split_streams": false,
                                    "zuul_log_id": "ce4df5fb-964c-c1f1-2ae2-000000000023-1-node"
                                }
                            },
                            "msg": "",
                            "rc": 0,
                            "start": "2024-04-21 00:48:38.684403",
                            "stderr": "",
                            "stderr_lines": [],
                            "stdout": "",
                            "stdout_lines": [],
                            "zuul_log_id": "ce4df5fb-964c-c1f1-2ae2-000000000023-1-node"
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-c1f1-2ae2-00000000001d",
                        "name": "adp-build-metadata",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/untrusted/project_0/cc-github.bmwgroup.net/swh/ddad_ci_config/roles/adp-build-metadata"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:48:38.813486Z",
                            "start": "2024-04-21T00:48:38.301915Z"
                        },
                        "id": "ce4df5fb-964c-c1f1-2ae2-000000000023",
                        "name": "Set proper file attributes for packaging"
                    }
                }
            ]
        }
    ],
    "stats": {
        "node": {
            "changed": 3,
            "failures": 0,
            "ignored": 0,
            "ok": 22,
            "rescued": 0,
            "skipped": 5,
            "unreachable": 0
        }
    },
    "trusted": false
},
{
    "branch": "master",
    "index": "30",
    "phase": "pre",
    "playbook": "cc-github.bmwgroup.net/swh/ddad_ci_config/playbooks/reprocessing-artifacts/manual-pipeline-setup-repo.yaml",
    "plays": [
        {
            "play": {
                "duration": {
                    "end": "2024-04-21T00:48:44.214095Z",
                    "start": "2024-04-21T00:48:40.344055Z"
                },
                "id": "ce4df5fb-964c-1057-6791-000000000003",
                "name": "Parse PR desired action (merge | reset) for manual triggered builds"
            },
            "tasks": [
                {
                    "hosts": {
                        "node": {
                            "action": "command",
                            "changed": false,
                            "false_condition": "zuul.pipeline in ['manual-build-pdx', 'manual-prod-build-pdx', 'manual-adp-kpi-trigger', 'manual-adp-kpi-trigger-unlimited', 'manual-build-sim-artifacts', 'adp-trigger-virtual-endurance-run', 'test']",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:48:40.990526Z",
                            "start": "2024-04-21T00:48:40.473853Z"
                        },
                        "id": "ce4df5fb-964c-1057-6791-000000000005",
                        "name": "Parse actions from PR description."
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "set_fact",
                            "changed": false,
                            "false_condition": "zuul.pipeline in ['manual-build-pdx', 'manual-prod-build-pdx', 'manual-adp-kpi-trigger', 'manual-adp-kpi-trigger-unlimited', 'manual-build-sim-artifacts', 'adp-trigger-virtual-endurance-run', 'test']",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:48:41.044897Z",
                            "start": "2024-04-21T00:48:41.004405Z"
                        },
                        "id": "ce4df5fb-964c-1057-6791-000000000006",
                        "name": "Parse actions from json output."
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "meta",
                            "msg": "end_play",
                            "skip_reason": "end_play conditional evaluated to False, continuing play",
                            "skipped": true
                        }
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:48:41.073282Z",
                            "start": "2024-04-21T00:48:41.054383Z"
                        },
                        "id": "ce4df5fb-964c-1057-6791-000000000007",
                        "name": "Skip if no valid action is found."
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "include_role",
                            "changed": false,
                            "false_condition": "zuul.pipeline in ['manual-build-pdx', 'manual-prod-build-pdx', 'manual-adp-kpi-trigger', 'manual-adp-kpi-trigger-unlimited', 'manual-build-sim-artifacts', 'adp-trigger-virtual-endurance-run', 'test']",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-1057-6791-00000000000c",
                        "name": "fix-zuul-remotes",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/untrusted/project_2/cc-github.bmwgroup.net/codecraft/cilib/roles/fix-zuul-remotes"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:48:41.190358Z",
                            "start": "2024-04-21T00:48:41.151599Z"
                        },
                        "id": "ce4df5fb-964c-1057-6791-00000000000e",
                        "name": "Delete /dev/null Zuul remotes from all checked out repos"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "include_role",
                            "changed": false,
                            "msg": "All items skipped",
                            "results": [
                                {
                                    "ansible_loop_var": "item",
                                    "changed": false,
                                    "false_condition": "zuul.pipeline in ['manual-build-pdx', 'manual-prod-build-pdx', 'manual-adp-kpi-trigger', 'manual-adp-kpi-trigger-unlimited', 'manual-build-sim-artifacts', 'adp-trigger-virtual-endurance-run', 'test']",
                                    "item": {
                                        "canonical_hostname": "cc-github.bmwgroup.net",
                                        "canonical_name": "cc-github.bmwgroup.net/swh/adp",
                                        "checkout": "master",
                                        "checkout_description": "zuul branch",
                                        "commit": "8d83dea1d58bef901e97793e1c34ad57986fada1",
                                        "name": "swh/adp",
                                        "required": true,
                                        "short_name": "adp",
                                        "src_dir": "src/cc-github.bmwgroup.net/swh/adp"
                                    },
                                    "skip_reason": "Conditional result was False",
                                    "skipped": true
                                },
                                {
                                    "ansible_loop_var": "item",
                                    "changed": false,
                                    "false_condition": "zuul.pipeline in ['manual-build-pdx', 'manual-prod-build-pdx', 'manual-adp-kpi-trigger', 'manual-adp-kpi-trigger-unlimited', 'manual-build-sim-artifacts', 'adp-trigger-virtual-endurance-run', 'test']",
                                    "item": {
                                        "canonical_hostname": "cc-github.bmwgroup.net",
                                        "canonical_name": "cc-github.bmwgroup.net/swh/cvc",
                                        "checkout": "master",
                                        "checkout_description": "zuul branch",
                                        "commit": "dbf0e56926a6baad91df5b15b84746c66de73a47",
                                        "name": "swh/cvc",
                                        "required": true,
                                        "short_name": "cvc",
                                        "src_dir": "src/cc-github.bmwgroup.net/swh/cvc"
                                    },
                                    "skip_reason": "Conditional result was False",
                                    "skipped": true
                                },
                                {
                                    "ansible_loop_var": "item",
                                    "changed": false,
                                    "false_condition": "zuul.pipeline in ['manual-build-pdx', 'manual-prod-build-pdx', 'manual-adp-kpi-trigger', 'manual-adp-kpi-trigger-unlimited', 'manual-build-sim-artifacts', 'adp-trigger-virtual-endurance-run', 'test']",
                                    "item": {
                                        "canonical_hostname": "cc-github.bmwgroup.net",
                                        "canonical_name": "cc-github.bmwgroup.net/swh/ddad",
                                        "checkout": "master",
                                        "checkout_description": "zuul branch",
                                        "commit": "32fe27876b12e612823c5f9cfd63b2cc1eaa68c1",
                                        "name": "swh/ddad",
                                        "required": true,
                                        "short_name": "ddad",
                                        "src_dir": "src/cc-github.bmwgroup.net/swh/ddad"
                                    },
                                    "skip_reason": "Conditional result was False",
                                    "skipped": true
                                },
                                {
                                    "ansible_loop_var": "item",
                                    "changed": false,
                                    "false_condition": "zuul.pipeline in ['manual-build-pdx', 'manual-prod-build-pdx', 'manual-adp-kpi-trigger', 'manual-adp-kpi-trigger-unlimited', 'manual-build-sim-artifacts', 'adp-trigger-virtual-endurance-run', 'test']",
                                    "item": {
                                        "canonical_hostname": "cc-github.bmwgroup.net",
                                        "canonical_name": "cc-github.bmwgroup.net/swh/ddad-domains-fasinfo",
                                        "checkout": "master",
                                        "checkout_description": "zuul branch",
                                        "commit": "a5b41fd76a124026ff81320e27d5caa5a772f235",
                                        "name": "swh/ddad-domains-fasinfo",
                                        "required": true,
                                        "short_name": "ddad-domains-fasinfo",
                                        "src_dir": "src/cc-github.bmwgroup.net/swh/ddad-domains-fasinfo"
                                    },
                                    "skip_reason": "Conditional result was False",
                                    "skipped": true
                                },
                                {
                                    "ansible_loop_var": "item",
                                    "changed": false,
                                    "false_condition": "zuul.pipeline in ['manual-build-pdx', 'manual-prod-build-pdx', 'manual-adp-kpi-trigger', 'manual-adp-kpi-trigger-unlimited', 'manual-build-sim-artifacts', 'adp-trigger-virtual-endurance-run', 'test']",
                                    "item": {
                                        "canonical_hostname": "cc-github.bmwgroup.net",
                                        "canonical_name": "cc-github.bmwgroup.net/swh/ddad-domains-generic",
                                        "checkout": "master",
                                        "checkout_description": "zuul branch",
                                        "commit": "872e7456cf3b5838f30c47753e8187b8c62b636a",
                                        "name": "swh/ddad-domains-generic",
                                        "required": true,
                                        "short_name": "ddad-domains-generic",
                                        "src_dir": "src/cc-github.bmwgroup.net/swh/ddad-domains-generic"
                                    },
                                    "skip_reason": "Conditional result was False",
                                    "skipped": true
                                },
                                {
                                    "ansible_loop_var": "item",
                                    "changed": false,
                                    "false_condition": "zuul.pipeline in ['manual-build-pdx', 'manual-prod-build-pdx', 'manual-adp-kpi-trigger', 'manual-adp-kpi-trigger-unlimited', 'manual-build-sim-artifacts', 'adp-trigger-virtual-endurance-run', 'test']",
                                    "item": {
                                        "canonical_hostname": "cc-github.bmwgroup.net",
                                        "canonical_name": "cc-github.bmwgroup.net/swh/ddad-ecu-ipnext",
                                        "checkout": "master",
                                        "checkout_description": "zuul branch",
                                        "commit": "4e0fd5384e92431311a139b52f3b191523237f3f",
                                        "name": "swh/ddad-ecu-ipnext",
                                        "required": true,
                                        "short_name": "ddad-ecu-ipnext",
                                        "src_dir": "src/cc-github.bmwgroup.net/swh/ddad-ecu-ipnext"
                                    },
                                    "skip_reason": "Conditional result was False",
                                    "skipped": true
                                },
                                {
                                    "ansible_loop_var": "item",
                                    "changed": false,
                                    "false_condition": "zuul.pipeline in ['manual-build-pdx', 'manual-prod-build-pdx', 'manual-adp-kpi-trigger', 'manual-adp-kpi-trigger-unlimited', 'manual-build-sim-artifacts', 'adp-trigger-virtual-endurance-run', 'test']",
                                    "item": {
                                        "canonical_hostname": "cc-github.bmwgroup.net",
                                        "canonical_name": "cc-github.bmwgroup.net/swh/ddad_ci_config",
                                        "checkout": "master",
                                        "checkout_description": "zuul branch",
                                        "commit": "a2ea1242739a7a16dba7d7781925949e31cfc29f",
                                        "name": "swh/ddad_ci_config",
                                        "required": true,
                                        "short_name": "ddad_ci_config",
                                        "src_dir": "src/cc-github.bmwgroup.net/swh/ddad_ci_config"
                                    },
                                    "skip_reason": "Conditional result was False",
                                    "skipped": true
                                },
                                {
                                    "ansible_loop_var": "item",
                                    "changed": false,
                                    "false_condition": "zuul.pipeline in ['manual-build-pdx', 'manual-prod-build-pdx', 'manual-adp-kpi-trigger', 'manual-adp-kpi-trigger-unlimited', 'manual-build-sim-artifacts', 'adp-trigger-virtual-endurance-run', 'test']",
                                    "item": {
                                        "canonical_hostname": "cc-github.bmwgroup.net",
                                        "canonical_name": "cc-github.bmwgroup.net/swh/ddad_platform",
                                        "checkout": "master",
                                        "checkout_description": "zuul branch",
                                        "commit": "0fc13c778f15b8def496ce821b67df115746cfb6",
                                        "name": "swh/ddad_platform",
                                        "required": true,
                                        "short_name": "ddad_platform",
                                        "src_dir": "src/cc-github.bmwgroup.net/swh/ddad_platform"
                                    },
                                    "skip_reason": "Conditional result was False",
                                    "skipped": true
                                },
                                {
                                    "ansible_loop_var": "item",
                                    "changed": false,
                                    "false_condition": "zuul.pipeline in ['manual-build-pdx', 'manual-prod-build-pdx', 'manual-adp-kpi-trigger', 'manual-adp-kpi-trigger-unlimited', 'manual-build-sim-artifacts', 'adp-trigger-virtual-endurance-run', 'test']",
                                    "item": {
                                        "canonical_hostname": "cc-github.bmwgroup.net",
                                        "canonical_name": "cc-github.bmwgroup.net/swh/domain-tools",
                                        "checkout": "master",
                                        "checkout_description": "zuul branch",
                                        "commit": "22e48aea74d3e1a9d405529652492a0cfd84611a",
                                        "name": "swh/domain-tools",
                                        "required": true,
                                        "short_name": "domain-tools",
                                        "src_dir": "src/cc-github.bmwgroup.net/swh/domain-tools"
                                    },
                                    "skip_reason": "Conditional result was False",
                                    "skipped": true
                                },
                                {
                                    "ansible_loop_var": "item",
                                    "changed": false,
                                    "false_condition": "zuul.pipeline in ['manual-build-pdx', 'manual-prod-build-pdx', 'manual-adp-kpi-trigger', 'manual-adp-kpi-trigger-unlimited', 'manual-build-sim-artifacts', 'adp-trigger-virtual-endurance-run', 'test']",
                                    "item": {
                                        "canonical_hostname": "cc-github.bmwgroup.net",
                                        "canonical_name": "cc-github.bmwgroup.net/swh/ecu_xpad_sc_mpad",
                                        "checkout": "master",
                                        "checkout_description": "zuul branch",
                                        "commit": "9f275d5b9f924de72632bda96690327fccdd5ff5",
                                        "name": "swh/ecu_xpad_sc_mpad",
                                        "required": true,
                                        "short_name": "ecu_xpad_sc_mpad",
                                        "src_dir": "src/cc-github.bmwgroup.net/swh/ecu_xpad_sc_mpad"
                                    },
                                    "skip_reason": "Conditional result was False",
                                    "skipped": true
                                },
                                {
                                    "ansible_loop_var": "item",
                                    "changed": false,
                                    "false_condition": "zuul.pipeline in ['manual-build-pdx', 'manual-prod-build-pdx', 'manual-adp-kpi-trigger', 'manual-adp-kpi-trigger-unlimited', 'manual-build-sim-artifacts', 'adp-trigger-virtual-endurance-run', 'test']",
                                    "item": {
                                        "canonical_hostname": "cc-github.bmwgroup.net",
                                        "canonical_name": "cc-github.bmwgroup.net/swh/foresight",
                                        "checkout": "master",
                                        "checkout_description": "zuul branch",
                                        "commit": "0961a62bed7ee412bf80fe5a9b879e5586964358",
                                        "name": "swh/foresight",
                                        "required": true,
                                        "short_name": "foresight",
                                        "src_dir": "src/cc-github.bmwgroup.net/swh/foresight"
                                    },
                                    "skip_reason": "Conditional result was False",
                                    "skipped": true
                                },
                                {
                                    "ansible_loop_var": "item",
                                    "changed": false,
                                    "false_condition": "zuul.pipeline in ['manual-build-pdx', 'manual-prod-build-pdx', 'manual-adp-kpi-trigger', 'manual-adp-kpi-trigger-unlimited', 'manual-build-sim-artifacts', 'adp-trigger-virtual-endurance-run', 'test']",
                                    "item": {
                                        "canonical_hostname": "cc-github.bmwgroup.net",
                                        "canonical_name": "cc-github.bmwgroup.net/swh/franky_ib",
                                        "checkout": "master",
                                        "checkout_description": "zuul branch",
                                        "commit": "7a74d491251435e7b011e7010d11fbc9224b355c",
                                        "name": "swh/franky_ib",
                                        "required": true,
                                        "short_name": "franky_ib",
                                        "src_dir": "src/cc-github.bmwgroup.net/swh/franky_ib"
                                    },
                                    "skip_reason": "Conditional result was False",
                                    "skipped": true
                                },
                                {
                                    "ansible_loop_var": "item",
                                    "changed": false,
                                    "false_condition": "zuul.pipeline in ['manual-build-pdx', 'manual-prod-build-pdx', 'manual-adp-kpi-trigger', 'manual-adp-kpi-trigger-unlimited', 'manual-build-sim-artifacts', 'adp-trigger-virtual-endurance-run', 'test']",
                                    "item": {
                                        "canonical_hostname": "cc-github.bmwgroup.net",
                                        "canonical_name": "cc-github.bmwgroup.net/swh/gnss_common",
                                        "checkout": "master",
                                        "checkout_description": "zuul branch",
                                        "commit": "7aeb42bd9976938f99a41c088c70fe8af14ee8fc",
                                        "name": "swh/gnss_common",
                                        "required": true,
                                        "short_name": "gnss_common",
                                        "src_dir": "src/cc-github.bmwgroup.net/swh/gnss_common"
                                    },
                                    "skip_reason": "Conditional result was False",
                                    "skipped": true
                                },
                                {
                                    "ansible_loop_var": "item",
                                    "changed": false,
                                    "false_condition": "zuul.pipeline in ['manual-build-pdx', 'manual-prod-build-pdx', 'manual-adp-kpi-trigger', 'manual-adp-kpi-trigger-unlimited', 'manual-build-sim-artifacts', 'adp-trigger-virtual-endurance-run', 'test']",
                                    "item": {
                                        "canonical_hostname": "cc-github.bmwgroup.net",
                                        "canonical_name": "cc-github.bmwgroup.net/swh/ib-vip",
                                        "checkout": "master",
                                        "checkout_description": "zuul branch",
                                        "commit": "77d3abe6f172efef2f93e6c3a61af0f3ee7d7967",
                                        "name": "swh/ib-vip",
                                        "required": true,
                                        "short_name": "ib-vip",
                                        "src_dir": "src/cc-github.bmwgroup.net/swh/ib-vip"
                                    },
                                    "skip_reason": "Conditional result was False",
                                    "skipped": true
                                },
                                {
                                    "ansible_loop_var": "item",
                                    "changed": false,
                                    "false_condition": "zuul.pipeline in ['manual-build-pdx', 'manual-prod-build-pdx', 'manual-adp-kpi-trigger', 'manual-adp-kpi-trigger-unlimited', 'manual-build-sim-artifacts', 'adp-trigger-virtual-endurance-run', 'test']",
                                    "item": {
                                        "canonical_hostname": "cc-github.bmwgroup.net",
                                        "canonical_name": "cc-github.bmwgroup.net/swh/ltf-dlt",
                                        "checkout": "master",
                                        "checkout_description": "zuul branch",
                                        "commit": "68fa15c725670a73c3c7f3566a99f38cd3a87ae5",
                                        "name": "swh/ltf-dlt",
                                        "required": true,
                                        "short_name": "ltf-dlt",
                                        "src_dir": "src/cc-github.bmwgroup.net/swh/ltf-dlt"
                                    },
                                    "skip_reason": "Conditional result was False",
                                    "skipped": true
                                },
                                {
                                    "ansible_loop_var": "item",
                                    "changed": false,
                                    "false_condition": "zuul.pipeline in ['manual-build-pdx', 'manual-prod-build-pdx', 'manual-adp-kpi-trigger', 'manual-adp-kpi-trigger-unlimited', 'manual-build-sim-artifacts', 'adp-trigger-virtual-endurance-run', 'test']",
                                    "item": {
                                        "canonical_hostname": "cc-github.bmwgroup.net",
                                        "canonical_name": "cc-github.bmwgroup.net/swh/orion",
                                        "checkout": "master",
                                        "checkout_description": "zuul branch",
                                        "commit": "72eb2c62dc7bccf336d71917365610e01f7b7512",
                                        "name": "swh/orion",
                                        "required": true,
                                        "short_name": "orion",
                                        "src_dir": "src/cc-github.bmwgroup.net/swh/orion"
                                    },
                                    "skip_reason": "Conditional result was False",
                                    "skipped": true
                                },
                                {
                                    "ansible_loop_var": "item",
                                    "changed": false,
                                    "false_condition": "zuul.pipeline in ['manual-build-pdx', 'manual-prod-build-pdx', 'manual-adp-kpi-trigger', 'manual-adp-kpi-trigger-unlimited', 'manual-build-sim-artifacts', 'adp-trigger-virtual-endurance-run', 'test']",
                                    "item": {
                                        "canonical_hostname": "cc-github.bmwgroup.net",
                                        "canonical_name": "cc-github.bmwgroup.net/swh/orion_aeb_temp",
                                        "checkout": "master",
                                        "checkout_description": "zuul branch",
                                        "commit": "b473c7ab8c70f69511aeff1374d70aef88f33d4a",
                                        "name": "swh/orion_aeb_temp",
                                        "required": true,
                                        "short_name": "orion_aeb_temp",
                                        "src_dir": "src/cc-github.bmwgroup.net/swh/orion_aeb_temp"
                                    },
                                    "skip_reason": "Conditional result was False",
                                    "skipped": true
                                },
                                {
                                    "ansible_loop_var": "item",
                                    "changed": false,
                                    "false_condition": "zuul.pipeline in ['manual-build-pdx', 'manual-prod-build-pdx', 'manual-adp-kpi-trigger', 'manual-adp-kpi-trigger-unlimited', 'manual-build-sim-artifacts', 'adp-trigger-virtual-endurance-run', 'test']",
                                    "item": {
                                        "canonical_hostname": "cc-github.bmwgroup.net",
                                        "canonical_name": "cc-github.bmwgroup.net/swh/system_description",
                                        "checkout": "master",
                                        "checkout_description": "zuul branch",
                                        "commit": "42dc122349acc14be41c1ebee15c7edff680fb79",
                                        "name": "swh/system_description",
                                        "required": true,
                                        "short_name": "system_description",
                                        "src_dir": "src/cc-github.bmwgroup.net/swh/system_description"
                                    },
                                    "skip_reason": "Conditional result was False",
                                    "skipped": true
                                },
                                {
                                    "ansible_loop_var": "item",
                                    "changed": false,
                                    "false_condition": "zuul.pipeline in ['manual-build-pdx', 'manual-prod-build-pdx', 'manual-adp-kpi-trigger', 'manual-adp-kpi-trigger-unlimited', 'manual-build-sim-artifacts', 'adp-trigger-virtual-endurance-run', 'test']",
                                    "item": {
                                        "canonical_hostname": "cc-github.bmwgroup.net",
                                        "canonical_name": "cc-github.bmwgroup.net/swh/ufm",
                                        "checkout": "master",
                                        "checkout_description": "zuul branch",
                                        "commit": "24d683807041b01ac000b8a6212ec6ad50e3b5e2",
                                        "name": "swh/ufm",
                                        "required": true,
                                        "short_name": "ufm",
                                        "src_dir": "src/cc-github.bmwgroup.net/swh/ufm"
                                    },
                                    "skip_reason": "Conditional result was False",
                                    "skipped": true
                                },
                                {
                                    "ansible_loop_var": "item",
                                    "changed": false,
                                    "false_condition": "zuul.pipeline in ['manual-build-pdx', 'manual-prod-build-pdx', 'manual-adp-kpi-trigger', 'manual-adp-kpi-trigger-unlimited', 'manual-build-sim-artifacts', 'adp-trigger-virtual-endurance-run', 'test']",
                                    "item": {
                                        "canonical_hostname": "cc-github.bmwgroup.net",
                                        "canonical_name": "cc-github.bmwgroup.net/swh/xpad-ara",
                                        "checkout": "master",
                                        "checkout_description": "zuul branch",
                                        "commit": "591c4c708640423656b97148b3d5767a987d4818",
                                        "name": "swh/xpad-ara",
                                        "required": true,
                                        "short_name": "xpad-ara",
                                        "src_dir": "src/cc-github.bmwgroup.net/swh/xpad-ara"
                                    },
                                    "skip_reason": "Conditional result was False",
                                    "skipped": true
                                },
                                {
                                    "ansible_loop_var": "item",
                                    "changed": false,
                                    "false_condition": "zuul.pipeline in ['manual-build-pdx', 'manual-prod-build-pdx', 'manual-adp-kpi-trigger', 'manual-adp-kpi-trigger-unlimited', 'manual-build-sim-artifacts', 'adp-trigger-virtual-endurance-run', 'test']",
                                    "item": {
                                        "canonical_hostname": "cc-github.bmwgroup.net",
                                        "canonical_name": "cc-github.bmwgroup.net/swh/xpad-shared",
                                        "checkout": "master",
                                        "checkout_description": "zuul branch",
                                        "commit": "5fe3ea2c8e16591c6c11a5398c0fd866652ef652",
                                        "name": "swh/xpad-shared",
                                        "required": true,
                                        "short_name": "xpad-shared",
                                        "src_dir": "src/cc-github.bmwgroup.net/swh/xpad-shared"
                                    },
                                    "skip_reason": "Conditional result was False",
                                    "skipped": true
                                },
                                {
                                    "ansible_loop_var": "item",
                                    "changed": false,
                                    "false_condition": "zuul.pipeline in ['manual-build-pdx', 'manual-prod-build-pdx', 'manual-adp-kpi-trigger', 'manual-adp-kpi-trigger-unlimited', 'manual-build-sim-artifacts', 'adp-trigger-virtual-endurance-run', 'test']",
                                    "item": {
                                        "canonical_hostname": "cc-github.bmwgroup.net",
                                        "canonical_name": "cc-github.bmwgroup.net/swh/xpad_xpc",
                                        "checkout": "master",
                                        "checkout_description": "zuul branch",
                                        "commit": "9ce2131edf06568e92545d2f5d1464924b016780",
                                        "name": "swh/xpad_xpc",
                                        "required": true,
                                        "short_name": "xpad_xpc",
                                        "src_dir": "src/cc-github.bmwgroup.net/swh/xpad_xpc"
                                    },
                                    "skip_reason": "Conditional result was False",
                                    "skipped": true
                                },
                                {
                                    "ansible_loop_var": "item",
                                    "changed": false,
                                    "false_condition": "zuul.pipeline in ['manual-build-pdx', 'manual-prod-build-pdx', 'manual-adp-kpi-trigger', 'manual-adp-kpi-trigger-unlimited', 'manual-build-sim-artifacts', 'adp-trigger-virtual-endurance-run', 'test']",
                                    "item": {
                                        "canonical_hostname": "cc-github.bmwgroup.net",
                                        "canonical_name": "cc-github.bmwgroup.net/swh/zuul-trusted-ddad",
                                        "checkout": "master",
                                        "checkout_description": "zuul branch",
                                        "commit": "a22500345c4283b6add4f2a3c354c663a904d9d0",
                                        "name": "swh/zuul-trusted-ddad",
                                        "required": true,
                                        "short_name": "zuul-trusted-ddad",
                                        "src_dir": "src/cc-github.bmwgroup.net/swh/zuul-trusted-ddad"
                                    },
                                    "skip_reason": "Conditional result was False",
                                    "skipped": true
                                }
                            ],
                            "skipped": true
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-1057-6791-00000000000c",
                        "name": "fix-zuul-remotes",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/untrusted/project_2/cc-github.bmwgroup.net/codecraft/cilib/roles/fix-zuul-remotes"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:48:41.489937Z",
                            "start": "2024-04-21T00:48:41.206662Z"
                        },
                        "id": "ce4df5fb-964c-1057-6791-00000000000f",
                        "name": "Add proper git remote (origin) to all checked out repos"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "win_copy",
                            "changed": false,
                            "false_condition": "zuul.pipeline in ['manual-build-pdx', 'manual-prod-build-pdx', 'manual-adp-kpi-trigger', 'manual-adp-kpi-trigger-unlimited', 'manual-build-sim-artifacts', 'adp-trigger-virtual-endurance-run', 'test']",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-1057-6791-00000000001b",
                        "name": "move-submodules",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/untrusted/project_0/cc-github.bmwgroup.net/swh/ddad_ci_config/roles/move-submodules"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:48:41.539845Z",
                            "start": "2024-04-21T00:48:41.510511Z"
                        },
                        "id": "ce4df5fb-964c-1057-6791-00000000001d",
                        "name": ""
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "win_shell",
                            "changed": false,
                            "false_condition": "zuul.pipeline in ['manual-build-pdx', 'manual-prod-build-pdx', 'manual-adp-kpi-trigger', 'manual-adp-kpi-trigger-unlimited', 'manual-build-sim-artifacts', 'adp-trigger-virtual-endurance-run', 'test']",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-1057-6791-00000000001b",
                        "name": "move-submodules",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/untrusted/project_0/cc-github.bmwgroup.net/swh/ddad_ci_config/roles/move-submodules"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:48:41.585772Z",
                            "start": "2024-04-21T00:48:41.557034Z"
                        },
                        "id": "ce4df5fb-964c-1057-6791-00000000001e",
                        "name": ""
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "win_copy",
                            "changed": false,
                            "false_condition": "zuul.pipeline in ['manual-build-pdx', 'manual-prod-build-pdx', 'manual-adp-kpi-trigger', 'manual-adp-kpi-trigger-unlimited', 'manual-build-sim-artifacts', 'adp-trigger-virtual-endurance-run', 'test']",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-1057-6791-00000000001b",
                        "name": "move-submodules",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/untrusted/project_0/cc-github.bmwgroup.net/swh/ddad_ci_config/roles/move-submodules"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:48:41.628348Z",
                            "start": "2024-04-21T00:48:41.600206Z"
                        },
                        "id": "ce4df5fb-964c-1057-6791-00000000001f",
                        "name": ""
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "win_shell",
                            "changed": false,
                            "false_condition": "zuul.pipeline in ['manual-build-pdx', 'manual-prod-build-pdx', 'manual-adp-kpi-trigger', 'manual-adp-kpi-trigger-unlimited', 'manual-build-sim-artifacts', 'adp-trigger-virtual-endurance-run', 'test']",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-1057-6791-00000000001b",
                        "name": "move-submodules",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/untrusted/project_0/cc-github.bmwgroup.net/swh/ddad_ci_config/roles/move-submodules"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:48:41.670383Z",
                            "start": "2024-04-21T00:48:41.641709Z"
                        },
                        "id": "ce4df5fb-964c-1057-6791-000000000020",
                        "name": ""
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "copy",
                            "changed": false,
                            "false_condition": "zuul.pipeline in ['manual-build-pdx', 'manual-prod-build-pdx', 'manual-adp-kpi-trigger', 'manual-adp-kpi-trigger-unlimited', 'manual-build-sim-artifacts', 'adp-trigger-virtual-endurance-run', 'test']",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-1057-6791-00000000001b",
                        "name": "move-submodules",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/untrusted/project_0/cc-github.bmwgroup.net/swh/ddad_ci_config/roles/move-submodules"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:48:41.724996Z",
                            "start": "2024-04-21T00:48:41.686119Z"
                        },
                        "id": "ce4df5fb-964c-1057-6791-000000000022",
                        "name": ""
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "shell",
                            "changed": false,
                            "false_condition": "zuul.pipeline in ['manual-build-pdx', 'manual-prod-build-pdx', 'manual-adp-kpi-trigger', 'manual-adp-kpi-trigger-unlimited', 'manual-build-sim-artifacts', 'adp-trigger-virtual-endurance-run', 'test']",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-1057-6791-00000000001b",
                        "name": "move-submodules",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/untrusted/project_0/cc-github.bmwgroup.net/swh/ddad_ci_config/roles/move-submodules"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:48:42.282399Z",
                            "start": "2024-04-21T00:48:41.770856Z"
                        },
                        "id": "ce4df5fb-964c-1057-6791-000000000023",
                        "name": ""
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "command",
                            "changed": false,
                            "false_condition": "zuul.pipeline in ['manual-build-pdx', 'manual-prod-build-pdx', 'manual-adp-kpi-trigger', 'manual-adp-kpi-trigger-unlimited', 'manual-build-sim-artifacts', 'adp-trigger-virtual-endurance-run', 'test']",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:48:42.339896Z",
                            "start": "2024-04-21T00:48:42.302275Z"
                        },
                        "id": "ce4df5fb-964c-1057-6791-000000000034",
                        "name": "Reset ddad to the parsed reference."
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "command",
                            "changed": false,
                            "false_condition": "zuul.pipeline in ['manual-build-pdx', 'manual-prod-build-pdx', 'manual-adp-kpi-trigger', 'manual-adp-kpi-trigger-unlimited', 'manual-build-sim-artifacts', 'adp-trigger-virtual-endurance-run', 'test']",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:48:42.921645Z",
                            "start": "2024-04-21T00:48:42.410126Z"
                        },
                        "id": "ce4df5fb-964c-1057-6791-000000000035",
                        "name": "Fetch references and update the submodules to the refs pointed by ddad."
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "set_fact",
                            "changed": false,
                            "msg": "All items skipped",
                            "results": [
                                {
                                    "ansible_loop_var": "item",
                                    "changed": false,
                                    "false_condition": "zuul.pipeline in ['manual-build-pdx', 'manual-prod-build-pdx', 'manual-adp-kpi-trigger', 'manual-adp-kpi-trigger-unlimited', 'manual-build-sim-artifacts', 'adp-trigger-virtual-endurance-run', 'test']",
                                    "item": {
                                        "branch": "master",
                                        "change_url": "https://cc-github.bmwgroup.net/swh/ddad",
                                        "project": {
                                            "canonical_hostname": "cc-github.bmwgroup.net",
                                            "canonical_name": "cc-github.bmwgroup.net/swh/ddad",
                                            "name": "swh/ddad",
                                            "short_name": "ddad",
                                            "src_dir": "src/cc-github.bmwgroup.net/swh/ddad"
                                        }
                                    },
                                    "skip_reason": "Conditional result was False",
                                    "skipped": true
                                }
                            ],
                            "skipped": true
                        }
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:48:42.968590Z",
                            "start": "2024-04-21T00:48:42.932145Z"
                        },
                        "id": "ce4df5fb-964c-1057-6791-000000000037",
                        "name": "Group changes by repo."
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "command",
                            "changed": false,
                            "false_condition": "zuul.pipeline in ['manual-build-pdx', 'manual-prod-build-pdx', 'manual-adp-kpi-trigger', 'manual-adp-kpi-trigger-unlimited', 'manual-build-sim-artifacts', 'adp-trigger-virtual-endurance-run', 'test']",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:48:43.544879Z",
                            "start": "2024-04-21T00:48:43.029934Z"
                        },
                        "id": "ce4df5fb-964c-1057-6791-000000000039",
                        "name": ""
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "command",
                            "changed": false,
                            "false_condition": "zuul.pipeline in ['manual-build-pdx', 'manual-prod-build-pdx', 'manual-adp-kpi-trigger', 'manual-adp-kpi-trigger-unlimited', 'manual-build-sim-artifacts', 'adp-trigger-virtual-endurance-run', 'test']",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:48:44.142649Z",
                            "start": "2024-04-21T00:48:43.617339Z"
                        },
                        "id": "ce4df5fb-964c-1057-6791-00000000003a",
                        "name": ""
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "command",
                            "changed": false,
                            "false_condition": "zuul.pipeline in ['manual-build-pdx', 'manual-prod-build-pdx', 'manual-adp-kpi-trigger', 'manual-adp-kpi-trigger-unlimited', 'manual-build-sim-artifacts', 'adp-trigger-virtual-endurance-run', 'test']",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:48:44.214095Z",
                            "start": "2024-04-21T00:48:44.185892Z"
                        },
                        "id": "ce4df5fb-964c-1057-6791-00000000003b",
                        "name": "Apply PR changes on top of the repo."
                    }
                }
            ]
        }
    ],
    "stats": {
        "node": {
            "changed": 0,
            "failures": 0,
            "ignored": 0,
            "ok": 0,
            "rescued": 0,
            "skipped": 16,
            "unreachable": 0
        }
    },
    "trusted": false
},
{
    "branch": "master",
    "index": "31",
    "phase": "pre",
    "playbook": "cc-github.bmwgroup.net/swh/ddad_ci_config/playbooks/helper/move-workspace.yaml",
    "plays": [
        {
            "play": {
                "duration": {
                    "end": "2024-04-21T00:48:47.486141Z",
                    "start": "2024-04-21T00:48:45.705256Z"
                },
                "id": "ce4df5fb-964c-9e71-1782-000000000002",
                "name": "all"
            },
            "tasks": [
                {
                    "hosts": {
                        "node": {
                            "action": "shell",
                            "changed": true,
                            "cmd": "mkdir -p /home/zuul/workspace/src\n",
                            "delta": "0:00:00.006077",
                            "end": "2024-04-21 00:48:46.714043",
                            "invocation": {
                                "module_args": {
                                    "_raw_params": "mkdir -p /home/zuul/workspace/src\n",
                                    "_uses_shell": true,
                                    "argv": null,
                                    "chdir": "/home/zuul",
                                    "creates": null,
                                    "executable": "/bin/bash",
                                    "removes": null,
                                    "stdin": null,
                                    "stdin_add_newline": true,
                                    "strip_empty_ends": true,
                                    "warn": false,
                                    "zuul_ansible_split_streams": false,
                                    "zuul_log_id": "ce4df5fb-964c-9e71-1782-000000000004-1-node"
                                }
                            },
                            "msg": "",
                            "rc": 0,
                            "start": "2024-04-21 00:48:46.707966",
                            "stderr": "",
                            "stderr_lines": [],
                            "stdout": "",
                            "stdout_lines": [],
                            "zuul_log_id": "ce4df5fb-964c-9e71-1782-000000000004-1-node"
                        }
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:48:46.836107Z",
                            "start": "2024-04-21T00:48:45.791913Z"
                        },
                        "id": "ce4df5fb-964c-9e71-1782-000000000004",
                        "name": "Ensure workspace directory exists"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "shell",
                            "changed": true,
                            "cmd": "mv \"src/cc-github.bmwgroup.net/swh/ddad\" \"/home/zuul/workspace/src\"\n",
                            "delta": "0:00:00.007792",
                            "end": "2024-04-21 00:48:47.284497",
                            "invocation": {
                                "module_args": {
                                    "_raw_params": "mv \"src/cc-github.bmwgroup.net/swh/ddad\" \"/home/zuul/workspace/src\"\n",
                                    "_uses_shell": true,
                                    "argv": null,
                                    "chdir": "/home/zuul",
                                    "creates": null,
                                    "executable": "/bin/bash",
                                    "removes": null,
                                    "stdin": null,
                                    "stdin_add_newline": true,
                                    "strip_empty_ends": true,
                                    "warn": false,
                                    "zuul_ansible_split_streams": false,
                                    "zuul_log_id": "ce4df5fb-964c-9e71-1782-000000000005-1-node"
                                }
                            },
                            "msg": "",
                            "rc": 0,
                            "start": "2024-04-21 00:48:47.276705",
                            "stderr": "",
                            "stderr_lines": [],
                            "stdout": "",
                            "stdout_lines": [],
                            "zuul_log_id": "ce4df5fb-964c-9e71-1782-000000000005-1-node"
                        }
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:48:47.486141Z",
                            "start": "2024-04-21T00:48:46.965151Z"
                        },
                        "id": "ce4df5fb-964c-9e71-1782-000000000005",
                        "name": "Move DDAD repository from clone location to workspace location"
                    }
                }
            ]
        }
    ],
    "stats": {
        "node": {
            "changed": 2,
            "failures": 0,
            "ignored": 0,
            "ok": 2,
            "rescued": 0,
            "skipped": 0,
            "unreachable": 0
        }
    },
    "trusted": false
},
{
    "branch": "master",
    "index": "32",
    "phase": "pre",
    "playbook": "cc-github.bmwgroup.net/swh/ddad_ci_config/playbooks/print-safe-netrc.yaml",
    "plays": [
        {
            "play": {
                "duration": {
                    "end": "2024-04-21T00:48:49.441695Z",
                    "start": "2024-04-21T00:48:48.772967Z"
                },
                "id": "ce4df5fb-964c-a9f9-7e33-000000000002",
                "name": "Print netrc while masking passwords with sha sums"
            },
            "tasks": [
                {
                    "hosts": {
                        "node": {
                            "action": "command",
                            "changed": false,
                            "false_condition": "print_netrc_path is defined",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:48:49.387626Z",
                            "start": "2024-04-21T00:48:48.873287Z"
                        },
                        "id": "ce4df5fb-964c-a9f9-7e33-000000000004",
                        "name": "Print netrc"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "debug",
                            "changed": false,
                            "false_condition": "print_netrc_path is defined",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:48:49.441695Z",
                            "start": "2024-04-21T00:48:49.403042Z"
                        },
                        "id": "ce4df5fb-964c-a9f9-7e33-000000000005",
                        "name": ""
                    }
                }
            ]
        }
    ],
    "stats": {
        "node": {
            "changed": 0,
            "failures": 0,
            "ignored": 0,
            "ok": 0,
            "rescued": 0,
            "skipped": 2,
            "unreachable": 0
        }
    },
    "trusted": false
},
{
    "branch": "master",
    "index": "33",
    "phase": "pre",
    "playbook": "cc-github.bmwgroup.net/swh/ddad_ci_config/playbooks/helper/print-free-disk-space.yaml",
    "plays": [
        {
            "play": {
                "duration": {
                    "end": "2024-04-21T00:48:51.793335Z",
                    "start": "2024-04-21T00:48:50.693304Z"
                },
                "id": "ce4df5fb-964c-e981-d3a2-000000000002",
                "name": "all:!zuul_unreachable"
            },
            "tasks": [
                {
                    "hosts": {
                        "node": {
                            "action": "shell",
                            "changed": true,
                            "cmd": "set -o nounset\nset -o errexit\nset -o pipefail\ndf --human-readable\ndf --inodes\n",
                            "delta": "0:00:00.007793",
                            "end": "2024-04-21 00:48:51.583622",
                            "invocation": {
                                "module_args": {
                                    "_raw_params": "set -o nounset\nset -o errexit\nset -o pipefail\ndf --human-readable\ndf --inodes\n",
                                    "_uses_shell": true,
                                    "argv": null,
                                    "chdir": null,
                                    "creates": null,
                                    "executable": "/bin/bash",
                                    "removes": null,
                                    "stdin": null,
                                    "stdin_add_newline": true,
                                    "strip_empty_ends": true,
                                    "warn": false,
                                    "zuul_ansible_split_streams": false,
                                    "zuul_log_id": "ce4df5fb-964c-e981-d3a2-000000000004-1-node"
                                }
                            },
                            "msg": "",
                            "rc": 0,
                            "start": "2024-04-21 00:48:51.575829",
                            "stderr": "",
                            "stderr_lines": [],
                            "stdout": "Filesystem      Size  Used Avail Use% Mounted on\ntmpfs           6.3G  2.5M  6.3G   1% /run\n/dev/vda1       300G   54G  233G  19% /\ntmpfs            32G     0   32G   0% /dev/shm\ntmpfs           5.0M     0  5.0M   0% /run/lock\ntmpfs           6.3G  4.0K  6.3G   1% /run/user/1000\nFilesystem       Inodes   IUsed    IFree IUse% Mounted on\ntmpfs           8230202     757  8229445    1% /run\n/dev/vda1      83804160 1119640 82684520    2% /\ntmpfs           8230202       1  8230201    1% /dev/shm\ntmpfs           8230202       3  8230199    1% /run/lock\ntmpfs           1646040      25  1646015    1% /run/user/1000",
                            "stdout_lines": [
                                "Filesystem      Size  Used Avail Use% Mounted on",
                                "tmpfs           6.3G  2.5M  6.3G   1% /run",
                                "/dev/vda1       300G   54G  233G  19% /",
                                "tmpfs            32G     0   32G   0% /dev/shm",
                                "tmpfs           5.0M     0  5.0M   0% /run/lock",
                                "tmpfs           6.3G  4.0K  6.3G   1% /run/user/1000",
                                "Filesystem       Inodes   IUsed    IFree IUse% Mounted on",
                                "tmpfs           8230202     757  8229445    1% /run",
                                "/dev/vda1      83804160 1119640 82684520    2% /",
                                "tmpfs           8230202       1  8230201    1% /dev/shm",
                                "tmpfs           8230202       3  8230199    1% /run/lock",
                                "tmpfs           1646040      25  1646015    1% /run/user/1000"
                            ],
                            "zuul_log_id": "ce4df5fb-964c-e981-d3a2-000000000004-1-node"
                        }
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:48:51.793335Z",
                            "start": "2024-04-21T00:48:50.774003Z"
                        },
                        "id": "ce4df5fb-964c-e981-d3a2-000000000004",
                        "name": "Print disk usage"
                    }
                }
            ]
        }
    ],
    "stats": {
        "node": {
            "changed": 1,
            "failures": 0,
            "ignored": 0,
            "ok": 1,
            "rescued": 0,
            "skipped": 0,
            "unreachable": 0
        }
    },
    "trusted": false
},
{
    "branch": "master",
    "index": "34",
    "phase": "pre",
    "playbook": "cc-github.bmwgroup.net/swh/ddad_ci_config/playbooks/quality/test/add-node-debug-key.yaml",
    "plays": [
        {
            "play": {
                "duration": {
                    "end": "2024-04-21T00:48:53.249860Z",
                    "start": "2024-04-21T00:48:53.170873Z"
                },
                "id": "ce4df5fb-964c-356a-e43c-000000000002",
                "name": "all"
            },
            "tasks": [
                {
                    "hosts": {
                        "node": {
                            "action": "authorized_key",
                            "changed": false,
                            "false_condition": "ansible_os_family != \"Windows\" and debug_key is defined\n",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:48:53.249860Z",
                            "start": "2024-04-21T00:48:53.208987Z"
                        },
                        "id": "ce4df5fb-964c-356a-e43c-000000000004",
                        "name": "Add SSH key for debug purposes"
                    }
                }
            ]
        }
    ],
    "stats": {
        "node": {
            "changed": 0,
            "failures": 0,
            "ignored": 0,
            "ok": 0,
            "rescued": 0,
            "skipped": 1,
            "unreachable": 0
        }
    },
    "trusted": false
},
{
    "branch": "master",
    "index": "35",
    "phase": "pre",
    "playbook": "cc-github.bmwgroup.net/swh/ddad_ci_config/playbooks/quality/templates/swq-adp-query.yaml",
    "plays": [
        {
            "play": {
                "duration": {
                    "end": "2024-04-21T00:48:57.939278Z",
                    "start": "2024-04-21T00:48:54.485591Z"
                },
                "id": "ce4df5fb-964c-2711-2a94-000000000003",
                "name": "Common Playbook for SW Quality Jobs"
            },
            "tasks": [
                {
                    "hosts": {
                        "node": {
                            "action": "file",
                            "changed": false,
                            "false_condition": "query_enabled and query_template_name is defined and query_generated_main is defined\n",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:48:54.552674Z",
                            "start": "2024-04-21T00:48:54.521665Z"
                        },
                        "id": "ce4df5fb-964c-2711-2a94-000000000030",
                        "name": "Create \"/tmp/logs\" directory"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "template",
                            "changed": false,
                            "false_condition": "query_enabled and query_template_name is defined and query_generated_main is defined\n",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:48:54.623434Z",
                            "start": "2024-04-21T00:48:54.573388Z"
                        },
                        "id": "ce4df5fb-964c-2711-2a94-000000000031",
                        "name": "Generate \"/tmp/logs/generated_main_query.sh\" from \"swq_adp_query.j2.sh\" for docker"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "command",
                            "changed": false,
                            "false_condition": "query_enabled and query_template_name is defined and query_generated_main is defined\n",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:48:55.217349Z",
                            "start": "2024-04-21T00:48:54.703000Z"
                        },
                        "id": "ce4df5fb-964c-2711-2a94-000000000032",
                        "name": "Print content of \"/tmp/logs/generated_main_query.sh\""
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "include_role",
                            "changed": false,
                            "false_condition": "query_enabled and query_template_name is defined and query_generated_main is defined\n",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:48:55.275668Z",
                            "start": "2024-04-21T00:48:55.234349Z"
                        },
                        "id": "ce4df5fb-964c-2711-2a94-000000000033",
                        "name": "Mount buildset cache"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "file",
                            "changed": false,
                            "false_condition": "query_enabled and query_template_name is defined and query_generated_main is defined\n",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:48:55.324626Z",
                            "start": "2024-04-21T00:48:55.286945Z"
                        },
                        "id": "ce4df5fb-964c-2711-2a94-000000000034",
                        "name": "Create an empty \"$HOME/.bazelrc\" file"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "include_tasks",
                            "changed": false,
                            "false_condition": "query_enabled and query_template_name is defined and query_generated_main is defined\n",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-2711-2a94-00000000000d",
                        "name": "buildbarn-host",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/untrusted/project_2/cc-github.bmwgroup.net/codecraft/cilib/roles/buildbarn-host"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:48:55.450203Z",
                            "start": "2024-04-21T00:48:55.403440Z"
                        },
                        "id": "ce4df5fb-964c-2711-2a94-00000000000f",
                        "name": ""
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "include_tasks",
                            "changed": false,
                            "false_condition": "query_enabled and query_template_name is defined and query_generated_main is defined\n",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-2711-2a94-00000000000d",
                        "name": "buildbarn-host",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/untrusted/project_2/cc-github.bmwgroup.net/codecraft/cilib/roles/buildbarn-host"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:48:55.499016Z",
                            "start": "2024-04-21T00:48:55.462269Z"
                        },
                        "id": "ce4df5fb-964c-2711-2a94-000000000010",
                        "name": ""
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "fail",
                            "changed": false,
                            "false_condition": "query_enabled and query_template_name is defined and query_generated_main is defined\n",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-2711-2a94-000000000012",
                        "name": "engflow-host",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/untrusted/project_2/cc-github.bmwgroup.net/codecraft/cilib/roles/engflow-host"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:48:55.566880Z",
                            "start": "2024-04-21T00:48:55.528248Z"
                        },
                        "id": "ce4df5fb-964c-2711-2a94-000000000014",
                        "name": ""
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "set_fact",
                            "changed": false,
                            "false_condition": "query_enabled and query_template_name is defined and query_generated_main is defined\n",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-2711-2a94-000000000012",
                        "name": "engflow-host",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/untrusted/project_2/cc-github.bmwgroup.net/codecraft/cilib/roles/engflow-host"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:48:55.633370Z",
                            "start": "2024-04-21T00:48:55.583834Z"
                        },
                        "id": "ce4df5fb-964c-2711-2a94-000000000015",
                        "name": "Add availibility zone in AWS for local routing"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "set_fact",
                            "changed": false,
                            "false_condition": "query_enabled and query_template_name is defined and query_generated_main is defined\n",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-2711-2a94-000000000012",
                        "name": "engflow-host",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/untrusted/project_2/cc-github.bmwgroup.net/codecraft/cilib/roles/engflow-host"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:48:55.683998Z",
                            "start": "2024-04-21T00:48:55.646389Z"
                        },
                        "id": "ce4df5fb-964c-2711-2a94-000000000016",
                        "name": "Set EngFlow URI"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "include_tasks",
                            "changed": false,
                            "results": [],
                            "skipped": true,
                            "skipped_reason": "No items in the list"
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-2711-2a94-000000000018",
                        "name": "bazel-override-zuul-repository",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/untrusted/project_0/cc-github.bmwgroup.net/swh/ddad_ci_config/roles/bazel-override-zuul-repository"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:48:55.727888Z",
                            "start": "2024-04-21T00:48:55.710888Z"
                        },
                        "id": "ce4df5fb-964c-2711-2a94-00000000001a",
                        "name": ""
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "include_tasks",
                            "changed": false,
                            "results": [],
                            "skipped": true,
                            "skipped_reason": "No items in the list"
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-2711-2a94-000000000018",
                        "name": "bazel-override-zuul-repository",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/untrusted/project_0/cc-github.bmwgroup.net/swh/ddad_ci_config/roles/bazel-override-zuul-repository"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:48:55.757953Z",
                            "start": "2024-04-21T00:48:55.741006Z"
                        },
                        "id": "ce4df5fb-964c-2711-2a94-00000000001c",
                        "name": ""
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "include_tasks",
                            "changed": false,
                            "false_condition": "query_enabled and query_template_name is defined and query_generated_main is defined\n",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-2711-2a94-000000000007",
                        "name": "bazel-ensure-bazelrc",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/untrusted/project_0/cc-github.bmwgroup.net/swh/ddad_ci_config/roles/bazel-ensure-bazelrc"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:48:55.830016Z",
                            "start": "2024-04-21T00:48:55.782091Z"
                        },
                        "id": "ce4df5fb-964c-2711-2a94-00000000001f",
                        "name": ""
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "include_tasks",
                            "changed": false,
                            "false_condition": "query_enabled and query_template_name is defined and query_generated_main is defined\n",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-2711-2a94-000000000007",
                        "name": "bazel-ensure-bazelrc",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/untrusted/project_0/cc-github.bmwgroup.net/swh/ddad_ci_config/roles/bazel-ensure-bazelrc"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:48:55.887369Z",
                            "start": "2024-04-21T00:48:55.848898Z"
                        },
                        "id": "ce4df5fb-964c-2711-2a94-000000000020",
                        "name": ""
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "set_fact",
                            "changed": false,
                            "false_condition": "query_enabled and query_template_name is defined and query_generated_main is defined\n",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-2711-2a94-000000000007",
                        "name": "bazel-ensure-bazelrc",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/untrusted/project_0/cc-github.bmwgroup.net/swh/ddad_ci_config/roles/bazel-ensure-bazelrc"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:48:55.944102Z",
                            "start": "2024-04-21T00:48:55.904278Z"
                        },
                        "id": "ce4df5fb-964c-2711-2a94-000000000021",
                        "name": ""
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "set_fact",
                            "changed": false,
                            "false_condition": "query_enabled and query_template_name is defined and query_generated_main is defined\n",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-2711-2a94-000000000027",
                        "name": "cilib-defaults",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/untrusted/project_2/cc-github.bmwgroup.net/codecraft/cilib/roles/cilib-defaults"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:48:56.013529Z",
                            "start": "2024-04-21T00:48:55.974054Z"
                        },
                        "id": "ce4df5fb-964c-2711-2a94-000000000029",
                        "name": "Set cilib defaults"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "set_fact",
                            "changed": false,
                            "false_condition": "query_enabled and query_template_name is defined and query_generated_main is defined\n",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-2711-2a94-000000000023",
                        "name": "docker-run",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/untrusted/project_2/cc-github.bmwgroup.net/codecraft/cilib/roles/docker-run"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:48:56.090097Z",
                            "start": "2024-04-21T00:48:56.041847Z"
                        },
                        "id": "ce4df5fb-964c-2711-2a94-00000000002b",
                        "name": "Set image vars"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "shell",
                            "changed": false,
                            "false_condition": "query_enabled and query_template_name is defined and query_generated_main is defined\n",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-2711-2a94-000000000023",
                        "name": "docker-run",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/untrusted/project_2/cc-github.bmwgroup.net/codecraft/cilib/roles/docker-run"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:48:56.654332Z",
                            "start": "2024-04-21T00:48:56.139645Z"
                        },
                        "id": "ce4df5fb-964c-2711-2a94-00000000002c",
                        "name": "Pull docker image {{ gen_docker_image }}"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "set_fact",
                            "changed": false,
                            "false_condition": "query_enabled and query_template_name is defined and query_generated_main is defined\n",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-2711-2a94-000000000023",
                        "name": "docker-run",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/untrusted/project_2/cc-github.bmwgroup.net/codecraft/cilib/roles/docker-run"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:48:56.720597Z",
                            "start": "2024-04-21T00:48:56.669380Z"
                        },
                        "id": "ce4df5fb-964c-2711-2a94-00000000002d",
                        "name": "Set fact Run docker command"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "shell",
                            "changed": false,
                            "false_condition": "query_enabled and query_template_name is defined and query_generated_main is defined\n",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-2711-2a94-000000000023",
                        "name": "docker-run",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/untrusted/project_2/cc-github.bmwgroup.net/codecraft/cilib/roles/docker-run"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:48:57.303597Z",
                            "start": "2024-04-21T00:48:56.786190Z"
                        },
                        "id": "ce4df5fb-964c-2711-2a94-00000000002e",
                        "name": "Run docker command"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "command",
                            "changed": false,
                            "false_condition": "query_enabled and query_template_name is defined and query_generated_main is defined\n",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:48:57.939278Z",
                            "start": "2024-04-21T00:48:57.417843Z"
                        },
                        "id": "ce4df5fb-964c-2711-2a94-000000000036",
                        "name": "Print content of \"/tmp/logs\""
                    }
                }
            ]
        }
    ],
    "stats": {
        "node": {
            "changed": 0,
            "failures": 0,
            "ignored": 0,
            "ok": 0,
            "rescued": 0,
            "skipped": 21,
            "unreachable": 0
        }
    },
    "trusted": false
},
{
    "branch": "master",
    "index": "36",
    "phase": "pre",
    "playbook": "cc-github.bmwgroup.net/swh/ddad_ci_config/playbooks/quality/utils/patch-submodules.yaml",
    "plays": [
        {
            "play": {
                "duration": {
                    "end": "2024-04-21T00:49:00.773586Z",
                    "start": "2024-04-21T00:48:59.416193Z"
                },
                "id": "ce4df5fb-964c-3e86-0d48-000000000002",
                "name": "Checkout base project and submodules to tag"
            },
            "tasks": [
                {
                    "hosts": {
                        "node": {
                            "action": "command",
                            "changed": false,
                            "false_condition": "reset_tag_name is defined and ansible_os_family != \"Windows\"",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:49:00.034637Z",
                            "start": "2024-04-21T00:48:59.520121Z"
                        },
                        "id": "ce4df5fb-964c-3e86-0d48-000000000004",
                        "name": "Checkout base project to tag (Linux)"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "command",
                            "changed": false,
                            "false_condition": "reset_tag_name is defined and ansible_os_family != \"Windows\"",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:49:00.679796Z",
                            "start": "2024-04-21T00:49:00.168136Z"
                        },
                        "id": "ce4df5fb-964c-3e86-0d48-000000000005",
                        "name": "Checkout all submodules to tag (Linux)"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "win_command",
                            "changed": false,
                            "false_condition": "reset_tag_name is defined and ansible_os_family == \"Windows\"",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:49:00.725499Z",
                            "start": "2024-04-21T00:49:00.689144Z"
                        },
                        "id": "ce4df5fb-964c-3e86-0d48-000000000007",
                        "name": "Checkout base project to tag (Windows)"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "win_command",
                            "changed": false,
                            "false_condition": "reset_tag_name is defined and ansible_os_family == \"Windows\"",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:49:00.773586Z",
                            "start": "2024-04-21T00:49:00.734422Z"
                        },
                        "id": "ce4df5fb-964c-3e86-0d48-000000000008",
                        "name": "Checkout all submodules to tag (Windows)"
                    }
                }
            ]
        },
        {
            "play": {
                "duration": {
                    "end": "2024-04-21T00:49:00.966398Z",
                    "start": "2024-04-21T00:49:00.830749Z"
                },
                "id": "ce4df5fb-964c-3e86-0d48-000000000009",
                "name": "Patch submodules"
            },
            "tasks": [
                {
                    "hosts": {
                        "node": {
                            "action": "shell",
                            "changed": false,
                            "false_condition": "patch_list is defined and ansible_os_family != \"Windows\"",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:49:00.920269Z",
                            "start": "2024-04-21T00:49:00.870375Z"
                        },
                        "id": "ce4df5fb-964c-3e86-0d48-00000000000b",
                        "name": "Patching submodules (Linux)"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "win_shell",
                            "changed": false,
                            "false_condition": "patch_list is defined and ansible_os_family == \"Windows\"",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:49:00.966398Z",
                            "start": "2024-04-21T00:49:00.929061Z"
                        },
                        "id": "ce4df5fb-964c-3e86-0d48-00000000000c",
                        "name": "Patching submodules (Windows)"
                    }
                }
            ]
        }
    ],
    "stats": {
        "node": {
            "changed": 0,
            "failures": 0,
            "ignored": 0,
            "ok": 0,
            "rescued": 0,
            "skipped": 6,
            "unreachable": 0
        }
    },
    "trusted": false
},
{
    "branch": "master",
    "index": "0",
    "phase": "run",
    "playbook": "cc-github.bmwgroup.net/swh/ddad_ci_config/playbooks/quality/templates/swq-adp-playbook.yaml",
    "plays": [
        {
            "play": {
                "duration": {
                    "end": "2024-04-21T00:50:07.806941Z",
                    "start": "2024-04-21T00:49:02.277377Z"
                },
                "id": "ce4df5fb-964c-0c4c-ab20-000000000002",
                "name": "Common Playbook for SW Quality Jobs"
            },
            "tasks": [
                {
                    "hosts": {
                        "node": {
                            "action": "file",
                            "changed": true,
                            "diff": {
                                "after": {
                                    "path": "/tmp/logs",
                                    "state": "directory"
                                },
                                "before": {
                                    "path": "/tmp/logs",
                                    "state": "absent"
                                }
                            },
                            "gid": 0,
                            "group": "root",
                            "invocation": {
                                "module_args": {
                                    "_diff_peek": null,
                                    "_original_basename": null,
                                    "access_time": null,
                                    "access_time_format": "%Y%m%d%H%M.%S",
                                    "attributes": null,
                                    "follow": true,
                                    "force": false,
                                    "group": null,
                                    "mode": 493,
                                    "modification_time": null,
                                    "modification_time_format": "%Y%m%d%H%M.%S",
                                    "owner": null,
                                    "path": "/tmp/logs",
                                    "recurse": false,
                                    "selevel": null,
                                    "serole": null,
                                    "setype": null,
                                    "seuser": null,
                                    "src": null,
                                    "state": "directory",
                                    "unsafe_writes": false
                                }
                            },
                            "mode": "0755",
                            "owner": "root",
                            "path": "/tmp/logs",
                            "size": 4096,
                            "state": "directory",
                            "uid": 0
                        }
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:49:03.358663Z",
                            "start": "2024-04-21T00:49:02.315517Z"
                        },
                        "id": "ce4df5fb-964c-0c4c-ab20-00000000002f",
                        "name": "Create \"/tmp/logs\" directory"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "template",
                            "changed": true,
                            "checksum": "18b07c2b77ed709d6f1e776e1df0ed64e9a6f8af",
                            "dest": "/tmp/logs/generated_main.sh",
                            "diff": [],
                            "gid": 0,
                            "group": "root",
                            "invocation": {
                                "module_args": {
                                    "_original_basename": "swf_metrics.j2.sh",
                                    "attributes": null,
                                    "backup": false,
                                    "checksum": "18b07c2b77ed709d6f1e776e1df0ed64e9a6f8af",
                                    "content": null,
                                    "dest": "/tmp/logs/generated_main.sh",
                                    "directory_mode": null,
                                    "follow": false,
                                    "force": true,
                                    "group": null,
                                    "local_follow": null,
                                    "mode": "a+x",
                                    "owner": null,
                                    "remote_src": null,
                                    "selevel": null,
                                    "serole": null,
                                    "setype": null,
                                    "seuser": null,
                                    "src": "/home/zuul/.ansible/tmp/ansible-tmp-1713660543.4150538-12-30316525624049/source",
                                    "unsafe_writes": false,
                                    "validate": null
                                }
                            },
                            "md5sum": "ff6f05815c84fe2228c036c98dcb63b1",
                            "mode": "0755",
                            "owner": "root",
                            "size": 1866,
                            "src": "/home/zuul/.ansible/tmp/ansible-tmp-1713660543.4150538-12-30316525624049/source",
                            "state": "file",
                            "uid": 0
                        }
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:49:04.725677Z",
                            "start": "2024-04-21T00:49:03.370653Z"
                        },
                        "id": "ce4df5fb-964c-0c4c-ab20-000000000030",
                        "name": "Generate \"/tmp/logs/generated_main.sh\" from \"swf_metrics.j2.sh\" for docker"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "command",
                            "changed": true,
                            "cmd": [
                                "cat",
                                "/tmp/logs/generated_main.sh"
                            ],
                            "delta": "0:00:00.005031",
                            "end": "2024-04-21 00:49:05.321666",
                            "invocation": {
                                "module_args": {
                                    "_raw_params": "cat \"/tmp/logs/generated_main.sh\"",
                                    "_uses_shell": false,
                                    "argv": null,
                                    "chdir": null,
                                    "creates": null,
                                    "executable": null,
                                    "removes": null,
                                    "stdin": null,
                                    "stdin_add_newline": true,
                                    "strip_empty_ends": true,
                                    "warn": false,
                                    "zuul_ansible_split_streams": false,
                                    "zuul_log_id": "ce4df5fb-964c-0c4c-ab20-000000000031-1-node"
                                }
                            },
                            "msg": "",
                            "rc": 0,
                            "start": "2024-04-21 00:49:05.316635",
                            "stderr": "",
                            "stderr_lines": [],
                            "stdout": "#!/usr/bin/env bash\n\nset -euo pipefail\nsource \"/workspace/src/ddad/ci_config/playbooks/quality/utils/playbook_common.sh\"\ncd \"/workspace/src/ddad\"\n\necho \"INFO: Sleeping for 0 seconds...\"\nsleep \"0\"\n\n# START\n# Iterate over all metrics yamls and execute the metrics job generator.\n#\n# The metrics job generator will invoke the entire pipeline, main steps are:\n# * Calling all configured quality tools.\n# * Converting the results into a SonarQube format.\n# * Upload the results into SonarQube.\n#\n# It prepares a text file containing a list of new PR findings from\n# every metrics yaml call.\n# Further, it creates an archive of the raw results for the artifactory\n\nmkdir /workspace/swf_metrics\n\n\n# Specify the location of the logs to the metrics job by utilizing the \n# TOOL_OUTPUT_DIR, thereby ensuring functional links in the SUMMARY.html.\nexport TOOL_OUTPUT_DIR=logs/lifecycle/metrics/metrics/\n\n# disable colored output (works only for tools that support NO_COLOR)\nexport NO_COLOR=1\n\nbazel run --platforms=@swf_quality_tools//:swf \\\n    @swf_quality_tools//quality_tools/metrics_job:generator -- \\\n         \\\n                 \\\n        --branch=\"master\" \\\n                --logs=/tmp/logs/lifecycle/metrics \\\n        --metrics=/workspace/src/ddad/application/adp/lifecycle/metrics.yaml \\\n        --relative=application/adp \\\n        --token=/root/.sonarqube/token \\\n        --params='{\"summary_output_dir\": \"/home/zuul/logs\"}' \\\n         \\\n        --cxx\n        cat /tmp/logs/lifecycle/metrics/metrics/pull_request_findings_processed.txt \\\n        >> /tmp/logs/pull_request_findings_merged.txt\n    \n# Create results archive for artifactory uplaod\ntar -czvf /workspace/swf_metrics/swf-metrics-check-nautilus-lifecycle.tar.gz \\\n    -C /tmp/logs/lifecycle/metrics \\\n    metrics\n\n# Remove source code from Zuul logs\nrm -rf /tmp/logs/lifecycle/metrics/metrics/*coverage*/*/",
                            "stdout_lines": [
                                "#!/usr/bin/env bash",
                                "",
                                "set -euo pipefail",
                                "source \"/workspace/src/ddad/ci_config/playbooks/quality/utils/playbook_common.sh\"",
                                "cd \"/workspace/src/ddad\"",
                                "",
                                "echo \"INFO: Sleeping for 0 seconds...\"",
                                "sleep \"0\"",
                                "",
                                "# START",
                                "# Iterate over all metrics yamls and execute the metrics job generator.",
                                "#",
                                "# The metrics job generator will invoke the entire pipeline, main steps are:",
                                "# * Calling all configured quality tools.",
                                "# * Converting the results into a SonarQube format.",
                                "# * Upload the results into SonarQube.",
                                "#",
                                "# It prepares a text file containing a list of new PR findings from",
                                "# every metrics yaml call.",
                                "# Further, it creates an archive of the raw results for the artifactory",
                                "",
                                "mkdir /workspace/swf_metrics",
                                "",
                                "",
                                "# Specify the location of the logs to the metrics job by utilizing the ",
                                "# TOOL_OUTPUT_DIR, thereby ensuring functional links in the SUMMARY.html.",
                                "export TOOL_OUTPUT_DIR=logs/lifecycle/metrics/metrics/",
                                "",
                                "# disable colored output (works only for tools that support NO_COLOR)",
                                "export NO_COLOR=1",
                                "",
                                "bazel run --platforms=@swf_quality_tools//:swf \\",
                                "    @swf_quality_tools//quality_tools/metrics_job:generator -- \\",
                                "         \\",
                                "                 \\",
                                "        --branch=\"master\" \\",
                                "                --logs=/tmp/logs/lifecycle/metrics \\",
                                "        --metrics=/workspace/src/ddad/application/adp/lifecycle/metrics.yaml \\",
                                "        --relative=application/adp \\",
                                "        --token=/root/.sonarqube/token \\",
                                "        --params='{\"summary_output_dir\": \"/home/zuul/logs\"}' \\",
                                "         \\",
                                "        --cxx",
                                "        cat /tmp/logs/lifecycle/metrics/metrics/pull_request_findings_processed.txt \\",
                                "        >> /tmp/logs/pull_request_findings_merged.txt",
                                "    ",
                                "# Create results archive for artifactory uplaod",
                                "tar -czvf /workspace/swf_metrics/swf-metrics-check-nautilus-lifecycle.tar.gz \\",
                                "    -C /tmp/logs/lifecycle/metrics \\",
                                "    metrics",
                                "",
                                "# Remove source code from Zuul logs",
                                "rm -rf /tmp/logs/lifecycle/metrics/metrics/*coverage*/*/"
                            ],
                            "zuul_log_id": "ce4df5fb-964c-0c4c-ab20-000000000031-1-node"
                        }
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:49:05.390146Z",
                            "start": "2024-04-21T00:49:04.872225Z"
                        },
                        "id": "ce4df5fb-964c-0c4c-ab20-000000000031",
                        "name": "Print content of \"/tmp/logs/generated_main.sh\""
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "include_role",
                            "changed": false,
                            "false_condition": "buildset_cache_active",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:49:05.425584Z",
                            "start": "2024-04-21T00:49:05.398994Z"
                        },
                        "id": "ce4df5fb-964c-0c4c-ab20-000000000032",
                        "name": "Mount buildset cache"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "file",
                            "changed": true,
                            "dest": "/home/zuul/.bazelrc",
                            "diff": {
                                "after": {
                                    "atime": 1713660545.6633546,
                                    "mtime": 1713660545.6633546,
                                    "path": "/home/zuul/.bazelrc",
                                    "state": "touch"
                                },
                                "before": {
                                    "atime": 1713660545.6592183,
                                    "mtime": 1713660545.6592183,
                                    "path": "/home/zuul/.bazelrc",
                                    "state": "absent"
                                }
                            },
                            "gid": 1000,
                            "group": "zuul",
                            "invocation": {
                                "module_args": {
                                    "_diff_peek": null,
                                    "_original_basename": null,
                                    "access_time": null,
                                    "access_time_format": "%Y%m%d%H%M.%S",
                                    "attributes": null,
                                    "follow": true,
                                    "force": false,
                                    "group": null,
                                    "mode": null,
                                    "modification_time": null,
                                    "modification_time_format": "%Y%m%d%H%M.%S",
                                    "owner": null,
                                    "path": "/home/zuul/.bazelrc",
                                    "recurse": false,
                                    "selevel": null,
                                    "serole": null,
                                    "setype": null,
                                    "seuser": null,
                                    "src": null,
                                    "state": "touch",
                                    "unsafe_writes": false
                                }
                            },
                            "mode": "0664",
                            "owner": "zuul",
                            "size": 0,
                            "state": "file",
                            "uid": 1000
                        }
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:49:05.722448Z",
                            "start": "2024-04-21T00:49:05.438682Z"
                        },
                        "id": "ce4df5fb-964c-0c4c-ab20-000000000033",
                        "name": "Create an empty \"$HOME/.bazelrc\" file"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "include_tasks",
                            "changed": false,
                            "false_condition": "bazel_enable_remote_cache and bazel_use_cc_remote_cache",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-0c4c-ab20-00000000000c",
                        "name": "buildbarn-host",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/untrusted/project_2/cc-github.bmwgroup.net/codecraft/cilib/roles/buildbarn-host"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:49:05.784490Z",
                            "start": "2024-04-21T00:49:05.747897Z"
                        },
                        "id": "ce4df5fb-964c-0c4c-ab20-00000000000e",
                        "name": ""
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "include_tasks",
                            "changed": false,
                            "false_condition": "bazel_enable_remote_cache and bazel_use_cc_remote_cache",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-0c4c-ab20-00000000000c",
                        "name": "buildbarn-host",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/untrusted/project_2/cc-github.bmwgroup.net/codecraft/cilib/roles/buildbarn-host"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:49:05.830854Z",
                            "start": "2024-04-21T00:49:05.794745Z"
                        },
                        "id": "ce4df5fb-964c-0c4c-ab20-00000000000f",
                        "name": ""
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "fail",
                            "changed": false,
                            "false_condition": "bazel_enable_remote_cache and bazel_use_engflow_remote_cache",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-0c4c-ab20-000000000011",
                        "name": "engflow-host",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/untrusted/project_2/cc-github.bmwgroup.net/codecraft/cilib/roles/engflow-host"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:49:05.887604Z",
                            "start": "2024-04-21T00:49:05.850255Z"
                        },
                        "id": "ce4df5fb-964c-0c4c-ab20-000000000013",
                        "name": ""
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "set_fact",
                            "changed": false,
                            "false_condition": "bazel_enable_remote_cache and bazel_use_engflow_remote_cache",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-0c4c-ab20-000000000011",
                        "name": "engflow-host",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/untrusted/project_2/cc-github.bmwgroup.net/codecraft/cilib/roles/engflow-host"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:49:05.937762Z",
                            "start": "2024-04-21T00:49:05.900266Z"
                        },
                        "id": "ce4df5fb-964c-0c4c-ab20-000000000014",
                        "name": "Add availibility zone in AWS for local routing"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "set_fact",
                            "changed": false,
                            "false_condition": "bazel_enable_remote_cache and bazel_use_engflow_remote_cache",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-0c4c-ab20-000000000011",
                        "name": "engflow-host",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/untrusted/project_2/cc-github.bmwgroup.net/codecraft/cilib/roles/engflow-host"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:49:05.978119Z",
                            "start": "2024-04-21T00:49:05.950839Z"
                        },
                        "id": "ce4df5fb-964c-0c4c-ab20-000000000015",
                        "name": "Set EngFlow URI"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "include_tasks",
                            "changed": false,
                            "results": [],
                            "skipped": true,
                            "skipped_reason": "No items in the list"
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-0c4c-ab20-000000000017",
                        "name": "bazel-override-zuul-repository",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/untrusted/project_0/cc-github.bmwgroup.net/swh/ddad_ci_config/roles/bazel-override-zuul-repository"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:49:06.012303Z",
                            "start": "2024-04-21T00:49:05.994806Z"
                        },
                        "id": "ce4df5fb-964c-0c4c-ab20-000000000019",
                        "name": ""
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "include_tasks",
                            "changed": false,
                            "results": [],
                            "skipped": true,
                            "skipped_reason": "No items in the list"
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-0c4c-ab20-000000000017",
                        "name": "bazel-override-zuul-repository",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/untrusted/project_0/cc-github.bmwgroup.net/swh/ddad_ci_config/roles/bazel-override-zuul-repository"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:49:06.061124Z",
                            "start": "2024-04-21T00:49:06.032869Z"
                        },
                        "id": "ce4df5fb-964c-0c4c-ab20-00000000001b",
                        "name": ""
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "include_tasks",
                            "changed": false,
                            "include": "linux.yaml",
                            "include_args": {}
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-0c4c-ab20-000000000006",
                        "name": "bazel-ensure-bazelrc",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/untrusted/project_0/cc-github.bmwgroup.net/swh/ddad_ci_config/roles/bazel-ensure-bazelrc"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:49:06.141038Z",
                            "start": "2024-04-21T00:49:06.089600Z"
                        },
                        "id": "ce4df5fb-964c-0c4c-ab20-00000000001e",
                        "name": ""
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "template",
                            "changed": true,
                            "checksum": "5c03689d929fc844c51b7e142617a379034c3881",
                            "dest": "/home/zuul/.bazelrc",
                            "diff": [],
                            "gid": 1000,
                            "group": "zuul",
                            "invocation": {
                                "module_args": {
                                    "_original_basename": "bazelrc.j2",
                                    "attributes": null,
                                    "backup": false,
                                    "checksum": "5c03689d929fc844c51b7e142617a379034c3881",
                                    "content": null,
                                    "dest": "/home/zuul/.bazelrc",
                                    "directory_mode": null,
                                    "follow": false,
                                    "force": true,
                                    "group": null,
                                    "local_follow": null,
                                    "mode": null,
                                    "owner": null,
                                    "remote_src": null,
                                    "selevel": null,
                                    "serole": null,
                                    "setype": null,
                                    "seuser": null,
                                    "src": "/home/zuul/.ansible/tmp/ansible-tmp-1713660546.270028-47-23564020001374/source",
                                    "unsafe_writes": false,
                                    "validate": null
                                }
                            },
                            "md5sum": "6dcd236c9bc24cc3e844bf4d4eefe891",
                            "mode": "0664",
                            "owner": "zuul",
                            "size": 246,
                            "src": "/home/zuul/.ansible/tmp/ansible-tmp-1713660546.270028-47-23564020001374/source",
                            "state": "file",
                            "uid": 1000
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-0c4c-ab20-000000000006",
                        "name": "bazel-ensure-bazelrc",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/untrusted/project_0/cc-github.bmwgroup.net/swh/ddad_ci_config/roles/bazel-ensure-bazelrc"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:49:07.005121Z",
                            "start": "2024-04-21T00:49:06.176578Z"
                        },
                        "id": "ce4df5fb-964c-0c4c-ab20-0000000000ab",
                        "name": "Setup local .bazelrc"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "include_tasks",
                            "changed": false,
                            "false_condition": "ansible_os_family == \"Windows\"",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-0c4c-ab20-000000000006",
                        "name": "bazel-ensure-bazelrc",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/untrusted/project_0/cc-github.bmwgroup.net/swh/ddad_ci_config/roles/bazel-ensure-bazelrc"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:49:07.057390Z",
                            "start": "2024-04-21T00:49:07.019834Z"
                        },
                        "id": "ce4df5fb-964c-0c4c-ab20-00000000001f",
                        "name": ""
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "set_fact",
                            "ansible_facts": {
                                "ensure_bazelrc_path": "/home/zuul/.bazelrc"
                            },
                            "changed": false
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-0c4c-ab20-000000000006",
                        "name": "bazel-ensure-bazelrc",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/untrusted/project_0/cc-github.bmwgroup.net/swh/ddad_ci_config/roles/bazel-ensure-bazelrc"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:49:07.148242Z",
                            "start": "2024-04-21T00:49:07.067584Z"
                        },
                        "id": "ce4df5fb-964c-0c4c-ab20-000000000020",
                        "name": ""
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "set_fact",
                            "ansible_facts": {
                                "cilib_artifactory_url": "https://common.artifactory.cc.bmwgroup.net/artifactory",
                                "cilib_docker_registry": "common.artifactory.cc.bmwgroup.net",
                                "cilib_patterns": {
                                    "file_comments": {
                                        "ansiblelint": "^\\s*(?P<file_path>.*):(?P<start_line>\\d+): (?P<message>.*)$",
                                        "hadolint": "^(?P<file_path>.*):(?P<start_line>\\d+) (?P<message>.*)$",
                                        "labellint": "^(?P<file_path>.*):(?P<start_line>\\d+):(?P<message>.*)$",
                                        "oelint": "^(?P<file_path>.*):(?P<start_line>\\d+):(?P<log_level>.*?):(?P<message>.*)$",
                                        "pipelinelint": "^(?P<file_path>.*):(?P<start_line>\\d+):\\d+\\s(?P<log_level>\\S*)\\s(?P<rule_name>\\b(?!parser\\b)\\S*)\\s\\\"(?P<message>.*)\\\"$",
                                        "shellcheck": "^(?P<file_path>.*):(?P<start_line>\\d+):\\d+: (?P<message>.*)$",
                                        "yamllint": "^\\s*(?P<file_path>.*):(?P<start_line>\\d+):\\d+: \\[(?P<log_level>.*)\\] (?P<message>.*)$"
                                    }
                                },
                                "cilib_pypi_url": "https://common.artifactory.cc.bmwgroup.net/artifactory/api/pypi/codecraft-pypi-public/simple"
                            },
                            "changed": false
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-0c4c-ab20-000000000026",
                        "name": "cilib-defaults",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/untrusted/project_2/cc-github.bmwgroup.net/codecraft/cilib/roles/cilib-defaults"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:49:07.217016Z",
                            "start": "2024-04-21T00:49:07.164084Z"
                        },
                        "id": "ce4df5fb-964c-0c4c-ab20-000000000028",
                        "name": "Set cilib defaults"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "set_fact",
                            "ansible_facts": {
                                "gen_docker_image": "ddad.artifactory.cc.bmwgroup.net/adp-docker/ros-noetic:2022.02.17.06.31"
                            },
                            "changed": false
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-0c4c-ab20-000000000022",
                        "name": "docker-run",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/untrusted/project_2/cc-github.bmwgroup.net/codecraft/cilib/roles/docker-run"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:49:07.328277Z",
                            "start": "2024-04-21T00:49:07.245691Z"
                        },
                        "id": "ce4df5fb-964c-0c4c-ab20-00000000002a",
                        "name": "Set image vars"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "shell",
                            "attempts": 1,
                            "changed": true,
                            "cmd": "if docker inspect --type=image \"ddad.artifactory.cc.bmwgroup.net/adp-docker/ros-noetic:2022.02.17.06.31\" > /dev/null 2> /dev/null; then\n  echo \"Docker image ddad.artifactory.cc.bmwgroup.net/adp-docker/ros-noetic:2022.02.17.06.31 exists and docker_run_pull is false.\"\n  echo \"Skipping docker pull\"\n  exit 0\nfi\n\necho\necho \"=========================================\"\necho \" Pull docker image 'ddad.artifactory.cc.bmwgroup.net/adp-docker/ros-noetic:2022.02.17.06.31'\"\necho \"=========================================\"\necho\ndocker pull \"ddad.artifactory.cc.bmwgroup.net/adp-docker/ros-noetic:2022.02.17.06.31\"\n",
                            "delta": "0:00:00.048777",
                            "end": "2024-04-21 00:49:07.775800",
                            "invocation": {
                                "module_args": {
                                    "_raw_params": "if docker inspect --type=image \"ddad.artifactory.cc.bmwgroup.net/adp-docker/ros-noetic:2022.02.17.06.31\" > /dev/null 2> /dev/null; then\n  echo \"Docker image ddad.artifactory.cc.bmwgroup.net/adp-docker/ros-noetic:2022.02.17.06.31 exists and docker_run_pull is false.\"\n  echo \"Skipping docker pull\"\n  exit 0\nfi\n\necho\necho \"=========================================\"\necho \" Pull docker image 'ddad.artifactory.cc.bmwgroup.net/adp-docker/ros-noetic:2022.02.17.06.31'\"\necho \"=========================================\"\necho\ndocker pull \"ddad.artifactory.cc.bmwgroup.net/adp-docker/ros-noetic:2022.02.17.06.31\"\n",
                                    "_uses_shell": true,
                                    "argv": null,
                                    "chdir": null,
                                    "creates": null,
                                    "executable": null,
                                    "removes": null,
                                    "stdin": null,
                                    "stdin_add_newline": true,
                                    "strip_empty_ends": true,
                                    "warn": false,
                                    "zuul_ansible_split_streams": false,
                                    "zuul_log_id": "ce4df5fb-964c-0c4c-ab20-00000000002b-1-node"
                                }
                            },
                            "msg": "",
                            "rc": 0,
                            "start": "2024-04-21 00:49:07.727023",
                            "stderr": "",
                            "stderr_lines": [],
                            "stdout": "Docker image ddad.artifactory.cc.bmwgroup.net/adp-docker/ros-noetic:2022.02.17.06.31 exists and docker_run_pull is false.\nSkipping docker pull",
                            "stdout_lines": [
                                "Docker image ddad.artifactory.cc.bmwgroup.net/adp-docker/ros-noetic:2022.02.17.06.31 exists and docker_run_pull is false.",
                                "Skipping docker pull"
                            ],
                            "zuul_log_id": "ce4df5fb-964c-0c4c-ab20-00000000002b-1-node"
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-0c4c-ab20-000000000022",
                        "name": "docker-run",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/untrusted/project_2/cc-github.bmwgroup.net/codecraft/cilib/roles/docker-run"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:49:07.934197Z",
                            "start": "2024-04-21T00:49:07.410956Z"
                        },
                        "id": "ce4df5fb-964c-0c4c-ab20-00000000002b",
                        "name": "Pull docker image ddad.artifactory.cc.bmwgroup.net/adp-docker/ros-noetic:2022.02.17.06.31"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "set_fact",
                            "ansible_facts": {
                                "_docker_run_command": "set -o errexit\nset -o nounset\nset -o pipefail\n\nPROXY_VARS=\"\"\n    PROXY_VARS=\"-e http_proxy=${http_proxy:-}\"\n    PROXY_VARS+=\" -e https_proxy=${http_proxy:-}\"\n    PROXY_VARS+=\" -e no_proxy=${no_proxy:-}\"\n\nMOUNTS=\"\"\n    MOUNTS=\"${MOUNTS} -v $HOME/.docker:/root/.docker\"\n    MOUNTS=\"${MOUNTS} -v $HOME/.netrc:/root/.netrc.orig\"\n    MOUNTS=\"${MOUNTS} -v $HOME/.ssh:/root/.ssh.orig\"\n    MOUNTS=\"${MOUNTS} -v $HOME/.patchr:/root/.patchr\"\n    MOUNTS=\"${MOUNTS} -v $HOME/.bazelrc:/root/.bazelrc\"\n    MOUNTS=\"${MOUNTS} -v /etc/hosts:/etc/hosts\"\n    MOUNTS=\"${MOUNTS} -v /etc/buildbarn:/etc/buildbarn\"\n    MOUNTS=\"${MOUNTS} -v /usr/local/codecraft_logs/credentials/access_key:/root/.codecraft_logs/access_key\"\n    MOUNTS=\"${MOUNTS} -v /usr/local/flexlm/licenses/:/usr/local/flexlm/licenses/\"\n    MOUNTS=\"${MOUNTS} -v /usr/local/sonarqube/access/token:/root/.sonarqube/token\"\n    MOUNTS=\"${MOUNTS} -v /usr/local/klocwork/access/ltoken:/root/.klocwork/ltoken\"\n    MOUNTS=\"${MOUNTS} -v /usr/local/teamscale/credentials/access_key:/root/.teamscale/access_key\"\n    MOUNTS=\"${MOUNTS} -v /var/run/docker.sock:/var/run/docker.sock\"\n    MOUNTS=\"${MOUNTS} -v /var/cache/bazel:/var/cache/bazel\"\n    MOUNTS=\"${MOUNTS} -v /tmp/buildset_cache:/tmp/buildset_cache\"\n    MOUNTS=\"${MOUNTS} -v /tmp/logs/generated_main.sh:/generated_main.sh\"\n    MOUNTS=\"${MOUNTS} -v /tmp/logs:/tmp/logs\"\n    MOUNTS=\"${MOUNTS} -v /home/zuul/logs:/home/zuul/logs\"\n    MOUNTS=\"${MOUNTS} -v /home/zuul/workspace:/workspace\"\n    MOUNTS=\"${MOUNTS} -v /etc/ssl/certs/ca-certificates.crt:/etc/ssl/certs/ca-certificates.crt\"\n  \nENV_VARS=\"\"\n\nALLOCATE_TERMINAL=-t\nUSE_CURRENT_USER=\"\"\n\nDETACH=\"\"\n\nRM=\"\"\n    RM=\"--rm=true\"\n\nINIT=\"\"\n\nWORKDIR=\"\"\n\nCONTAINER_NAME=\"\"\n\necho\necho \"=========================================\"\necho \" Start docker container 'ddad.artifactory.cc.bmwgroup.net/adp-docker/ros-noetic:2022.02.17.06.31'\"\necho \"=========================================\"\necho\n\ndocker run \\\n        ${RM} \\\n        ${INIT} \\\n        --sig-proxy \\\n        --network=host --privileged --tmpfs /bazel/sandbox:exec \\\n        ${PROXY_VARS} \\\n        ${ENV_VARS} \\\n        ${MOUNTS} \\\n        ${ALLOCATE_TERMINAL} \\\n        ${USE_CURRENT_USER} \\\n        ${DETACH} \\\n        ${WORKDIR} \\\n        ${CONTAINER_NAME} \\\n        \"ddad.artifactory.cc.bmwgroup.net/adp-docker/ros-noetic:2022.02.17.06.31\" \\\n        /bin/bash /generated_main.sh\n"
                            },
                            "changed": false
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-0c4c-ab20-000000000022",
                        "name": "docker-run",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/untrusted/project_2/cc-github.bmwgroup.net/codecraft/cilib/roles/docker-run"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:49:08.068938Z",
                            "start": "2024-04-21T00:49:07.949451Z"
                        },
                        "id": "ce4df5fb-964c-0c4c-ab20-00000000002c",
                        "name": "Set fact Run docker command"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "shell",
                            "changed": true,
                            "cmd": "set -o errexit\nset -o nounset\nset -o pipefail\n\nPROXY_VARS=\"\"\n    PROXY_VARS=\"-e http_proxy=${http_proxy:-}\"\n    PROXY_VARS+=\" -e https_proxy=${http_proxy:-}\"\n    PROXY_VARS+=\" -e no_proxy=${no_proxy:-}\"\n\nMOUNTS=\"\"\n    MOUNTS=\"${MOUNTS} -v $HOME/.docker:/root/.docker\"\n    MOUNTS=\"${MOUNTS} -v $HOME/.netrc:/root/.netrc.orig\"\n    MOUNTS=\"${MOUNTS} -v $HOME/.ssh:/root/.ssh.orig\"\n    MOUNTS=\"${MOUNTS} -v $HOME/.patchr:/root/.patchr\"\n    MOUNTS=\"${MOUNTS} -v $HOME/.bazelrc:/root/.bazelrc\"\n    MOUNTS=\"${MOUNTS} -v /etc/hosts:/etc/hosts\"\n    MOUNTS=\"${MOUNTS} -v /etc/buildbarn:/etc/buildbarn\"\n    MOUNTS=\"${MOUNTS} -v /usr/local/codecraft_logs/credentials/access_key:/root/.codecraft_logs/access_key\"\n    MOUNTS=\"${MOUNTS} -v /usr/local/flexlm/licenses/:/usr/local/flexlm/licenses/\"\n    MOUNTS=\"${MOUNTS} -v /usr/local/sonarqube/access/token:/root/.sonarqube/token\"\n    MOUNTS=\"${MOUNTS} -v /usr/local/klocwork/access/ltoken:/root/.klocwork/ltoken\"\n    MOUNTS=\"${MOUNTS} -v /usr/local/teamscale/credentials/access_key:/root/.teamscale/access_key\"\n    MOUNTS=\"${MOUNTS} -v /var/run/docker.sock:/var/run/docker.sock\"\n    MOUNTS=\"${MOUNTS} -v /var/cache/bazel:/var/cache/bazel\"\n    MOUNTS=\"${MOUNTS} -v /tmp/buildset_cache:/tmp/buildset_cache\"\n    MOUNTS=\"${MOUNTS} -v /tmp/logs/generated_main.sh:/generated_main.sh\"\n    MOUNTS=\"${MOUNTS} -v /tmp/logs:/tmp/logs\"\n    MOUNTS=\"${MOUNTS} -v /home/zuul/logs:/home/zuul/logs\"\n    MOUNTS=\"${MOUNTS} -v /home/zuul/workspace:/workspace\"\n    MOUNTS=\"${MOUNTS} -v /etc/ssl/certs/ca-certificates.crt:/etc/ssl/certs/ca-certificates.crt\"\n  \nENV_VARS=\"\"\n\nALLOCATE_TERMINAL=-t\nUSE_CURRENT_USER=\"\"\n\nDETACH=\"\"\n\nRM=\"\"\n    RM=\"--rm=true\"\n\nINIT=\"\"\n\nWORKDIR=\"\"\n\nCONTAINER_NAME=\"\"\n\necho\necho \"=========================================\"\necho \" Start docker container 'ddad.artifactory.cc.bmwgroup.net/adp-docker/ros-noetic:2022.02.17.06.31'\"\necho \"=========================================\"\necho\n\ndocker run \\\n        ${RM} \\\n        ${INIT} \\\n        --sig-proxy \\\n        --network=host --privileged --tmpfs /bazel/sandbox:exec \\\n        ${PROXY_VARS} \\\n        ${ENV_VARS} \\\n        ${MOUNTS} \\\n        ${ALLOCATE_TERMINAL} \\\n        ${USE_CURRENT_USER} \\\n        ${DETACH} \\\n        ${WORKDIR} \\\n        ${CONTAINER_NAME} \\\n        \"ddad.artifactory.cc.bmwgroup.net/adp-docker/ros-noetic:2022.02.17.06.31\" \\\n        /bin/bash /generated_main.sh\n",
                            "delta": "0:00:58.872508",
                            "end": "2024-04-21 00:50:07.314226",
                            "failed": true,
                            "invocation": {
                                "module_args": {
                                    "_raw_params": "set -o errexit\nset -o nounset\nset -o pipefail\n\nPROXY_VARS=\"\"\n    PROXY_VARS=\"-e http_proxy=${http_proxy:-}\"\n    PROXY_VARS+=\" -e https_proxy=${http_proxy:-}\"\n    PROXY_VARS+=\" -e no_proxy=${no_proxy:-}\"\n\nMOUNTS=\"\"\n    MOUNTS=\"${MOUNTS} -v $HOME/.docker:/root/.docker\"\n    MOUNTS=\"${MOUNTS} -v $HOME/.netrc:/root/.netrc.orig\"\n    MOUNTS=\"${MOUNTS} -v $HOME/.ssh:/root/.ssh.orig\"\n    MOUNTS=\"${MOUNTS} -v $HOME/.patchr:/root/.patchr\"\n    MOUNTS=\"${MOUNTS} -v $HOME/.bazelrc:/root/.bazelrc\"\n    MOUNTS=\"${MOUNTS} -v /etc/hosts:/etc/hosts\"\n    MOUNTS=\"${MOUNTS} -v /etc/buildbarn:/etc/buildbarn\"\n    MOUNTS=\"${MOUNTS} -v /usr/local/codecraft_logs/credentials/access_key:/root/.codecraft_logs/access_key\"\n    MOUNTS=\"${MOUNTS} -v /usr/local/flexlm/licenses/:/usr/local/flexlm/licenses/\"\n    MOUNTS=\"${MOUNTS} -v /usr/local/sonarqube/access/token:/root/.sonarqube/token\"\n    MOUNTS=\"${MOUNTS} -v /usr/local/klocwork/access/ltoken:/root/.klocwork/ltoken\"\n    MOUNTS=\"${MOUNTS} -v /usr/local/teamscale/credentials/access_key:/root/.teamscale/access_key\"\n    MOUNTS=\"${MOUNTS} -v /var/run/docker.sock:/var/run/docker.sock\"\n    MOUNTS=\"${MOUNTS} -v /var/cache/bazel:/var/cache/bazel\"\n    MOUNTS=\"${MOUNTS} -v /tmp/buildset_cache:/tmp/buildset_cache\"\n    MOUNTS=\"${MOUNTS} -v /tmp/logs/generated_main.sh:/generated_main.sh\"\n    MOUNTS=\"${MOUNTS} -v /tmp/logs:/tmp/logs\"\n    MOUNTS=\"${MOUNTS} -v /home/zuul/logs:/home/zuul/logs\"\n    MOUNTS=\"${MOUNTS} -v /home/zuul/workspace:/workspace\"\n    MOUNTS=\"${MOUNTS} -v /etc/ssl/certs/ca-certificates.crt:/etc/ssl/certs/ca-certificates.crt\"\n  \nENV_VARS=\"\"\n\nALLOCATE_TERMINAL=-t\nUSE_CURRENT_USER=\"\"\n\nDETACH=\"\"\n\nRM=\"\"\n    RM=\"--rm=true\"\n\nINIT=\"\"\n\nWORKDIR=\"\"\n\nCONTAINER_NAME=\"\"\n\necho\necho \"=========================================\"\necho \" Start docker container 'ddad.artifactory.cc.bmwgroup.net/adp-docker/ros-noetic:2022.02.17.06.31'\"\necho \"=========================================\"\necho\n\ndocker run \\\n        ${RM} \\\n        ${INIT} \\\n        --sig-proxy \\\n        --network=host --privileged --tmpfs /bazel/sandbox:exec \\\n        ${PROXY_VARS} \\\n        ${ENV_VARS} \\\n        ${MOUNTS} \\\n        ${ALLOCATE_TERMINAL} \\\n        ${USE_CURRENT_USER} \\\n        ${DETACH} \\\n        ${WORKDIR} \\\n        ${CONTAINER_NAME} \\\n        \"ddad.artifactory.cc.bmwgroup.net/adp-docker/ros-noetic:2022.02.17.06.31\" \\\n        /bin/bash /generated_main.sh\n",
                                    "_uses_shell": true,
                                    "argv": null,
                                    "chdir": null,
                                    "creates": null,
                                    "executable": "/bin/bash",
                                    "removes": null,
                                    "stdin": null,
                                    "stdin_add_newline": true,
                                    "strip_empty_ends": true,
                                    "warn": false,
                                    "zuul_ansible_split_streams": false,
                                    "zuul_log_id": "ce4df5fb-964c-0c4c-ab20-00000000002d-1-node"
                                }
                            },
                            "msg": "non-zero return code",
                            "rc": 1,
                            "start": "2024-04-21 00:49:08.441718",
                            "stderr": "",
                            "stderr_lines": [],
                            "stdout": "\n=========================================\n Start docker container 'ddad.artifactory.cc.bmwgroup.net/adp-docker/ros-noetic:2022.02.17.06.31'\n=========================================\n\n'/root/.netrc.orig' -> '/root/.netrc'\r\n'/root/.ssh.orig' -> '/root/.ssh'\r\n'/root/.ssh.orig/config' -> '/root/.ssh/config'\r\n'/root/.ssh.orig/id_rsa' -> '/root/.ssh/id_rsa'\r\n'/root/.ssh.orig/id_rsa.pub' -> '/root/.ssh/id_rsa.pub'\r\n'/root/.ssh.orig/id_rsa_527cce9da43abc20302cd74d18dd220209553435' -> '/root/.ssh/id_rsa_527cce9da43abc20302cd74d18dd220209553435'\r\n'/root/.ssh.orig/id_rsa_b3fe7e9ae1a3ad81894f537762ac137e4ae478ca' -> '/root/.ssh/id_rsa_b3fe7e9ae1a3ad81894f537762ac137e4ae478ca'\r\n'/root/.ssh.orig/id_rsa_e30432c274a4af7006c145fa15bacb098b8ab268' -> '/root/.ssh/id_rsa_e30432c274a4af7006c145fa15bacb098b8ab268'\r\n'/root/.ssh.orig/id_rsa_e8b67d26231ae2ac23fe87fc5f32bcd84c97d5ba' -> '/root/.ssh/id_rsa_e8b67d26231ae2ac23fe87fc5f32bcd84c97d5ba'\r\n'/root/.ssh.orig/known_hosts' -> '/root/.ssh/known_hosts'\r\n'/root/.ssh.orig/known_hosts.old' -> '/root/.ssh/known_hosts.old'\r\n'/root/.ssh.orig/authorized_keys' -> '/root/.ssh/authorized_keys'\r\nINFO: Sleeping for 0 seconds...\r\n2024/04/21 00:49:18 Downloading https://ddad.artifactory.cc.bmwgroup.net/artifactory/swh-tools-public/bazelbuild/bazel/releases/6.2.1/bazel-6.2.1-linux-x86_64...\r\nExtracting Bazel installation...\r\nStarting local Bazel server and connecting to it...\r\nINFO: Options provided by the client:\r\n  Inherited 'common' options: --isatty=1 --terminal_columns=0\r\nINFO: Reading rc options for 'run' from /workspace/src/ddad/bazel_migration.bazelrc:\r\n  Inherited 'common' options: --incompatible_disallow_empty_glob --incompatible_no_implicit_file_export --noincompatible_disable_target_provider_fields --noincompatible_java_common_parameters\r\nINFO: Reading rc options for 'run' from /workspace/src/ddad/.bazelrc:\r\n  Inherited 'common' options: --experimental_allow_tags_propagation --experimental_downloader_config=experimental_downloader_config --repo_env=GIT_LFS_SKIP_SMUDGE=1\r\nINFO: Reading rc options for 'run' from /root/.bazelrc:\r\n  Inherited 'common' options: --announce_rc --experimental_repository_downloader_retries=3\r\nINFO: Reading rc options for 'run' from /workspace/src/ddad/bazel_migration.bazelrc:\r\n  Inherited 'build' options: --incompatible_enforce_config_setting_visibility --incompatible_default_to_explicit_init_py --incompatible_disable_native_android_rules --incompatible_disallow_resource_jars --incompatible_enable_cc_toolchain_resolution --incompatible_exclusive_test_sandboxed --noincompatible_use_platforms_repo_for_constraints --noincompatible_load_proto_rules_from_bzl\r\nINFO: Reading rc options for 'run' from /workspace/src/ddad/.bazelrc:\r\n  Inherited 'build' options: --experimental_cc_implementation_deps --experimental_retain_test_configuration_across_testonly --experimental_remote_cache_eviction_retries=5 --java_language_version=17 --tool_java_language_version=17 --java_runtime_version=remotejdk_17 --tool_java_runtime_version=remotejdk_17 --features=c_standard_11 --features=cpp_standard_17 --incompatible_strict_action_env --workspace_status_command=./scripts/workspace_status/workspace_status.sh --verbose_failures --start_end_lib=False --test_env=PYTHONDONTWRITEBYTECODE=1 --test_env=GTEST_COLOR=1\r\nINFO: Reading rc options for 'run' from /workspace/src/ddad/application/adp/bazel/adp.bazelrc:\r\n  Inherited 'build' options: --flag_alias=adp_std_types=@ddad_common//cas/std_types\r\nINFO: Reading rc options for 'run' from /workspace/src/ddad/config_flag_aliases.bazelrc:\r\n  Inherited 'build' options: --flag_alias=copy_workspace=//deployment/generic/cas/platform/basic_software/module_generation/vstar/private:materialize_intermediate_workspace_files\r\nINFO: Reading rc options for 'run' from /workspace/src/ddad/domains/generic/extra-toolchains.bazelrc:\r\n  Inherited 'build' options: --extra_toolchains=//domains/generic/tools/matlab/mbse:windows_toolchain,//domains/generic/tools/matlab/mbse:linux_toolchain\r\nINFO: Reading rc options for 'run' from /root/.bazelrc:\r\n  Inherited 'build' options: --noshow_progress --color=no --curses=no --nobuild_runfile_links --sandbox_base=/bazel/sandbox/ --workspace_status_command=\r\nINFO: Analyzed target @swf_quality_tools//quality_tools/metrics_job:generator (136 packages loaded, 1550 targets configured).\r\nINFO: Found 1 target...\r\nTarget @swf_quality_tools//quality_tools/metrics_job:generator up-to-date:\r\n  bazel-bin/external/swf_quality_tools/quality_tools/metrics_job/generator\r\nINFO: Elapsed time: 27.681s, Critical Path: 0.15s\r\nINFO: 3 processes: 3 internal.\r\nINFO: Running command line: bazel-bin/external/swf_quality_tools/quality_tools/metrics_job/generator '--branch=master' '--logs=/tmp/logs/lifecycle/metrics' '--metrics=/workspace/src/ddad/application/adp/lifecycle/metrics.yaml' '--relative=application/adp' '--token=/root/.sonarqube/token' '--params={\"summary_output_dir\": \"/home/zuul/logs\"}' --cxx\r\nWARNING:root:The argument 'branch' is deprecated. Please use --params instead.\r\nWARNING:root:The argument 'logs' is deprecated. Please use --params instead.\r\nWARNING:root:The argument 'metrics' is deprecated. Please use --params instead.\r\nWARNING:root:The argument 'relative' is deprecated. Please use --params instead.\r\nWARNING:root:The argument 'token' is deprecated. Please use --params instead.\r\nWARNING:root:The argument 'cxx' is deprecated. Please use --params instead.\r\n+ PLATFORM=--platforms=@swf_quality_tools//:swf\r\n+ [[ linux-gnu == \\m\\s\\y\\s ]]\r\n+ OUTPUT_BASE_RUN=--output_base=/var/cache/bazel/run\r\n+ OUTPUT_BASE_BUILD=--output_base=/var/cache/bazel/build\r\n+ SONARQUBE_TOKEN_FILE=/root/.sonarqube/token\r\n+ METRICS_DIR=/tmp/logs/lifecycle/metrics/metrics\r\n+ COMPILE_COMMANDS=/tmp/logs/lifecycle/metrics/metrics/compile_commands.json\r\n+ SONARQUBE_LOG=/tmp/logs/lifecycle/metrics/metrics/sonarqube.log\r\n+ PR_FINDINGS=/tmp/logs/lifecycle/metrics/metrics/pull_request_findings.json\r\n+ PR_FINDINGS_PROCESSED=/tmp/logs/lifecycle/metrics/metrics/pull_request_findings_processed.txt\r\n++ read_value sonarqube_project\r\n++ bazel --output_base=/var/cache/bazel/run run --platforms=@swf_quality_tools//:swf @swf_quality_tools//quality_tools/metrics/support:read_value --show_result=0 -- --metrics-file=/workspace/src/ddad/application/adp/lifecycle/metrics.yaml --key=sonarqube_project --separated-by= --prepend-with=\r\nStarting local Bazel server and connecting to it...\r\nINFO: Options provided by the client:\r\n  Inherited 'common' options: --isatty=0 --terminal_columns=80\r\nINFO: Reading rc options for 'run' from /workspace/src/ddad/bazel_migration.bazelrc:\r\n  Inherited 'common' options: --incompatible_disallow_empty_glob --incompatible_no_implicit_file_export --noincompatible_disable_target_provider_fields --noincompatible_java_common_parameters\r\nINFO: Reading rc options for 'run' from /workspace/src/ddad/.bazelrc:\r\n  Inherited 'common' options: --experimental_allow_tags_propagation --experimental_downloader_config=experimental_downloader_config --repo_env=GIT_LFS_SKIP_SMUDGE=1\r\nINFO: Reading rc options for 'run' from /root/.bazelrc:\r\n  Inherited 'common' options: --announce_rc --experimental_repository_downloader_retries=3\r\nINFO: Reading rc options for 'run' from /workspace/src/ddad/bazel_migration.bazelrc:\r\n  Inherited 'build' options: --incompatible_enforce_config_setting_visibility --incompatible_default_to_explicit_init_py --incompatible_disable_native_android_rules --incompatible_disallow_resource_jars --incompatible_enable_cc_toolchain_resolution --incompatible_exclusive_test_sandboxed --noincompatible_use_platforms_repo_for_constraints --noincompatible_load_proto_rules_from_bzl\r\nINFO: Reading rc options for 'run' from /workspace/src/ddad/.bazelrc:\r\n  Inherited 'build' options: --experimental_cc_implementation_deps --experimental_retain_test_configuration_across_testonly --experimental_remote_cache_eviction_retries=5 --java_language_version=17 --tool_java_language_version=17 --java_runtime_version=remotejdk_17 --tool_java_runtime_version=remotejdk_17 --features=c_standard_11 --features=cpp_standard_17 --incompatible_strict_action_env --workspace_status_command=./scripts/workspace_status/workspace_status.sh --verbose_failures --start_end_lib=False --test_env=PYTHONDONTWRITEBYTECODE=1 --test_env=GTEST_COLOR=1\r\nINFO: Reading rc options for 'run' from /workspace/src/ddad/application/adp/bazel/adp.bazelrc:\r\n  Inherited 'build' options: --flag_alias=adp_std_types=@ddad_common//cas/std_types\r\nINFO: Reading rc options for 'run' from /workspace/src/ddad/config_flag_aliases.bazelrc:\r\n  Inherited 'build' options: --flag_alias=copy_workspace=//deployment/generic/cas/platform/basic_software/module_generation/vstar/private:materialize_intermediate_workspace_files\r\nINFO: Reading rc options for 'run' from /workspace/src/ddad/domains/generic/extra-toolchains.bazelrc:\r\n  Inherited 'build' options: --extra_toolchains=//domains/generic/tools/matlab/mbse:windows_toolchain,//domains/generic/tools/matlab/mbse:linux_toolchain\r\nINFO: Reading rc options for 'run' from /root/.bazelrc:\r\n  Inherited 'build' options: --noshow_progress --color=no --curses=no --nobuild_runfile_links --sandbox_base=/bazel/sandbox/ --workspace_status_command=\r\nINFO: Analyzed target @swf_quality_tools//quality_tools/metrics/support:read_value (145 packages loaded, 1783 targets configured).\r\nINFO: Found 1 target...\r\nINFO: Elapsed time: 17.409s, Critical Path: 0.09s\r\nINFO: 2 processes: 2 internal.\r\nINFO: Running command line: bazel-bin/external/swf_quality_tools/quality_tools/metrics/support/read_value '--metrics-file=/workspace/src/ddad/application/adp/lifecycle/metrics.yaml' '--key=sonarqube_project' '--separated-by=' '--prepend-with='\r\nTraceback (most recent call last):\r\n  File \"/var/cache/bazel/run/execroot/ddad/bazel-out/k8-fastbuild/bin/external/swf_quality_tools/quality_tools/metrics/support/read_value.runfiles/swf_quality_tools/quality_tools/metrics/parser.py\", line 59, in load_metrics_file\r\n    with open(file, mode=\"r\", encoding=\"utf-8\") as metrics_file:\r\nFileNotFoundError: [Errno 2] No such file or directory: '/workspace/src/ddad/application/adp/lifecycle/metrics.yaml'\r\n\r\nThe above exception was the direct cause of the following exception:\r\n\r\nTraceback (most recent call last):\r\n  File \"/var/cache/bazel/run/execroot/ddad/bazel-out/k8-fastbuild/bin/external/swf_quality_tools/quality_tools/metrics/support/read_value.runfiles/swf_quality_tools/quality_tools/metrics/support/read_value.py\", line 59, in <module>\r\n    main(arguments)\r\n  File \"/var/cache/bazel/run/execroot/ddad/bazel-out/k8-fastbuild/bin/external/swf_quality_tools/quality_tools/metrics/support/read_value.runfiles/swf_quality_tools/quality_tools/metrics/support/read_value.py\", line 34, in main\r\n    parser = MetricsParser(args.metrics_file)\r\n  File \"/var/cache/bazel/run/execroot/ddad/bazel-out/k8-fastbuild/bin/external/swf_quality_tools/quality_tools/metrics/support/read_value.runfiles/swf_quality_tools/quality_tools/metrics/parser.py\", line 34, in __init__\r\n    self.metrics = self.load_metrics_file(metrics_file_path, config, schema)\r\n  File \"/var/cache/bazel/run/execroot/ddad/bazel-out/k8-fastbuild/bin/external/swf_quality_tools/quality_tools/metrics/support/read_value.runfiles/swf_quality_tools/quality_tools/metrics/parser.py\", line 87, in load_metrics_file\r\n    raise MetricsParserException(f\"Loading {file} failed: {excpt}\") from excpt\r\nquality_tools.metrics.parser.MetricsParserException: Loading /workspace/src/ddad/application/adp/lifecycle/metrics.yaml failed: [Errno 2] No such file or directory: '/workspace/src/ddad/application/adp/lifecycle/metrics.yaml'\r\n+ SONARQUBE_PROJECT=\r\nERROR:root:The job failed and raised the following exception:\r\nCommand '['bash', PosixPath('/tmp/logs/lifecycle/metrics/metrics_job.sh')]' returned non-zero exit status 1.\r\nPlease check the log output in file:///tmp/logs/lifecycle/metrics",
                            "stdout_lines": [
                                "",
                                "=========================================",
                                " Start docker container 'ddad.artifactory.cc.bmwgroup.net/adp-docker/ros-noetic:2022.02.17.06.31'",
                                "=========================================",
                                "",
                                "'/root/.netrc.orig' -> '/root/.netrc'",
                                "'/root/.ssh.orig' -> '/root/.ssh'",
                                "'/root/.ssh.orig/config' -> '/root/.ssh/config'",
                                "'/root/.ssh.orig/id_rsa' -> '/root/.ssh/id_rsa'",
                                "'/root/.ssh.orig/id_rsa.pub' -> '/root/.ssh/id_rsa.pub'",
                                "'/root/.ssh.orig/id_rsa_527cce9da43abc20302cd74d18dd220209553435' -> '/root/.ssh/id_rsa_527cce9da43abc20302cd74d18dd220209553435'",
                                "'/root/.ssh.orig/id_rsa_b3fe7e9ae1a3ad81894f537762ac137e4ae478ca' -> '/root/.ssh/id_rsa_b3fe7e9ae1a3ad81894f537762ac137e4ae478ca'",
                                "'/root/.ssh.orig/id_rsa_e30432c274a4af7006c145fa15bacb098b8ab268' -> '/root/.ssh/id_rsa_e30432c274a4af7006c145fa15bacb098b8ab268'",
                                "'/root/.ssh.orig/id_rsa_e8b67d26231ae2ac23fe87fc5f32bcd84c97d5ba' -> '/root/.ssh/id_rsa_e8b67d26231ae2ac23fe87fc5f32bcd84c97d5ba'",
                                "'/root/.ssh.orig/known_hosts' -> '/root/.ssh/known_hosts'",
                                "'/root/.ssh.orig/known_hosts.old' -> '/root/.ssh/known_hosts.old'",
                                "'/root/.ssh.orig/authorized_keys' -> '/root/.ssh/authorized_keys'",
                                "INFO: Sleeping for 0 seconds...",
                                "2024/04/21 00:49:18 Downloading https://ddad.artifactory.cc.bmwgroup.net/artifactory/swh-tools-public/bazelbuild/bazel/releases/6.2.1/bazel-6.2.1-linux-x86_64...",
                                "Extracting Bazel installation...",
                                "Starting local Bazel server and connecting to it...",
                                "INFO: Options provided by the client:",
                                "  Inherited 'common' options: --isatty=1 --terminal_columns=0",
                                "INFO: Reading rc options for 'run' from /workspace/src/ddad/bazel_migration.bazelrc:",
                                "  Inherited 'common' options: --incompatible_disallow_empty_glob --incompatible_no_implicit_file_export --noincompatible_disable_target_provider_fields --noincompatible_java_common_parameters",
                                "INFO: Reading rc options for 'run' from /workspace/src/ddad/.bazelrc:",
                                "  Inherited 'common' options: --experimental_allow_tags_propagation --experimental_downloader_config=experimental_downloader_config --repo_env=GIT_LFS_SKIP_SMUDGE=1",
                                "INFO: Reading rc options for 'run' from /root/.bazelrc:",
                                "  Inherited 'common' options: --announce_rc --experimental_repository_downloader_retries=3",
                                "INFO: Reading rc options for 'run' from /workspace/src/ddad/bazel_migration.bazelrc:",
                                "  Inherited 'build' options: --incompatible_enforce_config_setting_visibility --incompatible_default_to_explicit_init_py --incompatible_disable_native_android_rules --incompatible_disallow_resource_jars --incompatible_enable_cc_toolchain_resolution --incompatible_exclusive_test_sandboxed --noincompatible_use_platforms_repo_for_constraints --noincompatible_load_proto_rules_from_bzl",
                                "INFO: Reading rc options for 'run' from /workspace/src/ddad/.bazelrc:",
                                "  Inherited 'build' options: --experimental_cc_implementation_deps --experimental_retain_test_configuration_across_testonly --experimental_remote_cache_eviction_retries=5 --java_language_version=17 --tool_java_language_version=17 --java_runtime_version=remotejdk_17 --tool_java_runtime_version=remotejdk_17 --features=c_standard_11 --features=cpp_standard_17 --incompatible_strict_action_env --workspace_status_command=./scripts/workspace_status/workspace_status.sh --verbose_failures --start_end_lib=False --test_env=PYTHONDONTWRITEBYTECODE=1 --test_env=GTEST_COLOR=1",
                                "INFO: Reading rc options for 'run' from /workspace/src/ddad/application/adp/bazel/adp.bazelrc:",
                                "  Inherited 'build' options: --flag_alias=adp_std_types=@ddad_common//cas/std_types",
                                "INFO: Reading rc options for 'run' from /workspace/src/ddad/config_flag_aliases.bazelrc:",
                                "  Inherited 'build' options: --flag_alias=copy_workspace=//deployment/generic/cas/platform/basic_software/module_generation/vstar/private:materialize_intermediate_workspace_files",
                                "INFO: Reading rc options for 'run' from /workspace/src/ddad/domains/generic/extra-toolchains.bazelrc:",
                                "  Inherited 'build' options: --extra_toolchains=//domains/generic/tools/matlab/mbse:windows_toolchain,//domains/generic/tools/matlab/mbse:linux_toolchain",
                                "INFO: Reading rc options for 'run' from /root/.bazelrc:",
                                "  Inherited 'build' options: --noshow_progress --color=no --curses=no --nobuild_runfile_links --sandbox_base=/bazel/sandbox/ --workspace_status_command=",
                                "INFO: Analyzed target @swf_quality_tools//quality_tools/metrics_job:generator (136 packages loaded, 1550 targets configured).",
                                "INFO: Found 1 target...",
                                "Target @swf_quality_tools//quality_tools/metrics_job:generator up-to-date:",
                                "  bazel-bin/external/swf_quality_tools/quality_tools/metrics_job/generator",
                                "INFO: Elapsed time: 27.681s, Critical Path: 0.15s",
                                "INFO: 3 processes: 3 internal.",
                                "INFO: Running command line: bazel-bin/external/swf_quality_tools/quality_tools/metrics_job/generator '--branch=master' '--logs=/tmp/logs/lifecycle/metrics' '--metrics=/workspace/src/ddad/application/adp/lifecycle/metrics.yaml' '--relative=application/adp' '--token=/root/.sonarqube/token' '--params={\"summary_output_dir\": \"/home/zuul/logs\"}' --cxx",
                                "WARNING:root:The argument 'branch' is deprecated. Please use --params instead.",
                                "WARNING:root:The argument 'logs' is deprecated. Please use --params instead.",
                                "WARNING:root:The argument 'metrics' is deprecated. Please use --params instead.",
                                "WARNING:root:The argument 'relative' is deprecated. Please use --params instead.",
                                "WARNING:root:The argument 'token' is deprecated. Please use --params instead.",
                                "WARNING:root:The argument 'cxx' is deprecated. Please use --params instead.",
                                "+ PLATFORM=--platforms=@swf_quality_tools//:swf",
                                "+ [[ linux-gnu == \\m\\s\\y\\s ]]",
                                "+ OUTPUT_BASE_RUN=--output_base=/var/cache/bazel/run",
                                "+ OUTPUT_BASE_BUILD=--output_base=/var/cache/bazel/build",
                                "+ SONARQUBE_TOKEN_FILE=/root/.sonarqube/token",
                                "+ METRICS_DIR=/tmp/logs/lifecycle/metrics/metrics",
                                "+ COMPILE_COMMANDS=/tmp/logs/lifecycle/metrics/metrics/compile_commands.json",
                                "+ SONARQUBE_LOG=/tmp/logs/lifecycle/metrics/metrics/sonarqube.log",
                                "+ PR_FINDINGS=/tmp/logs/lifecycle/metrics/metrics/pull_request_findings.json",
                                "+ PR_FINDINGS_PROCESSED=/tmp/logs/lifecycle/metrics/metrics/pull_request_findings_processed.txt",
                                "++ read_value sonarqube_project",
                                "++ bazel --output_base=/var/cache/bazel/run run --platforms=@swf_quality_tools//:swf @swf_quality_tools//quality_tools/metrics/support:read_value --show_result=0 -- --metrics-file=/workspace/src/ddad/application/adp/lifecycle/metrics.yaml --key=sonarqube_project --separated-by= --prepend-with=",
                                "Starting local Bazel server and connecting to it...",
                                "INFO: Options provided by the client:",
                                "  Inherited 'common' options: --isatty=0 --terminal_columns=80",
                                "INFO: Reading rc options for 'run' from /workspace/src/ddad/bazel_migration.bazelrc:",
                                "  Inherited 'common' options: --incompatible_disallow_empty_glob --incompatible_no_implicit_file_export --noincompatible_disable_target_provider_fields --noincompatible_java_common_parameters",
                                "INFO: Reading rc options for 'run' from /workspace/src/ddad/.bazelrc:",
                                "  Inherited 'common' options: --experimental_allow_tags_propagation --experimental_downloader_config=experimental_downloader_config --repo_env=GIT_LFS_SKIP_SMUDGE=1",
                                "INFO: Reading rc options for 'run' from /root/.bazelrc:",
                                "  Inherited 'common' options: --announce_rc --experimental_repository_downloader_retries=3",
                                "INFO: Reading rc options for 'run' from /workspace/src/ddad/bazel_migration.bazelrc:",
                                "  Inherited 'build' options: --incompatible_enforce_config_setting_visibility --incompatible_default_to_explicit_init_py --incompatible_disable_native_android_rules --incompatible_disallow_resource_jars --incompatible_enable_cc_toolchain_resolution --incompatible_exclusive_test_sandboxed --noincompatible_use_platforms_repo_for_constraints --noincompatible_load_proto_rules_from_bzl",
                                "INFO: Reading rc options for 'run' from /workspace/src/ddad/.bazelrc:",
                                "  Inherited 'build' options: --experimental_cc_implementation_deps --experimental_retain_test_configuration_across_testonly --experimental_remote_cache_eviction_retries=5 --java_language_version=17 --tool_java_language_version=17 --java_runtime_version=remotejdk_17 --tool_java_runtime_version=remotejdk_17 --features=c_standard_11 --features=cpp_standard_17 --incompatible_strict_action_env --workspace_status_command=./scripts/workspace_status/workspace_status.sh --verbose_failures --start_end_lib=False --test_env=PYTHONDONTWRITEBYTECODE=1 --test_env=GTEST_COLOR=1",
                                "INFO: Reading rc options for 'run' from /workspace/src/ddad/application/adp/bazel/adp.bazelrc:",
                                "  Inherited 'build' options: --flag_alias=adp_std_types=@ddad_common//cas/std_types",
                                "INFO: Reading rc options for 'run' from /workspace/src/ddad/config_flag_aliases.bazelrc:",
                                "  Inherited 'build' options: --flag_alias=copy_workspace=//deployment/generic/cas/platform/basic_software/module_generation/vstar/private:materialize_intermediate_workspace_files",
                                "INFO: Reading rc options for 'run' from /workspace/src/ddad/domains/generic/extra-toolchains.bazelrc:",
                                "  Inherited 'build' options: --extra_toolchains=//domains/generic/tools/matlab/mbse:windows_toolchain,//domains/generic/tools/matlab/mbse:linux_toolchain",
                                "INFO: Reading rc options for 'run' from /root/.bazelrc:",
                                "  Inherited 'build' options: --noshow_progress --color=no --curses=no --nobuild_runfile_links --sandbox_base=/bazel/sandbox/ --workspace_status_command=",
                                "INFO: Analyzed target @swf_quality_tools//quality_tools/metrics/support:read_value (145 packages loaded, 1783 targets configured).",
                                "INFO: Found 1 target...",
                                "INFO: Elapsed time: 17.409s, Critical Path: 0.09s",
                                "INFO: 2 processes: 2 internal.",
                                "INFO: Running command line: bazel-bin/external/swf_quality_tools/quality_tools/metrics/support/read_value '--metrics-file=/workspace/src/ddad/application/adp/lifecycle/metrics.yaml' '--key=sonarqube_project' '--separated-by=' '--prepend-with='",
                                "Traceback (most recent call last):",
                                "  File \"/var/cache/bazel/run/execroot/ddad/bazel-out/k8-fastbuild/bin/external/swf_quality_tools/quality_tools/metrics/support/read_value.runfiles/swf_quality_tools/quality_tools/metrics/parser.py\", line 59, in load_metrics_file",
                                "    with open(file, mode=\"r\", encoding=\"utf-8\") as metrics_file:",
                                "FileNotFoundError: [Errno 2] No such file or directory: '/workspace/src/ddad/application/adp/lifecycle/metrics.yaml'",
                                "",
                                "The above exception was the direct cause of the following exception:",
                                "",
                                "Traceback (most recent call last):",
                                "  File \"/var/cache/bazel/run/execroot/ddad/bazel-out/k8-fastbuild/bin/external/swf_quality_tools/quality_tools/metrics/support/read_value.runfiles/swf_quality_tools/quality_tools/metrics/support/read_value.py\", line 59, in <module>",
                                "    main(arguments)",
                                "  File \"/var/cache/bazel/run/execroot/ddad/bazel-out/k8-fastbuild/bin/external/swf_quality_tools/quality_tools/metrics/support/read_value.runfiles/swf_quality_tools/quality_tools/metrics/support/read_value.py\", line 34, in main",
                                "    parser = MetricsParser(args.metrics_file)",
                                "  File \"/var/cache/bazel/run/execroot/ddad/bazel-out/k8-fastbuild/bin/external/swf_quality_tools/quality_tools/metrics/support/read_value.runfiles/swf_quality_tools/quality_tools/metrics/parser.py\", line 34, in __init__",
                                "    self.metrics = self.load_metrics_file(metrics_file_path, config, schema)",
                                "  File \"/var/cache/bazel/run/execroot/ddad/bazel-out/k8-fastbuild/bin/external/swf_quality_tools/quality_tools/metrics/support/read_value.runfiles/swf_quality_tools/quality_tools/metrics/parser.py\", line 87, in load_metrics_file",
                                "    raise MetricsParserException(f\"Loading {file} failed: {excpt}\") from excpt",
                                "quality_tools.metrics.parser.MetricsParserException: Loading /workspace/src/ddad/application/adp/lifecycle/metrics.yaml failed: [Errno 2] No such file or directory: '/workspace/src/ddad/application/adp/lifecycle/metrics.yaml'",
                                "+ SONARQUBE_PROJECT=",
                                "ERROR:root:The job failed and raised the following exception:",
                                "Command '['bash', PosixPath('/tmp/logs/lifecycle/metrics/metrics_job.sh')]' returned non-zero exit status 1.",
                                "Please check the log output in file:///tmp/logs/lifecycle/metrics"
                            ],
                            "zuul_log_id": "ce4df5fb-964c-0c4c-ab20-00000000002d-1-node"
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-0c4c-ab20-000000000022",
                        "name": "docker-run",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/untrusted/project_2/cc-github.bmwgroup.net/codecraft/cilib/roles/docker-run"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:50:07.806941Z",
                            "start": "2024-04-21T00:49:08.172348Z"
                        },
                        "id": "ce4df5fb-964c-0c4c-ab20-00000000002d",
                        "name": "Run docker command"
                    }
                }
            ]
        }
    ],
    "stats": {
        "node": {
            "changed": 6,
            "failures": 1,
            "ignored": 0,
            "ok": 11,
            "rescued": 0,
            "skipped": 9,
            "unreachable": 0
        }
    },
    "trusted": false
},
{
    "branch": "master",
    "index": "0",
    "phase": "post",
    "playbook": "cc-github.bmwgroup.net/swh/ddad_ci_config/playbooks/quality/common/swf-github-annotate.yaml",
    "plays": [
        {
            "play": {
                "duration": {
                    "end": "2024-04-21T00:50:22.854851Z",
                    "start": "2024-04-21T00:50:08.894730Z"
                },
                "id": "ce4df5fb-964c-9a5c-6de1-000000000002",
                "name": "Annotate PR with findings from SonarQube"
            },
            "tasks": [
                {
                    "hosts": {
                        "node": {
                            "action": "set_fact",
                            "ansible_facts": {
                                "cilib_artifactory_url": "https://common.artifactory.cc.bmwgroup.net/artifactory",
                                "cilib_docker_registry": "common.artifactory.cc.bmwgroup.net",
                                "cilib_patterns": {
                                    "file_comments": {
                                        "ansiblelint": "^\\s*(?P<file_path>.*):(?P<start_line>\\d+): (?P<message>.*)$",
                                        "hadolint": "^(?P<file_path>.*):(?P<start_line>\\d+) (?P<message>.*)$",
                                        "labellint": "^(?P<file_path>.*):(?P<start_line>\\d+):(?P<message>.*)$",
                                        "oelint": "^(?P<file_path>.*):(?P<start_line>\\d+):(?P<log_level>.*?):(?P<message>.*)$",
                                        "pipelinelint": "^(?P<file_path>.*):(?P<start_line>\\d+):\\d+\\s(?P<log_level>\\S*)\\s(?P<rule_name>\\b(?!parser\\b)\\S*)\\s\\\"(?P<message>.*)\\\"$",
                                        "shellcheck": "^(?P<file_path>.*):(?P<start_line>\\d+):\\d+: (?P<message>.*)$",
                                        "yamllint": "^\\s*(?P<file_path>.*):(?P<start_line>\\d+):\\d+: \\[(?P<log_level>.*)\\] (?P<message>.*)$"
                                    }
                                },
                                "cilib_pypi_url": "https://common.artifactory.cc.bmwgroup.net/artifactory/api/pypi/codecraft-pypi-public/simple"
                            },
                            "changed": false
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-9a5c-6de1-000000000009",
                        "name": "cilib-defaults",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/untrusted/project_2/cc-github.bmwgroup.net/codecraft/cilib/roles/cilib-defaults"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:50:08.993929Z",
                            "start": "2024-04-21T00:50:08.946979Z"
                        },
                        "id": "ce4df5fb-964c-9a5c-6de1-00000000000b",
                        "name": "Set cilib defaults"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "include_tasks",
                            "changed": false,
                            "include": "linux.yaml",
                            "include_args": {}
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-9a5c-6de1-000000000005",
                        "name": "set-file-comments",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/untrusted/project_2/cc-github.bmwgroup.net/codecraft/cilib/roles/set-file-comments"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:50:09.046377Z",
                            "start": "2024-04-21T00:50:09.008919Z"
                        },
                        "id": "ce4df5fb-964c-9a5c-6de1-00000000000d",
                        "name": ""
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "shell",
                            "changed": false,
                            "cmd": "set -o errexit\nset +x\ngit diff --name-only origin/master..master\n",
                            "delta": null,
                            "end": null,
                            "failed": true,
                            "invocation": {
                                "module_args": {
                                    "_raw_params": "set -o errexit\nset +x\ngit diff --name-only origin/master..master\n",
                                    "_uses_shell": true,
                                    "argv": null,
                                    "chdir": "/home/zuul/src/cc-github.bmwgroup.net/swh/ddad/",
                                    "creates": null,
                                    "executable": null,
                                    "removes": null,
                                    "stdin": null,
                                    "stdin_add_newline": true,
                                    "strip_empty_ends": true,
                                    "warn": false,
                                    "zuul_ansible_split_streams": false,
                                    "zuul_log_id": "ce4df5fb-964c-9a5c-6de1-00000000003f-1-node"
                                }
                            },
                            "msg": "Unable to change directory before execution: [Errno 2] No such file or directory: b'/home/zuul/src/cc-github.bmwgroup.net/swh/ddad/'",
                            "rc": null,
                            "start": null,
                            "stderr": "",
                            "stderr_lines": [],
                            "stdout": "",
                            "stdout_lines": []
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-9a5c-6de1-000000000005",
                        "name": "set-file-comments",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/untrusted/project_2/cc-github.bmwgroup.net/codecraft/cilib/roles/set-file-comments"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:50:21.309651Z",
                            "start": "2024-04-21T00:50:09.206936Z"
                        },
                        "id": "ce4df5fb-964c-9a5c-6de1-00000000003f",
                        "name": "Detect which files have been changed in this PR/change"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "debug",
                            "changed": false,
                            "git_diff_output.stdout": ""
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-9a5c-6de1-000000000005",
                        "name": "set-file-comments",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/untrusted/project_2/cc-github.bmwgroup.net/codecraft/cilib/roles/set-file-comments"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:50:21.382676Z",
                            "start": "2024-04-21T00:50:21.325648Z"
                        },
                        "id": "ce4df5fb-964c-9a5c-6de1-000000000040",
                        "name": "List changed files"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "set_fact",
                            "ansible_facts": {
                                "changed_files": ""
                            },
                            "changed": false
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-9a5c-6de1-000000000005",
                        "name": "set-file-comments",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/untrusted/project_2/cc-github.bmwgroup.net/codecraft/cilib/roles/set-file-comments"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:50:21.446052Z",
                            "start": "2024-04-21T00:50:21.397318Z"
                        },
                        "id": "ce4df5fb-964c-9a5c-6de1-000000000041",
                        "name": "Create comma separated list of changed files"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "shell",
                            "changed": false,
                            "false_condition": "file_comments_only_changed_lines",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-9a5c-6de1-000000000005",
                        "name": "set-file-comments",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/untrusted/project_2/cc-github.bmwgroup.net/codecraft/cilib/roles/set-file-comments"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:50:22.000281Z",
                            "start": "2024-04-21T00:50:21.488814Z"
                        },
                        "id": "ce4df5fb-964c-9a5c-6de1-000000000045",
                        "name": "Extract which lines are changed in pull request"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "copy",
                            "changed": false,
                            "false_condition": "zuul.change is defined",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-9a5c-6de1-000000000005",
                        "name": "set-file-comments",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/untrusted/project_2/cc-github.bmwgroup.net/codecraft/cilib/roles/set-file-comments"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:50:22.061655Z",
                            "start": "2024-04-21T00:50:22.013610Z"
                        },
                        "id": "ce4df5fb-964c-9a5c-6de1-000000000047",
                        "name": "Copy parsing script to the node"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "shell",
                            "changed": false,
                            "false_condition": "zuul.change is defined",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-9a5c-6de1-000000000005",
                        "name": "set-file-comments",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/untrusted/project_2/cc-github.bmwgroup.net/codecraft/cilib/roles/set-file-comments"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:50:22.633614Z",
                            "start": "2024-04-21T00:50:22.120334Z"
                        },
                        "id": "ce4df5fb-964c-9a5c-6de1-000000000048",
                        "name": "Parse the input and create the file comments json file"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "include_tasks",
                            "changed": false,
                            "false_condition": "ansible_os_family == \"Windows\"",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-9a5c-6de1-000000000005",
                        "name": "set-file-comments",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/untrusted/project_2/cc-github.bmwgroup.net/codecraft/cilib/roles/set-file-comments"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:50:22.678113Z",
                            "start": "2024-04-21T00:50:22.649564Z"
                        },
                        "id": "ce4df5fb-964c-9a5c-6de1-00000000000e",
                        "name": ""
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "slurp",
                            "changed": false,
                            "false_condition": "zuul.change is defined",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-9a5c-6de1-000000000005",
                        "name": "set-file-comments",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/untrusted/project_2/cc-github.bmwgroup.net/codecraft/cilib/roles/set-file-comments"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:50:22.729794Z",
                            "start": "2024-04-21T00:50:22.692127Z"
                        },
                        "id": "ce4df5fb-964c-9a5c-6de1-000000000010",
                        "name": "Read the json file from the parsing"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "set_fact",
                            "changed": false,
                            "false_condition": "zuul.change is defined",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-9a5c-6de1-000000000005",
                        "name": "set-file-comments",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/untrusted/project_2/cc-github.bmwgroup.net/codecraft/cilib/roles/set-file-comments"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:50:22.791856Z",
                            "start": "2024-04-21T00:50:22.743858Z"
                        },
                        "id": "ce4df5fb-964c-9a5c-6de1-000000000011",
                        "name": "Extract the file comments dict"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "zuul_return",
                            "changed": false,
                            "false_condition": "zuul.change is defined",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-9a5c-6de1-000000000005",
                        "name": "set-file-comments",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/untrusted/project_2/cc-github.bmwgroup.net/codecraft/cilib/roles/set-file-comments"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:50:22.854851Z",
                            "start": "2024-04-21T00:50:22.808385Z"
                        },
                        "id": "ce4df5fb-964c-9a5c-6de1-000000000012",
                        "name": "Return the file comments dict to Zuul for reporting"
                    }
                }
            ]
        }
    ],
    "stats": {
        "node": {
            "changed": 0,
            "failures": 0,
            "ignored": 1,
            "ok": 5,
            "rescued": 0,
            "skipped": 7,
            "unreachable": 0
        }
    },
    "trusted": false
},
{
    "branch": "master",
    "index": "1",
    "phase": "post",
    "playbook": "cc-github.bmwgroup.net/swh/ddad_ci_config/playbooks/quality/templates/swq-adp-dump-teamscale.yaml",
    "plays": [
        {
            "play": {
                "duration": {
                    "end": "2024-04-21T00:50:28.192819Z",
                    "start": "2024-04-21T00:50:24.588817Z"
                },
                "id": "ce4df5fb-964c-ce61-41a9-000000000003",
                "name": "Common Playbook for SW Quality Jobs"
            },
            "tasks": [
                {
                    "hosts": {
                        "node": {
                            "action": "file",
                            "changed": false,
                            "false_condition": "teamscale_dump_template_name is defined and teamscale_dump_generated_main is defined and (teamscale_findings_export is defined or\n teamscale_metrics_export is defined or\n teamscale_report_export is defined)\n",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:50:24.690460Z",
                            "start": "2024-04-21T00:50:24.628039Z"
                        },
                        "id": "ce4df5fb-964c-ce61-41a9-000000000030",
                        "name": "Create \"/tmp/logs\" directory"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "template",
                            "changed": false,
                            "false_condition": "teamscale_dump_template_name is defined and teamscale_dump_generated_main is defined and (teamscale_findings_export is defined or\n teamscale_metrics_export is defined or\n teamscale_report_export is defined)\n",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:50:24.759592Z",
                            "start": "2024-04-21T00:50:24.711023Z"
                        },
                        "id": "ce4df5fb-964c-ce61-41a9-000000000031",
                        "name": "Generate \"{{ logs_dir }}/{{ docker_generated_main }}\" from \"{{ docker_template_name }}\" for docker"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "command",
                            "changed": false,
                            "false_condition": "teamscale_dump_template_name is defined and teamscale_dump_generated_main is defined and (teamscale_findings_export is defined or\n teamscale_metrics_export is defined or\n teamscale_report_export is defined)\n",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:50:25.334115Z",
                            "start": "2024-04-21T00:50:24.812342Z"
                        },
                        "id": "ce4df5fb-964c-ce61-41a9-000000000032",
                        "name": "Print content of \"/tmp/logs/generated_main_teamscale_dump.sh\""
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "include_role",
                            "changed": false,
                            "false_condition": "teamscale_dump_template_name is defined and teamscale_dump_generated_main is defined and (teamscale_findings_export is defined or\n teamscale_metrics_export is defined or\n teamscale_report_export is defined)\n",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:50:25.381802Z",
                            "start": "2024-04-21T00:50:25.344152Z"
                        },
                        "id": "ce4df5fb-964c-ce61-41a9-000000000033",
                        "name": "Mount buildset cache"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "file",
                            "changed": false,
                            "false_condition": "teamscale_dump_template_name is defined and teamscale_dump_generated_main is defined and (teamscale_findings_export is defined or\n teamscale_metrics_export is defined or\n teamscale_report_export is defined)\n",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:50:25.441648Z",
                            "start": "2024-04-21T00:50:25.394390Z"
                        },
                        "id": "ce4df5fb-964c-ce61-41a9-000000000034",
                        "name": "Create an empty \"$HOME/.bazelrc\" file"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "include_tasks",
                            "changed": false,
                            "false_condition": "teamscale_dump_template_name is defined and teamscale_dump_generated_main is defined and (teamscale_findings_export is defined or\n teamscale_metrics_export is defined or\n teamscale_report_export is defined)\n",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-ce61-41a9-00000000000d",
                        "name": "buildbarn-host",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/untrusted/project_2/cc-github.bmwgroup.net/codecraft/cilib/roles/buildbarn-host"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:50:25.603056Z",
                            "start": "2024-04-21T00:50:25.562892Z"
                        },
                        "id": "ce4df5fb-964c-ce61-41a9-00000000000f",
                        "name": ""
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "include_tasks",
                            "changed": false,
                            "false_condition": "teamscale_dump_template_name is defined and teamscale_dump_generated_main is defined and (teamscale_findings_export is defined or\n teamscale_metrics_export is defined or\n teamscale_report_export is defined)\n",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-ce61-41a9-00000000000d",
                        "name": "buildbarn-host",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/untrusted/project_2/cc-github.bmwgroup.net/codecraft/cilib/roles/buildbarn-host"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:50:25.649461Z",
                            "start": "2024-04-21T00:50:25.612554Z"
                        },
                        "id": "ce4df5fb-964c-ce61-41a9-000000000010",
                        "name": ""
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "fail",
                            "changed": false,
                            "false_condition": "teamscale_dump_template_name is defined and teamscale_dump_generated_main is defined and (teamscale_findings_export is defined or\n teamscale_metrics_export is defined or\n teamscale_report_export is defined)\n",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-ce61-41a9-000000000012",
                        "name": "engflow-host",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/untrusted/project_2/cc-github.bmwgroup.net/codecraft/cilib/roles/engflow-host"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:50:25.713753Z",
                            "start": "2024-04-21T00:50:25.674941Z"
                        },
                        "id": "ce4df5fb-964c-ce61-41a9-000000000014",
                        "name": ""
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "set_fact",
                            "changed": false,
                            "false_condition": "teamscale_dump_template_name is defined and teamscale_dump_generated_main is defined and (teamscale_findings_export is defined or\n teamscale_metrics_export is defined or\n teamscale_report_export is defined)\n",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-ce61-41a9-000000000012",
                        "name": "engflow-host",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/untrusted/project_2/cc-github.bmwgroup.net/codecraft/cilib/roles/engflow-host"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:50:25.764352Z",
                            "start": "2024-04-21T00:50:25.725110Z"
                        },
                        "id": "ce4df5fb-964c-ce61-41a9-000000000015",
                        "name": "Add availibility zone in AWS for local routing"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "set_fact",
                            "changed": false,
                            "false_condition": "teamscale_dump_template_name is defined and teamscale_dump_generated_main is defined and (teamscale_findings_export is defined or\n teamscale_metrics_export is defined or\n teamscale_report_export is defined)\n",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-ce61-41a9-000000000012",
                        "name": "engflow-host",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/untrusted/project_2/cc-github.bmwgroup.net/codecraft/cilib/roles/engflow-host"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:50:25.820643Z",
                            "start": "2024-04-21T00:50:25.780940Z"
                        },
                        "id": "ce4df5fb-964c-ce61-41a9-000000000016",
                        "name": "Set EngFlow URI"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "include_tasks",
                            "changed": false,
                            "results": [],
                            "skipped": true,
                            "skipped_reason": "No items in the list"
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-ce61-41a9-000000000018",
                        "name": "bazel-override-zuul-repository",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/untrusted/project_0/cc-github.bmwgroup.net/swh/ddad_ci_config/roles/bazel-override-zuul-repository"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:50:25.868685Z",
                            "start": "2024-04-21T00:50:25.842294Z"
                        },
                        "id": "ce4df5fb-964c-ce61-41a9-00000000001a",
                        "name": ""
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "include_tasks",
                            "changed": false,
                            "results": [],
                            "skipped": true,
                            "skipped_reason": "No items in the list"
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-ce61-41a9-000000000018",
                        "name": "bazel-override-zuul-repository",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/untrusted/project_0/cc-github.bmwgroup.net/swh/ddad_ci_config/roles/bazel-override-zuul-repository"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:50:25.913619Z",
                            "start": "2024-04-21T00:50:25.884989Z"
                        },
                        "id": "ce4df5fb-964c-ce61-41a9-00000000001c",
                        "name": ""
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "include_tasks",
                            "changed": false,
                            "false_condition": "teamscale_dump_template_name is defined and teamscale_dump_generated_main is defined and (teamscale_findings_export is defined or\n teamscale_metrics_export is defined or\n teamscale_report_export is defined)\n",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-ce61-41a9-000000000007",
                        "name": "bazel-ensure-bazelrc",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/untrusted/project_0/cc-github.bmwgroup.net/swh/ddad_ci_config/roles/bazel-ensure-bazelrc"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:50:25.992068Z",
                            "start": "2024-04-21T00:50:25.942655Z"
                        },
                        "id": "ce4df5fb-964c-ce61-41a9-00000000001f",
                        "name": ""
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "include_tasks",
                            "changed": false,
                            "false_condition": "teamscale_dump_template_name is defined and teamscale_dump_generated_main is defined and (teamscale_findings_export is defined or\n teamscale_metrics_export is defined or\n teamscale_report_export is defined)\n",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-ce61-41a9-000000000007",
                        "name": "bazel-ensure-bazelrc",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/untrusted/project_0/cc-github.bmwgroup.net/swh/ddad_ci_config/roles/bazel-ensure-bazelrc"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:50:26.063671Z",
                            "start": "2024-04-21T00:50:26.014385Z"
                        },
                        "id": "ce4df5fb-964c-ce61-41a9-000000000020",
                        "name": ""
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "set_fact",
                            "changed": false,
                            "false_condition": "teamscale_dump_template_name is defined and teamscale_dump_generated_main is defined and (teamscale_findings_export is defined or\n teamscale_metrics_export is defined or\n teamscale_report_export is defined)\n",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-ce61-41a9-000000000007",
                        "name": "bazel-ensure-bazelrc",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/untrusted/project_0/cc-github.bmwgroup.net/swh/ddad_ci_config/roles/bazel-ensure-bazelrc"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:50:26.128336Z",
                            "start": "2024-04-21T00:50:26.078258Z"
                        },
                        "id": "ce4df5fb-964c-ce61-41a9-000000000021",
                        "name": ""
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "set_fact",
                            "changed": false,
                            "false_condition": "teamscale_dump_template_name is defined and teamscale_dump_generated_main is defined and (teamscale_findings_export is defined or\n teamscale_metrics_export is defined or\n teamscale_report_export is defined)\n",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-ce61-41a9-000000000027",
                        "name": "cilib-defaults",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/untrusted/project_2/cc-github.bmwgroup.net/codecraft/cilib/roles/cilib-defaults"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:50:26.197573Z",
                            "start": "2024-04-21T00:50:26.158527Z"
                        },
                        "id": "ce4df5fb-964c-ce61-41a9-000000000029",
                        "name": "Set cilib defaults"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "set_fact",
                            "changed": false,
                            "false_condition": "teamscale_dump_template_name is defined and teamscale_dump_generated_main is defined and (teamscale_findings_export is defined or\n teamscale_metrics_export is defined or\n teamscale_report_export is defined)\n",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-ce61-41a9-000000000023",
                        "name": "docker-run",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/untrusted/project_2/cc-github.bmwgroup.net/codecraft/cilib/roles/docker-run"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:50:26.273379Z",
                            "start": "2024-04-21T00:50:26.223670Z"
                        },
                        "id": "ce4df5fb-964c-ce61-41a9-00000000002b",
                        "name": "Set image vars"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "shell",
                            "changed": false,
                            "false_condition": "teamscale_dump_template_name is defined and teamscale_dump_generated_main is defined and (teamscale_findings_export is defined or\n teamscale_metrics_export is defined or\n teamscale_report_export is defined)\n",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-ce61-41a9-000000000023",
                        "name": "docker-run",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/untrusted/project_2/cc-github.bmwgroup.net/codecraft/cilib/roles/docker-run"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:50:26.873875Z",
                            "start": "2024-04-21T00:50:26.359601Z"
                        },
                        "id": "ce4df5fb-964c-ce61-41a9-00000000002c",
                        "name": "Pull docker image {{ gen_docker_image }}"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "set_fact",
                            "changed": false,
                            "false_condition": "teamscale_dump_template_name is defined and teamscale_dump_generated_main is defined and (teamscale_findings_export is defined or\n teamscale_metrics_export is defined or\n teamscale_report_export is defined)\n",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-ce61-41a9-000000000023",
                        "name": "docker-run",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/untrusted/project_2/cc-github.bmwgroup.net/codecraft/cilib/roles/docker-run"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:50:26.922630Z",
                            "start": "2024-04-21T00:50:26.883534Z"
                        },
                        "id": "ce4df5fb-964c-ce61-41a9-00000000002d",
                        "name": "Set fact Run docker command"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "shell",
                            "changed": false,
                            "false_condition": "teamscale_dump_template_name is defined and teamscale_dump_generated_main is defined and (teamscale_findings_export is defined or\n teamscale_metrics_export is defined or\n teamscale_report_export is defined)\n",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-ce61-41a9-000000000023",
                        "name": "docker-run",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/untrusted/project_2/cc-github.bmwgroup.net/codecraft/cilib/roles/docker-run"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:50:27.521397Z",
                            "start": "2024-04-21T00:50:26.989558Z"
                        },
                        "id": "ce4df5fb-964c-ce61-41a9-00000000002e",
                        "name": "Run docker command"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "command",
                            "changed": false,
                            "false_condition": "teamscale_dump_template_name is defined and teamscale_dump_generated_main is defined and (teamscale_findings_export is defined or\n teamscale_metrics_export is defined or\n teamscale_report_export is defined)\n",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:50:28.192819Z",
                            "start": "2024-04-21T00:50:27.658441Z"
                        },
                        "id": "ce4df5fb-964c-ce61-41a9-000000000036",
                        "name": "Print content of \"/tmp/logs\""
                    }
                }
            ]
        }
    ],
    "stats": {
        "node": {
            "changed": 0,
            "failures": 0,
            "ignored": 0,
            "ok": 0,
            "rescued": 0,
            "skipped": 21,
            "unreachable": 0
        }
    },
    "trusted": false
},
{
    "branch": "master",
    "index": "2",
    "phase": "post",
    "playbook": "cc-github.bmwgroup.net/swh/ddad_ci_config/playbooks/quality/templates/swq-adp-dump-sonarqube.yaml",
    "plays": [
        {
            "play": {
                "duration": {
                    "end": "2024-04-21T00:50:31.660455Z",
                    "start": "2024-04-21T00:50:30.003149Z"
                },
                "id": "ce4df5fb-964c-38e3-2e6e-000000000002",
                "name": "Dump Sonarqube Entries into YAML"
            },
            "tasks": [
                {
                    "hosts": {
                        "node": {
                            "action": "command",
                            "changed": true,
                            "cmd": [
                                "echo",
                                "Noop"
                            ],
                            "delta": "0:00:00.007310",
                            "end": "2024-04-21 00:50:31.184477",
                            "invocation": {
                                "module_args": {
                                    "_raw_params": "echo \"Noop\"",
                                    "_uses_shell": false,
                                    "argv": null,
                                    "chdir": null,
                                    "creates": null,
                                    "executable": null,
                                    "removes": null,
                                    "stdin": null,
                                    "stdin_add_newline": true,
                                    "strip_empty_ends": true,
                                    "warn": false,
                                    "zuul_ansible_split_streams": false,
                                    "zuul_log_id": "ce4df5fb-964c-38e3-2e6e-000000000004-1-node"
                                }
                            },
                            "msg": "",
                            "rc": 0,
                            "start": "2024-04-21 00:50:31.177167",
                            "stderr": "",
                            "stderr_lines": [],
                            "stdout": "Noop",
                            "stdout_lines": [
                                "Noop"
                            ],
                            "zuul_log_id": "ce4df5fb-964c-38e3-2e6e-000000000004-1-node"
                        }
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:50:31.660455Z",
                            "start": "2024-04-21T00:50:30.114732Z"
                        },
                        "id": "ce4df5fb-964c-38e3-2e6e-000000000004",
                        "name": "Noop"
                    }
                }
            ]
        }
    ],
    "stats": {
        "node": {
            "changed": 1,
            "failures": 0,
            "ignored": 0,
            "ok": 1,
            "rescued": 0,
            "skipped": 0,
            "unreachable": 0
        }
    },
    "trusted": false
},
{
    "branch": "master",
    "index": "3",
    "phase": "post",
    "playbook": "cc-github.bmwgroup.net/swh/ddad_ci_config/playbooks/quality/common/upload-to-teamscale.yaml",
    "plays": [
        {
            "play": {
                "duration": {
                    "end": "2024-04-21T00:50:39.618338Z",
                    "start": "2024-04-21T00:50:33.056980Z"
                },
                "id": "ce4df5fb-964c-6134-db2f-000000000002",
                "name": "Upload to Teamscale"
            },
            "tasks": [
                {
                    "hosts": {
                        "node": {
                            "action": "command",
                            "changed": false,
                            "false_condition": "teamscale_metrics_export is defined\n",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:50:33.685502Z",
                            "start": "2024-04-21T00:50:33.163329Z"
                        },
                        "id": "ce4df5fb-964c-6134-db2f-000000000046",
                        "name": "Check existence of file \"{{ logs_dir }}/{{ teamscale_metrics_export }}\""
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "command",
                            "changed": false,
                            "false_condition": "teamscale_findings_export is defined\n",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:50:34.360909Z",
                            "start": "2024-04-21T00:50:33.819637Z"
                        },
                        "id": "ce4df5fb-964c-6134-db2f-000000000047",
                        "name": "Check existence of file \"{{ logs_dir }}/{{ teamscale_findings_export }}\""
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "command",
                            "changed": false,
                            "false_condition": "teamscale_report_export is defined\n",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:50:34.971792Z",
                            "start": "2024-04-21T00:50:34.436656Z"
                        },
                        "id": "ce4df5fb-964c-6134-db2f-000000000048",
                        "name": "Check existence of file \"{{ logs_dir }}/{{ teamscale_report_export }}\""
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "set_fact",
                            "changed": false,
                            "false_condition": "(teamscale_upload_enabled | default(false)) and teamscale_partition is defined and teamscale_metrics_export is defined\n",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-6134-db2f-000000000013",
                        "name": "cilib-defaults",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/untrusted/project_2/cc-github.bmwgroup.net/codecraft/cilib/roles/cilib-defaults"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:50:35.061112Z",
                            "start": "2024-04-21T00:50:35.002355Z"
                        },
                        "id": "ce4df5fb-964c-6134-db2f-000000000015",
                        "name": "Set cilib defaults"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "set_fact",
                            "changed": false,
                            "false_condition": "(teamscale_upload_enabled | default(false)) and teamscale_partition is defined and teamscale_metrics_export is defined\n",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-6134-db2f-00000000000f",
                        "name": "docker-run",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/untrusted/project_2/cc-github.bmwgroup.net/codecraft/cilib/roles/docker-run"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:50:35.186443Z",
                            "start": "2024-04-21T00:50:35.093585Z"
                        },
                        "id": "ce4df5fb-964c-6134-db2f-000000000017",
                        "name": "Set image vars"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "shell",
                            "changed": false,
                            "false_condition": "(teamscale_upload_enabled | default(false)) and teamscale_partition is defined and teamscale_metrics_export is defined\n",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-6134-db2f-00000000000f",
                        "name": "docker-run",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/untrusted/project_2/cc-github.bmwgroup.net/codecraft/cilib/roles/docker-run"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:50:35.775735Z",
                            "start": "2024-04-21T00:50:35.260748Z"
                        },
                        "id": "ce4df5fb-964c-6134-db2f-000000000018",
                        "name": "Pull docker image {{ gen_docker_image }}"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "set_fact",
                            "changed": false,
                            "false_condition": "(teamscale_upload_enabled | default(false)) and teamscale_partition is defined and teamscale_metrics_export is defined\n",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-6134-db2f-00000000000f",
                        "name": "docker-run",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/untrusted/project_2/cc-github.bmwgroup.net/codecraft/cilib/roles/docker-run"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:50:35.880528Z",
                            "start": "2024-04-21T00:50:35.787307Z"
                        },
                        "id": "ce4df5fb-964c-6134-db2f-000000000019",
                        "name": "Set fact Run docker command"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "shell",
                            "changed": false,
                            "false_condition": "(teamscale_upload_enabled | default(false)) and teamscale_partition is defined and teamscale_metrics_export is defined\n",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-6134-db2f-00000000000f",
                        "name": "docker-run",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/untrusted/project_2/cc-github.bmwgroup.net/codecraft/cilib/roles/docker-run"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:50:36.475824Z",
                            "start": "2024-04-21T00:50:35.960283Z"
                        },
                        "id": "ce4df5fb-964c-6134-db2f-00000000001a",
                        "name": "Run docker command"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "set_fact",
                            "changed": false,
                            "false_condition": "(teamscale_upload_enabled | default(false)) and teamscale_partition is defined and teamscale_findings_export is defined\n",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-6134-db2f-000000000028",
                        "name": "cilib-defaults",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/untrusted/project_2/cc-github.bmwgroup.net/codecraft/cilib/roles/cilib-defaults"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:50:36.581275Z",
                            "start": "2024-04-21T00:50:36.513529Z"
                        },
                        "id": "ce4df5fb-964c-6134-db2f-00000000002a",
                        "name": "Set cilib defaults"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "set_fact",
                            "changed": false,
                            "false_condition": "(teamscale_upload_enabled | default(false)) and teamscale_partition is defined and teamscale_findings_export is defined\n",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-6134-db2f-000000000024",
                        "name": "docker-run",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/untrusted/project_2/cc-github.bmwgroup.net/codecraft/cilib/roles/docker-run"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:50:36.698766Z",
                            "start": "2024-04-21T00:50:36.600831Z"
                        },
                        "id": "ce4df5fb-964c-6134-db2f-00000000002c",
                        "name": "Set image vars"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "shell",
                            "changed": false,
                            "false_condition": "(teamscale_upload_enabled | default(false)) and teamscale_partition is defined and teamscale_findings_export is defined\n",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-6134-db2f-000000000024",
                        "name": "docker-run",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/untrusted/project_2/cc-github.bmwgroup.net/codecraft/cilib/roles/docker-run"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:50:37.288937Z",
                            "start": "2024-04-21T00:50:36.754315Z"
                        },
                        "id": "ce4df5fb-964c-6134-db2f-00000000002d",
                        "name": "Pull docker image {{ gen_docker_image }}"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "set_fact",
                            "changed": false,
                            "false_condition": "(teamscale_upload_enabled | default(false)) and teamscale_partition is defined and teamscale_findings_export is defined\n",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-6134-db2f-000000000024",
                        "name": "docker-run",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/untrusted/project_2/cc-github.bmwgroup.net/codecraft/cilib/roles/docker-run"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:50:37.387429Z",
                            "start": "2024-04-21T00:50:37.305295Z"
                        },
                        "id": "ce4df5fb-964c-6134-db2f-00000000002e",
                        "name": "Set fact Run docker command"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "shell",
                            "changed": false,
                            "false_condition": "(teamscale_upload_enabled | default(false)) and teamscale_partition is defined and teamscale_findings_export is defined\n",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-6134-db2f-000000000024",
                        "name": "docker-run",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/untrusted/project_2/cc-github.bmwgroup.net/codecraft/cilib/roles/docker-run"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:50:37.972499Z",
                            "start": "2024-04-21T00:50:37.458233Z"
                        },
                        "id": "ce4df5fb-964c-6134-db2f-00000000002f",
                        "name": "Run docker command"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "set_fact",
                            "changed": false,
                            "false_condition": "(teamscale_upload_enabled | default(false)) and teamscale_partition is defined and teamscale_report_export is defined\n",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-6134-db2f-00000000003d",
                        "name": "cilib-defaults",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/untrusted/project_2/cc-github.bmwgroup.net/codecraft/cilib/roles/cilib-defaults"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:50:38.168699Z",
                            "start": "2024-04-21T00:50:38.013827Z"
                        },
                        "id": "ce4df5fb-964c-6134-db2f-00000000003f",
                        "name": "Set cilib defaults"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "set_fact",
                            "changed": false,
                            "false_condition": "(teamscale_upload_enabled | default(false)) and teamscale_partition is defined and teamscale_report_export is defined\n",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-6134-db2f-000000000039",
                        "name": "docker-run",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/untrusted/project_2/cc-github.bmwgroup.net/codecraft/cilib/roles/docker-run"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:50:38.352262Z",
                            "start": "2024-04-21T00:50:38.269887Z"
                        },
                        "id": "ce4df5fb-964c-6134-db2f-000000000041",
                        "name": "Set image vars"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "shell",
                            "changed": false,
                            "false_condition": "(teamscale_upload_enabled | default(false)) and teamscale_partition is defined and teamscale_report_export is defined\n",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-6134-db2f-000000000039",
                        "name": "docker-run",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/untrusted/project_2/cc-github.bmwgroup.net/codecraft/cilib/roles/docker-run"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:50:38.930657Z",
                            "start": "2024-04-21T00:50:38.414460Z"
                        },
                        "id": "ce4df5fb-964c-6134-db2f-000000000042",
                        "name": "Pull docker image {{ gen_docker_image }}"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "set_fact",
                            "changed": false,
                            "false_condition": "(teamscale_upload_enabled | default(false)) and teamscale_partition is defined and teamscale_report_export is defined\n",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-6134-db2f-000000000039",
                        "name": "docker-run",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/untrusted/project_2/cc-github.bmwgroup.net/codecraft/cilib/roles/docker-run"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:50:39.029755Z",
                            "start": "2024-04-21T00:50:38.940455Z"
                        },
                        "id": "ce4df5fb-964c-6134-db2f-000000000043",
                        "name": "Set fact Run docker command"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "shell",
                            "changed": false,
                            "false_condition": "(teamscale_upload_enabled | default(false)) and teamscale_partition is defined and teamscale_report_export is defined\n",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-6134-db2f-000000000039",
                        "name": "docker-run",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/untrusted/project_2/cc-github.bmwgroup.net/codecraft/cilib/roles/docker-run"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:50:39.618338Z",
                            "start": "2024-04-21T00:50:39.101962Z"
                        },
                        "id": "ce4df5fb-964c-6134-db2f-000000000044",
                        "name": "Run docker command"
                    }
                }
            ]
        }
    ],
    "stats": {
        "node": {
            "changed": 0,
            "failures": 0,
            "ignored": 0,
            "ok": 0,
            "rescued": 0,
            "skipped": 18,
            "unreachable": 0
        }
    },
    "trusted": false
},
{
    "branch": "master",
    "index": "4",
    "phase": "post",
    "playbook": "cc-github.bmwgroup.net/swh/ddad_ci_config/playbooks/quality/common/upload-to-artifactory.yaml",
    "plays": [
        {
            "play": {
                "duration": {
                    "end": "2024-04-21T00:50:43.741699Z",
                    "start": "2024-04-21T00:50:41.006139Z"
                },
                "id": "ce4df5fb-964c-1bc9-c8db-000000000002",
                "name": "Upload to Artifactory"
            },
            "tasks": [
                {
                    "hosts": {
                        "node": {
                            "action": "debug",
                            "artifactory_upload_artifacts": [
                                "/home/zuul/workspace/swf_metrics"
                            ],
                            "changed": false
                        }
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:50:41.107025Z",
                            "start": "2024-04-21T00:50:41.041963Z"
                        },
                        "id": "ce4df5fb-964c-1bc9-c8db-000000000004",
                        "name": "Print qualified Artifactory upload artifacts"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "set_fact",
                            "changed": false,
                            "msg": "All items skipped",
                            "results": [
                                {
                                    "ansible_loop_var": "item",
                                    "changed": false,
                                    "false_condition": "item[0] != \"/\"",
                                    "item": "/home/zuul/workspace/swf_metrics",
                                    "skip_reason": "Conditional result was False",
                                    "skipped": true
                                }
                            ],
                            "skipped": true
                        }
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:50:41.169462Z",
                            "start": "2024-04-21T00:50:41.120711Z"
                        },
                        "id": "ce4df5fb-964c-1bc9-c8db-000000000005",
                        "name": "Build qualified item names"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "set_fact",
                            "changed": false,
                            "msg": "All items completed",
                            "results": [
                                {
                                    "ansible_facts": {
                                        "qualified_artifactory_upload_artifacts": [
                                            "/home/zuul/workspace/swf_metrics"
                                        ]
                                    },
                                    "ansible_loop_var": "item",
                                    "changed": false,
                                    "failed": false,
                                    "item": "/home/zuul/workspace/swf_metrics"
                                }
                            ]
                        }
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:50:41.285908Z",
                            "start": "2024-04-21T00:50:41.180715Z"
                        },
                        "id": "ce4df5fb-964c-1bc9-c8db-000000000006",
                        "name": "Build qualified item names for items with absolute file path"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "debug",
                            "changed": false,
                            "msg": [
                                "/home/zuul/workspace/swf_metrics"
                            ]
                        }
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:50:41.362288Z",
                            "start": "2024-04-21T00:50:41.301136Z"
                        },
                        "id": "ce4df5fb-964c-1bc9-c8db-000000000007",
                        "name": "Print qualified artifactory upload artifacts"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "debug",
                            "changed": false,
                            "false_condition": "artifactory_upload_artifacts is not defined\n",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:50:41.426586Z",
                            "start": "2024-04-21T00:50:41.376808Z"
                        },
                        "id": "ce4df5fb-964c-1bc9-c8db-000000000008",
                        "name": "Debug print when artifactory_upload_artifacts is not defined"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "set_fact",
                            "ansible_facts": {
                                "fact_upload_path": "heads/master/metrics"
                            },
                            "changed": false
                        }
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:50:41.569298Z",
                            "start": "2024-04-21T00:50:41.441637Z"
                        },
                        "id": "ce4df5fb-964c-1bc9-c8db-000000000009",
                        "name": "Set artifactory upload path"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "set_fact",
                            "changed": false,
                            "false_condition": "zuul.pipeline == \"adp-quality-metrics-manual\" and artifactory_upload_location\n",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:50:41.620520Z",
                            "start": "2024-04-21T00:50:41.582052Z"
                        },
                        "id": "ce4df5fb-964c-1bc9-c8db-00000000000a",
                        "name": "Set artifactory upload path for manually triggered adp-quality-metrics run"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "set_fact",
                            "ansible_facts": {
                                "selected_artifactory_repo": "adp-quality-metrics",
                                "timestamp": ""
                            },
                            "changed": false
                        }
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:50:41.695804Z",
                            "start": "2024-04-21T00:50:41.637326Z"
                        },
                        "id": "ce4df5fb-964c-1bc9-c8db-00000000000b",
                        "name": "Select artifactory upload repository for default"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "set_fact",
                            "changed": false,
                            "false_condition": "zuul.pipeline == \"adp-quality-metrics-manual\" and artifactory_repo_default is defined\n",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:50:41.753306Z",
                            "start": "2024-04-21T00:50:41.706879Z"
                        },
                        "id": "ce4df5fb-964c-1bc9-c8db-00000000000c",
                        "name": "Select artifactory upload repository for manually triggered"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "set_fact",
                            "changed": false,
                            "false_condition": "zuul.pipeline == \"adp-quality-metrics-release\" and artifactory_repo_release is defined\n",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:50:41.799410Z",
                            "start": "2024-04-21T00:50:41.762997Z"
                        },
                        "id": "ce4df5fb-964c-1bc9-c8db-00000000000d",
                        "name": "Select artifactory upload repository for release and prepare timestamp"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "set_fact",
                            "changed": false,
                            "false_condition": "zuul.pipeline == \"test\" and (artifactory_test_release | default(false)) and artifactory_repo_release is defined\n",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:50:41.882421Z",
                            "start": "2024-04-21T00:50:41.812920Z"
                        },
                        "id": "ce4df5fb-964c-1bc9-c8db-00000000000e",
                        "name": "Select artifactory upload repository for release testing and prepare timestamp"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "debug",
                            "changed": false,
                            "false_condition": "fact_upload_path is not defined\n",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:50:41.932101Z",
                            "start": "2024-04-21T00:50:41.894626Z"
                        },
                        "id": "ce4df5fb-964c-1bc9-c8db-00000000000f",
                        "name": "Debug print when fact_upload_path is not defined"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "debug",
                            "changed": false,
                            "false_condition": "selected_artifactory_repo is not defined\n",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:50:41.994450Z",
                            "start": "2024-04-21T00:50:41.945243Z"
                        },
                        "id": "ce4df5fb-964c-1bc9-c8db-000000000010",
                        "name": "Debug print when selected_artifactory_repo is not defined"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "set_fact",
                            "ansible_facts": {
                                "upload_repo_and_path": "adp-quality-metrics/heads/master/metrics"
                            },
                            "changed": false
                        }
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:50:42.069259Z",
                            "start": "2024-04-21T00:50:42.012700Z"
                        },
                        "id": "ce4df5fb-964c-1bc9-c8db-000000000011",
                        "name": "Set artifactory upload path"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "debug",
                            "changed": false,
                            "msg": "https://ddad.artifactory.cc.bmwgroup.net/artifactory/adp-quality-metrics/heads/master/metrics"
                        }
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:50:42.135198Z",
                            "start": "2024-04-21T00:50:42.077800Z"
                        },
                        "id": "ce4df5fb-964c-1bc9-c8db-000000000012",
                        "name": "Print full artifactory upload location"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "include_role",
                            "changed": false,
                            "msg": "All items completed",
                            "results": [
                                {
                                    "ansible_loop_var": "artifactory_item",
                                    "artifactory_item": "/home/zuul/workspace/swf_metrics",
                                    "include_args": {
                                        "name": "artifactory-upload"
                                    }
                                }
                            ]
                        }
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:50:42.233867Z",
                            "start": "2024-04-21T00:50:42.145712Z"
                        },
                        "id": "ce4df5fb-964c-1bc9-c8db-000000000013",
                        "name": "Upload targets to artifactory"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "assert",
                            "changed": false,
                            "msg": "All assertions passed"
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-1bc9-c8db-000000000080",
                        "name": "artifactory-upload",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/untrusted/project_2/cc-github.bmwgroup.net/codecraft/cilib/roles/artifactory-upload"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:50:42.316757Z",
                            "start": "2024-04-21T00:50:42.260633Z"
                        },
                        "id": "ce4df5fb-964c-1bc9-c8db-000000000082",
                        "name": "Ensure all mandatory variables are defined"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "include_tasks",
                            "changed": false,
                            "include": "linux.yaml",
                            "include_args": {}
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-1bc9-c8db-000000000080",
                        "name": "artifactory-upload",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/untrusted/project_2/cc-github.bmwgroup.net/codecraft/cilib/roles/artifactory-upload"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:50:42.360272Z",
                            "start": "2024-04-21T00:50:42.326027Z"
                        },
                        "id": "ce4df5fb-964c-1bc9-c8db-000000000083",
                        "name": ""
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "command",
                            "changed": true,
                            "msg": "All items completed",
                            "results": [
                                {
                                    "ansible_loop_var": "item",
                                    "attempts": 1,
                                    "changed": true,
                                    "cmd": [
                                        "cilib-artifactory",
                                        "upload",
                                        "/home/zuul/workspace/swf_metrics",
                                        "adp-quality-metrics/heads/master/metrics"
                                    ],
                                    "delta": "0:00:00.236358",
                                    "end": "2024-04-21 00:50:43.519034",
                                    "failed": false,
                                    "invocation": {
                                        "module_args": {
                                            "_raw_params": "cilib-artifactory upload \"/home/zuul/workspace/swf_metrics\" \"adp-quality-metrics/heads/master/metrics\"\n",
                                            "_uses_shell": false,
                                            "argv": null,
                                            "chdir": null,
                                            "creates": null,
                                            "executable": null,
                                            "removes": null,
                                            "stdin": null,
                                            "stdin_add_newline": true,
                                            "strip_empty_ends": true,
                                            "warn": false,
                                            "zuul_ansible_split_streams": false,
                                            "zuul_log_id": "in-loop-ignore"
                                        }
                                    },
                                    "item": {
                                        "repo_path": "adp-quality-metrics/heads/master/metrics",
                                        "src": "/home/zuul/workspace/swf_metrics"
                                    },
                                    "msg": "",
                                    "rc": 0,
                                    "start": "2024-04-21 00:50:43.282676",
                                    "stderr": "",
                                    "stderr_lines": [],
                                    "stdout": "2024-04-21 00:50:43,468 - cilib.cli.artifactory - WARNING - No files to upload found! You might have an empty directory or your exclude/include pattern doesn't match",
                                    "stdout_lines": [
                                        "2024-04-21 00:50:43,468 - cilib.cli.artifactory - WARNING - No files to upload found! You might have an empty directory or your exclude/include pattern doesn't match"
                                    ],
                                    "zuul_log_id": "in-loop-ignore"
                                }
                            ]
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-1bc9-c8db-000000000080",
                        "name": "artifactory-upload",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/untrusted/project_2/cc-github.bmwgroup.net/codecraft/cilib/roles/artifactory-upload"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:50:43.584341Z",
                            "start": "2024-04-21T00:50:42.389245Z"
                        },
                        "id": "ce4df5fb-964c-1bc9-c8db-0000000000bb",
                        "name": "Upload to Artifactory"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "include_tasks",
                            "changed": false,
                            "false_condition": "ansible_os_family == \"Windows\"",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-1bc9-c8db-000000000080",
                        "name": "artifactory-upload",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/untrusted/project_2/cc-github.bmwgroup.net/codecraft/cilib/roles/artifactory-upload"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:50:43.631524Z",
                            "start": "2024-04-21T00:50:43.594460Z"
                        },
                        "id": "ce4df5fb-964c-1bc9-c8db-000000000084",
                        "name": ""
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "debug",
                            "changed": false,
                            "msg": "All items skipped",
                            "results": [
                                {
                                    "ansible_loop_var": "artifactory_item",
                                    "artifactory_item": "/home/zuul/workspace/swf_metrics",
                                    "changed": false,
                                    "false_condition": "(not artifactory_upload_enabled | default(true)) and qualified_artifactory_upload_artifacts is defined and upload_repo_and_path is defined\n",
                                    "skip_reason": "Conditional result was False",
                                    "skipped": true
                                }
                            ],
                            "skipped": true
                        }
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:50:43.741699Z",
                            "start": "2024-04-21T00:50:43.651244Z"
                        },
                        "id": "ce4df5fb-964c-1bc9-c8db-000000000015",
                        "name": "Print targets without uploading them (artifactory_upload_enabled false)"
                    }
                }
            ]
        }
    ],
    "stats": {
        "node": {
            "changed": 1,
            "failures": 0,
            "ignored": 0,
            "ok": 10,
            "rescued": 0,
            "skipped": 10,
            "unreachable": 0
        }
    },
    "trusted": false
},
{
    "branch": "master",
    "index": "5",
    "phase": "post",
    "playbook": "cc-github.bmwgroup.net/swh/ddad_ci_config/playbooks/helper/copy-logs-for-upload.yaml",
    "plays": [
        {
            "play": {
                "duration": {
                    "end": "2024-04-21T00:50:47.092746Z",
                    "start": "2024-04-21T00:50:45.225917Z"
                },
                "id": "ce4df5fb-964c-f190-ca67-000000000002",
                "name": "all:!zuul_unreachable"
            },
            "tasks": [
                {
                    "hosts": {
                        "node": {
                            "action": "archive",
                            "archived": [
                                "/tmp/logs/lifecycle",
                                "/tmp/logs/generated_main.sh",
                                "/tmp/logs/lifecycle/metrics",
                                "/tmp/logs/lifecycle/metrics/metrics_job.sh"
                            ],
                            "arcroot": "/tmp/",
                            "changed": true,
                            "dest": "/tmp/metrics.tar.gz",
                            "dest_state": "archive",
                            "expanded_exclude_paths": [],
                            "expanded_paths": [
                                "/tmp/logs"
                            ],
                            "gid": 1000,
                            "group": "zuul",
                            "invocation": {
                                "module_args": {
                                    "attributes": null,
                                    "dest": "/tmp/metrics.tar.gz",
                                    "exclude_path": [],
                                    "exclusion_patterns": null,
                                    "force_archive": false,
                                    "format": "gz",
                                    "group": null,
                                    "mode": null,
                                    "owner": null,
                                    "path": [
                                        "/tmp/logs"
                                    ],
                                    "remove": false,
                                    "selevel": null,
                                    "serole": null,
                                    "setype": null,
                                    "seuser": null,
                                    "unsafe_writes": false
                                }
                            },
                            "missing": [],
                            "mode": "0664",
                            "owner": "zuul",
                            "size": 3171,
                            "state": "file",
                            "uid": 1000
                        }
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:50:46.191505Z",
                            "start": "2024-04-21T00:50:45.267539Z"
                        },
                        "id": "ce4df5fb-964c-f190-ca67-000000000004",
                        "name": "archive-log-file"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "copy",
                            "changed": true,
                            "msg": "All items completed",
                            "results": [
                                {
                                    "ansible_loop_var": "item",
                                    "changed": true,
                                    "checksum": null,
                                    "dest": "/home/zuul/logs/logs",
                                    "failed": false,
                                    "gid": 1000,
                                    "group": "zuul",
                                    "invocation": {
                                        "module_args": {
                                            "_original_basename": null,
                                            "attributes": null,
                                            "backup": false,
                                            "checksum": null,
                                            "content": null,
                                            "dest": "/home/zuul/logs/",
                                            "directory_mode": null,
                                            "follow": false,
                                            "force": true,
                                            "group": null,
                                            "local_follow": null,
                                            "mode": null,
                                            "owner": null,
                                            "remote_src": true,
                                            "selevel": null,
                                            "serole": null,
                                            "setype": null,
                                            "seuser": null,
                                            "src": "/tmp/logs",
                                            "unsafe_writes": false,
                                            "validate": null
                                        }
                                    },
                                    "item": "/tmp/logs",
                                    "md5sum": null,
                                    "mode": "0755",
                                    "owner": "zuul",
                                    "size": 4096,
                                    "src": "/tmp/logs",
                                    "state": "directory",
                                    "uid": 1000
                                },
                                {
                                    "ansible_loop_var": "item",
                                    "changed": true,
                                    "checksum": "d1a75cef06ce20e7ab18dc631e70bc79cfc246dc",
                                    "dest": "/home/zuul/logs/metrics.tar.gz",
                                    "failed": false,
                                    "gid": 1000,
                                    "group": "zuul",
                                    "invocation": {
                                        "module_args": {
                                            "_original_basename": null,
                                            "attributes": null,
                                            "backup": false,
                                            "checksum": null,
                                            "content": null,
                                            "dest": "/home/zuul/logs/",
                                            "directory_mode": null,
                                            "follow": false,
                                            "force": true,
                                            "group": null,
                                            "local_follow": null,
                                            "mode": null,
                                            "owner": null,
                                            "remote_src": true,
                                            "selevel": null,
                                            "serole": null,
                                            "setype": null,
                                            "seuser": null,
                                            "src": "/tmp/metrics.tar.gz",
                                            "unsafe_writes": false,
                                            "validate": null
                                        }
                                    },
                                    "item": "/tmp/metrics.tar.gz",
                                    "md5sum": "091213e05529fd258c6013d196ef72f2",
                                    "mode": "0664",
                                    "owner": "zuul",
                                    "size": 3171,
                                    "src": "/tmp/metrics.tar.gz",
                                    "state": "file",
                                    "uid": 1000
                                }
                            ]
                        }
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:50:46.959647Z",
                            "start": "2024-04-21T00:50:46.203148Z"
                        },
                        "id": "ce4df5fb-964c-f190-ca67-000000000005",
                        "name": "copy-log-file-for-upload"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "unarchive",
                            "changed": false,
                            "false_condition": "archive_logfile is defined",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:50:47.035095Z",
                            "start": "2024-04-21T00:50:46.993275Z"
                        },
                        "id": "ce4df5fb-964c-f190-ca67-000000000006",
                        "name": "unarchive-log-file-for-upload"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "include_tasks",
                            "changed": false,
                            "false_condition": "source_sync_path is defined",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:50:47.092746Z",
                            "start": "2024-04-21T00:50:47.052377Z"
                        },
                        "id": "ce4df5fb-964c-f190-ca67-000000000007",
                        "name": "synchronize-directories"
                    }
                }
            ]
        }
    ],
    "stats": {
        "node": {
            "changed": 2,
            "failures": 0,
            "ignored": 0,
            "ok": 2,
            "rescued": 0,
            "skipped": 2,
            "unreachable": 0
        }
    },
    "trusted": false
},
{
    "branch": "master",
    "index": "6",
    "phase": "post",
    "playbook": "cc-github.bmwgroup.net/swh/ddad_ci_config/playbooks/helper/print-free-disk-space.yaml",
    "plays": [
        {
            "play": {
                "duration": {
                    "end": "2024-04-21T00:50:49.784092Z",
                    "start": "2024-04-21T00:50:48.662430Z"
                },
                "id": "ce4df5fb-964c-108a-0c23-000000000002",
                "name": "all:!zuul_unreachable"
            },
            "tasks": [
                {
                    "hosts": {
                        "node": {
                            "action": "shell",
                            "changed": true,
                            "cmd": "set -o nounset\nset -o errexit\nset -o pipefail\ndf --human-readable\ndf --inodes\n",
                            "delta": "0:00:00.007348",
                            "end": "2024-04-21 00:50:49.588085",
                            "invocation": {
                                "module_args": {
                                    "_raw_params": "set -o nounset\nset -o errexit\nset -o pipefail\ndf --human-readable\ndf --inodes\n",
                                    "_uses_shell": true,
                                    "argv": null,
                                    "chdir": null,
                                    "creates": null,
                                    "executable": "/bin/bash",
                                    "removes": null,
                                    "stdin": null,
                                    "stdin_add_newline": true,
                                    "strip_empty_ends": true,
                                    "warn": false,
                                    "zuul_ansible_split_streams": false,
                                    "zuul_log_id": "ce4df5fb-964c-108a-0c23-000000000004-1-node"
                                }
                            },
                            "msg": "",
                            "rc": 0,
                            "start": "2024-04-21 00:50:49.580737",
                            "stderr": "",
                            "stderr_lines": [],
                            "stdout": "Filesystem      Size  Used Avail Use% Mounted on\ntmpfs           6.3G  2.5M  6.3G   1% /run\n/dev/vda1       300G   54G  233G  19% /\ntmpfs            32G     0   32G   0% /dev/shm\ntmpfs           5.0M     0  5.0M   0% /run/lock\ntmpfs           6.3G  4.0K  6.3G   1% /run/user/1000\nFilesystem       Inodes   IUsed    IFree IUse% Mounted on\ntmpfs           8230202     764  8229438    1% /run\n/dev/vda1      83804160 1118608 82685552    2% /\ntmpfs           8230202       1  8230201    1% /dev/shm\ntmpfs           8230202       3  8230199    1% /run/lock\ntmpfs           1646040      25  1646015    1% /run/user/1000",
                            "stdout_lines": [
                                "Filesystem      Size  Used Avail Use% Mounted on",
                                "tmpfs           6.3G  2.5M  6.3G   1% /run",
                                "/dev/vda1       300G   54G  233G  19% /",
                                "tmpfs            32G     0   32G   0% /dev/shm",
                                "tmpfs           5.0M     0  5.0M   0% /run/lock",
                                "tmpfs           6.3G  4.0K  6.3G   1% /run/user/1000",
                                "Filesystem       Inodes   IUsed    IFree IUse% Mounted on",
                                "tmpfs           8230202     764  8229438    1% /run",
                                "/dev/vda1      83804160 1118608 82685552    2% /",
                                "tmpfs           8230202       1  8230201    1% /dev/shm",
                                "tmpfs           8230202       3  8230199    1% /run/lock",
                                "tmpfs           1646040      25  1646015    1% /run/user/1000"
                            ],
                            "zuul_log_id": "ce4df5fb-964c-108a-0c23-000000000004-1-node"
                        }
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:50:49.784092Z",
                            "start": "2024-04-21T00:50:48.773848Z"
                        },
                        "id": "ce4df5fb-964c-108a-0c23-000000000004",
                        "name": "Print disk usage"
                    }
                }
            ]
        }
    ],
    "stats": {
        "node": {
            "changed": 1,
            "failures": 0,
            "ignored": 0,
            "ok": 1,
            "rescued": 0,
            "skipped": 0,
            "unreachable": 0
        }
    },
    "trusted": false
},
{
    "branch": "master",
    "index": "7",
    "phase": "post",
    "playbook": "cc-github.bmwgroup.net/swh/ddad_ci_config/playbooks/diskimage/track-bazel-out-age.yaml",
    "plays": [
        {
            "play": {
                "duration": {
                    "end": "2024-04-21T00:50:52.487692Z",
                    "start": "2024-04-21T00:50:51.335623Z"
                },
                "id": "ce4df5fb-964c-21f2-ff3d-000000000002",
                "name": "all:!zuul_unreachable"
            },
            "tasks": [
                {
                    "hosts": {
                        "node": {
                            "action": "shell",
                            "changed": true,
                            "cmd": "set -eu\n\nconvert_filename_to_datetime () {\n  IFS=_\n  echo \"$1\" | while read -a T; do\n    echo \"${T[3]}-${T[4]}-${T[5]}T${T[6]}:${T[7]}:${T[8]}\"\n  done\n}\n\ncd /var/cache\nfilename=$((find . -maxdepth 2 -name \"*bazel_out_timestamp*\" -print) 2>/dev/null | sed 's:.*/::')\n\necho \"Bazel-Out Timestamp: ${filename}\"\n\ncurr_datetime=$(date +\"%Y-%m-%dT%T\")\nbazel_out_creation_datetime=$(convert_filename_to_datetime $filename)\nage=$(( $(date -d \"$curr_datetime\" \"+%s\") - $(date -d \"$bazel_out_creation_datetime\" \"+%s\") ))\nage_mins=$(( age / 60 ))\nzuul_job='swf-metrics-check-nautilus-lifecycle'\nzuul_branch='master'\nzuul_pipeline='swf-quality-metrics'\nzuul_uuid='5025843e7b0949e8ab5d90b1424cab55'\n\nINDEX='bazel_out_age'\n\nmkdir -p \"/home/zuul/build_data//${INDEX}\"\nFILE=\"/home/zuul/build_data//${INDEX}/bazel_out_age.json\"\n\necho \"{ \\\n      \\\"job.name\\\" : \"\\\"$zuul_job\"\\\", \\\n      \\\"job.uuid\\\" : \"\\\"$zuul_uuid\"\\\", \\\n      \\\"branch.name\\\" : \"\\\"$zuul_branch\"\\\", \\\n      \\\"pipeline\\\" : \"\\\"$zuul_pipeline\"\\\", \\\n      \\\"age\\\" : $age_mins, \\\n      \\\"bazel_out_timestamp\\\" : \"\\\"$filename\"\\\", \\\n      \\\"timestamp\\\" : \"\\\"$curr_datetime\"\\\" \\\n      }\" > $FILE\n",
                            "delta": "0:00:00.020451",
                            "end": "2024-04-21 00:50:52.233698",
                            "invocation": {
                                "module_args": {
                                    "_raw_params": "set -eu\n\nconvert_filename_to_datetime () {\n  IFS=_\n  echo \"$1\" | while read -a T; do\n    echo \"${T[3]}-${T[4]}-${T[5]}T${T[6]}:${T[7]}:${T[8]}\"\n  done\n}\n\ncd /var/cache\nfilename=$((find . -maxdepth 2 -name \"*bazel_out_timestamp*\" -print) 2>/dev/null | sed 's:.*/::')\n\necho \"Bazel-Out Timestamp: ${filename}\"\n\ncurr_datetime=$(date +\"%Y-%m-%dT%T\")\nbazel_out_creation_datetime=$(convert_filename_to_datetime $filename)\nage=$(( $(date -d \"$curr_datetime\" \"+%s\") - $(date -d \"$bazel_out_creation_datetime\" \"+%s\") ))\nage_mins=$(( age / 60 ))\nzuul_job='swf-metrics-check-nautilus-lifecycle'\nzuul_branch='master'\nzuul_pipeline='swf-quality-metrics'\nzuul_uuid='5025843e7b0949e8ab5d90b1424cab55'\n\nINDEX='bazel_out_age'\n\nmkdir -p \"/home/zuul/build_data//${INDEX}\"\nFILE=\"/home/zuul/build_data//${INDEX}/bazel_out_age.json\"\n\necho \"{ \\\n      \\\"job.name\\\" : \"\\\"$zuul_job\"\\\", \\\n      \\\"job.uuid\\\" : \"\\\"$zuul_uuid\"\\\", \\\n      \\\"branch.name\\\" : \"\\\"$zuul_branch\"\\\", \\\n      \\\"pipeline\\\" : \"\\\"$zuul_pipeline\"\\\", \\\n      \\\"age\\\" : $age_mins, \\\n      \\\"bazel_out_timestamp\\\" : \"\\\"$filename\"\\\", \\\n      \\\"timestamp\\\" : \"\\\"$curr_datetime\"\\\" \\\n      }\" > $FILE\n",
                                    "_uses_shell": true,
                                    "argv": null,
                                    "chdir": null,
                                    "creates": null,
                                    "executable": "/bin/bash",
                                    "removes": null,
                                    "stdin": null,
                                    "stdin_add_newline": true,
                                    "strip_empty_ends": true,
                                    "warn": false,
                                    "zuul_ansible_split_streams": false,
                                    "zuul_log_id": "ce4df5fb-964c-21f2-ff3d-000000000004-1-node"
                                }
                            },
                            "msg": "",
                            "rc": 0,
                            "start": "2024-04-21 00:50:52.213247",
                            "stderr": "",
                            "stderr_lines": [],
                            "stdout": "Bazel-Out Timestamp: bazel_out_timestamp_2024_04_19_00_51_57",
                            "stdout_lines": [
                                "Bazel-Out Timestamp: bazel_out_timestamp_2024_04_19_00_51_57"
                            ],
                            "zuul_log_id": "ce4df5fb-964c-21f2-ff3d-000000000004-1-node"
                        }
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:50:52.487692Z",
                            "start": "2024-04-21T00:50:51.446115Z"
                        },
                        "id": "ce4df5fb-964c-21f2-ff3d-000000000004",
                        "name": "Check the age of the bazel out and create data to be uploaded to Elasticsearch"
                    }
                }
            ]
        }
    ],
    "stats": {
        "node": {
            "changed": 1,
            "failures": 0,
            "ignored": 0,
            "ok": 1,
            "rescued": 0,
            "skipped": 0,
            "unreachable": 0
        }
    },
    "trusted": false
},
{
    "branch": "master",
    "index": "8",
    "phase": "post",
    "playbook": "cc-github.bmwgroup.net/swh/ddad_ci_config/playbooks/helper/disk-usage.yaml",
    "plays": [
        {
            "play": {
                "duration": {
                    "end": "2024-04-21T00:50:55.286033Z",
                    "start": "2024-04-21T00:50:54.159530Z"
                },
                "id": "ce4df5fb-964c-fcd6-67fc-000000000002",
                "name": "all:!zuul_unreachable"
            },
            "tasks": [
                {
                    "hosts": {
                        "node": {
                            "action": "shell",
                            "changed": true,
                            "cmd": "cd \"src/cc-github.bmwgroup.net/swh/ddad_ci_config\" || exit 1\npython3 scripts/build_metrics/src/main_disk_usage.py    \"/home/zuul/ci_kpis/disk_usage.json\" || exit 1\n",
                            "delta": "0:00:00.073546",
                            "end": "2024-04-21 00:50:55.139310",
                            "invocation": {
                                "module_args": {
                                    "_raw_params": "cd \"src/cc-github.bmwgroup.net/swh/ddad_ci_config\" || exit 1\npython3 scripts/build_metrics/src/main_disk_usage.py    \"/home/zuul/ci_kpis/disk_usage.json\" || exit 1\n",
                                    "_uses_shell": true,
                                    "argv": null,
                                    "chdir": null,
                                    "creates": null,
                                    "executable": null,
                                    "removes": null,
                                    "stdin": null,
                                    "stdin_add_newline": true,
                                    "strip_empty_ends": true,
                                    "warn": false,
                                    "zuul_ansible_split_streams": false,
                                    "zuul_log_id": "ce4df5fb-964c-fcd6-67fc-000000000004-1-node"
                                }
                            },
                            "msg": "",
                            "rc": 0,
                            "start": "2024-04-21 00:50:55.065764",
                            "stderr": "",
                            "stderr_lines": [],
                            "stdout": "",
                            "stdout_lines": [],
                            "zuul_log_id": "ce4df5fb-964c-fcd6-67fc-000000000004-1-node"
                        }
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:50:55.286033Z",
                            "start": "2024-04-21T00:50:54.231896Z"
                        },
                        "id": "ce4df5fb-964c-fcd6-67fc-000000000004",
                        "name": "Calculate disk usage and write it to file"
                    }
                }
            ]
        }
    ],
    "stats": {
        "node": {
            "changed": 1,
            "failures": 0,
            "ignored": 0,
            "ok": 1,
            "rescued": 0,
            "skipped": 0,
            "unreachable": 0
        }
    },
    "trusted": false
},
{
    "branch": "master",
    "index": "9",
    "phase": "post",
    "playbook": "cc-github.bmwgroup.net/swh/ddad_ci_config/playbooks/kpi/sar-data.yaml",
    "plays": [
        {
            "play": {
                "duration": {
                    "end": "2024-04-21T00:50:57.208295Z",
                    "start": "2024-04-21T00:50:56.595416Z"
                },
                "id": "ce4df5fb-964c-10d6-4545-000000000002",
                "name": "Export sar data to json"
            },
            "tasks": [
                {
                    "hosts": {
                        "node": {
                            "action": "shell",
                            "changed": false,
                            "false_condition": "sar_logging is defined",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:50:57.208295Z",
                            "start": "2024-04-21T00:50:56.690522Z"
                        },
                        "id": "ce4df5fb-964c-10d6-4545-000000000004",
                        "name": "Export summary of sar data in JSON"
                    }
                }
            ]
        }
    ],
    "stats": {
        "node": {
            "changed": 0,
            "failures": 0,
            "ignored": 0,
            "ok": 0,
            "rescued": 0,
            "skipped": 1,
            "unreachable": 0
        }
    },
    "trusted": false
},
{
    "branch": "master",
    "index": "10",
    "phase": "post",
    "playbook": "cc-github.bmwgroup.net/swh/ddad_ci_config/playbooks/check-for-docker-downloads.yaml",
    "plays": [
        {
            "play": {
                "duration": {
                    "end": "2024-04-21T00:51:02.980245Z",
                    "start": "2024-04-21T00:50:58.680990Z"
                },
                "id": "ce4df5fb-964c-8614-9e20-000000000002",
                "name": "Check for docker image downloads"
            },
            "tasks": [
                {
                    "hosts": {
                        "node": {
                            "action": "copy",
                            "changed": true,
                            "checksum": "8db01c4b96a1c403e7ecb08b37fe310a38aee878",
                            "dest": "/home/zuul/docker-watcher-job-output.txt",
                            "diff": [],
                            "gid": 1000,
                            "group": "zuul",
                            "invocation": {
                                "module_args": {
                                    "_original_basename": "job-output.txt",
                                    "attributes": null,
                                    "backup": false,
                                    "checksum": "8db01c4b96a1c403e7ecb08b37fe310a38aee878",
                                    "content": null,
                                    "dest": "/home/zuul/docker-watcher-job-output.txt",
                                    "directory_mode": null,
                                    "follow": false,
                                    "force": true,
                                    "group": null,
                                    "local_follow": null,
                                    "mode": null,
                                    "owner": null,
                                    "remote_src": null,
                                    "selevel": null,
                                    "serole": null,
                                    "setype": null,
                                    "seuser": null,
                                    "src": "/home/zuul/.ansible/tmp/ansible-tmp-1713660659.149455-6-88283857114077/source",
                                    "unsafe_writes": false,
                                    "validate": null
                                }
                            },
                            "md5sum": "8abe4a499bf763615143d41a909c916a",
                            "mode": "0664",
                            "owner": "zuul",
                            "size": 399788,
                            "src": "/home/zuul/.ansible/tmp/ansible-tmp-1713660659.149455-6-88283857114077/source",
                            "state": "file",
                            "uid": 1000
                        }
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:51:00.412920Z",
                            "start": "2024-04-21T00:50:58.719881Z"
                        },
                        "id": "ce4df5fb-964c-8614-9e20-000000000004",
                        "name": "Copy job-output file from executor"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "command",
                            "changed": true,
                            "cmd": [
                                "python3",
                                "docker_pull_watcher.py",
                                "--job_output_file",
                                "/home/zuul/docker-watcher-job-output.txt",
                                "--docker_pull_report_file=/home/zuul/logs/docker_pull_report.txt",
                                "--image_whitelist_file",
                                "/home/zuul/src/cc-github.bmwgroup.net/swh/ddad_ci_config/scripts/ci_docker_image_check/src/docker_image_whitelist.txt",
                                "--job_name",
                                "swf-metrics-check-nautilus-lifecycle"
                            ],
                            "delta": "0:00:00.196904",
                            "end": "2024-04-21 00:51:01.255850",
                            "invocation": {
                                "module_args": {
                                    "_raw_params": "python3 docker_pull_watcher.py --job_output_file \"/home/zuul/docker-watcher-job-output.txt\" --docker_pull_report_file=\"/home/zuul/logs/docker_pull_report.txt\" --image_whitelist_file \"/home/zuul/src/cc-github.bmwgroup.net/swh/ddad_ci_config/scripts/ci_docker_image_check/src/docker_image_whitelist.txt\" --job_name \"swf-metrics-check-nautilus-lifecycle\"",
                                    "_uses_shell": false,
                                    "argv": null,
                                    "chdir": "/home/zuul/src/cc-github.bmwgroup.net/swh/ddad_ci_config/scripts/docker_pull_watcher/src",
                                    "creates": null,
                                    "executable": null,
                                    "removes": null,
                                    "stdin": null,
                                    "stdin_add_newline": true,
                                    "strip_empty_ends": true,
                                    "warn": false,
                                    "zuul_ansible_split_streams": false,
                                    "zuul_log_id": "ce4df5fb-964c-8614-9e20-000000000005-1-node"
                                }
                            },
                            "msg": "",
                            "rc": 0,
                            "start": "2024-04-21 00:51:01.058946",
                            "stderr": "",
                            "stderr_lines": [],
                            "stdout": "",
                            "stdout_lines": [],
                            "zuul_log_id": "ce4df5fb-964c-8614-9e20-000000000005-1-node"
                        }
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:51:01.479563Z",
                            "start": "2024-04-21T00:51:00.459464Z"
                        },
                        "id": "ce4df5fb-964c-8614-9e20-000000000005",
                        "name": "Check if docker downloaded non-whitelisted images"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "stat",
                            "changed": false,
                            "invocation": {
                                "module_args": {
                                    "checksum_algorithm": "sha1",
                                    "follow": false,
                                    "get_attributes": true,
                                    "get_checksum": true,
                                    "get_md5": false,
                                    "get_mime": true,
                                    "path": "/home/zuul/logs/docker_pull_report.txt"
                                }
                            },
                            "stat": {
                                "exists": false
                            }
                        }
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:51:01.802982Z",
                            "start": "2024-04-21T00:51:01.492651Z"
                        },
                        "id": "ce4df5fb-964c-8614-9e20-000000000006",
                        "name": "Check if file exists"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "slurp",
                            "changed": false,
                            "false_condition": "docker_pull_report_file.stat.exists",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:51:01.850574Z",
                            "start": "2024-04-21T00:51:01.813243Z"
                        },
                        "id": "ce4df5fb-964c-8614-9e20-000000000007",
                        "name": ""
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "include_role",
                            "changed": false,
                            "false_condition": "docker_pull_report_file.stat.exists and zuul.change is defined",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:51:01.898279Z",
                            "start": "2024-04-21T00:51:01.861003Z"
                        },
                        "id": "ce4df5fb-964c-8614-9e20-000000000008",
                        "name": "Post comment if message exists"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "file",
                            "changed": true,
                            "diff": {
                                "after": {
                                    "path": "/home/zuul/docker-watcher-job-output.txt",
                                    "state": "absent"
                                },
                                "before": {
                                    "path": "/home/zuul/docker-watcher-job-output.txt",
                                    "state": "file"
                                }
                            },
                            "invocation": {
                                "module_args": {
                                    "_diff_peek": null,
                                    "_original_basename": null,
                                    "access_time": null,
                                    "access_time_format": "%Y%m%d%H%M.%S",
                                    "attributes": null,
                                    "follow": true,
                                    "force": false,
                                    "group": null,
                                    "mode": null,
                                    "modification_time": null,
                                    "modification_time_format": "%Y%m%d%H%M.%S",
                                    "owner": null,
                                    "path": "/home/zuul/docker-watcher-job-output.txt",
                                    "recurse": false,
                                    "selevel": null,
                                    "serole": null,
                                    "setype": null,
                                    "seuser": null,
                                    "src": null,
                                    "state": "absent",
                                    "unsafe_writes": false
                                }
                            },
                            "path": "/home/zuul/docker-watcher-job-output.txt",
                            "state": "absent"
                        }
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:51:02.389923Z",
                            "start": "2024-04-21T00:51:01.914127Z"
                        },
                        "id": "ce4df5fb-964c-8614-9e20-000000000009",
                        "name": "Remove copied log file"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "shell",
                            "changed": false,
                            "false_condition": "docker_pull_report_file.stat.exists",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:51:02.980245Z",
                            "start": "2024-04-21T00:51:02.451521Z"
                        },
                        "id": "ce4df5fb-964c-8614-9e20-00000000000a",
                        "name": "Stop execution"
                    }
                }
            ]
        }
    ],
    "stats": {
        "node": {
            "changed": 3,
            "failures": 0,
            "ignored": 0,
            "ok": 4,
            "rescued": 0,
            "skipped": 3,
            "unreachable": 0
        }
    },
    "trusted": false
},
{
    "branch": "master",
    "index": "11",
    "phase": "post",
    "playbook": "cc-github.bmwgroup.net/swh/ddad_ci_config/playbooks/helper/collect-git-repository-data.yaml",
    "plays": [
        {
            "play": {
                "duration": {
                    "end": "2024-04-21T00:51:05.993177Z",
                    "start": "2024-04-21T00:51:04.401153Z"
                },
                "id": "ce4df5fb-964c-550c-e60d-000000000002",
                "name": "all:!zuul_unreachable"
            },
            "tasks": [
                {
                    "hosts": {
                        "node": {
                            "action": "shell",
                            "changed": true,
                            "cmd": "set -eu\ncd /home/zuul/workspace/src/ddad;\necho \"Entering 'ddad'\" > /home/zuul/ci_kpis/repository_data.txt;\ngit rev-parse HEAD >> /home/zuul/ci_kpis/repository_data.txt;\ngit submodule foreach --recursive \"git rev-parse HEAD\" >> /home/zuul/ci_kpis/repository_data.txt;\n\necho \"Pipeline: swf-quality-metrics\" >> /home/zuul/ci_kpis/repository_data.txt;\necho \"Pull request: https://cc-github.bmwgroup.net/swh/ddad\" >> /home/zuul/ci_kpis/repository_data.txt;\necho \"Repository affected: swh/ddad\" >> /home/zuul/ci_kpis/repository_data.txt;\necho \"Job: swf-metrics-check-nautilus-lifecycle\" >> /home/zuul/ci_kpis/repository_data.txt;\necho \"Build uuid: 5025843e7b0949e8ab5d90b1424cab55\" >> /home/zuul/ci_kpis/repository_data.txt;\n",
                            "delta": "0:00:00.296066",
                            "end": "2024-04-21 00:51:05.701691",
                            "invocation": {
                                "module_args": {
                                    "_raw_params": "set -eu\ncd /home/zuul/workspace/src/ddad;\necho \"Entering 'ddad'\" > /home/zuul/ci_kpis/repository_data.txt;\ngit rev-parse HEAD >> /home/zuul/ci_kpis/repository_data.txt;\ngit submodule foreach --recursive \"git rev-parse HEAD\" >> /home/zuul/ci_kpis/repository_data.txt;\n\necho \"Pipeline: swf-quality-metrics\" >> /home/zuul/ci_kpis/repository_data.txt;\necho \"Pull request: https://cc-github.bmwgroup.net/swh/ddad\" >> /home/zuul/ci_kpis/repository_data.txt;\necho \"Repository affected: swh/ddad\" >> /home/zuul/ci_kpis/repository_data.txt;\necho \"Job: swf-metrics-check-nautilus-lifecycle\" >> /home/zuul/ci_kpis/repository_data.txt;\necho \"Build uuid: 5025843e7b0949e8ab5d90b1424cab55\" >> /home/zuul/ci_kpis/repository_data.txt;\n",
                                    "_uses_shell": true,
                                    "argv": null,
                                    "chdir": null,
                                    "creates": null,
                                    "executable": "/bin/bash",
                                    "removes": null,
                                    "stdin": null,
                                    "stdin_add_newline": true,
                                    "strip_empty_ends": true,
                                    "warn": false,
                                    "zuul_ansible_split_streams": false,
                                    "zuul_log_id": "ce4df5fb-964c-550c-e60d-000000000004-1-node"
                                }
                            },
                            "msg": "",
                            "rc": 0,
                            "start": "2024-04-21 00:51:05.405625",
                            "stderr": "",
                            "stderr_lines": [],
                            "stdout": "",
                            "stdout_lines": [],
                            "zuul_log_id": "ce4df5fb-964c-550c-e60d-000000000004-1-node"
                        }
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:51:05.993177Z",
                            "start": "2024-04-21T00:51:04.477290Z"
                        },
                        "id": "ce4df5fb-964c-550c-e60d-000000000004",
                        "name": "Collect repository data"
                    }
                }
            ]
        }
    ],
    "stats": {
        "node": {
            "changed": 1,
            "failures": 0,
            "ignored": 0,
            "ok": 1,
            "rescued": 0,
            "skipped": 0,
            "unreachable": 0
        }
    },
    "trusted": false
},
{
    "branch": "master",
    "index": "12",
    "phase": "post",
    "playbook": "cc-github.bmwgroup.net/swh/zuul-trusted-ddad/playbooks/adp-metrics/collect-git-repository-data.yaml",
    "plays": [
        {
            "play": {
                "duration": {
                    "end": "2024-04-21T00:51:08.268064Z",
                    "start": "2024-04-21T00:51:07.669467Z"
                },
                "id": "ce4df5fb-964c-231d-3e4a-000000000002",
                "name": "all"
            },
            "tasks": [
                {
                    "hosts": {
                        "node": {
                            "action": "shell",
                            "changed": false,
                            "false_condition": "collect_git_repository_data_in_trusted_repo | default(true)",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:51:08.268064Z",
                            "start": "2024-04-21T00:51:07.752628Z"
                        },
                        "id": "ce4df5fb-964c-231d-3e4a-000000000004",
                        "name": "Collect repository data"
                    }
                }
            ]
        }
    ],
    "stats": {
        "node": {
            "changed": 0,
            "failures": 0,
            "ignored": 0,
            "ok": 0,
            "rescued": 0,
            "skipped": 1,
            "unreachable": 0
        }
    },
    "trusted": true
},
{
    "branch": "master",
    "index": "13",
    "phase": "post",
    "playbook": "cc-github.bmwgroup.net/swh/zuul-trusted-ddad/playbooks/adp-metrics/adp-generate-slos.yaml",
    "plays": [
        {
            "play": {
                "duration": {
                    "end": "2024-04-21T00:51:11.932816Z",
                    "start": "2024-04-21T00:51:09.789382Z"
                },
                "id": "ce4df5fb-964c-1021-0652-000000000002",
                "name": "all:!zuul_unreachable"
            },
            "tasks": [
                {
                    "hosts": {
                        "node": {
                            "action": "shell",
                            "changed": true,
                            "cmd": "cd /home/zuul/workspace/src/ddad;\npython3 ci_config/scripts/additional_data/github_data.py  swh/ddad  no_change  /home/zuul/ci_kpis/repository_data.txt  /home/zuul/ci_kpis/repository_data.json  $slo_adp_token  --es_user $slo_es_user  --es_password $slo_es_password;\n",
                            "delta": "0:00:00.256843",
                            "end": "2024-04-21 00:51:11.665464",
                            "invocation": {
                                "module_args": {
                                    "_raw_params": "cd /home/zuul/workspace/src/ddad;\npython3 ci_config/scripts/additional_data/github_data.py  swh/ddad  no_change  /home/zuul/ci_kpis/repository_data.txt  /home/zuul/ci_kpis/repository_data.json  $slo_adp_token  --es_user $slo_es_user  --es_password $slo_es_password;\n",
                                    "_uses_shell": true,
                                    "argv": null,
                                    "chdir": null,
                                    "creates": null,
                                    "executable": "/bin/bash",
                                    "removes": null,
                                    "stdin": null,
                                    "stdin_add_newline": true,
                                    "strip_empty_ends": true,
                                    "warn": false,
                                    "zuul_ansible_split_streams": false,
                                    "zuul_log_id": "ce4df5fb-964c-1021-0652-000000000004-1-node"
                                }
                            },
                            "msg": "",
                            "rc": 0,
                            "start": "2024-04-21 00:51:11.408621",
                            "stderr": "",
                            "stderr_lines": [],
                            "stdout": "#### Exception: github_data_parser.py -> _parse_base_ref_name_from_json_data(self):\n'data'\n{}\n#### Exception: github_data_parser.py -> _parse_last_approval_date_from_json_data(self):\n'data'\n{}\n#### Exception: github_data_parser.py -> _parse_last_commit_date_from_json_data(self):\n'data'\n{}\n#### Exception: github_data_parser.py -> _parse_merged_at_date_from_json_data(self):\n'data'\n{}\n#### Exception: github_data_parser.py -> _parse_merge_label_added_from_json_data(self):\n'data'\n{}\n#### Exception: github_data_parser.py -> _parse_nocheck_label_removed_from_json_data(self):\n'data'\n{}\n#### Exception: _parse_published_at_date_from_json_data.py -> _parse_published_at_date_from_json_data(self):\n'data'\n{}\n#### Exception: github_data_parser.py -> _parse_pr_title_from_json_data(self):\n'data'\n{}\n#### Exception: github_data_parser.py -> _parse_ready_to_review_from_json_data(self):\n'data'\n{}\n#### Exception: github_data_parser.py -> _parse_wip_success_date_from_json_data(self):\n'data'\n{}\nSLO Info: Attempting to parse initial gate start date without all required variables set!\nSLO Info: Attempting to calculate ready_to_merge date without all required variables set!\n#### Exception: github_data_parser.py -> _calculate_recheck_slo(self):\n'data'\n{}\nSLO Info: Attempting to calculate Pre Merge SLO date without all required variables set!\n#### Exception: github_data_parser.py -> get_published_at_date_str(self):\n'NoneType' object has no attribute 'strftime'\n{}",
                            "stdout_lines": [
                                "#### Exception: github_data_parser.py -> _parse_base_ref_name_from_json_data(self):",
                                "'data'",
                                "{}",
                                "#### Exception: github_data_parser.py -> _parse_last_approval_date_from_json_data(self):",
                                "'data'",
                                "{}",
                                "#### Exception: github_data_parser.py -> _parse_last_commit_date_from_json_data(self):",
                                "'data'",
                                "{}",
                                "#### Exception: github_data_parser.py -> _parse_merged_at_date_from_json_data(self):",
                                "'data'",
                                "{}",
                                "#### Exception: github_data_parser.py -> _parse_merge_label_added_from_json_data(self):",
                                "'data'",
                                "{}",
                                "#### Exception: github_data_parser.py -> _parse_nocheck_label_removed_from_json_data(self):",
                                "'data'",
                                "{}",
                                "#### Exception: _parse_published_at_date_from_json_data.py -> _parse_published_at_date_from_json_data(self):",
                                "'data'",
                                "{}",
                                "#### Exception: github_data_parser.py -> _parse_pr_title_from_json_data(self):",
                                "'data'",
                                "{}",
                                "#### Exception: github_data_parser.py -> _parse_ready_to_review_from_json_data(self):",
                                "'data'",
                                "{}",
                                "#### Exception: github_data_parser.py -> _parse_wip_success_date_from_json_data(self):",
                                "'data'",
                                "{}",
                                "SLO Info: Attempting to parse initial gate start date without all required variables set!",
                                "SLO Info: Attempting to calculate ready_to_merge date without all required variables set!",
                                "#### Exception: github_data_parser.py -> _calculate_recheck_slo(self):",
                                "'data'",
                                "{}",
                                "SLO Info: Attempting to calculate Pre Merge SLO date without all required variables set!",
                                "#### Exception: github_data_parser.py -> get_published_at_date_str(self):",
                                "'NoneType' object has no attribute 'strftime'",
                                "{}"
                            ],
                            "zuul_log_id": "ce4df5fb-964c-1021-0652-000000000004-1-node"
                        }
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:51:11.932816Z",
                            "start": "2024-04-21T00:51:09.911069Z"
                        },
                        "id": "ce4df5fb-964c-1021-0652-000000000004",
                        "name": "Generate CI SLOs"
                    }
                }
            ]
        }
    ],
    "stats": {
        "node": {
            "changed": 1,
            "failures": 0,
            "ignored": 0,
            "ok": 1,
            "rescued": 0,
            "skipped": 0,
            "unreachable": 0
        }
    },
    "trusted": true
},
{
    "branch": "master",
    "index": "14",
    "phase": "post",
    "playbook": "cc-github.bmwgroup.net/swh/zuul-trusted-ddad/playbooks/adp-metrics/collect-adp-ci-kpis-metric.yaml",
    "plays": [
        {
            "play": {
                "duration": {
                    "end": "2024-04-21T00:51:13.776875Z",
                    "start": "2024-04-21T00:51:13.152425Z"
                },
                "id": "ce4df5fb-964c-2404-e1ae-000000000002",
                "name": "all"
            },
            "tasks": [
                {
                    "hosts": {
                        "node": {
                            "action": "shell",
                            "changed": false,
                            "false_condition": "overwrite_collect_adp_ci_kpis_metrics is undefined or not overwrite_collect_adp_ci_kpis_metrics",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:51:13.776875Z",
                            "start": "2024-04-21T00:51:13.262834Z"
                        },
                        "id": "ce4df5fb-964c-2404-e1ae-000000000004",
                        "name": "Collect adp ci kpis metric"
                    }
                }
            ]
        }
    ],
    "stats": {
        "node": {
            "changed": 0,
            "failures": 0,
            "ignored": 0,
            "ok": 0,
            "rescued": 0,
            "skipped": 1,
            "unreachable": 0
        }
    },
    "trusted": true
},
{
    "branch": "master",
    "index": "15",
    "phase": "post",
    "playbook": "cc-github.bmwgroup.net/swh/zuul-trusted-ddad/playbooks/base-xpad-bazel/post.yaml",
    "plays": [
        {
            "play": {
                "duration": {
                    "end": "2024-04-21T00:51:17.518467Z",
                    "start": "2024-04-21T00:51:15.296046Z"
                },
                "id": "ce4df5fb-964c-7887-89f1-000000000002",
                "name": "base-xpad-bazel post"
            },
            "tasks": [
                {
                    "hosts": {
                        "node": {
                            "action": "command",
                            "changed": false,
                            "false_condition": "xpad_tsupload_compiler_warnings or xpad_tsupload_unittest_coverage or xpad_tsupload_unittest_results or xpad_tsupload_componenttest_results or xpad_tsupload_report\n",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-7887-89f1-00000000000e",
                        "name": "xpad-set-commit-timestamp",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_3/cc-github.bmwgroup.net/swh/zuul-trusted-ddad/roles/xpad-set-commit-timestamp"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:51:15.958915Z",
                            "start": "2024-04-21T00:51:15.450329Z"
                        },
                        "id": "ce4df5fb-964c-7887-89f1-000000000010",
                        "name": "Get last git commit date"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "command",
                            "changed": false,
                            "false_condition": "xpad_tsupload_compiler_warnings or xpad_tsupload_unittest_coverage or xpad_tsupload_unittest_results or xpad_tsupload_componenttest_results or xpad_tsupload_report\n",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-7887-89f1-00000000000e",
                        "name": "xpad-set-commit-timestamp",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_3/cc-github.bmwgroup.net/swh/zuul-trusted-ddad/roles/xpad-set-commit-timestamp"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:51:16.534964Z",
                            "start": "2024-04-21T00:51:16.020965Z"
                        },
                        "id": "ce4df5fb-964c-7887-89f1-000000000011",
                        "name": "Convert epoch to timestamp format"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "set_fact",
                            "changed": false,
                            "false_condition": "xpad_tsupload_compiler_warnings or xpad_tsupload_unittest_coverage or xpad_tsupload_unittest_results or xpad_tsupload_componenttest_results or xpad_tsupload_report\n",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-7887-89f1-00000000000e",
                        "name": "xpad-set-commit-timestamp",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_3/cc-github.bmwgroup.net/swh/zuul-trusted-ddad/roles/xpad-set-commit-timestamp"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:51:16.588465Z",
                            "start": "2024-04-21T00:51:16.550381Z"
                        },
                        "id": "ce4df5fb-964c-7887-89f1-000000000012",
                        "name": "Set commit timestamp fact based on epoch"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "set_fact",
                            "changed": false,
                            "false_condition": "xpad_tsupload_compiler_warnings or xpad_tsupload_unittest_coverage or xpad_tsupload_unittest_results or xpad_tsupload_componenttest_results or xpad_tsupload_report\n",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-7887-89f1-00000000000e",
                        "name": "xpad-set-commit-timestamp",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_3/cc-github.bmwgroup.net/swh/zuul-trusted-ddad/roles/xpad-set-commit-timestamp"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:51:16.627658Z",
                            "start": "2024-04-21T00:51:16.600673Z"
                        },
                        "id": "ce4df5fb-964c-7887-89f1-000000000013",
                        "name": "Set commit timestamp fact based on date format"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "debug",
                            "changed": false,
                            "false_condition": "xpad_tsupload_compiler_warnings or xpad_tsupload_unittest_coverage or xpad_tsupload_unittest_results or xpad_tsupload_componenttest_results or xpad_tsupload_report\n",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-7887-89f1-000000000015",
                        "name": "ensure-teamscale-client",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_1/cc-github.bmwgroup.net/codecraft/cilib/roles/ensure-teamscale-client"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:51:16.680846Z",
                            "start": "2024-04-21T00:51:16.651034Z"
                        },
                        "id": "ce4df5fb-964c-7887-89f1-000000000017",
                        "name": "Inform Users that the role is deprecated"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "include_tasks",
                            "changed": false,
                            "false_condition": "xpad_tsupload_compiler_warnings or xpad_tsupload_unittest_coverage or xpad_tsupload_unittest_results or xpad_tsupload_componenttest_results or xpad_tsupload_report\n",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-7887-89f1-000000000015",
                        "name": "ensure-teamscale-client",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_1/cc-github.bmwgroup.net/codecraft/cilib/roles/ensure-teamscale-client"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:51:16.723210Z",
                            "start": "2024-04-21T00:51:16.695430Z"
                        },
                        "id": "ce4df5fb-964c-7887-89f1-000000000018",
                        "name": ""
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "include_tasks",
                            "changed": false,
                            "false_condition": "xpad_tsupload_compiler_warnings or xpad_tsupload_unittest_coverage or xpad_tsupload_unittest_results or xpad_tsupload_componenttest_results or xpad_tsupload_report\n",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-7887-89f1-000000000015",
                        "name": "ensure-teamscale-client",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_1/cc-github.bmwgroup.net/codecraft/cilib/roles/ensure-teamscale-client"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:51:16.762671Z",
                            "start": "2024-04-21T00:51:16.734848Z"
                        },
                        "id": "ce4df5fb-964c-7887-89f1-000000000019",
                        "name": ""
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "include_tasks",
                            "changed": false,
                            "false_condition": "xpad_tsupload_compiler_warnings",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-7887-89f1-00000000001b",
                        "name": "teamscale-convert",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_1/cc-github.bmwgroup.net/codecraft/cilib/roles/teamscale-convert"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:51:16.809102Z",
                            "start": "2024-04-21T00:51:16.782481Z"
                        },
                        "id": "ce4df5fb-964c-7887-89f1-00000000001d",
                        "name": ""
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "include_tasks",
                            "changed": false,
                            "false_condition": "xpad_tsupload_compiler_warnings",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-7887-89f1-00000000001b",
                        "name": "teamscale-convert",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_1/cc-github.bmwgroup.net/codecraft/cilib/roles/teamscale-convert"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:51:16.854853Z",
                            "start": "2024-04-21T00:51:16.818389Z"
                        },
                        "id": "ce4df5fb-964c-7887-89f1-00000000001e",
                        "name": ""
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "include_tasks",
                            "changed": false,
                            "false_condition": "xpad_tsupload_compiler_warnings",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-7887-89f1-000000000020",
                        "name": "teamscale-upload",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_1/cc-github.bmwgroup.net/codecraft/cilib/roles/teamscale-upload"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:51:16.914217Z",
                            "start": "2024-04-21T00:51:16.883876Z"
                        },
                        "id": "ce4df5fb-964c-7887-89f1-000000000022",
                        "name": ""
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "include_tasks",
                            "changed": false,
                            "false_condition": "xpad_tsupload_compiler_warnings",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-7887-89f1-000000000020",
                        "name": "teamscale-upload",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_1/cc-github.bmwgroup.net/codecraft/cilib/roles/teamscale-upload"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:51:16.967248Z",
                            "start": "2024-04-21T00:51:16.929484Z"
                        },
                        "id": "ce4df5fb-964c-7887-89f1-000000000023",
                        "name": ""
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "include_tasks",
                            "changed": false,
                            "false_condition": "xpad_tsupload_unittest_coverage",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-7887-89f1-000000000025",
                        "name": "teamscale-upload",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_1/cc-github.bmwgroup.net/codecraft/cilib/roles/teamscale-upload"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:51:17.019737Z",
                            "start": "2024-04-21T00:51:16.992503Z"
                        },
                        "id": "ce4df5fb-964c-7887-89f1-000000000027",
                        "name": ""
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "include_tasks",
                            "changed": false,
                            "false_condition": "xpad_tsupload_unittest_coverage",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-7887-89f1-000000000025",
                        "name": "teamscale-upload",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_1/cc-github.bmwgroup.net/codecraft/cilib/roles/teamscale-upload"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:51:17.063594Z",
                            "start": "2024-04-21T00:51:17.036620Z"
                        },
                        "id": "ce4df5fb-964c-7887-89f1-000000000028",
                        "name": ""
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "include_tasks",
                            "changed": false,
                            "false_condition": "xpad_tsupload_unittest_results",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-7887-89f1-00000000002a",
                        "name": "teamscale-convert",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_1/cc-github.bmwgroup.net/codecraft/cilib/roles/teamscale-convert"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:51:17.105479Z",
                            "start": "2024-04-21T00:51:17.079710Z"
                        },
                        "id": "ce4df5fb-964c-7887-89f1-00000000002c",
                        "name": ""
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "include_tasks",
                            "changed": false,
                            "false_condition": "xpad_tsupload_unittest_results",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-7887-89f1-00000000002a",
                        "name": "teamscale-convert",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_1/cc-github.bmwgroup.net/codecraft/cilib/roles/teamscale-convert"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:51:17.141959Z",
                            "start": "2024-04-21T00:51:17.116104Z"
                        },
                        "id": "ce4df5fb-964c-7887-89f1-00000000002d",
                        "name": ""
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "include_tasks",
                            "changed": false,
                            "false_condition": "xpad_tsupload_unittest_results",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-7887-89f1-00000000002f",
                        "name": "teamscale-upload",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_1/cc-github.bmwgroup.net/codecraft/cilib/roles/teamscale-upload"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:51:17.186164Z",
                            "start": "2024-04-21T00:51:17.160539Z"
                        },
                        "id": "ce4df5fb-964c-7887-89f1-000000000031",
                        "name": ""
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "include_tasks",
                            "changed": false,
                            "false_condition": "xpad_tsupload_unittest_results",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-7887-89f1-00000000002f",
                        "name": "teamscale-upload",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_1/cc-github.bmwgroup.net/codecraft/cilib/roles/teamscale-upload"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:51:17.224544Z",
                            "start": "2024-04-21T00:51:17.197592Z"
                        },
                        "id": "ce4df5fb-964c-7887-89f1-000000000032",
                        "name": ""
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "include_tasks",
                            "changed": false,
                            "false_condition": "xpad_tsupload_componenttest_results",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-7887-89f1-000000000034",
                        "name": "teamscale-convert",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_1/cc-github.bmwgroup.net/codecraft/cilib/roles/teamscale-convert"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:51:17.285634Z",
                            "start": "2024-04-21T00:51:17.256728Z"
                        },
                        "id": "ce4df5fb-964c-7887-89f1-000000000036",
                        "name": ""
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "include_tasks",
                            "changed": false,
                            "false_condition": "xpad_tsupload_componenttest_results",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-7887-89f1-000000000034",
                        "name": "teamscale-convert",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_1/cc-github.bmwgroup.net/codecraft/cilib/roles/teamscale-convert"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:51:17.325251Z",
                            "start": "2024-04-21T00:51:17.298514Z"
                        },
                        "id": "ce4df5fb-964c-7887-89f1-000000000037",
                        "name": ""
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "include_tasks",
                            "changed": false,
                            "false_condition": "xpad_tsupload_componenttest_results",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-7887-89f1-000000000039",
                        "name": "teamscale-upload",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_1/cc-github.bmwgroup.net/codecraft/cilib/roles/teamscale-upload"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:51:17.377012Z",
                            "start": "2024-04-21T00:51:17.350019Z"
                        },
                        "id": "ce4df5fb-964c-7887-89f1-00000000003b",
                        "name": ""
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "include_tasks",
                            "changed": false,
                            "false_condition": "xpad_tsupload_componenttest_results",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-7887-89f1-000000000039",
                        "name": "teamscale-upload",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_1/cc-github.bmwgroup.net/codecraft/cilib/roles/teamscale-upload"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:51:17.416252Z",
                            "start": "2024-04-21T00:51:17.389304Z"
                        },
                        "id": "ce4df5fb-964c-7887-89f1-00000000003c",
                        "name": ""
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "include_tasks",
                            "changed": false,
                            "false_condition": "xpad_tsupload_report",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-7887-89f1-00000000003e",
                        "name": "teamscale-upload",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_1/cc-github.bmwgroup.net/codecraft/cilib/roles/teamscale-upload"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:51:17.475689Z",
                            "start": "2024-04-21T00:51:17.446556Z"
                        },
                        "id": "ce4df5fb-964c-7887-89f1-000000000040",
                        "name": ""
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "include_tasks",
                            "changed": false,
                            "false_condition": "xpad_tsupload_report",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-7887-89f1-00000000003e",
                        "name": "teamscale-upload",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_1/cc-github.bmwgroup.net/codecraft/cilib/roles/teamscale-upload"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:51:17.518467Z",
                            "start": "2024-04-21T00:51:17.489651Z"
                        },
                        "id": "ce4df5fb-964c-7887-89f1-000000000041",
                        "name": ""
                    }
                }
            ]
        }
    ],
    "stats": {
        "node": {
            "changed": 0,
            "failures": 0,
            "ignored": 0,
            "ok": 0,
            "rescued": 0,
            "skipped": 23,
            "unreachable": 0
        }
    },
    "trusted": true
},
{
    "branch": "master",
    "index": "16",
    "phase": "post",
    "playbook": "cc-github.bmwgroup.net/swh/ddad_ci_config/playbooks/ddad-metrics/collect-ddad-ci-kpis-metric.yaml",
    "plays": [
        {
            "play": {
                "duration": {
                    "end": "2024-04-21T00:51:22.164167Z",
                    "start": "2024-04-21T00:51:19.094384Z"
                },
                "id": "ce4df5fb-964c-04cd-128f-000000000002",
                "name": "all:!zuul_unreachable"
            },
            "tasks": [
                {
                    "hosts": {
                        "node": {
                            "action": "stat",
                            "changed": false,
                            "invocation": {
                                "module_args": {
                                    "checksum_algorithm": "sha1",
                                    "follow": false,
                                    "get_attributes": true,
                                    "get_checksum": true,
                                    "get_md5": false,
                                    "get_mime": true,
                                    "path": "/home/zuul/ci_kpis"
                                }
                            },
                            "stat": {
                                "atime": 1713660390.1420002,
                                "attr_flags": "e",
                                "attributes": [
                                    "extents"
                                ],
                                "block_size": 4096,
                                "blocks": 8,
                                "charset": "binary",
                                "ctime": 1713660671.628431,
                                "dev": 64513,
                                "device_type": 0,
                                "executable": true,
                                "exists": true,
                                "gid": 1000,
                                "gr_name": "zuul",
                                "inode": 14665742,
                                "isblk": false,
                                "ischr": false,
                                "isdir": true,
                                "isfifo": false,
                                "isgid": false,
                                "islnk": false,
                                "isreg": false,
                                "issock": false,
                                "isuid": false,
                                "mimetype": "inode/directory",
                                "mode": "0775",
                                "mtime": 1713660671.628431,
                                "nlink": 2,
                                "path": "/home/zuul/ci_kpis",
                                "pw_name": "zuul",
                                "readable": true,
                                "rgrp": true,
                                "roth": true,
                                "rusr": true,
                                "size": 4096,
                                "uid": 1000,
                                "version": "1376777365",
                                "wgrp": true,
                                "woth": false,
                                "writeable": true,
                                "wusr": true,
                                "xgrp": true,
                                "xoth": true,
                                "xusr": true
                            }
                        }
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:51:20.109206Z",
                            "start": "2024-04-21T00:51:19.111293Z"
                        },
                        "id": "ce4df5fb-964c-04cd-128f-000000000004",
                        "name": "check if ci_kpis_path exists"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "include_role",
                            "changed": false,
                            "include_args": {
                                "name": "zuul-set-log-url"
                            }
                        }
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:51:20.200410Z",
                            "start": "2024-04-21T00:51:20.150121Z"
                        },
                        "id": "ce4df5fb-964c-04cd-128f-000000000006",
                        "name": ""
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "include_role",
                            "changed": false,
                            "include_args": {
                                "name": "zuul-set-log-path"
                            }
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-04cd-128f-000000000024",
                        "name": "zuul-set-log-url",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/untrusted/project_3/cc-github.bmwgroup.net/codecraft/zuul-conf-global/roles/zuul-set-log-url"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:51:20.278874Z",
                            "start": "2024-04-21T00:51:20.233494Z"
                        },
                        "id": "ce4df5fb-964c-04cd-128f-000000000026",
                        "name": "Get zuul_log_path"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "set_fact",
                            "changed": false,
                            "false_condition": "codecraft.region not in on_prem_regions",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-04cd-128f-000000000056",
                        "name": "zuul-set-log-path",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/untrusted/project_3/cc-github.bmwgroup.net/codecraft/zuul-conf-global/roles/zuul-set-log-path"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:51:20.404294Z",
                            "start": "2024-04-21T00:51:20.367865Z"
                        },
                        "id": "ce4df5fb-964c-04cd-128f-000000000058",
                        "name": "Set log path prefix (AWS)"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "set_fact",
                            "ansible_facts": {
                                "zuul_log_path_prefix": "swh/ddad"
                            },
                            "changed": false
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-04cd-128f-000000000056",
                        "name": "zuul-set-log-path",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/untrusted/project_3/cc-github.bmwgroup.net/codecraft/zuul-conf-global/roles/zuul-set-log-path"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:51:20.471759Z",
                            "start": "2024-04-21T00:51:20.413754Z"
                        },
                        "id": "ce4df5fb-964c-04cd-128f-000000000059",
                        "name": "Set log path prefix (on-prem)"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "set_fact",
                            "ansible_facts": {
                                "zuul_log_path_suffix": "swf-quality-metrics/swf-metrics-check-nautilus-lifecycle/5025843"
                            },
                            "changed": false
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-04cd-128f-000000000056",
                        "name": "zuul-set-log-path",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/untrusted/project_3/cc-github.bmwgroup.net/codecraft/zuul-conf-global/roles/zuul-set-log-path"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:51:20.544414Z",
                            "start": "2024-04-21T00:51:20.483655Z"
                        },
                        "id": "ce4df5fb-964c-04cd-128f-00000000005a",
                        "name": "Set log path suffix"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "set_fact",
                            "changed": false,
                            "false_condition": "zuul.change is defined",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-04cd-128f-000000000056",
                        "name": "zuul-set-log-path",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/untrusted/project_3/cc-github.bmwgroup.net/codecraft/zuul-conf-global/roles/zuul-set-log-path"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:51:20.590631Z",
                            "start": "2024-04-21T00:51:20.553230Z"
                        },
                        "id": "ce4df5fb-964c-04cd-128f-00000000005b",
                        "name": "Set log path for a change"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "set_fact",
                            "changed": false,
                            "false_condition": "zuul.newrev is defined",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-04cd-128f-000000000056",
                        "name": "zuul-set-log-path",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/untrusted/project_3/cc-github.bmwgroup.net/codecraft/zuul-conf-global/roles/zuul-set-log-path"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:51:20.648911Z",
                            "start": "2024-04-21T00:51:20.602087Z"
                        },
                        "id": "ce4df5fb-964c-04cd-128f-00000000005c",
                        "name": "Set log path for a ref update"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "set_fact",
                            "ansible_facts": {
                                "zuul_log_path_custom": "47/f5c48694b22b48c9b5ae47af5c895c47"
                            },
                            "changed": false
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-04cd-128f-000000000056",
                        "name": "zuul-set-log-path",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/untrusted/project_3/cc-github.bmwgroup.net/codecraft/zuul-conf-global/roles/zuul-set-log-path"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:51:20.729769Z",
                            "start": "2024-04-21T00:51:20.663108Z"
                        },
                        "id": "ce4df5fb-964c-04cd-128f-00000000005d",
                        "name": "Set log path for time triggered pipeline run"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "set_fact",
                            "ansible_facts": {
                                "zuul_log_path": "swh/ddad/47/f5c48694b22b48c9b5ae47af5c895c47/swf-quality-metrics/swf-metrics-check-nautilus-lifecycle/5025843"
                            },
                            "changed": false
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-04cd-128f-000000000056",
                        "name": "zuul-set-log-path",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/untrusted/project_3/cc-github.bmwgroup.net/codecraft/zuul-conf-global/roles/zuul-set-log-path"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:51:20.806738Z",
                            "start": "2024-04-21T00:51:20.743414Z"
                        },
                        "id": "ce4df5fb-964c-04cd-128f-00000000005e",
                        "name": "Set zuul_log_path"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "set_fact",
                            "changed": false,
                            "false_condition": "codecraft.region not in on_prem_regions",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-04cd-128f-000000000024",
                        "name": "zuul-set-log-url",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/untrusted/project_3/cc-github.bmwgroup.net/codecraft/zuul-conf-global/roles/zuul-set-log-url"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:51:20.883436Z",
                            "start": "2024-04-21T00:51:20.833930Z"
                        },
                        "id": "ce4df5fb-964c-04cd-128f-000000000027",
                        "name": "Set log URL (AWS)"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "set_fact",
                            "ansible_facts": {
                                "zuul_log_url": "https://cc-ci.bmwgroup.net/logs/t/ddad/swh/ddad/47/f5c48694b22b48c9b5ae47af5c895c47/swf-quality-metrics/swf-metrics-check-nautilus-lifecycle/5025843/"
                            },
                            "changed": false
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-04cd-128f-000000000024",
                        "name": "zuul-set-log-url",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/untrusted/project_3/cc-github.bmwgroup.net/codecraft/zuul-conf-global/roles/zuul-set-log-url"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:51:20.973039Z",
                            "start": "2024-04-21T00:51:20.902291Z"
                        },
                        "id": "ce4df5fb-964c-04cd-128f-000000000028",
                        "name": "Set log URL (on-prem)"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "debug",
                            "changed": false,
                            "zuul_log_url": "https://cc-ci.bmwgroup.net/logs/t/ddad/swh/ddad/47/f5c48694b22b48c9b5ae47af5c895c47/swf-quality-metrics/swf-metrics-check-nautilus-lifecycle/5025843/"
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-04cd-128f-000000000024",
                        "name": "zuul-set-log-url",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/untrusted/project_3/cc-github.bmwgroup.net/codecraft/zuul-conf-global/roles/zuul-set-log-url"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:51:21.049344Z",
                            "start": "2024-04-21T00:51:20.982753Z"
                        },
                        "id": "ce4df5fb-964c-04cd-128f-000000000029",
                        "name": "URL where zuul logs are stored"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "shell",
                            "changed": true,
                            "cmd": "set -eu\npython3 /home/zuul/workspace/src/ddad/ci_config/scripts/additional_data/aggregate_ci_kpis.py /home/zuul/ci_kpis elasticsearch_input.json;\n\npython3 /home/zuul/workspace/src/ddad/ci_config/scripts/ci_kpis_deaggregation/src/main.py https://cc-github.bmwgroup.net/swh/ddad                                                                      swh/ddad                                                                      master                                                                      swf-metrics-check-nautilus-lifecycle                                                                      swf-quality-metrics                                                                      /home/zuul/ci_kpis/elasticsearch_input.json                                                                      /home/zuul/ci_kpis_data                                                                      /home/zuul/build_data/                                                                      5025843e7b0949e8ab5d90b1424cab55                                                                      HEAD                                                                      https://cc-ci.bmwgroup.net/logs/t/ddad/swh/ddad/47/f5c48694b22b48c9b5ae47af5c895c47/swf-quality-metrics/swf-metrics-check-nautilus-lifecycle/5025843/;\n",
                            "delta": "0:00:00.135374",
                            "end": "2024-04-21 00:51:21.748577",
                            "invocation": {
                                "module_args": {
                                    "_raw_params": "set -eu\npython3 /home/zuul/workspace/src/ddad/ci_config/scripts/additional_data/aggregate_ci_kpis.py /home/zuul/ci_kpis elasticsearch_input.json;\n\npython3 /home/zuul/workspace/src/ddad/ci_config/scripts/ci_kpis_deaggregation/src/main.py https://cc-github.bmwgroup.net/swh/ddad                                                                      swh/ddad                                                                      master                                                                      swf-metrics-check-nautilus-lifecycle                                                                      swf-quality-metrics                                                                      /home/zuul/ci_kpis/elasticsearch_input.json                                                                      /home/zuul/ci_kpis_data                                                                      /home/zuul/build_data/                                                                      5025843e7b0949e8ab5d90b1424cab55                                                                      HEAD                                                                      https://cc-ci.bmwgroup.net/logs/t/ddad/swh/ddad/47/f5c48694b22b48c9b5ae47af5c895c47/swf-quality-metrics/swf-metrics-check-nautilus-lifecycle/5025843/;\n",
                                    "_uses_shell": true,
                                    "argv": null,
                                    "chdir": null,
                                    "creates": null,
                                    "executable": "/bin/bash",
                                    "removes": null,
                                    "stdin": null,
                                    "stdin_add_newline": true,
                                    "strip_empty_ends": true,
                                    "warn": false,
                                    "zuul_ansible_split_streams": false,
                                    "zuul_log_id": "ce4df5fb-964c-04cd-128f-000000000007-1-node"
                                }
                            },
                            "msg": "",
                            "rc": 0,
                            "start": "2024-04-21 00:51:21.613203",
                            "stderr": "",
                            "stderr_lines": [],
                            "stdout": "[INFO] [1713660681.663522]: Loading files from /home/zuul/ci_kpis\n[INFO] [1713660681.664041]: Processing /home/zuul/ci_kpis/pre_disk_usage.json\n[INFO] [1713660681.664313]: Processing /home/zuul/ci_kpis/repository_data.json\n[INFO] [1713660681.664410]: Processing /home/zuul/ci_kpis/disk_usage.json\n[INFO] [1713660681.664571]: Writing /home/zuul/ci_kpis/elasticsearch_input.json\n2024-04-21 00:51:21.736 INFO: Starting to collect CI KPIs data!\n2024-04-21 00:51:21.736 WARNING: No Bazel Build And Test data collected!\n2024-04-21 00:51:21.736 INFO: Disk Usage data collected! Saving data to file: adp_ci_kpis_disk_usage.json\n2024-04-21 00:51:21.737 INFO: Github data collected! Saving data to file: adp_ci_kpis_github_data.json\n2024-04-21 00:51:21.737 WARNING: No J2 Tasks data collected!\n2024-04-21 00:51:21.737 WARNING: No Node Information data collected!\n2024-04-21 00:51:21.737 WARNING: No Sar Metrics data collected!\n2024-04-21 00:51:21.737 WARNING: No Small Checks Durations data collected!\n2024-04-21 00:51:21.737 INFO: Finished collecting CI KPIs data!",
                            "stdout_lines": [
                                "[INFO] [1713660681.663522]: Loading files from /home/zuul/ci_kpis",
                                "[INFO] [1713660681.664041]: Processing /home/zuul/ci_kpis/pre_disk_usage.json",
                                "[INFO] [1713660681.664313]: Processing /home/zuul/ci_kpis/repository_data.json",
                                "[INFO] [1713660681.664410]: Processing /home/zuul/ci_kpis/disk_usage.json",
                                "[INFO] [1713660681.664571]: Writing /home/zuul/ci_kpis/elasticsearch_input.json",
                                "2024-04-21 00:51:21.736 INFO: Starting to collect CI KPIs data!",
                                "2024-04-21 00:51:21.736 WARNING: No Bazel Build And Test data collected!",
                                "2024-04-21 00:51:21.736 INFO: Disk Usage data collected! Saving data to file: adp_ci_kpis_disk_usage.json",
                                "2024-04-21 00:51:21.737 INFO: Github data collected! Saving data to file: adp_ci_kpis_github_data.json",
                                "2024-04-21 00:51:21.737 WARNING: No J2 Tasks data collected!",
                                "2024-04-21 00:51:21.737 WARNING: No Node Information data collected!",
                                "2024-04-21 00:51:21.737 WARNING: No Sar Metrics data collected!",
                                "2024-04-21 00:51:21.737 WARNING: No Small Checks Durations data collected!",
                                "2024-04-21 00:51:21.737 INFO: Finished collecting CI KPIs data!"
                            ],
                            "zuul_log_id": "ce4df5fb-964c-04cd-128f-000000000007-1-node"
                        }
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:51:22.164167Z",
                            "start": "2024-04-21T00:51:21.132337Z"
                        },
                        "id": "ce4df5fb-964c-04cd-128f-000000000007",
                        "name": "Collect ddad ci kpis metric"
                    }
                }
            ]
        }
    ],
    "stats": {
        "node": {
            "changed": 1,
            "failures": 0,
            "ignored": 0,
            "ok": 8,
            "rescued": 0,
            "skipped": 4,
            "unreachable": 0
        }
    },
    "trusted": false
},
{
    "branch": "master",
    "index": "17",
    "phase": "post",
    "playbook": "cc-github.bmwgroup.net/swh/ddad_ci_config/playbooks/extract-build-failure/extract-build-failure-summarize.yaml",
    "plays": [
        {
            "play": {
                "duration": {
                    "end": "2024-04-21T00:51:37.370375Z",
                    "start": "2024-04-21T00:51:23.635775Z"
                },
                "id": "ce4df5fb-964c-4d0e-869f-000000000002",
                "name": "all:!zuul_unreachable"
            },
            "tasks": [
                {
                    "hosts": {
                        "node": {
                            "action": "set_fact",
                            "changed": false,
                            "false_condition": "ansible_os_family == \"Windows\"",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:51:23.699500Z",
                            "start": "2024-04-21T00:51:23.669515Z"
                        },
                        "id": "ce4df5fb-964c-4d0e-869f-00000000001a",
                        "name": "Define path to custom error pattern file on Windows"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "set_fact",
                            "ansible_facts": {
                                "error_pattern_repo_root": "/home/zuul/src/cc-github.bmwgroup.net/swh/ddad_ci_config"
                            },
                            "changed": false
                        }
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:51:23.776033Z",
                            "start": "2024-04-21T00:51:23.716114Z"
                        },
                        "id": "ce4df5fb-964c-4d0e-869f-00000000001b",
                        "name": "Define path to custom error pattern file on Linux"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "file",
                            "changed": true,
                            "diff": {
                                "after": {
                                    "path": "/home/zuul/build_data//error_checks_summary",
                                    "state": "directory"
                                },
                                "before": {
                                    "path": "/home/zuul/build_data//error_checks_summary",
                                    "state": "absent"
                                }
                            },
                            "gid": 1000,
                            "group": "zuul",
                            "invocation": {
                                "module_args": {
                                    "_diff_peek": null,
                                    "_original_basename": null,
                                    "access_time": null,
                                    "access_time_format": "%Y%m%d%H%M.%S",
                                    "attributes": null,
                                    "follow": true,
                                    "force": false,
                                    "group": null,
                                    "mode": null,
                                    "modification_time": null,
                                    "modification_time_format": "%Y%m%d%H%M.%S",
                                    "owner": null,
                                    "path": "/home/zuul/build_data//error_checks_summary",
                                    "recurse": false,
                                    "selevel": null,
                                    "serole": null,
                                    "setype": null,
                                    "seuser": null,
                                    "src": null,
                                    "state": "directory",
                                    "unsafe_writes": false
                                }
                            },
                            "mode": "0775",
                            "owner": "zuul",
                            "path": "/home/zuul/build_data//error_checks_summary",
                            "size": 4096,
                            "state": "directory",
                            "uid": 1000
                        }
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:51:24.665379Z",
                            "start": "2024-04-21T00:51:23.791145Z"
                        },
                        "id": "ce4df5fb-964c-4d0e-869f-00000000001c",
                        "name": "Ensure directory at /home/zuul/build_data//error_checks_summary exists on Linux"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "win_file",
                            "changed": false,
                            "false_condition": "ansible_os_family == \"Windows\"",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:51:24.720303Z",
                            "start": "2024-04-21T00:51:24.682502Z"
                        },
                        "id": "ce4df5fb-964c-4d0e-869f-00000000001d",
                        "name": "Ensure directory at /home/zuul/build_data//error_checks_summary exists on Windows"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "file",
                            "changed": true,
                            "diff": {
                                "after": {
                                    "path": "/home/zuul/build_data//error_checks",
                                    "state": "directory"
                                },
                                "before": {
                                    "path": "/home/zuul/build_data//error_checks",
                                    "state": "absent"
                                }
                            },
                            "gid": 1000,
                            "group": "zuul",
                            "invocation": {
                                "module_args": {
                                    "_diff_peek": null,
                                    "_original_basename": null,
                                    "access_time": null,
                                    "access_time_format": "%Y%m%d%H%M.%S",
                                    "attributes": null,
                                    "follow": true,
                                    "force": false,
                                    "group": null,
                                    "mode": null,
                                    "modification_time": null,
                                    "modification_time_format": "%Y%m%d%H%M.%S",
                                    "owner": null,
                                    "path": "/home/zuul/build_data//error_checks",
                                    "recurse": false,
                                    "selevel": null,
                                    "serole": null,
                                    "setype": null,
                                    "seuser": null,
                                    "src": null,
                                    "state": "directory",
                                    "unsafe_writes": false
                                }
                            },
                            "mode": "0775",
                            "owner": "zuul",
                            "path": "/home/zuul/build_data//error_checks",
                            "size": 4096,
                            "state": "directory",
                            "uid": 1000
                        }
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:51:25.054113Z",
                            "start": "2024-04-21T00:51:24.734574Z"
                        },
                        "id": "ce4df5fb-964c-4d0e-869f-00000000001e",
                        "name": "Ensure directory at /home/zuul/build_data//error_checks exists on Linux"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "win_file",
                            "changed": false,
                            "false_condition": "ansible_os_family == \"Windows\"",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:51:25.107236Z",
                            "start": "2024-04-21T00:51:25.067460Z"
                        },
                        "id": "ce4df5fb-964c-4d0e-869f-00000000001f",
                        "name": "Ensure directory at /home/zuul/build_data//error_checks exists on Windows"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "set_fact",
                            "ansible_facts": {
                                "cilib_artifactory_url": "https://common.artifactory.cc.bmwgroup.net/artifactory",
                                "cilib_docker_registry": "common.artifactory.cc.bmwgroup.net",
                                "cilib_patterns": {
                                    "file_comments": {
                                        "ansiblelint": "^\\s*(?P<file_path>.*):(?P<start_line>\\d+): (?P<message>.*)$",
                                        "hadolint": "^(?P<file_path>.*):(?P<start_line>\\d+) (?P<message>.*)$",
                                        "labellint": "^(?P<file_path>.*):(?P<start_line>\\d+):(?P<message>.*)$",
                                        "oelint": "^(?P<file_path>.*):(?P<start_line>\\d+):(?P<log_level>.*?):(?P<message>.*)$",
                                        "pipelinelint": "^(?P<file_path>.*):(?P<start_line>\\d+):\\d+\\s(?P<log_level>\\S*)\\s(?P<rule_name>\\b(?!parser\\b)\\S*)\\s\\\"(?P<message>.*)\\\"$",
                                        "shellcheck": "^(?P<file_path>.*):(?P<start_line>\\d+):\\d+: (?P<message>.*)$",
                                        "yamllint": "^\\s*(?P<file_path>.*):(?P<start_line>\\d+):\\d+: \\[(?P<log_level>.*)\\] (?P<message>.*)$"
                                    }
                                },
                                "cilib_pypi_url": "https://common.artifactory.cc.bmwgroup.net/artifactory/api/pypi/codecraft-pypi-public/simple"
                            },
                            "changed": false
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-4d0e-869f-00000000000a",
                        "name": "cilib-defaults",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/untrusted/project_2/cc-github.bmwgroup.net/codecraft/cilib/roles/cilib-defaults"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:51:25.332081Z",
                            "start": "2024-04-21T00:51:25.228412Z"
                        },
                        "id": "ce4df5fb-964c-4d0e-869f-00000000000c",
                        "name": "Set cilib defaults"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "include_role",
                            "changed": false,
                            "include_args": {
                                "name": "zuul-set-log-url"
                            }
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-4d0e-869f-000000000006",
                        "name": "extract-build-failure",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/untrusted/project_2/cc-github.bmwgroup.net/codecraft/cilib/roles/extract-build-failure"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:51:25.415848Z",
                            "start": "2024-04-21T00:51:25.356684Z"
                        },
                        "id": "ce4df5fb-964c-4d0e-869f-00000000000e",
                        "name": "Get zuul log url"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "include_role",
                            "changed": false,
                            "include_args": {
                                "name": "zuul-set-log-path"
                            }
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-4d0e-869f-000000000077",
                        "name": "zuul-set-log-url",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/untrusted/project_3/cc-github.bmwgroup.net/codecraft/zuul-conf-global/roles/zuul-set-log-url"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:51:25.547772Z",
                            "start": "2024-04-21T00:51:25.445348Z"
                        },
                        "id": "ce4df5fb-964c-4d0e-869f-000000000079",
                        "name": "Get zuul_log_path"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "set_fact",
                            "changed": false,
                            "false_condition": "codecraft.region not in on_prem_regions",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-4d0e-869f-0000000000ad",
                        "name": "zuul-set-log-path",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/untrusted/project_3/cc-github.bmwgroup.net/codecraft/zuul-conf-global/roles/zuul-set-log-path"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:51:25.653786Z",
                            "start": "2024-04-21T00:51:25.583617Z"
                        },
                        "id": "ce4df5fb-964c-4d0e-869f-0000000000af",
                        "name": "Set log path prefix (AWS)"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "set_fact",
                            "ansible_facts": {
                                "zuul_log_path_prefix": "swh/ddad"
                            },
                            "changed": false
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-4d0e-869f-0000000000ad",
                        "name": "zuul-set-log-path",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/untrusted/project_3/cc-github.bmwgroup.net/codecraft/zuul-conf-global/roles/zuul-set-log-path"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:51:25.768592Z",
                            "start": "2024-04-21T00:51:25.671620Z"
                        },
                        "id": "ce4df5fb-964c-4d0e-869f-0000000000b0",
                        "name": "Set log path prefix (on-prem)"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "set_fact",
                            "ansible_facts": {
                                "zuul_log_path_suffix": "swf-quality-metrics/swf-metrics-check-nautilus-lifecycle/5025843"
                            },
                            "changed": false
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-4d0e-869f-0000000000ad",
                        "name": "zuul-set-log-path",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/untrusted/project_3/cc-github.bmwgroup.net/codecraft/zuul-conf-global/roles/zuul-set-log-path"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:51:25.864560Z",
                            "start": "2024-04-21T00:51:25.784562Z"
                        },
                        "id": "ce4df5fb-964c-4d0e-869f-0000000000b1",
                        "name": "Set log path suffix"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "set_fact",
                            "changed": false,
                            "false_condition": "zuul.change is defined",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-4d0e-869f-0000000000ad",
                        "name": "zuul-set-log-path",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/untrusted/project_3/cc-github.bmwgroup.net/codecraft/zuul-conf-global/roles/zuul-set-log-path"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:51:25.956760Z",
                            "start": "2024-04-21T00:51:25.877444Z"
                        },
                        "id": "ce4df5fb-964c-4d0e-869f-0000000000b2",
                        "name": "Set log path for a change"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "set_fact",
                            "changed": false,
                            "false_condition": "zuul.newrev is defined",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-4d0e-869f-0000000000ad",
                        "name": "zuul-set-log-path",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/untrusted/project_3/cc-github.bmwgroup.net/codecraft/zuul-conf-global/roles/zuul-set-log-path"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:51:26.053054Z",
                            "start": "2024-04-21T00:51:25.966458Z"
                        },
                        "id": "ce4df5fb-964c-4d0e-869f-0000000000b3",
                        "name": "Set log path for a ref update"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "set_fact",
                            "ansible_facts": {
                                "zuul_log_path_custom": "47/f5c48694b22b48c9b5ae47af5c895c47"
                            },
                            "changed": false
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-4d0e-869f-0000000000ad",
                        "name": "zuul-set-log-path",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/untrusted/project_3/cc-github.bmwgroup.net/codecraft/zuul-conf-global/roles/zuul-set-log-path"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:51:26.180433Z",
                            "start": "2024-04-21T00:51:26.064055Z"
                        },
                        "id": "ce4df5fb-964c-4d0e-869f-0000000000b4",
                        "name": "Set log path for time triggered pipeline run"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "set_fact",
                            "ansible_facts": {
                                "zuul_log_path": "swh/ddad/47/f5c48694b22b48c9b5ae47af5c895c47/swf-quality-metrics/swf-metrics-check-nautilus-lifecycle/5025843"
                            },
                            "changed": false
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-4d0e-869f-0000000000ad",
                        "name": "zuul-set-log-path",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/untrusted/project_3/cc-github.bmwgroup.net/codecraft/zuul-conf-global/roles/zuul-set-log-path"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:51:26.277589Z",
                            "start": "2024-04-21T00:51:26.194151Z"
                        },
                        "id": "ce4df5fb-964c-4d0e-869f-0000000000b5",
                        "name": "Set zuul_log_path"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "set_fact",
                            "changed": false,
                            "false_condition": "codecraft.region not in on_prem_regions",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-4d0e-869f-000000000077",
                        "name": "zuul-set-log-url",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/untrusted/project_3/cc-github.bmwgroup.net/codecraft/zuul-conf-global/roles/zuul-set-log-url"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:51:26.371742Z",
                            "start": "2024-04-21T00:51:26.302595Z"
                        },
                        "id": "ce4df5fb-964c-4d0e-869f-00000000007a",
                        "name": "Set log URL (AWS)"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "set_fact",
                            "ansible_facts": {
                                "zuul_log_url": "https://cc-ci.bmwgroup.net/logs/t/ddad/swh/ddad/47/f5c48694b22b48c9b5ae47af5c895c47/swf-quality-metrics/swf-metrics-check-nautilus-lifecycle/5025843/"
                            },
                            "changed": false
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-4d0e-869f-000000000077",
                        "name": "zuul-set-log-url",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/untrusted/project_3/cc-github.bmwgroup.net/codecraft/zuul-conf-global/roles/zuul-set-log-url"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:51:26.467110Z",
                            "start": "2024-04-21T00:51:26.386733Z"
                        },
                        "id": "ce4df5fb-964c-4d0e-869f-00000000007b",
                        "name": "Set log URL (on-prem)"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "debug",
                            "changed": false,
                            "zuul_log_url": "https://cc-ci.bmwgroup.net/logs/t/ddad/swh/ddad/47/f5c48694b22b48c9b5ae47af5c895c47/swf-quality-metrics/swf-metrics-check-nautilus-lifecycle/5025843/"
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-4d0e-869f-000000000077",
                        "name": "zuul-set-log-url",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/untrusted/project_3/cc-github.bmwgroup.net/codecraft/zuul-conf-global/roles/zuul-set-log-url"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:51:26.541102Z",
                            "start": "2024-04-21T00:51:26.475680Z"
                        },
                        "id": "ce4df5fb-964c-4d0e-869f-00000000007c",
                        "name": "URL where zuul logs are stored"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "set_fact",
                            "changed": false,
                            "false_condition": "zuul.change is defined",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-4d0e-869f-000000000006",
                        "name": "extract-build-failure",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/untrusted/project_2/cc-github.bmwgroup.net/codecraft/cilib/roles/extract-build-failure"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:51:26.624707Z",
                            "start": "2024-04-21T00:51:26.557022Z"
                        },
                        "id": "ce4df5fb-964c-4d0e-869f-00000000000f",
                        "name": ""
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "include_tasks",
                            "changed": false,
                            "include": "linux.yaml",
                            "include_args": {}
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-4d0e-869f-000000000006",
                        "name": "extract-build-failure",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/untrusted/project_2/cc-github.bmwgroup.net/codecraft/cilib/roles/extract-build-failure"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:51:26.705468Z",
                            "start": "2024-04-21T00:51:26.638590Z"
                        },
                        "id": "ce4df5fb-964c-4d0e-869f-000000000010",
                        "name": ""
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "copy",
                            "changed": true,
                            "checksum": "161af6a10b4e10e0807d40dabb9318e65752b76b",
                            "dest": "/home/zuul/job-output.json",
                            "diff": [],
                            "gid": 1000,
                            "group": "zuul",
                            "invocation": {
                                "module_args": {
                                    "_original_basename": "job-output.json",
                                    "attributes": null,
                                    "backup": false,
                                    "checksum": "161af6a10b4e10e0807d40dabb9318e65752b76b",
                                    "content": null,
                                    "dest": "/home/zuul/job-output.json",
                                    "directory_mode": null,
                                    "follow": false,
                                    "force": true,
                                    "group": null,
                                    "local_follow": null,
                                    "mode": null,
                                    "owner": null,
                                    "remote_src": null,
                                    "selevel": null,
                                    "serole": null,
                                    "setype": null,
                                    "seuser": null,
                                    "src": "/home/zuul/.ansible/tmp/ansible-tmp-1713660686.8343077-53-266300465348228/source",
                                    "unsafe_writes": false,
                                    "validate": null
                                }
                            },
                            "md5sum": "02ba09594cd9a9471f36cc3e35e9bb0c",
                            "mode": "0664",
                            "owner": "zuul",
                            "size": 2148341,
                            "src": "/home/zuul/.ansible/tmp/ansible-tmp-1713660686.8343077-53-266300465348228/source",
                            "state": "file",
                            "uid": 1000
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-4d0e-869f-000000000006",
                        "name": "extract-build-failure",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/untrusted/project_2/cc-github.bmwgroup.net/codecraft/cilib/roles/extract-build-failure"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:51:28.101973Z",
                            "start": "2024-04-21T00:51:26.733472Z"
                        },
                        "id": "ce4df5fb-964c-4d0e-869f-000000000104",
                        "name": "Copy job-output.json from executor"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "copy",
                            "changed": true,
                            "msg": "All items completed",
                            "results": [
                                {
                                    "ansible_loop_var": "item",
                                    "changed": true,
                                    "checksum": "cbf6ec01ad62d24a5addf1e10f5b7675a171a7fc",
                                    "dest": "/home/zuul/extract-build-failure.py",
                                    "diff": [],
                                    "failed": false,
                                    "gid": 1000,
                                    "group": "zuul",
                                    "invocation": {
                                        "module_args": {
                                            "_original_basename": "extract-build-failure.py",
                                            "attributes": null,
                                            "backup": false,
                                            "checksum": "cbf6ec01ad62d24a5addf1e10f5b7675a171a7fc",
                                            "content": null,
                                            "dest": "/home/zuul/",
                                            "directory_mode": null,
                                            "follow": false,
                                            "force": true,
                                            "group": null,
                                            "local_follow": null,
                                            "mode": null,
                                            "owner": null,
                                            "remote_src": null,
                                            "selevel": null,
                                            "serole": null,
                                            "setype": null,
                                            "seuser": null,
                                            "src": "/home/zuul/.ansible/tmp/ansible-tmp-1713660688.201535-63-207173434870329/source",
                                            "unsafe_writes": false,
                                            "validate": null
                                        }
                                    },
                                    "item": "extract-build-failure.py",
                                    "md5sum": "3dda241273d01967f243745db6f912eb",
                                    "mode": "0664",
                                    "owner": "zuul",
                                    "size": 13468,
                                    "src": "/home/zuul/.ansible/tmp/ansible-tmp-1713660688.201535-63-207173434870329/source",
                                    "state": "file",
                                    "uid": 1000
                                },
                                {
                                    "ansible_loop_var": "item",
                                    "changed": true,
                                    "checksum": "869beb44a352eeb3712bf0965fd406cc61a5df54",
                                    "dest": "/home/zuul/build_log.py",
                                    "diff": [],
                                    "failed": false,
                                    "gid": 1000,
                                    "group": "zuul",
                                    "invocation": {
                                        "module_args": {
                                            "_original_basename": "build_log.py",
                                            "attributes": null,
                                            "backup": false,
                                            "checksum": "869beb44a352eeb3712bf0965fd406cc61a5df54",
                                            "content": null,
                                            "dest": "/home/zuul/",
                                            "directory_mode": null,
                                            "follow": false,
                                            "force": true,
                                            "group": null,
                                            "local_follow": null,
                                            "mode": null,
                                            "owner": null,
                                            "remote_src": null,
                                            "selevel": null,
                                            "serole": null,
                                            "setype": null,
                                            "seuser": null,
                                            "src": "/home/zuul/.ansible/tmp/ansible-tmp-1713660688.8858597-63-136119520907939/source",
                                            "unsafe_writes": false,
                                            "validate": null
                                        }
                                    },
                                    "item": "build_log.py",
                                    "md5sum": "f078dc738d9df06d1a4cb8eb2e53ae8b",
                                    "mode": "0664",
                                    "owner": "zuul",
                                    "size": 4963,
                                    "src": "/home/zuul/.ansible/tmp/ansible-tmp-1713660688.8858597-63-136119520907939/source",
                                    "state": "file",
                                    "uid": 1000
                                },
                                {
                                    "ansible_loop_var": "item",
                                    "changed": true,
                                    "checksum": "49265ce3236fc31a424d479f41f54f36e0085f35",
                                    "dest": "/home/zuul/github.py",
                                    "diff": [],
                                    "failed": false,
                                    "gid": 1000,
                                    "group": "zuul",
                                    "invocation": {
                                        "module_args": {
                                            "_original_basename": "github.py",
                                            "attributes": null,
                                            "backup": false,
                                            "checksum": "49265ce3236fc31a424d479f41f54f36e0085f35",
                                            "content": null,
                                            "dest": "/home/zuul/",
                                            "directory_mode": null,
                                            "follow": false,
                                            "force": true,
                                            "group": null,
                                            "local_follow": null,
                                            "mode": null,
                                            "owner": null,
                                            "remote_src": null,
                                            "selevel": null,
                                            "serole": null,
                                            "setype": null,
                                            "seuser": null,
                                            "src": "/home/zuul/.ansible/tmp/ansible-tmp-1713660689.700493-63-66035149682633/source",
                                            "unsafe_writes": false,
                                            "validate": null
                                        }
                                    },
                                    "item": "github.py",
                                    "md5sum": "0043c3953830bb936c339e4a75ff8ac1",
                                    "mode": "0664",
                                    "owner": "zuul",
                                    "size": 829,
                                    "src": "/home/zuul/.ansible/tmp/ansible-tmp-1713660689.700493-63-66035149682633/source",
                                    "state": "file",
                                    "uid": 1000
                                },
                                {
                                    "ansible_loop_var": "item",
                                    "changed": true,
                                    "checksum": "216891d42cd54e10304fda8e1022597d5813593c",
                                    "dest": "/home/zuul/error_patterns.py",
                                    "diff": [],
                                    "failed": false,
                                    "gid": 1000,
                                    "group": "zuul",
                                    "invocation": {
                                        "module_args": {
                                            "_original_basename": "error_patterns.py",
                                            "attributes": null,
                                            "backup": false,
                                            "checksum": "216891d42cd54e10304fda8e1022597d5813593c",
                                            "content": null,
                                            "dest": "/home/zuul/",
                                            "directory_mode": null,
                                            "follow": false,
                                            "force": true,
                                            "group": null,
                                            "local_follow": null,
                                            "mode": null,
                                            "owner": null,
                                            "remote_src": null,
                                            "selevel": null,
                                            "serole": null,
                                            "setype": null,
                                            "seuser": null,
                                            "src": "/home/zuul/.ansible/tmp/ansible-tmp-1713660690.3375192-63-94097534928337/source",
                                            "unsafe_writes": false,
                                            "validate": null
                                        }
                                    },
                                    "item": "error_patterns.py",
                                    "md5sum": "e08e750046f3e650d2eb72ffd9d4e242",
                                    "mode": "0664",
                                    "owner": "zuul",
                                    "size": 6922,
                                    "src": "/home/zuul/.ansible/tmp/ansible-tmp-1713660690.3375192-63-94097534928337/source",
                                    "state": "file",
                                    "uid": 1000
                                }
                            ]
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-4d0e-869f-000000000006",
                        "name": "extract-build-failure",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/untrusted/project_2/cc-github.bmwgroup.net/codecraft/cilib/roles/extract-build-failure"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:51:30.846863Z",
                            "start": "2024-04-21T00:51:28.114553Z"
                        },
                        "id": "ce4df5fb-964c-4d0e-869f-000000000105",
                        "name": "Copy build failure extraction scripts"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "stat",
                            "changed": false,
                            "invocation": {
                                "module_args": {
                                    "checksum_algorithm": "sha1",
                                    "follow": false,
                                    "get_attributes": true,
                                    "get_checksum": true,
                                    "get_md5": false,
                                    "get_mime": true,
                                    "path": "/home/zuul/src/cc-github.bmwgroup.net/swh/ddad_ci_config/scripts/extract_build_failure/src/error_patterns.py"
                                }
                            },
                            "stat": {
                                "atime": 1713660101.172169,
                                "attr_flags": "e",
                                "attributes": [
                                    "extents"
                                ],
                                "block_size": 4096,
                                "blocks": 72,
                                "charset": "us-ascii",
                                "checksum": "8a19021657f3d941b1e5736d05a1a3b3a9f4dc32",
                                "ctime": 1713660477.3856843,
                                "dev": 64513,
                                "device_type": 0,
                                "executable": false,
                                "exists": true,
                                "gid": 1000,
                                "gr_name": "zuul",
                                "inode": 12583786,
                                "isblk": false,
                                "ischr": false,
                                "isdir": false,
                                "isfifo": false,
                                "isgid": false,
                                "islnk": false,
                                "isreg": true,
                                "issock": false,
                                "isuid": false,
                                "mimetype": "text/plain",
                                "mode": "0664",
                                "mtime": 1713660101.176169,
                                "nlink": 1,
                                "path": "/home/zuul/src/cc-github.bmwgroup.net/swh/ddad_ci_config/scripts/extract_build_failure/src/error_patterns.py",
                                "pw_name": "zuul",
                                "readable": true,
                                "rgrp": true,
                                "roth": true,
                                "rusr": true,
                                "size": 36032,
                                "uid": 1000,
                                "version": "3984939214",
                                "wgrp": true,
                                "woth": false,
                                "writeable": true,
                                "wusr": true,
                                "xgrp": false,
                                "xoth": false,
                                "xusr": false
                            }
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-4d0e-869f-000000000006",
                        "name": "extract-build-failure",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/untrusted/project_2/cc-github.bmwgroup.net/codecraft/cilib/roles/extract-build-failure"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:51:31.468917Z",
                            "start": "2024-04-21T00:51:30.858520Z"
                        },
                        "id": "ce4df5fb-964c-4d0e-869f-000000000106",
                        "name": "Check if a project error_patterns.py exists"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "copy",
                            "changed": true,
                            "checksum": "8a19021657f3d941b1e5736d05a1a3b3a9f4dc32",
                            "dest": "/home/zuul/error_patterns.py",
                            "gid": 1000,
                            "group": "zuul",
                            "invocation": {
                                "module_args": {
                                    "_original_basename": null,
                                    "attributes": null,
                                    "backup": false,
                                    "checksum": null,
                                    "content": null,
                                    "dest": "/home/zuul/error_patterns.py",
                                    "directory_mode": null,
                                    "follow": false,
                                    "force": true,
                                    "group": null,
                                    "local_follow": null,
                                    "mode": null,
                                    "owner": null,
                                    "remote_src": true,
                                    "selevel": null,
                                    "serole": null,
                                    "setype": null,
                                    "seuser": null,
                                    "src": "/home/zuul/src/cc-github.bmwgroup.net/swh/ddad_ci_config/scripts/extract_build_failure/src/error_patterns.py",
                                    "unsafe_writes": false,
                                    "validate": null
                                }
                            },
                            "md5sum": "20afb67dbd73cfc74eb3e59024d64582",
                            "mode": "0664",
                            "owner": "zuul",
                            "size": 36032,
                            "src": "/home/zuul/src/cc-github.bmwgroup.net/swh/ddad_ci_config/scripts/extract_build_failure/src/error_patterns.py",
                            "state": "file",
                            "uid": 1000
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-4d0e-869f-000000000006",
                        "name": "extract-build-failure",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/untrusted/project_2/cc-github.bmwgroup.net/codecraft/cilib/roles/extract-build-failure"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:51:31.893098Z",
                            "start": "2024-04-21T00:51:31.476374Z"
                        },
                        "id": "ce4df5fb-964c-4d0e-869f-000000000107",
                        "name": "Use project error_patterns.py"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "pip",
                            "changed": false,
                            "cmd": [
                                "/usr/bin/python3",
                                "-m",
                                "pip.__main__",
                                "install",
                                "-i",
                                "https://common.artifactory.cc.bmwgroup.net/artifactory/api/pypi/codecraft-pypi-public/simple",
                                "requests"
                            ],
                            "invocation": {
                                "module_args": {
                                    "chdir": null,
                                    "editable": false,
                                    "executable": null,
                                    "extra_args": "-i https://common.artifactory.cc.bmwgroup.net/artifactory/api/pypi/codecraft-pypi-public/simple",
                                    "name": [
                                        "requests"
                                    ],
                                    "requirements": null,
                                    "state": "present",
                                    "umask": null,
                                    "version": null,
                                    "virtualenv": null,
                                    "virtualenv_command": "virtualenv",
                                    "virtualenv_python": null,
                                    "virtualenv_site_packages": false
                                }
                            },
                            "name": [
                                "requests"
                            ],
                            "requirements": null,
                            "state": "present",
                            "stderr": "",
                            "stderr_lines": [],
                            "stdout": "Defaulting to user installation because normal site-packages is not writeable\nLooking in indexes: https://common.artifactory.cc.bmwgroup.net/artifactory/api/pypi/codecraft-pypi-public/simple\nRequirement already satisfied: requests in /usr/lib/python3/dist-packages (2.25.1)\n",
                            "stdout_lines": [
                                "Defaulting to user installation because normal site-packages is not writeable",
                                "Looking in indexes: https://common.artifactory.cc.bmwgroup.net/artifactory/api/pypi/codecraft-pypi-public/simple",
                                "Requirement already satisfied: requests in /usr/lib/python3/dist-packages (2.25.1)"
                            ],
                            "version": null,
                            "virtualenv": null
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-4d0e-869f-000000000006",
                        "name": "extract-build-failure",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/untrusted/project_2/cc-github.bmwgroup.net/codecraft/cilib/roles/extract-build-failure"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:51:34.221434Z",
                            "start": "2024-04-21T00:51:31.902962Z"
                        },
                        "id": "ce4df5fb-964c-4d0e-869f-000000000108",
                        "name": "Install requests module"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "shell",
                            "changed": true,
                            "cmd": "set -e\nset -x\npython3 extract-build-failure.py  --file job-output.json    --job swf-metrics-check-nautilus-lifecycle  --log /home/zuul/logs/build-failure.txt  --zuul-log-url https://cc-ci.bmwgroup.net/logs/t/ddad/swh/ddad/47/f5c48694b22b48c9b5ae47af5c895c47/swf-quality-metrics/swf-metrics-check-nautilus-lifecycle/5025843/  --max-length 20  --contact \"codecraft/cilib\"    \n",
                            "delta": "0:00:00.342727",
                            "end": "2024-04-21 00:51:35.131494",
                            "invocation": {
                                "module_args": {
                                    "_raw_params": "set -e\nset -x\npython3 extract-build-failure.py  --file job-output.json    --job swf-metrics-check-nautilus-lifecycle  --log /home/zuul/logs/build-failure.txt  --zuul-log-url https://cc-ci.bmwgroup.net/logs/t/ddad/swh/ddad/47/f5c48694b22b48c9b5ae47af5c895c47/swf-quality-metrics/swf-metrics-check-nautilus-lifecycle/5025843/  --max-length 20  --contact \"codecraft/cilib\"    \n",
                                    "_uses_shell": true,
                                    "argv": null,
                                    "chdir": "/home/zuul",
                                    "creates": null,
                                    "executable": null,
                                    "removes": null,
                                    "stdin": null,
                                    "stdin_add_newline": true,
                                    "strip_empty_ends": true,
                                    "warn": false,
                                    "zuul_ansible_split_streams": false,
                                    "zuul_log_id": "ce4df5fb-964c-4d0e-869f-000000000109-1-node"
                                }
                            },
                            "msg": "",
                            "rc": 0,
                            "start": "2024-04-21 00:51:34.788767",
                            "stderr": "",
                            "stderr_lines": [],
                            "stdout": "+ python3 extract-build-failure.py --file job-output.json --job swf-metrics-check-nautilus-lifecycle --log /home/zuul/logs/build-failure.txt --zuul-log-url https://cc-ci.bmwgroup.net/logs/t/ddad/swh/ddad/47/f5c48694b22b48c9b5ae47af5c895c47/swf-quality-metrics/swf-metrics-check-nautilus-lifecycle/5025843/ --max-length 20 --contact codecraft/cilib\nIt looks like **swf-metrics-check-nautilus-lifecycle** went up in smoke... :boom:\nHere's what I found in the [logs](https://cc-ci.bmwgroup.net/logs/t/ddad/swh/ddad/47/f5c48694b22b48c9b5ae47af5c895c47/swf-quality-metrics/swf-metrics-check-nautilus-lifecycle/5025843/):\n```\n--------------------------------------------------------------------------------\nerror cause : python\nerror type  : FileNotFoundError\nlog file    : job-output.json\n--------------------------------------------------------------------------------\n\nTraceback (most recent call last):\n  File \"/var/cache/bazel/run/execroot/ddad/bazel-out/k8-fastbuild/bin/external/swf_quality_tools/quality_tools/metrics/support/read_value.runfiles/swf_quality_tools/quality_tools/metrics/parser.py\", line 59, in load_metrics_file\n    with open(file, mode=\"r\", encoding=\"utf-8\") as metrics_file:\nFileNotFoundError: [Errno 2] No such file or directory: '/workspace/src/ddad/application/adp/lifecycle/metrics.yaml'\n\n```\n```\n--------------------------------------------------------------------------------\nerror cause : Linux\nlog file    : job-output.json\n--------------------------------------------------------------------------------\n\n[Errno 2] No such file or directory\n```\n\n:bulb: For more information take a look at the [error summary](https://cc-ci.bmwgroup.net/logs/t/ddad/swh/ddad/47/f5c48694b22b48c9b5ae47af5c895c47/swf-quality-metrics/swf-metrics-check-nautilus-lifecycle/5025843/build-failure.txt).\n\nHappy bug fixing! :wave:",
                            "stdout_lines": [
                                "+ python3 extract-build-failure.py --file job-output.json --job swf-metrics-check-nautilus-lifecycle --log /home/zuul/logs/build-failure.txt --zuul-log-url https://cc-ci.bmwgroup.net/logs/t/ddad/swh/ddad/47/f5c48694b22b48c9b5ae47af5c895c47/swf-quality-metrics/swf-metrics-check-nautilus-lifecycle/5025843/ --max-length 20 --contact codecraft/cilib",
                                "It looks like **swf-metrics-check-nautilus-lifecycle** went up in smoke... :boom:",
                                "Here's what I found in the [logs](https://cc-ci.bmwgroup.net/logs/t/ddad/swh/ddad/47/f5c48694b22b48c9b5ae47af5c895c47/swf-quality-metrics/swf-metrics-check-nautilus-lifecycle/5025843/):",
                                "```",
                                "--------------------------------------------------------------------------------",
                                "error cause : python",
                                "error type  : FileNotFoundError",
                                "log file    : job-output.json",
                                "--------------------------------------------------------------------------------",
                                "",
                                "Traceback (most recent call last):",
                                "  File \"/var/cache/bazel/run/execroot/ddad/bazel-out/k8-fastbuild/bin/external/swf_quality_tools/quality_tools/metrics/support/read_value.runfiles/swf_quality_tools/quality_tools/metrics/parser.py\", line 59, in load_metrics_file",
                                "    with open(file, mode=\"r\", encoding=\"utf-8\") as metrics_file:",
                                "FileNotFoundError: [Errno 2] No such file or directory: '/workspace/src/ddad/application/adp/lifecycle/metrics.yaml'",
                                "",
                                "```",
                                "```",
                                "--------------------------------------------------------------------------------",
                                "error cause : Linux",
                                "log file    : job-output.json",
                                "--------------------------------------------------------------------------------",
                                "",
                                "[Errno 2] No such file or directory",
                                "```",
                                "",
                                ":bulb: For more information take a look at the [error summary](https://cc-ci.bmwgroup.net/logs/t/ddad/swh/ddad/47/f5c48694b22b48c9b5ae47af5c895c47/swf-quality-metrics/swf-metrics-check-nautilus-lifecycle/5025843/build-failure.txt).",
                                "",
                                "Happy bug fixing! :wave:"
                            ],
                            "zuul_log_id": "ce4df5fb-964c-4d0e-869f-000000000109-1-node"
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-4d0e-869f-000000000006",
                        "name": "extract-build-failure",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/untrusted/project_2/cc-github.bmwgroup.net/codecraft/cilib/roles/extract-build-failure"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:51:35.304339Z",
                            "start": "2024-04-21T00:51:34.288381Z"
                        },
                        "id": "ce4df5fb-964c-4d0e-869f-000000000109",
                        "name": "Extract build failures"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "stat",
                            "changed": false,
                            "invocation": {
                                "module_args": {
                                    "checksum_algorithm": "sha1",
                                    "follow": false,
                                    "get_attributes": true,
                                    "get_checksum": true,
                                    "get_md5": false,
                                    "get_mime": true,
                                    "path": "/home/zuul/logs/build-failure.json"
                                }
                            },
                            "stat": {
                                "atime": 1713660695.084657,
                                "attr_flags": "e",
                                "attributes": [
                                    "extents"
                                ],
                                "block_size": 4096,
                                "blocks": 24,
                                "charset": "us-ascii",
                                "checksum": "b7d9fbd6dd6bfcb1a308f2afd517d69d7d7adfd7",
                                "ctime": 1713660695.084657,
                                "dev": 64513,
                                "device_type": 0,
                                "executable": false,
                                "exists": true,
                                "gid": 1000,
                                "gr_name": "zuul",
                                "inode": 12149664,
                                "isblk": false,
                                "ischr": false,
                                "isdir": false,
                                "isfifo": false,
                                "isgid": false,
                                "islnk": false,
                                "isreg": true,
                                "issock": false,
                                "isuid": false,
                                "mimetype": "application/json",
                                "mode": "0664",
                                "mtime": 1713660695.084657,
                                "nlink": 1,
                                "path": "/home/zuul/logs/build-failure.json",
                                "pw_name": "zuul",
                                "readable": true,
                                "rgrp": true,
                                "roth": true,
                                "rusr": true,
                                "size": 8569,
                                "uid": 1000,
                                "version": "525843270",
                                "wgrp": true,
                                "woth": false,
                                "writeable": true,
                                "wusr": true,
                                "xgrp": false,
                                "xoth": false,
                                "xusr": false
                            }
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-4d0e-869f-000000000006",
                        "name": "extract-build-failure",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/untrusted/project_2/cc-github.bmwgroup.net/codecraft/cilib/roles/extract-build-failure"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:51:35.624031Z",
                            "start": "2024-04-21T00:51:35.321648Z"
                        },
                        "id": "ce4df5fb-964c-4d0e-869f-00000000010a",
                        "name": "Check if json log file was created"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "slurp",
                            "changed": false,
                            "content": "",
                            "encoding": "base64",
                            "invocation": {
                                "module_args": {
                                    "path": "/home/zuul/logs/build-failure.json",
                                    "src": "/home/zuul/logs/build-failure.json"
                                }
                            },
                            "source": "/home/zuul/logs/build-failure.json"
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-4d0e-869f-000000000006",
                        "name": "extract-build-failure",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/untrusted/project_2/cc-github.bmwgroup.net/codecraft/cilib/roles/extract-build-failure"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:51:36.295553Z",
                            "start": "2024-04-21T00:51:35.638732Z"
                        },
                        "id": "ce4df5fb-964c-4d0e-869f-00000000010c",
                        "name": "Get content of json file"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "set_fact",
                            "ansible_facts": {
                                "extracted_build_failures": {
                                    "Ansible": {
                                        "assert": false,
                                        "creating file/dir": false,
                                        "missing file": false,
                                        "syntax": false,
                                        "templating": false,
                                        "undefined variable": false
                                    },
                                    "Bazel": {
                                        "A2l failed": false,
                                        "Artifact error": false,
                                        "BUILD file not found": false,
                                        "Build Event Protocol upload timed out": false,
                                        "Crashed due to an internal error": false,
                                        "Failed to extract": false,
                                        "Missing deps. declaration": false,
                                        "Sandbox execution error": false,
                                        "Symlink - missing input file": false,
                                        "Unrecognized option": false,
                                        "action cache initialization": false,
                                        "building test target failed": false,
                                        "could not build file": false,
                                        "crash": false,
                                        "error executing command": false,
                                        "error executing shell command": false,
                                        "error finding package": false,
                                        "error loading package": false,
                                        "failed on target analysis": false,
                                        "loading phase errors": false,
                                        "missing input file": false,
                                        "name is not defined": false,
                                        "no targets found": false,
                                        "not all outputs were created or valid": false,
                                        "output was not created": false,
                                        "server terminated": false,
                                        "target name": false,
                                        "unknown configuration": false
                                    },
                                    "CTest": false,
                                    "Cmake Error": false,
                                    "Codeowners Validator": {
                                        "Duplicated Pattern Checker": false,
                                        "File Exist Checker": false,
                                        "Not Owned File Checker": false,
                                        "Valid Syntax Checker": false
                                    },
                                    "Codify": {
                                        "Code generation": false,
                                        "MappingsCheck - Violation detected": false,
                                        "Unresolved references": false
                                    },
                                    "Compiler": {
                                        "NDS": false,
                                        "Tasking ctc": false,
                                        "Typescript": false,
                                        "Warnings": false,
                                        "clang": false,
                                        "clang-tidy": false,
                                        "gcc - Failure while compiling C++": false,
                                        "ghs": false,
                                        "gnu": false,
                                        "ltc": false,
                                        "qcc - Failure executing command": false,
                                        "vs": false
                                    },
                                    "Converter": {
                                        "franca_arxml_converter": false
                                    },
                                    "Coverage": false,
                                    "Cptc Error": false,
                                    "Dependency": {
                                        "Failed to fetch dependency": false
                                    },
                                    "Docker": {
                                        "build": false
                                    },
                                    "Driving Approval Automation Tool (DAAT)": {
                                        "Incorrect Config Template. Follow the steps in tool README correctly": false,
                                        "Tool failure": false
                                    },
                                    "Formatting error": {
                                        "_no_tool_": false
                                    },
                                    "FuSa Violation Found (Check 'bazel_wrapper_log.txt' on the logs folder)": false,
                                    "FuSa Violation Found (Check 'mitguard_report.html' on the logs folder)": false,
                                    "FuSa Violation Found (Check the log on 'Nightwatch' folder)": false,
                                    "Generating functional code failed": false,
                                    "Git LFS": false,
                                    "Infrastructure": {
                                        "Host unreachable": false,
                                        "_no_tool_": false
                                    },
                                    "Infrastructure - Ansible": false,
                                    "Infrastructure - Artifactory": {
                                        "Bazel download error": false,
                                        "Checksum mismatch": false,
                                        "Content-Length mismatch": false,
                                        "Download error": false,
                                        "Fetch failed": false,
                                        "Operation failed": false,
                                        "Operation timed out": false,
                                        "Permission": false,
                                        "Service unreachable": false,
                                        "Unexpected EOF": false,
                                        "Unknown host (codecraft)": false,
                                        "Unknown host (ddad)": false,
                                        "_no_tool_": false
                                    },
                                    "Infrastructure - Bazel Remote Execution": {
                                        "Docker pull failed": false,
                                        "Operation not found": false
                                    },
                                    "Infrastructure - Bazel remote cache": {
                                        "Build without the bytes": false,
                                        "Connection closed": false,
                                        "Connection refused": false,
                                        "Connection timed out": false,
                                        "Deadline exceeded": false,
                                        "Generic status runtime exception": false,
                                        "Handshake timed out": false,
                                        "Inaccessible remote cache": false,
                                        "Invalid Certificate": false,
                                        "No healthy upstream": false,
                                        "No route to host": false,
                                        "Resource exhausted": false,
                                        "Resource not found": false
                                    },
                                    "Infrastructure - Bazel test logs reporter": false,
                                    "Infrastructure - Docker": false,
                                    "Infrastructure - Git": false,
                                    "Infrastructure - Git LFS": false,
                                    "Infrastructure - IOException": false,
                                    "Infrastructure - License Server": false,
                                    "Infrastructure - License Server (CAS)": false,
                                    "Infrastructure - License Server (QNX)": false,
                                    "Infrastructure - Matlab License": false,
                                    "Infrastructure - Network": {
                                        "License": false,
                                        "Traffic Monitoring": false
                                    },
                                    "Infrastructure - OpenShift CLI": false,
                                    "Infrastructure - PyPI server not responding (possible AF auth failure)": false,
                                    "Infrastructure - Tasking licenses exhausted": false,
                                    "Infrastructure - Winrm failure": false,
                                    "Infrastructure - ZipArchive": false,
                                    "Infrastructure - netrc": false,
                                    "Infrastructure - xpad-build-integration": {
                                        "Copy ITF test images to cache server": false,
                                        "Signing failure": false,
                                        "Signing server connection error": false,
                                        "Signing server unresolvable": false
                                    },
                                    "Invalid Main repository mapping": false,
                                    "Invoking Requirements Tracing": false,
                                    "Java": {
                                        "EValidator": false,
                                        "SIGBUS": false,
                                        "_no_tool_": false
                                    },
                                    "Kubernetes": false,
                                    "License": {
                                        "Invalid License": false,
                                        "License not available": false
                                    },
                                    "Linker": {
                                        "_no_tool_": false,
                                        "gcc": false,
                                        "ghs": false,
                                        "vs": false
                                    },
                                    "Linux": true,
                                    "Matlab": {
                                        "Execution error": false,
                                        "Generation error": false,
                                        "Task(s) fail(ed)": false
                                    },
                                    "Memory": {
                                        "Out of memory": false,
                                        "double free or corruption": false
                                    },
                                    "Mentor": {
                                        "mentor_generator timeout": false
                                    },
                                    "Misra": {
                                        "Errors in analysis of variants": false
                                    },
                                    "Mount error": {
                                        "Failed to Umount": false,
                                        "Failed to copy": false,
                                        "Mounted FS stat failure": false,
                                        "Permission denied": false
                                    },
                                    "Network Traffic Check": false,
                                    "PDX-Generation": {
                                        "Timeout E-Sys": false
                                    },
                                    "Param Server error": false,
                                    "SRec / S19 not created": false,
                                    "Shell execution": false,
                                    "Symlink": {
                                        "Failed to create symlink": false
                                    },
                                    "Symphony": false,
                                    "System Error": false,
                                    "TRLC": false,
                                    "Terminate without exception": false,
                                    "Test Guide": {
                                        "Tests failing": false,
                                        "connector": false
                                    },
                                    "Test(s) failed": false,
                                    "Test(s) failed to build": false,
                                    "Test(s) timeout": false,
                                    "Toolchain": {
                                        "Failed to fetch/setup toolchain (e.g. eyeq_sdk, llvm_toolchain)": false
                                    },
                                    "Unknown test failure cause": false,
                                    "Win logging error": {
                                        "Failed to create logman counter": false,
                                        "Failed to open Log-Path": false
                                    },
                                    "astas": {
                                        "test": false
                                    },
                                    "cc-test": false,
                                    "clang tidy": false,
                                    "gtest": false,
                                    "ncar": {
                                        "architecture check": false,
                                        "dependency check": false,
                                        "lslint": false
                                    },
                                    "python": {
                                        "Authentication error": false,
                                        "Failed to install python dependencies": false,
                                        "HTTPError": false,
                                        "_no_tool_": true,
                                        "guestfs_launch failed": false,
                                        "libguestfs": false,
                                        "pip": false,
                                        "pip install failed": false,
                                        "pytest": false,
                                        "thread": false
                                    },
                                    "redirected output": {
                                        "Fusa Small Checks - Check-Bazel-rules-in-FuSa-critical-components": false,
                                        "Fusa Small Checks - Check-docker-image-tags": false,
                                        "Fusa Small Checks - Check-non-qualified-libraries": false,
                                        "Fusa Small Checks - Windows-filename": false,
                                        "Small Checks - BUILD-File Validator": false,
                                        "Small Checks - Bazel queries check": false,
                                        "Small Checks - Buildifier-check": false,
                                        "Small Checks - Check CI jobs branch filters": false,
                                        "Small Checks - Check CI jobs maintainers": false,
                                        "Small Checks - Check dependencies for config adp_gcc9": false,
                                        "Small Checks - Check the CI governance job": false,
                                        "Small Checks - Check-no-boardnet-switch-is-used": false,
                                        "Small Checks - Check_imports_in_py_rules": false,
                                        "Small Checks - Check_includes_in_cc_rules": false,
                                        "Small Checks - Check_strip_include_prefix_in_cc_rules": false,
                                        "Small Checks - Clang format": false,
                                        "Small Checks - Filesystem-layout": false,
                                        "Small Checks - Include-guards": false,
                                        "Small Checks - Python-compile-check": false,
                                        "Small Checks - Python-format-check": false,
                                        "Small Checks - Runfile path check": false,
                                        "Small Checks - Validate teamscale architecture": false,
                                        "Small Checks - collect-FEP-002-violations": false,
                                        "Small Checks - correct-git-lfs-file-tracking": false,
                                        "Third-party Small Checks - third_party best practices": false,
                                        "default": false
                                    },
                                    "rsync": false,
                                    "tar": {
                                        "error executing command": false
                                    },
                                    "test-msg": false,
                                    "tresos": false,
                                    "unknown_errors": false,
                                    "windows": {
                                        "Restart-Service": false
                                    }
                                }
                            },
                            "changed": false
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-4d0e-869f-000000000006",
                        "name": "extract-build-failure",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/untrusted/project_2/cc-github.bmwgroup.net/codecraft/cilib/roles/extract-build-failure"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:51:36.402479Z",
                            "start": "2024-04-21T00:51:36.312667Z"
                        },
                        "id": "ce4df5fb-964c-4d0e-869f-00000000010d",
                        "name": "Return result as fact"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "include_tasks",
                            "changed": false,
                            "false_condition": "ansible_os_family == \"Windows\"",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-4d0e-869f-000000000006",
                        "name": "extract-build-failure",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/untrusted/project_2/cc-github.bmwgroup.net/codecraft/cilib/roles/extract-build-failure"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:51:36.472448Z",
                            "start": "2024-04-21T00:51:36.414502Z"
                        },
                        "id": "ce4df5fb-964c-4d0e-869f-000000000011",
                        "name": ""
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "include_role",
                            "changed": false,
                            "false_condition": "zuul_log_path is not defined",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-4d0e-869f-000000000013",
                        "name": "zuul-set-log-url",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/untrusted/project_3/cc-github.bmwgroup.net/codecraft/zuul-conf-global/roles/zuul-set-log-url"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:51:36.547108Z",
                            "start": "2024-04-21T00:51:36.498748Z"
                        },
                        "id": "ce4df5fb-964c-4d0e-869f-000000000015",
                        "name": "Get zuul_log_path"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "set_fact",
                            "changed": false,
                            "false_condition": "codecraft.region not in on_prem_regions",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-4d0e-869f-000000000013",
                        "name": "zuul-set-log-url",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/untrusted/project_3/cc-github.bmwgroup.net/codecraft/zuul-conf-global/roles/zuul-set-log-url"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:51:36.590276Z",
                            "start": "2024-04-21T00:51:36.561903Z"
                        },
                        "id": "ce4df5fb-964c-4d0e-869f-000000000016",
                        "name": "Set log URL (AWS)"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "set_fact",
                            "ansible_facts": {
                                "zuul_log_url": "https://cc-ci.bmwgroup.net/logs/t/ddad/swh/ddad/47/f5c48694b22b48c9b5ae47af5c895c47/swf-quality-metrics/swf-metrics-check-nautilus-lifecycle/5025843/"
                            },
                            "changed": false
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-4d0e-869f-000000000013",
                        "name": "zuul-set-log-url",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/untrusted/project_3/cc-github.bmwgroup.net/codecraft/zuul-conf-global/roles/zuul-set-log-url"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:51:36.666393Z",
                            "start": "2024-04-21T00:51:36.604875Z"
                        },
                        "id": "ce4df5fb-964c-4d0e-869f-000000000017",
                        "name": "Set log URL (on-prem)"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "debug",
                            "changed": false,
                            "zuul_log_url": "https://cc-ci.bmwgroup.net/logs/t/ddad/swh/ddad/47/f5c48694b22b48c9b5ae47af5c895c47/swf-quality-metrics/swf-metrics-check-nautilus-lifecycle/5025843/"
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-4d0e-869f-000000000013",
                        "name": "zuul-set-log-url",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/untrusted/project_3/cc-github.bmwgroup.net/codecraft/zuul-conf-global/roles/zuul-set-log-url"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:51:36.721551Z",
                            "start": "2024-04-21T00:51:36.681575Z"
                        },
                        "id": "ce4df5fb-964c-4d0e-869f-000000000018",
                        "name": "URL where zuul logs are stored"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "shell",
                            "changed": true,
                            "cmd": "set -eu\npython3 scripts/extract_build_failure/src/error_summary.py        \"/home/zuul/logs/build-failure.txt\"        \"https://cc-github.bmwgroup.net/swh/ddad\"        \"swf-metrics-check-nautilus-lifecycle\"        \"master\"        \"True\"        \"5025843e7b0949e8ab5d90b1424cab55\"        \"swf-quality-metrics\"        \"swh/ddad\"        \"10.31.118.224\"        \"https://cc-ci.bmwgroup.net/logs/t/ddad/swh/ddad/47/f5c48694b22b48c9b5ae47af5c895c47/swf-quality-metrics/swf-metrics-check-nautilus-lifecycle/5025843/\"        \"ash16\"        \"ddad\"        \"/home/zuul/build_data//error_checks_summary/errors_summary.json\"        --alerts_dir \"/home/zuul/build_data//error_checks\"\ntouch \"/home/zuul/build_data//error_checks/no_aggregate\"\n",
                            "delta": "0:00:00.070952",
                            "end": "2024-04-21 00:51:37.242802",
                            "invocation": {
                                "module_args": {
                                    "_raw_params": "set -eu\npython3 scripts/extract_build_failure/src/error_summary.py        \"/home/zuul/logs/build-failure.txt\"        \"https://cc-github.bmwgroup.net/swh/ddad\"        \"swf-metrics-check-nautilus-lifecycle\"        \"master\"        \"True\"        \"5025843e7b0949e8ab5d90b1424cab55\"        \"swf-quality-metrics\"        \"swh/ddad\"        \"10.31.118.224\"        \"https://cc-ci.bmwgroup.net/logs/t/ddad/swh/ddad/47/f5c48694b22b48c9b5ae47af5c895c47/swf-quality-metrics/swf-metrics-check-nautilus-lifecycle/5025843/\"        \"ash16\"        \"ddad\"        \"/home/zuul/build_data//error_checks_summary/errors_summary.json\"        --alerts_dir \"/home/zuul/build_data//error_checks\"\ntouch \"/home/zuul/build_data//error_checks/no_aggregate\"\n",
                                    "_uses_shell": true,
                                    "argv": null,
                                    "chdir": "/home/zuul/src/cc-github.bmwgroup.net/swh/ddad_ci_config",
                                    "creates": null,
                                    "executable": "/bin/bash",
                                    "removes": null,
                                    "stdin": null,
                                    "stdin_add_newline": true,
                                    "strip_empty_ends": true,
                                    "warn": false,
                                    "zuul_ansible_split_streams": false,
                                    "zuul_log_id": "ce4df5fb-964c-4d0e-869f-000000000021-1-node"
                                }
                            },
                            "msg": "",
                            "rc": 0,
                            "start": "2024-04-21 00:51:37.171850",
                            "stderr": "",
                            "stderr_lines": [],
                            "stdout": "",
                            "stdout_lines": [],
                            "zuul_log_id": "ce4df5fb-964c-4d0e-869f-000000000021-1-node"
                        }
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:51:37.309671Z",
                            "start": "2024-04-21T00:51:36.799436Z"
                        },
                        "id": "ce4df5fb-964c-4d0e-869f-000000000021",
                        "name": "Create error summary and failed checks files on Linux"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "win_shell",
                            "changed": false,
                            "false_condition": "ansible_os_family == \"Windows\"",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:51:37.370375Z",
                            "start": "2024-04-21T00:51:37.322243Z"
                        },
                        "id": "ce4df5fb-964c-4d0e-869f-000000000022",
                        "name": "Create error summary and failed checks files on Windows"
                    }
                }
            ]
        }
    ],
    "stats": {
        "node": {
            "changed": 7,
            "failures": 0,
            "ignored": 0,
            "ok": 23,
            "rescued": 0,
            "skipped": 12,
            "unreachable": 0
        }
    },
    "trusted": false
},
{
    "branch": "master",
    "index": "18",
    "phase": "post",
    "playbook": "cc-github.bmwgroup.net/swh/zuul-trusted-ddad/playbooks/build-data/upload-to-elasticsearch.yaml",
    "plays": [
        {
            "play": {
                "duration": {
                    "end": "2024-04-21T00:51:41.957492Z",
                    "start": "2024-04-21T00:51:38.798266Z"
                },
                "id": "ce4df5fb-964c-c154-f3d4-000000000003",
                "name": "all:!zuul_unreachable"
            },
            "tasks": [
                {
                    "hosts": {
                        "node": {
                            "action": "shell",
                            "changed": true,
                            "msg": "All items completed",
                            "results": [
                                {
                                    "ansible_loop_var": "item",
                                    "changed": true,
                                    "cmd": "set -u\n\nhttp_es_code=$(curl --netrc               -w%{http_code}               --silent               --head               --output /dev/null https://ddad-mon.bmwgroup.net/elasticsearch/)\n\nif [[ ${http_es_code} -eq \"200\" ]]; then\n  echo \"Successful Elasticsearch connection - http_code:200\"\nelse\n  echo \"Connection to Elasticsearch UNSUCCESSFUL - exit_status:${http_es_code}\"\nfi\n",
                                    "delta": "0:00:00.086535",
                                    "end": "2024-04-21 00:51:39.868882",
                                    "failed": false,
                                    "invocation": {
                                        "module_args": {
                                            "_raw_params": "set -u\n\nhttp_es_code=$(curl --netrc               -w%{http_code}               --silent               --head               --output /dev/null https://ddad-mon.bmwgroup.net/elasticsearch/)\n\nif [[ ${http_es_code} -eq \"200\" ]]; then\n  echo \"Successful Elasticsearch connection - http_code:200\"\nelse\n  echo \"Connection to Elasticsearch UNSUCCESSFUL - exit_status:${http_es_code}\"\nfi\n",
                                            "_uses_shell": true,
                                            "argv": null,
                                            "chdir": null,
                                            "creates": null,
                                            "executable": "/bin/bash",
                                            "removes": null,
                                            "stdin": null,
                                            "stdin_add_newline": true,
                                            "strip_empty_ends": true,
                                            "warn": false,
                                            "zuul_ansible_split_streams": false,
                                            "zuul_log_id": "in-loop-ignore"
                                        }
                                    },
                                    "item": "https://ddad-mon.bmwgroup.net/elasticsearch/",
                                    "msg": "",
                                    "rc": 0,
                                    "start": "2024-04-21 00:51:39.782347",
                                    "stderr": "",
                                    "stderr_lines": [],
                                    "stdout": "Successful Elasticsearch connection - http_code:200",
                                    "stdout_lines": [
                                        "Successful Elasticsearch connection - http_code:200"
                                    ],
                                    "zuul_log_id": "in-loop-ignore"
                                }
                            ]
                        }
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:51:39.947402Z",
                            "start": "2024-04-21T00:51:38.826826Z"
                        },
                        "id": "ce4df5fb-964c-c154-f3d4-00000000000b",
                        "name": "Checking if connection to ES is available"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "include_tasks",
                            "changed": false,
                            "include": "linux.yaml",
                            "include_args": {}
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-c154-f3d4-000000000006",
                        "name": "ensure-netrc",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_1/cc-github.bmwgroup.net/codecraft/cilib/roles/ensure-netrc"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:51:40.037283Z",
                            "start": "2024-04-21T00:51:39.985061Z"
                        },
                        "id": "ce4df5fb-964c-c154-f3d4-000000000008",
                        "name": ""
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "lineinfile",
                            "censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result",
                            "changed": false
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-c154-f3d4-000000000006",
                        "name": "ensure-netrc",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_1/cc-github.bmwgroup.net/codecraft/cilib/roles/ensure-netrc"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:51:40.621238Z",
                            "start": "2024-04-21T00:51:40.144873Z"
                        },
                        "id": "ce4df5fb-964c-c154-f3d4-000000000032",
                        "name": "Ensure netrc entries"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "fail",
                            "changed": false,
                            "false_condition": "command_result.failed is defined",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-c154-f3d4-000000000006",
                        "name": "ensure-netrc",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_1/cc-github.bmwgroup.net/codecraft/cilib/roles/ensure-netrc"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:51:40.669282Z",
                            "start": "2024-04-21T00:51:40.630123Z"
                        },
                        "id": "ce4df5fb-964c-c154-f3d4-000000000033",
                        "name": "fail if Ensure netrc entries not succeed"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "include_tasks",
                            "changed": false,
                            "false_condition": "ansible_os_family == \"Windows\"",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-c154-f3d4-000000000006",
                        "name": "ensure-netrc",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_1/cc-github.bmwgroup.net/codecraft/cilib/roles/ensure-netrc"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:51:40.716360Z",
                            "start": "2024-04-21T00:51:40.687280Z"
                        },
                        "id": "ce4df5fb-964c-c154-f3d4-000000000009",
                        "name": ""
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "shell",
                            "changed": true,
                            "msg": "All items completed",
                            "results": [
                                {
                                    "ansible_loop_var": "item",
                                    "changed": true,
                                    "cmd": "set -u\n\nBUILD_DATA_DIR='/home/zuul/build_data/'\n\nfor dir_path in \"${BUILD_DATA_DIR}\"/*; do\n    if [[ -d $dir_path ]]; then\n        index=\"$(basename -- ${dir_path})\"\n\n        find ${dir_path} -type f -regex '.*\\.json' | while read file_path; do\n            file_size=$(stat -c%s \"$file_path\")\n            echo \"Uploading ${file_path} to ${index} index on elasticsearch. (size=${file_size})\"\n            declare retval=1\n            http_result=\"\"\n            if [[ \"${file_path}\" == *\"_bulk.json\" ]]; then\n              path=_bulk\n            else\n              id=$(sha256sum ${file_path} | cut -d \" \" -f 1)\n              path=_doc/${id}\n            fi\n            http_result=$(curl --netrc                          --retry 3                          --max-time 60                          --speed-time 10 --speed-limit 50                          --connect-timeout 5                          --write-out \"%{response_code}\"                          --output \"/dev/null\"                          --silent                          --show-error                          --request POST                          -H \"Content-Type: application/json; charset=utf-8\"                          --data-binary @\"${file_path}\"                          \"https://ddad-mon.bmwgroup.net/elasticsearch/${index}/${path}\")\n            if [[ ${http_result} -eq \"200\" ]] || [[ ${http_result} -eq \"201\" ]]; then\n                retval=0\n            fi\n\n            if [[ ${http_result} -eq \"000\" ]]; then\n              echo \"Http result is 000. Can't upload data (potentially a timeout). Exiting.\"\n              exit 2\n            fi\n\n            if [[ ${retval} -eq 0 ]]; then\n                echo \"Successfully uploaded to els with response: ${http_result}.\"\n            else\n                echo \"Error code ${http_result} while uploading to els.\"\n            fi\n        done\n    fi\ndone\n",
                                    "delta": "0:00:00.824593",
                                    "end": "2024-04-21 00:51:41.881894",
                                    "failed": false,
                                    "invocation": {
                                        "module_args": {
                                            "_raw_params": "set -u\n\nBUILD_DATA_DIR='/home/zuul/build_data/'\n\nfor dir_path in \"${BUILD_DATA_DIR}\"/*; do\n    if [[ -d $dir_path ]]; then\n        index=\"$(basename -- ${dir_path})\"\n\n        find ${dir_path} -type f -regex '.*\\.json' | while read file_path; do\n            file_size=$(stat -c%s \"$file_path\")\n            echo \"Uploading ${file_path} to ${index} index on elasticsearch. (size=${file_size})\"\n            declare retval=1\n            http_result=\"\"\n            if [[ \"${file_path}\" == *\"_bulk.json\" ]]; then\n              path=_bulk\n            else\n              id=$(sha256sum ${file_path} | cut -d \" \" -f 1)\n              path=_doc/${id}\n            fi\n            http_result=$(curl --netrc                          --retry 3                          --max-time 60                          --speed-time 10 --speed-limit 50                          --connect-timeout 5                          --write-out \"%{response_code}\"                          --output \"/dev/null\"                          --silent                          --show-error                          --request POST                          -H \"Content-Type: application/json; charset=utf-8\"                          --data-binary @\"${file_path}\"                          \"https://ddad-mon.bmwgroup.net/elasticsearch/${index}/${path}\")\n            if [[ ${http_result} -eq \"200\" ]] || [[ ${http_result} -eq \"201\" ]]; then\n                retval=0\n            fi\n\n            if [[ ${http_result} -eq \"000\" ]]; then\n              echo \"Http result is 000. Can't upload data (potentially a timeout). Exiting.\"\n              exit 2\n            fi\n\n            if [[ ${retval} -eq 0 ]]; then\n                echo \"Successfully uploaded to els with response: ${http_result}.\"\n            else\n                echo \"Error code ${http_result} while uploading to els.\"\n            fi\n        done\n    fi\ndone\n",
                                            "_uses_shell": true,
                                            "argv": null,
                                            "chdir": null,
                                            "creates": null,
                                            "executable": "/bin/bash",
                                            "removes": null,
                                            "stdin": null,
                                            "stdin_add_newline": true,
                                            "strip_empty_ends": true,
                                            "warn": false,
                                            "zuul_ansible_split_streams": false,
                                            "zuul_log_id": "in-loop-ignore"
                                        }
                                    },
                                    "item": "https://ddad-mon.bmwgroup.net/elasticsearch/",
                                    "msg": "",
                                    "rc": 0,
                                    "start": "2024-04-21 00:51:41.057301",
                                    "stderr": "",
                                    "stderr_lines": [],
                                    "stdout": "Uploading /home/zuul/build_data//adp_ci_kpis_disk_usage/adp_ci_kpis_disk_usage.json to adp_ci_kpis_disk_usage index on elasticsearch. (size=1572)\nSuccessfully uploaded to els with response: 201.\nUploading /home/zuul/build_data//adp_ci_kpis_github_data/adp_ci_kpis_github_data.json to adp_ci_kpis_github_data index on elasticsearch. (size=3859)\nSuccessfully uploaded to els with response: 201.\nUploading /home/zuul/build_data//bazel_out_age/bazel_out_age.json to bazel_out_age index on elasticsearch. (size=333)\nSuccessfully uploaded to els with response: 201.\nUploading /home/zuul/build_data//error_checks/pythonrun.json to error_checks index on elasticsearch. (size=1901)\nSuccessfully uploaded to els with response: 201.\nUploading /home/zuul/build_data//error_checks/linuxrun.json to error_checks index on elasticsearch. (size=990)\nSuccessfully uploaded to els with response: 201.\nUploading /home/zuul/build_data//error_checks_summary/errors_summary.json to error_checks_summary index on elasticsearch. (size=10361)\nSuccessfully uploaded to els with response: 201.",
                                    "stdout_lines": [
                                        "Uploading /home/zuul/build_data//adp_ci_kpis_disk_usage/adp_ci_kpis_disk_usage.json to adp_ci_kpis_disk_usage index on elasticsearch. (size=1572)",
                                        "Successfully uploaded to els with response: 201.",
                                        "Uploading /home/zuul/build_data//adp_ci_kpis_github_data/adp_ci_kpis_github_data.json to adp_ci_kpis_github_data index on elasticsearch. (size=3859)",
                                        "Successfully uploaded to els with response: 201.",
                                        "Uploading /home/zuul/build_data//bazel_out_age/bazel_out_age.json to bazel_out_age index on elasticsearch. (size=333)",
                                        "Successfully uploaded to els with response: 201.",
                                        "Uploading /home/zuul/build_data//error_checks/pythonrun.json to error_checks index on elasticsearch. (size=1901)",
                                        "Successfully uploaded to els with response: 201.",
                                        "Uploading /home/zuul/build_data//error_checks/linuxrun.json to error_checks index on elasticsearch. (size=990)",
                                        "Successfully uploaded to els with response: 201.",
                                        "Uploading /home/zuul/build_data//error_checks_summary/errors_summary.json to error_checks_summary index on elasticsearch. (size=10361)",
                                        "Successfully uploaded to els with response: 201."
                                    ],
                                    "zuul_log_id": "in-loop-ignore"
                                }
                            ]
                        }
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:51:41.957492Z",
                            "start": "2024-04-21T00:51:40.734106Z"
                        },
                        "id": "ce4df5fb-964c-c154-f3d4-00000000000d",
                        "name": "Upload build data to Elasticsearch on Linux"
                    }
                }
            ]
        },
        {
            "play": {
                "duration": {
                    "end": "2024-04-21T00:51:42.094742Z",
                    "start": "2024-04-21T00:51:42.017063Z"
                },
                "id": "ce4df5fb-964c-c154-f3d4-00000000000f",
                "name": "all"
            },
            "tasks": [
                {
                    "hosts": {
                        "node": {
                            "action": "win_shell",
                            "censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result",
                            "changed": false,
                            "skipped": true
                        }
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:51:42.094742Z",
                            "start": "2024-04-21T00:51:42.055215Z"
                        },
                        "id": "ce4df5fb-964c-c154-f3d4-000000000011",
                        "name": "Upload build data to Elasticsearch on Windows"
                    }
                }
            ]
        }
    ],
    "stats": {
        "node": {
            "changed": 2,
            "failures": 0,
            "ignored": 0,
            "ok": 4,
            "rescued": 0,
            "skipped": 3,
            "unreachable": 0
        }
    },
    "trusted": true
},
{
    "branch": "master",
    "index": "19",
    "phase": "post",
    "playbook": "cc-github.bmwgroup.net/codecraft/zuul-conf-global/playbooks/base/post-epd-build-failures.yaml",
    "plays": [
        {
            "play": {
                "duration": {
                    "end": "2024-04-21T00:51:43.964646Z",
                    "start": "2024-04-21T00:51:43.743364Z"
                },
                "id": "ce4df5fb-964c-47a4-6f3e-000000000002",
                "name": "all:!zuul_unreachable"
            },
            "tasks": [
                {
                    "hosts": {
                        "node": {
                            "action": "include_role",
                            "changed": false,
                            "false_condition": "enable_build_failure_epd",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:51:43.870939Z",
                            "start": "2024-04-21T00:51:43.799254Z"
                        },
                        "id": "ce4df5fb-964c-47a4-6f3e-000000000004",
                        "name": "Extract build failures"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "include_role",
                            "changed": false,
                            "false_condition": "enable_build_failure_epd",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:51:43.964646Z",
                            "start": "2024-04-21T00:51:43.884464Z"
                        },
                        "id": "ce4df5fb-964c-47a4-6f3e-000000000005",
                        "name": "Upload build failures to elasticsearch"
                    }
                }
            ]
        }
    ],
    "stats": {
        "node": {
            "changed": 0,
            "failures": 0,
            "ignored": 0,
            "ok": 0,
            "rescued": 0,
            "skipped": 2,
            "unreachable": 0
        }
    },
    "trusted": true
},
{
    "branch": "master",
    "index": "20",
    "phase": "post",
    "playbook": "cc-github.bmwgroup.net/codecraft/zuul-conf-global/playbooks/base/post-epd-push-data.yaml",
    "plays": [
        {
            "play": {
                "duration": {
                    "end": "2024-04-21T00:51:45.626000Z",
                    "start": "2024-04-21T00:51:45.547579Z"
                },
                "id": "ce4df5fb-964c-1a94-f140-000000000002",
                "name": "Push project data to elasticsearch"
            },
            "tasks": [
                {
                    "hosts": {
                        "node": {
                            "action": "include_role",
                            "changed": false,
                            "false_condition": "epd_store_data_in_ci_es",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:51:45.626000Z",
                            "start": "2024-04-21T00:51:45.596423Z"
                        },
                        "id": "ce4df5fb-964c-1a94-f140-000000000004",
                        "name": "Push epd data to new instance"
                    }
                }
            ]
        }
    ],
    "stats": {
        "node": {
            "changed": 0,
            "failures": 0,
            "ignored": 0,
            "ok": 0,
            "rescued": 0,
            "skipped": 1,
            "unreachable": 0
        }
    },
    "trusted": true
},
{
    "branch": "master",
    "index": "21",
    "phase": "post",
    "playbook": "cc-github.bmwgroup.net/codecraft/zuul-conf-global/playbooks/base/post-cve-upload-bom.yaml",
    "plays": [
        {
            "play": {
                "duration": {
                    "end": "2024-04-21T00:51:47.263479Z",
                    "start": "2024-04-21T00:51:47.126539Z"
                },
                "id": "ce4df5fb-964c-cb5f-3144-000000000002",
                "name": "Upload bom to CVE service"
            },
            "tasks": [
                {
                    "hosts": {
                        "node": {
                            "action": "include_role",
                            "changed": false,
                            "false_condition": "cve_upload_bom and cve_instance == \"int\"",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:51:47.217907Z",
                            "start": "2024-04-21T00:51:47.184992Z"
                        },
                        "id": "ce4df5fb-964c-cb5f-3144-000000000004",
                        "name": ""
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "include_role",
                            "changed": false,
                            "false_condition": "cve_upload_bom and cve_instance == \"prod\"",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:51:47.263479Z",
                            "start": "2024-04-21T00:51:47.234663Z"
                        },
                        "id": "ce4df5fb-964c-cb5f-3144-000000000005",
                        "name": ""
                    }
                }
            ]
        }
    ],
    "stats": {
        "node": {
            "changed": 0,
            "failures": 0,
            "ignored": 0,
            "ok": 0,
            "rescued": 0,
            "skipped": 2,
            "unreachable": 0
        }
    },
    "trusted": true
},
{
    "branch": "master",
    "index": "22",
    "phase": "post",
    "playbook": "cc-github.bmwgroup.net/codecraft/zuul-conf-global/playbooks/base-slim/post-logging.yaml",
    "plays": [
        {
            "play": {
                "duration": {
                    "end": "2024-04-21T00:51:51.861558Z",
                    "start": "2024-04-21T00:51:49.004034Z"
                },
                "id": "ce4df5fb-964c-753c-d7af-000000000002",
                "name": "Stop logging and convert output to svg files (sar only)"
            },
            "tasks": [
                {
                    "hosts": {
                        "node": {
                            "action": "shell",
                            "changed": true,
                            "cmd": "set -o nounset\nset -o errexit\nset -o pipefail\n\nstart-stop-daemon --stop --pidfile /tmp/sar-pid --remove-pidfile\n",
                            "delta": "0:00:00.007890",
                            "end": "2024-04-21 00:51:50.044616",
                            "invocation": {
                                "module_args": {
                                    "_raw_params": "set -o nounset\nset -o errexit\nset -o pipefail\n\nstart-stop-daemon --stop --pidfile /tmp/sar-pid --remove-pidfile\n",
                                    "_uses_shell": true,
                                    "argv": null,
                                    "chdir": null,
                                    "creates": null,
                                    "executable": "/bin/bash",
                                    "removes": null,
                                    "stdin": null,
                                    "stdin_add_newline": true,
                                    "strip_empty_ends": true,
                                    "warn": false,
                                    "zuul_ansible_split_streams": false,
                                    "zuul_log_id": "ce4df5fb-964c-753c-d7af-000000000013-1-node"
                                }
                            },
                            "msg": "",
                            "rc": 0,
                            "start": "2024-04-21 00:51:50.036726",
                            "stderr": "",
                            "stderr_lines": [],
                            "stdout": "",
                            "stdout_lines": [],
                            "zuul_log_id": "ce4df5fb-964c-753c-d7af-000000000013-1-node"
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-753c-d7af-00000000000d",
                        "name": "sar-logging-stop",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_1/cc-github.bmwgroup.net/codecraft/cilib/roles/sar-logging-stop"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:51:50.206458Z",
                            "start": "2024-04-21T00:51:49.192502Z"
                        },
                        "id": "ce4df5fb-964c-753c-d7af-000000000013",
                        "name": "Stop sar logging"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "shell",
                            "changed": true,
                            "cmd": "set -o nounset\nset -o errexit\nset -o pipefail\n\nsadf -g sar-data -- -urd -n DEV > sar-all.svg\nsadf -g sar-data -- -A > sar-all+.svg\nsadf -g sar-data -- -u > sar-cpu.svg\nsadf -g sar-data -- -r > sar-ram.svg\nsadf -g sar-data -- -d > sar-io.svg\nsadf -g sar-data -- -n DEV > sar-net.svg\n",
                            "delta": "0:00:01.174444",
                            "end": "2024-04-21 00:51:51.701189",
                            "invocation": {
                                "module_args": {
                                    "_raw_params": "set -o nounset\nset -o errexit\nset -o pipefail\n\nsadf -g sar-data -- -urd -n DEV > sar-all.svg\nsadf -g sar-data -- -A > sar-all+.svg\nsadf -g sar-data -- -u > sar-cpu.svg\nsadf -g sar-data -- -r > sar-ram.svg\nsadf -g sar-data -- -d > sar-io.svg\nsadf -g sar-data -- -n DEV > sar-net.svg\n",
                                    "_uses_shell": true,
                                    "argv": null,
                                    "chdir": "/home/zuul/logs/sar-logs-node",
                                    "creates": null,
                                    "executable": "/bin/bash",
                                    "removes": null,
                                    "stdin": null,
                                    "stdin_add_newline": true,
                                    "strip_empty_ends": true,
                                    "warn": false,
                                    "zuul_ansible_split_streams": false,
                                    "zuul_log_id": "ce4df5fb-964c-753c-d7af-000000000015-1-node"
                                }
                            },
                            "msg": "",
                            "rc": 0,
                            "start": "2024-04-21 00:51:50.526745",
                            "stderr": "",
                            "stderr_lines": [],
                            "stdout": "",
                            "stdout_lines": [],
                            "zuul_log_id": "ce4df5fb-964c-753c-d7af-000000000015-1-node"
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-753c-d7af-000000000006",
                        "name": "sar-logging-stop-and-convert",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_1/cc-github.bmwgroup.net/codecraft/cilib/roles/sar-logging-stop-and-convert"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:51:51.772992Z",
                            "start": "2024-04-21T00:51:50.260118Z"
                        },
                        "id": "ce4df5fb-964c-753c-d7af-000000000015",
                        "name": "Stop sar logging and convert sar-data to svg-files"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "win_shell",
                            "changed": false,
                            "false_condition": "enable_system_metrics and ansible_os_family == \"Windows\"",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-753c-d7af-000000000017",
                        "name": "logman-stop",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_1/cc-github.bmwgroup.net/codecraft/cilib/roles/logman-stop"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:51:51.826273Z",
                            "start": "2024-04-21T00:51:51.798691Z"
                        },
                        "id": "ce4df5fb-964c-753c-d7af-000000000019",
                        "name": "Stop logman counter"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "script",
                            "changed": false,
                            "false_condition": "enable_system_metrics and ansible_os_family == \"Windows\"",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-753c-d7af-000000000017",
                        "name": "logman-stop",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_1/cc-github.bmwgroup.net/codecraft/cilib/roles/logman-stop"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:51:51.861558Z",
                            "start": "2024-04-21T00:51:51.835470Z"
                        },
                        "id": "ce4df5fb-964c-753c-d7af-00000000001a",
                        "name": "Run logman-convert.py to plot results to png files"
                    }
                }
            ]
        }
    ],
    "stats": {
        "node": {
            "changed": 2,
            "failures": 0,
            "ignored": 0,
            "ok": 2,
            "rescued": 0,
            "skipped": 2,
            "unreachable": 0
        }
    },
    "trusted": true
},
{
    "branch": "master",
    "index": "23",
    "phase": "post",
    "playbook": "cc-github.bmwgroup.net/codecraft/zuul-conf-global/playbooks/base/post-fetch-logs.yaml",
    "plays": [
        {
            "play": {
                "duration": {
                    "end": "2024-04-21T00:51:57.085077Z",
                    "start": "2024-04-21T00:51:53.348040Z"
                },
                "id": "ce4df5fb-964c-6538-80eb-000000000002",
                "name": "Fetch the logs to be archived from a node"
            },
            "tasks": [
                {
                    "hosts": {
                        "node": {
                            "action": "include_tasks",
                            "changed": false,
                            "include": "linux.yaml",
                            "include_args": {}
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-6538-80eb-000000000005",
                        "name": "fetch-logs",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_1/cc-github.bmwgroup.net/codecraft/cilib/roles/fetch-logs"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:51:53.447924Z",
                            "start": "2024-04-21T00:51:53.395787Z"
                        },
                        "id": "ce4df5fb-964c-6538-80eb-000000000007",
                        "name": ""
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "stat",
                            "changed": false,
                            "invocation": {
                                "module_args": {
                                    "checksum_algorithm": "sha1",
                                    "follow": false,
                                    "get_attributes": true,
                                    "get_checksum": true,
                                    "get_md5": false,
                                    "get_mime": true,
                                    "path": "/etc/image-info.json"
                                }
                            },
                            "stat": {
                                "atime": 1713488520.782205,
                                "attr_flags": "e",
                                "attributes": [
                                    "extents"
                                ],
                                "block_size": 4096,
                                "blocks": 8,
                                "charset": "us-ascii",
                                "checksum": "02c58af3a21be5961e6f8af7563f6c27eede12e8",
                                "ctime": 1713488520.8022048,
                                "dev": 64513,
                                "device_type": 0,
                                "executable": false,
                                "exists": true,
                                "gid": 0,
                                "gr_name": "root",
                                "inode": 5239522,
                                "isblk": false,
                                "ischr": false,
                                "isdir": false,
                                "isfifo": false,
                                "isgid": false,
                                "islnk": false,
                                "isreg": true,
                                "issock": false,
                                "isuid": false,
                                "mimetype": "application/json",
                                "mode": "0644",
                                "mtime": 1713488520.8022048,
                                "nlink": 1,
                                "path": "/etc/image-info.json",
                                "pw_name": "root",
                                "readable": true,
                                "rgrp": true,
                                "roth": true,
                                "rusr": true,
                                "size": 858,
                                "uid": 0,
                                "version": "187425675",
                                "wgrp": false,
                                "woth": false,
                                "writeable": false,
                                "wusr": true,
                                "xgrp": false,
                                "xoth": false,
                                "xusr": false
                            }
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-6538-80eb-000000000005",
                        "name": "fetch-logs",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_1/cc-github.bmwgroup.net/codecraft/cilib/roles/fetch-logs"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:51:54.411146Z",
                            "start": "2024-04-21T00:51:53.477947Z"
                        },
                        "id": "ce4df5fb-964c-6538-80eb-000000000028",
                        "name": "Check if image-info file exists"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "copy",
                            "changed": true,
                            "checksum": "02c58af3a21be5961e6f8af7563f6c27eede12e8",
                            "dest": "/home/zuul/logs/image-info.node.json",
                            "gid": 1000,
                            "group": "zuul",
                            "invocation": {
                                "module_args": {
                                    "_original_basename": null,
                                    "attributes": null,
                                    "backup": false,
                                    "checksum": null,
                                    "content": null,
                                    "dest": "/home/zuul/logs/image-info.node.json",
                                    "directory_mode": null,
                                    "follow": false,
                                    "force": true,
                                    "group": null,
                                    "local_follow": null,
                                    "mode": null,
                                    "owner": null,
                                    "remote_src": true,
                                    "selevel": null,
                                    "serole": null,
                                    "setype": null,
                                    "seuser": null,
                                    "src": "/etc/image-info.json",
                                    "unsafe_writes": false,
                                    "validate": null
                                }
                            },
                            "md5sum": "36384f595e5e3f24b9a3b84242362872",
                            "mode": "0664",
                            "owner": "zuul",
                            "size": 858,
                            "src": "/etc/image-info.json",
                            "state": "file",
                            "uid": 1000
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-6538-80eb-000000000005",
                        "name": "fetch-logs",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_1/cc-github.bmwgroup.net/codecraft/cilib/roles/fetch-logs"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:51:54.922089Z",
                            "start": "2024-04-21T00:51:54.426700Z"
                        },
                        "id": "ce4df5fb-964c-6538-80eb-000000000029",
                        "name": "Move image-info file to logs dir"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "synchronize",
                            "changed": false,
                            "results": [],
                            "skipped": true,
                            "skipped_reason": "No items in the list"
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-6538-80eb-000000000005",
                        "name": "fetch-logs",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_1/cc-github.bmwgroup.net/codecraft/cilib/roles/fetch-logs"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:51:54.958269Z",
                            "start": "2024-04-21T00:51:54.931039Z"
                        },
                        "id": "ce4df5fb-964c-6538-80eb-00000000002a",
                        "name": "Collect logs"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "debug",
                            "changed": false,
                            "false_condition": "fetch_logs_paths | length > 0",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-6538-80eb-000000000005",
                        "name": "fetch-logs",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_1/cc-github.bmwgroup.net/codecraft/cilib/roles/fetch-logs"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:51:55.058890Z",
                            "start": "2024-04-21T00:51:54.977692Z"
                        },
                        "id": "ce4df5fb-964c-6538-80eb-00000000002b",
                        "name": "Emit deprecation info about fetch_logs_paths"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "synchronize",
                            "changed": true,
                            "cmd": "/usr/bin/rsync --delay-updates -F --compress --archive --rsh='/usr/bin/ssh -S none -o Port=22' --ignore-missing-args --out-format='<<CHANGED>>%i %n%L' zuul@10.31.118.224:/home/zuul/logs/ /var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/work/logs",
                            "invocation": {
                                "module_args": {
                                    "_local_rsync_password": null,
                                    "_local_rsync_path": "rsync",
                                    "_substitute_controller": false,
                                    "archive": true,
                                    "checksum": false,
                                    "compress": true,
                                    "copy_links": false,
                                    "delay_updates": true,
                                    "delete": false,
                                    "dest": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/work/logs",
                                    "dest_port": 22,
                                    "dirs": false,
                                    "existing_only": false,
                                    "group": null,
                                    "link_dest": null,
                                    "links": null,
                                    "mode": "pull",
                                    "owner": null,
                                    "partial": false,
                                    "perms": null,
                                    "private_key": null,
                                    "recursive": null,
                                    "rsync_opts": [
                                        "--ignore-missing-args"
                                    ],
                                    "rsync_path": null,
                                    "rsync_timeout": 0,
                                    "set_remote_user": true,
                                    "src": "zuul@10.31.118.224:/home/zuul/logs/",
                                    "ssh_args": null,
                                    "ssh_connection_multiplexing": false,
                                    "times": null,
                                    "verify_host": true
                                }
                            },
                            "msg": ".d..tp..... ./\n>f+++++++++ adpbuild_20240421T003920585957.yaml\n>f+++++++++ build-failure.json\n>f+++++++++ build-failure.txt\n>f+++++++++ image-info.node.json\n>f+++++++++ metrics.tar.gz\ncd+++++++++ logs/\n>f+++++++++ logs/generated_main.sh\ncd+++++++++ logs/lifecycle/\ncd+++++++++ logs/lifecycle/metrics/\n>f+++++++++ logs/lifecycle/metrics/metrics_job.sh\ncd+++++++++ sar-logs-node/\n>f+++++++++ sar-logs-node/sar-all+.svg\n>f+++++++++ sar-logs-node/sar-all.svg\n>f+++++++++ sar-logs-node/sar-cpu.svg\n>f+++++++++ sar-logs-node/sar-data\n>f+++++++++ sar-logs-node/sar-io.svg\n>f+++++++++ sar-logs-node/sar-net.svg\n>f+++++++++ sar-logs-node/sar-ram.svg\n",
                            "rc": 0,
                            "stdout_lines": [
                                ".d..tp..... ./",
                                ">f+++++++++ adpbuild_20240421T003920585957.yaml",
                                ">f+++++++++ build-failure.json",
                                ">f+++++++++ build-failure.txt",
                                ">f+++++++++ image-info.node.json",
                                ">f+++++++++ metrics.tar.gz",
                                "cd+++++++++ logs/",
                                ">f+++++++++ logs/generated_main.sh",
                                "cd+++++++++ logs/lifecycle/",
                                "cd+++++++++ logs/lifecycle/metrics/",
                                ">f+++++++++ logs/lifecycle/metrics/metrics_job.sh",
                                "cd+++++++++ sar-logs-node/",
                                ">f+++++++++ sar-logs-node/sar-all+.svg",
                                ">f+++++++++ sar-logs-node/sar-all.svg",
                                ">f+++++++++ sar-logs-node/sar-cpu.svg",
                                ">f+++++++++ sar-logs-node/sar-data",
                                ">f+++++++++ sar-logs-node/sar-io.svg",
                                ">f+++++++++ sar-logs-node/sar-net.svg",
                                ">f+++++++++ sar-logs-node/sar-ram.svg"
                            ]
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-6538-80eb-000000000005",
                        "name": "fetch-logs",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_1/cc-github.bmwgroup.net/codecraft/cilib/roles/fetch-logs"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:51:56.247544Z",
                            "start": "2024-04-21T00:51:55.073975Z"
                        },
                        "id": "ce4df5fb-964c-6538-80eb-00000000002c",
                        "name": "Collect default logs dir"
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "include_tasks",
                            "changed": false,
                            "false_condition": "ansible_connection == \"kubectl\"",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-6538-80eb-000000000005",
                        "name": "fetch-logs",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_1/cc-github.bmwgroup.net/codecraft/cilib/roles/fetch-logs"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:51:56.296424Z",
                            "start": "2024-04-21T00:51:56.262630Z"
                        },
                        "id": "ce4df5fb-964c-6538-80eb-000000000008",
                        "name": ""
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "include_tasks",
                            "changed": false,
                            "false_condition": "ansible_os_family == \"Windows\"",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-6538-80eb-000000000005",
                        "name": "fetch-logs",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_1/cc-github.bmwgroup.net/codecraft/cilib/roles/fetch-logs"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:51:56.345329Z",
                            "start": "2024-04-21T00:51:56.307614Z"
                        },
                        "id": "ce4df5fb-964c-6538-80eb-000000000009",
                        "name": ""
                    }
                },
                {
                    "hosts": {
                        "node": {
                            "action": "shell",
                            "changed": true,
                            "cmd": "find /var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/work/logs -type f 2> /dev/null | wc -l",
                            "delta": "0:00:00.011301",
                            "end": "2024-04-21 00:51:57.023075",
                            "invocation": {
                                "module_args": {
                                    "_raw_params": "find /var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/work/logs -type f 2> /dev/null | wc -l",
                                    "_uses_shell": true,
                                    "argv": null,
                                    "chdir": null,
                                    "creates": null,
                                    "executable": null,
                                    "removes": null,
                                    "stdin": null,
                                    "stdin_add_newline": true,
                                    "strip_empty_ends": true,
                                    "warn": false,
                                    "zuul_ansible_split_streams": false,
                                    "zuul_log_id": "ce4df5fb-964c-6538-80eb-00000000000b-0-node"
                                }
                            },
                            "msg": "",
                            "rc": 0,
                            "start": "2024-04-21 00:51:57.011774",
                            "stderr": "",
                            "stderr_lines": [],
                            "stdout": "19",
                            "stdout_lines": [
                                "19"
                            ],
                            "zuul_log_id": "ce4df5fb-964c-6538-80eb-00000000000b-0-node"
                        }
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:51:57.085077Z",
                            "start": "2024-04-21T00:51:56.403844Z"
                        },
                        "id": "ce4df5fb-964c-6538-80eb-00000000000b",
                        "name": "Count files in logs dir"
                    }
                }
            ]
        }
    ],
    "stats": {
        "node": {
            "changed": 3,
            "failures": 0,
            "ignored": 0,
            "ok": 5,
            "rescued": 0,
            "skipped": 4,
            "unreachable": 0
        }
    },
    "trusted": true
},
{
    "branch": "master",
    "index": "24",
    "phase": "post",
    "playbook": "cc-github.bmwgroup.net/codecraft/zuul-conf-global/playbooks/base/post-limit-log-file-size.yaml",
    "plays": [
        {
            "play": {
                "duration": {
                    "end": "2024-04-21T00:52:01.972550Z",
                    "start": "2024-04-21T00:51:58.508330Z"
                },
                "id": "ce4df5fb-964c-5c0b-37a8-000000000002",
                "name": "Limit the log file size"
            },
            "tasks": [
                {
                    "hosts": {
                        "localhost": {
                            "action": "set_fact",
                            "ansible_facts": {
                                "mode": "fail"
                            },
                            "changed": false
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-5c0b-37a8-000000000005",
                        "name": "limit-log-file-size",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_2/cc-github.bmwgroup.net/codecraft-oss/zuul-jobs/roles/limit-log-file-size"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:51:58.603426Z",
                            "start": "2024-04-21T00:51:58.555525Z"
                        },
                        "id": "ce4df5fb-964c-5c0b-37a8-000000000007",
                        "name": ""
                    }
                },
                {
                    "hosts": {
                        "localhost": {
                            "action": "include_tasks",
                            "changed": false,
                            "include": "limit-log-file-size.yaml",
                            "include_args": {}
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-5c0b-37a8-000000000005",
                        "name": "limit-log-file-size",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_2/cc-github.bmwgroup.net/codecraft-oss/zuul-jobs/roles/limit-log-file-size"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:51:58.648037Z",
                            "start": "2024-04-21T00:51:58.609817Z"
                        },
                        "id": "ce4df5fb-964c-5c0b-37a8-000000000008",
                        "name": ""
                    }
                },
                {
                    "hosts": {
                        "localhost": {
                            "action": "debug",
                            "changed": false,
                            "mode": "fail"
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-5c0b-37a8-000000000005",
                        "name": "limit-log-file-size",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_2/cc-github.bmwgroup.net/codecraft-oss/zuul-jobs/roles/limit-log-file-size"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:51:58.787169Z",
                            "start": "2024-04-21T00:51:58.684267Z"
                        },
                        "id": "ce4df5fb-964c-5c0b-37a8-00000000002c",
                        "name": "Display mode"
                    }
                },
                {
                    "hosts": {
                        "localhost": {
                            "action": "include_tasks",
                            "changed": false,
                            "include": "get-files-over-limit.yaml",
                            "include_args": {}
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-5c0b-37a8-000000000005",
                        "name": "limit-log-file-size",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_2/cc-github.bmwgroup.net/codecraft-oss/zuul-jobs/roles/limit-log-file-size"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:51:58.871768Z",
                            "start": "2024-04-21T00:51:58.793901Z"
                        },
                        "id": "ce4df5fb-964c-5c0b-37a8-00000000002d",
                        "name": "Find files that exceed fail size limit"
                    }
                },
                {
                    "hosts": {
                        "localhost": {
                            "action": "find",
                            "changed": false,
                            "msg": "All items completed",
                            "results": [
                                {
                                    "ansible_loop_var": "definition",
                                    "changed": false,
                                    "definition": {
                                        "fail": "500m",
                                        "patterns": "job-output.json",
                                        "recurse": false,
                                        "warn": "250m"
                                    },
                                    "examined": 11,
                                    "failed": false,
                                    "files": [],
                                    "invocation": {
                                        "module_args": {
                                            "age": null,
                                            "age_stamp": "mtime",
                                            "contains": null,
                                            "depth": null,
                                            "excludes": null,
                                            "file_type": "file",
                                            "follow": false,
                                            "get_checksum": false,
                                            "hidden": false,
                                            "paths": [
                                                "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/work/logs"
                                            ],
                                            "patterns": [
                                                "job-output.json"
                                            ],
                                            "read_whole_file": false,
                                            "recurse": false,
                                            "size": "500m",
                                            "use_regex": false
                                        }
                                    },
                                    "matched": 0,
                                    "msg": "All paths examined",
                                    "skipped_paths": {}
                                }
                            ]
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-5c0b-37a8-000000000005",
                        "name": "limit-log-file-size",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_2/cc-github.bmwgroup.net/codecraft-oss/zuul-jobs/roles/limit-log-file-size"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:51:59.688675Z",
                            "start": "2024-04-21T00:51:58.902504Z"
                        },
                        "id": "ce4df5fb-964c-5c0b-37a8-000000000048",
                        "name": "Find files that exceed size limit"
                    }
                },
                {
                    "hosts": {
                        "localhost": {
                            "action": "debug",
                            "changed": false,
                            "files_exceed_limit": {
                                "changed": false,
                                "msg": "All items completed",
                                "results": [
                                    {
                                        "ansible_loop_var": "definition",
                                        "changed": false,
                                        "definition": {
                                            "fail": "500m",
                                            "patterns": "job-output.json",
                                            "recurse": false,
                                            "warn": "250m"
                                        },
                                        "examined": 11,
                                        "failed": false,
                                        "files": [],
                                        "invocation": {
                                            "module_args": {
                                                "age": null,
                                                "age_stamp": "mtime",
                                                "contains": null,
                                                "depth": null,
                                                "excludes": null,
                                                "file_type": "file",
                                                "follow": false,
                                                "get_checksum": false,
                                                "hidden": false,
                                                "paths": [
                                                    "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/work/logs"
                                                ],
                                                "patterns": [
                                                    "job-output.json"
                                                ],
                                                "read_whole_file": false,
                                                "recurse": false,
                                                "size": "500m",
                                                "use_regex": false
                                            }
                                        },
                                        "matched": 0,
                                        "msg": "All paths examined",
                                        "skipped_paths": {}
                                    }
                                ],
                                "skipped": false
                            }
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-5c0b-37a8-000000000005",
                        "name": "limit-log-file-size",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_2/cc-github.bmwgroup.net/codecraft-oss/zuul-jobs/roles/limit-log-file-size"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:51:59.874909Z",
                            "start": "2024-04-21T00:51:59.698036Z"
                        },
                        "id": "ce4df5fb-964c-5c0b-37a8-00000000004a",
                        "name": "Display files that exceed the limit"
                    }
                },
                {
                    "hosts": {
                        "localhost": {
                            "action": "set_fact",
                            "ansible_facts": {
                                "exceeding_files": {}
                            },
                            "changed": false
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-5c0b-37a8-000000000005",
                        "name": "limit-log-file-size",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_2/cc-github.bmwgroup.net/codecraft-oss/zuul-jobs/roles/limit-log-file-size"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:51:59.962557Z",
                            "start": "2024-04-21T00:51:59.884125Z"
                        },
                        "id": "ce4df5fb-964c-5c0b-37a8-00000000004b",
                        "name": "initialize exceeding files"
                    }
                },
                {
                    "hosts": {
                        "localhost": {
                            "action": "set_fact",
                            "changed": false,
                            "msg": "All items skipped",
                            "results": [
                                {
                                    "ansible_loop_var": "result",
                                    "changed": false,
                                    "false_condition": "result.matched > 0",
                                    "result": {
                                        "ansible_loop_var": "definition",
                                        "changed": false,
                                        "definition": {
                                            "fail": "500m",
                                            "patterns": "job-output.json",
                                            "recurse": false,
                                            "warn": "250m"
                                        },
                                        "examined": 11,
                                        "failed": false,
                                        "files": [],
                                        "invocation": {
                                            "module_args": {
                                                "age": null,
                                                "age_stamp": "mtime",
                                                "contains": null,
                                                "depth": null,
                                                "excludes": null,
                                                "file_type": "file",
                                                "follow": false,
                                                "get_checksum": false,
                                                "hidden": false,
                                                "paths": [
                                                    "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/work/logs"
                                                ],
                                                "patterns": [
                                                    "job-output.json"
                                                ],
                                                "read_whole_file": false,
                                                "recurse": false,
                                                "size": "500m",
                                                "use_regex": false
                                            }
                                        },
                                        "matched": 0,
                                        "msg": "All paths examined",
                                        "skipped_paths": {}
                                    },
                                    "skip_reason": "Conditional result was False",
                                    "skipped": true
                                }
                            ],
                            "skipped": true
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-5c0b-37a8-000000000005",
                        "name": "limit-log-file-size",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_2/cc-github.bmwgroup.net/codecraft-oss/zuul-jobs/roles/limit-log-file-size"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:52:00.058108Z",
                            "start": "2024-04-21T00:51:59.973384Z"
                        },
                        "id": "ce4df5fb-964c-5c0b-37a8-00000000004c",
                        "name": "Set failing files"
                    }
                },
                {
                    "hosts": {
                        "localhost": {
                            "action": "debug",
                            "changed": false,
                            "exceeding_files": {}
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-5c0b-37a8-000000000005",
                        "name": "limit-log-file-size",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_2/cc-github.bmwgroup.net/codecraft-oss/zuul-jobs/roles/limit-log-file-size"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:52:00.146492Z",
                            "start": "2024-04-21T00:52:00.069367Z"
                        },
                        "id": "ce4df5fb-964c-5c0b-37a8-00000000004e",
                        "name": "Display files that break a rule"
                    }
                },
                {
                    "hosts": {
                        "localhost": {
                            "action": "set_fact",
                            "changed": false,
                            "false_condition": "exceeding_files | length > 0",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-5c0b-37a8-000000000005",
                        "name": "limit-log-file-size",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_2/cc-github.bmwgroup.net/codecraft-oss/zuul-jobs/roles/limit-log-file-size"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:52:00.210538Z",
                            "start": "2024-04-21T00:52:00.152948Z"
                        },
                        "id": "ce4df5fb-964c-5c0b-37a8-00000000002f",
                        "name": "Set message"
                    }
                },
                {
                    "hosts": {
                        "localhost": {
                            "action": "set_fact",
                            "changed": false,
                            "results": [],
                            "skipped": true,
                            "skipped_reason": "No items in the list"
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-5c0b-37a8-000000000005",
                        "name": "limit-log-file-size",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_2/cc-github.bmwgroup.net/codecraft-oss/zuul-jobs/roles/limit-log-file-size"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:52:00.244317Z",
                            "start": "2024-04-21T00:52:00.218714Z"
                        },
                        "id": "ce4df5fb-964c-5c0b-37a8-000000000030",
                        "name": "Set message"
                    }
                },
                {
                    "hosts": {
                        "localhost": {
                            "action": "fail",
                            "changed": false,
                            "false_condition": "exceeding_files | length > 0",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-5c0b-37a8-000000000005",
                        "name": "limit-log-file-size",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_2/cc-github.bmwgroup.net/codecraft-oss/zuul-jobs/roles/limit-log-file-size"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:52:00.315547Z",
                            "start": "2024-04-21T00:52:00.256107Z"
                        },
                        "id": "ce4df5fb-964c-5c0b-37a8-000000000032",
                        "name": "Fail job"
                    }
                },
                {
                    "hosts": {
                        "localhost": {
                            "action": "debug",
                            "changed": false,
                            "false_condition": "exceeding_files | length > 0",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-5c0b-37a8-000000000005",
                        "name": "limit-log-file-size",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_2/cc-github.bmwgroup.net/codecraft-oss/zuul-jobs/roles/limit-log-file-size"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:52:00.389655Z",
                            "start": "2024-04-21T00:52:00.321860Z"
                        },
                        "id": "ce4df5fb-964c-5c0b-37a8-000000000033",
                        "name": "Print warning"
                    }
                },
                {
                    "hosts": {
                        "localhost": {
                            "action": "zuul_return",
                            "changed": false,
                            "false_condition": "exceeding_files | length > 0",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-5c0b-37a8-000000000005",
                        "name": "limit-log-file-size",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_2/cc-github.bmwgroup.net/codecraft-oss/zuul-jobs/roles/limit-log-file-size"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:52:00.478920Z",
                            "start": "2024-04-21T00:52:00.399432Z"
                        },
                        "id": "ce4df5fb-964c-5c0b-37a8-000000000034",
                        "name": "Leave a warning in zuul"
                    }
                },
                {
                    "hosts": {
                        "localhost": {
                            "action": "set_fact",
                            "ansible_facts": {
                                "mode": "warn"
                            },
                            "changed": false
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-5c0b-37a8-000000000005",
                        "name": "limit-log-file-size",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_2/cc-github.bmwgroup.net/codecraft-oss/zuul-jobs/roles/limit-log-file-size"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:52:00.523840Z",
                            "start": "2024-04-21T00:52:00.488467Z"
                        },
                        "id": "ce4df5fb-964c-5c0b-37a8-000000000009",
                        "name": ""
                    }
                },
                {
                    "hosts": {
                        "localhost": {
                            "action": "include_tasks",
                            "changed": false,
                            "include": "limit-log-file-size.yaml",
                            "include_args": {}
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-5c0b-37a8-000000000005",
                        "name": "limit-log-file-size",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_2/cc-github.bmwgroup.net/codecraft-oss/zuul-jobs/roles/limit-log-file-size"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:52:00.560634Z",
                            "start": "2024-04-21T00:52:00.533257Z"
                        },
                        "id": "ce4df5fb-964c-5c0b-37a8-00000000000a",
                        "name": ""
                    }
                },
                {
                    "hosts": {
                        "localhost": {
                            "action": "debug",
                            "changed": false,
                            "mode": "warn"
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-5c0b-37a8-000000000005",
                        "name": "limit-log-file-size",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_2/cc-github.bmwgroup.net/codecraft-oss/zuul-jobs/roles/limit-log-file-size"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:52:00.688675Z",
                            "start": "2024-04-21T00:52:00.587300Z"
                        },
                        "id": "ce4df5fb-964c-5c0b-37a8-0000000000a2",
                        "name": "Display mode"
                    }
                },
                {
                    "hosts": {
                        "localhost": {
                            "action": "include_tasks",
                            "changed": false,
                            "include": "get-files-over-limit.yaml",
                            "include_args": {}
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-5c0b-37a8-000000000005",
                        "name": "limit-log-file-size",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_2/cc-github.bmwgroup.net/codecraft-oss/zuul-jobs/roles/limit-log-file-size"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:52:00.775283Z",
                            "start": "2024-04-21T00:52:00.696869Z"
                        },
                        "id": "ce4df5fb-964c-5c0b-37a8-0000000000a3",
                        "name": "Find files that exceed fail size limit"
                    }
                },
                {
                    "hosts": {
                        "localhost": {
                            "action": "find",
                            "changed": false,
                            "msg": "All items completed",
                            "results": [
                                {
                                    "ansible_loop_var": "definition",
                                    "changed": false,
                                    "definition": {
                                        "fail": "500m",
                                        "patterns": "job-output.json",
                                        "recurse": false,
                                        "warn": "250m"
                                    },
                                    "examined": 11,
                                    "failed": false,
                                    "files": [],
                                    "invocation": {
                                        "module_args": {
                                            "age": null,
                                            "age_stamp": "mtime",
                                            "contains": null,
                                            "depth": null,
                                            "excludes": null,
                                            "file_type": "file",
                                            "follow": false,
                                            "get_checksum": false,
                                            "hidden": false,
                                            "paths": [
                                                "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/work/logs"
                                            ],
                                            "patterns": [
                                                "job-output.json"
                                            ],
                                            "read_whole_file": false,
                                            "recurse": false,
                                            "size": "250m",
                                            "use_regex": false
                                        }
                                    },
                                    "matched": 0,
                                    "msg": "All paths examined",
                                    "skipped_paths": {}
                                }
                            ]
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-5c0b-37a8-000000000005",
                        "name": "limit-log-file-size",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_2/cc-github.bmwgroup.net/codecraft-oss/zuul-jobs/roles/limit-log-file-size"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:52:01.284442Z",
                            "start": "2024-04-21T00:52:00.804266Z"
                        },
                        "id": "ce4df5fb-964c-5c0b-37a8-0000000000e6",
                        "name": "Find files that exceed size limit"
                    }
                },
                {
                    "hosts": {
                        "localhost": {
                            "action": "debug",
                            "changed": false,
                            "files_exceed_limit": {
                                "changed": false,
                                "msg": "All items completed",
                                "results": [
                                    {
                                        "ansible_loop_var": "definition",
                                        "changed": false,
                                        "definition": {
                                            "fail": "500m",
                                            "patterns": "job-output.json",
                                            "recurse": false,
                                            "warn": "250m"
                                        },
                                        "examined": 11,
                                        "failed": false,
                                        "files": [],
                                        "invocation": {
                                            "module_args": {
                                                "age": null,
                                                "age_stamp": "mtime",
                                                "contains": null,
                                                "depth": null,
                                                "excludes": null,
                                                "file_type": "file",
                                                "follow": false,
                                                "get_checksum": false,
                                                "hidden": false,
                                                "paths": [
                                                    "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/work/logs"
                                                ],
                                                "patterns": [
                                                    "job-output.json"
                                                ],
                                                "read_whole_file": false,
                                                "recurse": false,
                                                "size": "250m",
                                                "use_regex": false
                                            }
                                        },
                                        "matched": 0,
                                        "msg": "All paths examined",
                                        "skipped_paths": {}
                                    }
                                ],
                                "skipped": false
                            }
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-5c0b-37a8-000000000005",
                        "name": "limit-log-file-size",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_2/cc-github.bmwgroup.net/codecraft-oss/zuul-jobs/roles/limit-log-file-size"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:52:01.384093Z",
                            "start": "2024-04-21T00:52:01.294118Z"
                        },
                        "id": "ce4df5fb-964c-5c0b-37a8-0000000000e8",
                        "name": "Display files that exceed the limit"
                    }
                },
                {
                    "hosts": {
                        "localhost": {
                            "action": "set_fact",
                            "ansible_facts": {
                                "exceeding_files": {}
                            },
                            "changed": false
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-5c0b-37a8-000000000005",
                        "name": "limit-log-file-size",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_2/cc-github.bmwgroup.net/codecraft-oss/zuul-jobs/roles/limit-log-file-size"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:52:01.469605Z",
                            "start": "2024-04-21T00:52:01.392111Z"
                        },
                        "id": "ce4df5fb-964c-5c0b-37a8-0000000000e9",
                        "name": "initialize exceeding files"
                    }
                },
                {
                    "hosts": {
                        "localhost": {
                            "action": "set_fact",
                            "changed": false,
                            "msg": "All items skipped",
                            "results": [
                                {
                                    "ansible_loop_var": "result",
                                    "changed": false,
                                    "false_condition": "result.matched > 0",
                                    "result": {
                                        "ansible_loop_var": "definition",
                                        "changed": false,
                                        "definition": {
                                            "fail": "500m",
                                            "patterns": "job-output.json",
                                            "recurse": false,
                                            "warn": "250m"
                                        },
                                        "examined": 11,
                                        "failed": false,
                                        "files": [],
                                        "invocation": {
                                            "module_args": {
                                                "age": null,
                                                "age_stamp": "mtime",
                                                "contains": null,
                                                "depth": null,
                                                "excludes": null,
                                                "file_type": "file",
                                                "follow": false,
                                                "get_checksum": false,
                                                "hidden": false,
                                                "paths": [
                                                    "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/work/logs"
                                                ],
                                                "patterns": [
                                                    "job-output.json"
                                                ],
                                                "read_whole_file": false,
                                                "recurse": false,
                                                "size": "250m",
                                                "use_regex": false
                                            }
                                        },
                                        "matched": 0,
                                        "msg": "All paths examined",
                                        "skipped_paths": {}
                                    },
                                    "skip_reason": "Conditional result was False",
                                    "skipped": true
                                }
                            ],
                            "skipped": true
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-5c0b-37a8-000000000005",
                        "name": "limit-log-file-size",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_2/cc-github.bmwgroup.net/codecraft-oss/zuul-jobs/roles/limit-log-file-size"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:52:01.549521Z",
                            "start": "2024-04-21T00:52:01.479262Z"
                        },
                        "id": "ce4df5fb-964c-5c0b-37a8-0000000000ea",
                        "name": "Set failing files"
                    }
                },
                {
                    "hosts": {
                        "localhost": {
                            "action": "debug",
                            "changed": false,
                            "exceeding_files": {}
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-5c0b-37a8-000000000005",
                        "name": "limit-log-file-size",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_2/cc-github.bmwgroup.net/codecraft-oss/zuul-jobs/roles/limit-log-file-size"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:52:01.624447Z",
                            "start": "2024-04-21T00:52:01.559840Z"
                        },
                        "id": "ce4df5fb-964c-5c0b-37a8-0000000000ec",
                        "name": "Display files that break a rule"
                    }
                },
                {
                    "hosts": {
                        "localhost": {
                            "action": "set_fact",
                            "changed": false,
                            "false_condition": "exceeding_files | length > 0",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-5c0b-37a8-000000000005",
                        "name": "limit-log-file-size",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_2/cc-github.bmwgroup.net/codecraft-oss/zuul-jobs/roles/limit-log-file-size"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:52:01.696408Z",
                            "start": "2024-04-21T00:52:01.629492Z"
                        },
                        "id": "ce4df5fb-964c-5c0b-37a8-0000000000a5",
                        "name": "Set message"
                    }
                },
                {
                    "hosts": {
                        "localhost": {
                            "action": "set_fact",
                            "changed": false,
                            "results": [],
                            "skipped": true,
                            "skipped_reason": "No items in the list"
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-5c0b-37a8-000000000005",
                        "name": "limit-log-file-size",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_2/cc-github.bmwgroup.net/codecraft-oss/zuul-jobs/roles/limit-log-file-size"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:52:01.730511Z",
                            "start": "2024-04-21T00:52:01.704142Z"
                        },
                        "id": "ce4df5fb-964c-5c0b-37a8-0000000000a6",
                        "name": "Set message"
                    }
                },
                {
                    "hosts": {
                        "localhost": {
                            "action": "fail",
                            "changed": false,
                            "false_condition": "exceeding_files | length > 0",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-5c0b-37a8-000000000005",
                        "name": "limit-log-file-size",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_2/cc-github.bmwgroup.net/codecraft-oss/zuul-jobs/roles/limit-log-file-size"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:52:01.819326Z",
                            "start": "2024-04-21T00:52:01.740521Z"
                        },
                        "id": "ce4df5fb-964c-5c0b-37a8-0000000000a8",
                        "name": "Fail job"
                    }
                },
                {
                    "hosts": {
                        "localhost": {
                            "action": "debug",
                            "changed": false,
                            "false_condition": "exceeding_files | length > 0",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-5c0b-37a8-000000000005",
                        "name": "limit-log-file-size",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_2/cc-github.bmwgroup.net/codecraft-oss/zuul-jobs/roles/limit-log-file-size"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:52:01.888094Z",
                            "start": "2024-04-21T00:52:01.830693Z"
                        },
                        "id": "ce4df5fb-964c-5c0b-37a8-0000000000a9",
                        "name": "Print warning"
                    }
                },
                {
                    "hosts": {
                        "localhost": {
                            "action": "zuul_return",
                            "changed": false,
                            "false_condition": "exceeding_files | length > 0",
                            "skip_reason": "Conditional result was False",
                            "skipped": true
                        }
                    },
                    "role": {
                        "id": "ce4df5fb-964c-5c0b-37a8-000000000005",
                        "name": "limit-log-file-size",
                        "path": "/var/cache/zuul-executor/jobs/5025843e7b0949e8ab5d90b1424cab55/trusted/project_2/cc-github.bmwgroup.net/codecraft-oss/zuul-jobs/roles/limit-log-file-size"
                    },
                    "task": {
                        "duration": {
                            "end": "2024-04-21T00:52:01.972550Z",
                            "start": "2024-04-21T00:52:01.894928Z"
                        },
                        "id": "ce4df5fb-964c-5c0b-37a8-0000000000aa",
                        "name": "Leave a warning in zuul"
                    }
                }
            ]
        }
    ],
    "stats": {
        "localhost": {
            "changed": 0,
            "failures": 0,
            "ignored": 0,
            "ok": 16,
            "rescued": 0,
            "skipped": 12,
            "unreachable": 0
        }
    },
    "trusted": true
}
]
